{"version":3,"sources":["_editor/html.js"],"names":["define","array","lang","has","exports","setObject","escape","escapeXml","str","noSingleQuotes","replace","getNodeHtml","node","output","getNodeHtmlHelper","join","nodeType","lName","nodeName","toLowerCase","charAt","push","attr","attrarray","attrhash","i","attributes","n","name","substr","specified","v","value","getAttribute","s","test","cloneNode","outerHTML","attrSplit","match","indexOf","forEach","idx","key","substring","val","style","cssText","className","exec","toString","this","sort","a","b","j","innerHTML","hasChildNodes","getChildrenHtmlHelper","nodeValue","getChildrenHtml","dom","nodes","checkParent","parentNode"],"mappings":"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","file":"../../_editor/html.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\", // lang.setObject\r\n\t\"dojo/sniff\" // has(\"ie\")\r\n], function(array, lang, has){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/html\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tHTML serialization utility functions used by editor\r\n\t};\r\n\tlang.setObject(\"dijit._editor.html\", exports);\r\n\r\n\tvar escape = exports.escapeXml = function(/*String*/ str, /*Boolean?*/ noSingleQuotes){\r\n\t\t// summary:\r\n\t\t//\t\tAdds escape sequences for special characters in XML: `&<>\"'`.\r\n\t\t//\t\tOptionally skips escapes for single quotes.\r\n\t\tstr = str.replace(/&/gm, \"&amp;\").replace(/</gm, \"&lt;\").replace(/>/gm, \"&gt;\").replace(/\"/gm, \"&quot;\");\r\n\t\tif(!noSingleQuotes){\r\n\t\t\tstr = str.replace(/'/gm, \"&#39;\");\r\n\t\t}\r\n\t\treturn str; // string\r\n\t};\r\n\r\n\texports.getNodeHtml = function(/*DomNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tReturn string representing HTML for node and it's children\r\n\t\tvar output = [];\r\n\t\texports.getNodeHtmlHelper(node, output);\r\n\t\treturn output.join(\"\");\r\n\t};\r\n\r\n\texports.getNodeHtmlHelper = function(/*DomNode*/ node, /*String[]*/ output){\r\n\t\t// summary:\r\n\t\t//\t\tPushes array of strings into output[] which represent HTML for node and it's children\r\n\t\tswitch(node.nodeType){\r\n\t\t\tcase 1: // element node\r\n\t\t\t\tvar lName = node.nodeName.toLowerCase();\r\n\t\t\t\tif(!lName || lName.charAt(0) == \"/\"){\r\n\t\t\t\t\t// IE does some strange things with malformed HTML input, like\r\n\t\t\t\t\t// treating a close tag </span> without an open tag <span>, as\r\n\t\t\t\t\t// a new tag with tagName of /span.  Corrupts output HTML, remove\r\n\t\t\t\t\t// them.  Other browsers don't prefix tags that way, so will\r\n\t\t\t\t\t// never show up.\r\n\t\t\t\t\treturn \"\";\r\n\t\t\t\t}\r\n\t\t\t\toutput.push('<', lName);\r\n\r\n\t\t\t\t// store the list of attributes and sort it to have the\r\n\t\t\t\t// attributes appear in the dictionary order\r\n\t\t\t\tvar attrarray = [], attrhash = {};\r\n\t\t\t\tvar attr;\r\n\t\t\t\tif(has(\"dom-attributes-explicit\") || has(\"dom-attributes-specified-flag\")){\r\n\t\t\t\t\t// IE8+ and all other browsers.\r\n\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\twhile((attr = node.attributes[i++])){\r\n\t\t\t\t\t\t// ignore all attributes starting with _dj which are\r\n\t\t\t\t\t\t// internal temporary attributes used by the editor\r\n\t\t\t\t\t\tvar n = attr.name;\r\n\t\t\t\t\t\tif(n.substr(0, 3) !== '_dj' &&\r\n\t\t\t\t\t\t\t(!has(\"dom-attributes-specified-flag\") || attr.specified) && !(n in attrhash)){    // workaround repeated attributes bug in IE8 (LinkDialog test)\r\n\t\t\t\t\t\t\tvar v = attr.value;\r\n\t\t\t\t\t\t\tif(n == 'src' || n == 'href'){\r\n\t\t\t\t\t\t\t\tif(node.getAttribute('_djrealurl')){\r\n\t\t\t\t\t\t\t\t\tv = node.getAttribute('_djrealurl');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(has(\"ie\") === 8 && n === \"style\"){\r\n\t\t\t\t\t\t\t\tv = v.replace(\"HEIGHT:\", \"height:\").replace(\"WIDTH:\", \"width:\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tattrarray.push([n, v]);\r\n\t\t\t\t\t\t\tattrhash[n] = v;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// IE6-7 code path\r\n\t\t\t\t\tvar clone = /^input$|^img$/i.test(node.nodeName) ? node : node.cloneNode(false);\r\n\t\t\t\t\tvar s = clone.outerHTML;\r\n\t\t\t\t\t// Split up and manage the attrs via regexp\r\n\t\t\t\t\t// similar to prettyPrint attr logic.\r\n\t\t\t\t\tvar rgxp_attrsMatch = /[\\w-]+=(\"[^\"]*\"|'[^']*'|\\S*)/gi\r\n\t\t\t\t\tvar attrSplit = s.match(rgxp_attrsMatch);\r\n\t\t\t\t\ts = s.substr(0, s.indexOf('>'));\r\n\t\t\t\t\tarray.forEach(attrSplit, function(attr){\r\n\t\t\t\t\t\tif(attr){\r\n\t\t\t\t\t\t\tvar idx = attr.indexOf(\"=\");\r\n\t\t\t\t\t\t\tif(idx > 0){\r\n\t\t\t\t\t\t\t\tvar key = attr.substring(0, idx);\r\n\t\t\t\t\t\t\t\tif(key.substr(0, 3) != '_dj'){\r\n\t\t\t\t\t\t\t\t\tif(key == 'src' || key == 'href'){\r\n\t\t\t\t\t\t\t\t\t\tif(node.getAttribute('_djrealurl')){\r\n\t\t\t\t\t\t\t\t\t\t\tattrarray.push([key, node.getAttribute('_djrealurl')]);\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar val, match;\r\n\t\t\t\t\t\t\t\t\tswitch(key){\r\n\t\t\t\t\t\t\t\t\t\tcase 'style':\r\n\t\t\t\t\t\t\t\t\t\t\tval = node.style.cssText.toLowerCase();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'class':\r\n\t\t\t\t\t\t\t\t\t\t\tval = node.className;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'width':\r\n\t\t\t\t\t\t\t\t\t\t\tif(lName === \"img\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t// This somehow gets lost on IE for IMG tags and the like\r\n\t\t\t\t\t\t\t\t\t\t\t\t// and we have to find it in outerHTML, known IE oddity.\r\n\t\t\t\t\t\t\t\t\t\t\t\tmatch = /width=(\\S+)/i.exec(s);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(match){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tval = match[1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcase 'height':\r\n\t\t\t\t\t\t\t\t\t\t\tif(lName === \"img\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t// This somehow gets lost on IE for IMG tags and the like\r\n\t\t\t\t\t\t\t\t\t\t\t\t// and we have to find it in outerHTML, known IE oddity.\r\n\t\t\t\t\t\t\t\t\t\t\t\tmatch = /height=(\\S+)/i.exec(s);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(match){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tval = match[1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\tval = node.getAttribute(key);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(val != null){\r\n\t\t\t\t\t\t\t\t\t\tattrarray.push([key, val.toString()]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t\tattrarray.sort(function(a, b){\r\n\t\t\t\t\treturn a[0] < b[0] ? -1 : (a[0] == b[0] ? 0 : 1);\r\n\t\t\t\t});\r\n\t\t\t\tvar j = 0;\r\n\t\t\t\twhile((attr = attrarray[j++])){\r\n\t\t\t\t\toutput.push(' ', attr[0], '=\"',\r\n\t\t\t\t\t\t(typeof attr[1] === \"string\" ? escape(attr[1], true) : attr[1]), '\"');\r\n\t\t\t\t}\r\n\t\t\t\tswitch(lName){\r\n\t\t\t\t\tcase 'br':\r\n\t\t\t\t\tcase 'hr':\r\n\t\t\t\t\tcase 'img':\r\n\t\t\t\t\tcase 'input':\r\n\t\t\t\t\tcase 'base':\r\n\t\t\t\t\tcase 'meta':\r\n\t\t\t\t\tcase 'area':\r\n\t\t\t\t\tcase 'basefont':\r\n\t\t\t\t\t\t// These should all be singly closed\r\n\t\t\t\t\t\toutput.push(' />');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'script':\r\n\t\t\t\t\t\t// Browsers handle script tags differently in how you get content,\r\n\t\t\t\t\t\t// but innerHTML always seems to work, so insert its content that way\r\n\t\t\t\t\t\t// Yes, it's bad to allow script tags in the editor code, but some people\r\n\t\t\t\t\t\t// seem to want to do it, so we need to at least return them right.\r\n\t\t\t\t\t\t// other plugins/filters can strip them.\r\n\t\t\t\t\t\toutput.push('>', node.innerHTML, '</', lName, '>');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\toutput.push('>');\r\n\t\t\t\t\t\tif(node.hasChildNodes()){\r\n\t\t\t\t\t\t\texports.getChildrenHtmlHelper(node, output);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toutput.push('</', lName, '>');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4: // cdata\r\n\t\t\tcase 3: // text\r\n\t\t\t\t// FIXME:\r\n\t\t\t\toutput.push(escape(node.nodeValue, true));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // comment\r\n\t\t\t\t// FIXME:\r\n\t\t\t\toutput.push('<!--', escape(node.nodeValue, true), '-->');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\toutput.push(\"<!-- Element not recognized - Type: \", node.nodeType, \" Name: \", node.nodeName, \"-->\");\r\n\t\t}\r\n\t};\r\n\r\n\texports.getChildrenHtml = function(/*DomNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tReturns the html content of a DomNode's children\r\n\t\tvar output = [];\r\n\t\texports.getChildrenHtmlHelper(node, output);\r\n\t\treturn output.join(\"\");\r\n\t};\r\n\r\n\texports.getChildrenHtmlHelper = function(/*DomNode*/ dom, /*String[]*/ output){\r\n\t\t// summary:\r\n\t\t//\t\tPushes the html content of a DomNode's children into out[]\r\n\r\n\t\tif(!dom){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar nodes = dom[\"childNodes\"] || dom;\r\n\r\n\t\t// IE issue.\r\n\t\t// If we have an actual node we can check parent relationships on for IE,\r\n\t\t// We should check, as IE sometimes builds invalid DOMS.  If no parent, we can't check\r\n\t\t// And should just process it and hope for the best.\r\n\t\tvar checkParent = !has(\"ie\") || nodes !== dom;\r\n\r\n\t\tvar node, i = 0;\r\n\t\twhile((node = nodes[i++])){\r\n\t\t\t// IE is broken.  DOMs are supposed to be a tree.  But in the case of malformed HTML, IE generates a graph\r\n\t\t\t// meaning one node ends up with multiple references (multiple parents).  This is totally wrong and invalid, but\r\n\t\t\t// such is what it is.  We have to keep track and check for this because otherwise the source output HTML will have dups.\r\n\t\t\t// No other browser generates a graph.  Leave it to IE to break a fundamental DOM rule.  So, we check the parent if we can\r\n\t\t\t// If we can't, nothing more we can do other than walk it.\r\n\t\t\tif(!checkParent || node.parentNode == dom){\r\n\t\t\t\texports.getNodeHtmlHelper(node, output);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn exports;\r\n});\r\n"]}