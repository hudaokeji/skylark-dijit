{"version":3,"sources":["_editor/plugins/EnterKeyHandling.js"],"names":["define","declare","domConstruct","keys","lang","on","has","win","winUtils","_Plugin","RichText","rangeapi","blockNodeForEnter","constructor","args","toUpperCase","mixin","this","setEditor","editor","customUndo","onLoadDeferred","then","hitch","d","own","document","e","keyCode","ENTER","ne","shiftKey","handleEnterKey","stopPropagation","preventDefault","setTimeout","r","selection","createRange","move","select","h","addKeyHandler","onKeyPressed","_checkListLater","isCollapsed","liparent","getAncestorElement","parentNode","nodeName","fc","firstChild","nodeType","insertBefore","ownerDocument","createTextNode","newrange","create","window","setStart","getSelection","removeAllRanges","addRange","prototype","execCommand","call","block","innerHTML","bogusHtmlContent","console","error","_pressedEnterInBlock","previousSibling","removeTrailingBr","blockNodes","range","startNode","br","rs","txt","doc","parent","getParentElement","header","getAncestor","tagName","getRangeAt","collapsed","deleteContents","atBeginningOfContainer","startContainer","startOffset","createElement","setStartAfter","atEndOfContainer","nodeValue","substring","endNode","brNode","place","destroy","appendChild","lastChild","rangeCount","offset","length","ret","_adjustNodeAndOffset","node","setEnd","collapse","targetNode","childNodes","_letBrowserHandle","getBlockAncestor","endContainer","editNode","blockNode","test","e2","blockContainer","textContent","replace","newblock","endOffset","height","scrollIntoView","nextSibling","firstNodeMoved","nodeForCursor","style","cssText","nodeToMove","tNode","parentC","tg","newTg","color","face","size","innerMostFirstNodeMoved","container","para","getParentOfType"],"mappings":";;;;;;;AAAAA,QACC,qBACA,qBACA,YACA,kBACA,UACA,aACA,oBACA,cACA,aACA,cACA,YACE,SAASC,EAASC,EAAcC,EAAMC,EAAMC,EAAIC,EAAKC,EAAKC,EAAUC,EAASC,EAAUC,GAKzF,OAAOV,EAAQ,yCAA0CQ,GAuExDG,kBAAmB,KAEnBC,YAAa,SAASC,GAClBA,IACC,sBAAuBA,IACzBA,EAAKF,kBAAoBE,EAAKF,kBAAkBG,eAEjDX,EAAKY,MAAMC,KAAMH,KAInBI,UAAW,SAASC,GAEnB,GAAGF,KAAKE,SAAWA,EAInB,GADAF,KAAKE,OAASA,EACe,MAA1BF,KAAKL,kBAIPK,KAAKE,OAAOC,YAAa,EACzBD,EAAOE,eAAeC,KAAKlB,EAAKmB,MAAMN,KAAM,SAASO,GA0BpD,OAzBAP,KAAKQ,IAAIpB,EAAGc,EAAOO,SAAU,UAAWtB,EAAKmB,MAAMN,KAAM,SAASU,GACjE,GAAGA,EAAEC,SAAWzB,EAAK0B,MAAM,CAG1B,IAAIC,EAAK1B,EAAKY,SAAUW,GACxBG,EAAGC,UAAW,EACVd,KAAKe,eAAeF,KACvBH,EAAEM,kBACFN,EAAEO,uBAIF5B,EAAI,OAAS,GAAKA,EAAI,OAAS,IACjCW,KAAKQ,IAAIpB,EAAGc,EAAOO,SAAU,QAAStB,EAAKmB,MAAMN,KAAM,SAASU,GAC/DQ,WAAW/B,EAAKmB,MAAMN,KAAM,WAG3B,IAAImB,EAAInB,KAAKE,OAAOO,SAASW,UAAUC,cACvCF,EAAEG,KAAK,aAAc,GACrBH,EAAEI,SACFJ,EAAEG,KAAK,YAAa,GACpBH,EAAEI,WACC,OAGChB,UAEH,GAAGP,KAAKL,kBAAkB,CAE/B,IAAI6B,EAAIrC,EAAKmB,MAAMN,KAAM,kBACzBE,EAAOuB,cAAc,GAAI,EAAG,EAAGD,GAC/BtB,EAAOuB,cAAc,GAAI,EAAG,EAAGD,GAC/BxB,KAAKQ,IAAIR,KAAKE,OAAOd,GAAG,aAAcD,EAAKmB,MAAMN,KAAM,oBAGzD0B,aAAc,WAMb,GAAG1B,KAAK2B,gBAAgB,CACvB,GAAG3B,KAAKE,OAAOkB,UAAUQ,cAAc,CACtC,IAAIC,EAAW7B,KAAKE,OAAOkB,UAAUU,mBAAmB,MACxD,GAAID,EAgBC,CACDxC,EAAI,YACwC,MAA3CwC,EAASE,WAAWA,WAAWC,WACjCH,EAAWA,EAASE,WAAWA,YAGjC,IAAIE,EAAKJ,EAASK,WAClB,GAAGD,GAAqB,GAAfA,EAAGE,WAAiC,MAAfF,EAAGD,UAAmC,MAAfC,EAAGD,UAAkB,CACzEH,EAASO,aAAaH,EAAGI,cAAcC,eAAe,KAASL,GAC/D,IAAIM,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,QAC3CF,EAASG,SAASb,EAASK,WAAY,GACvC,IAAId,EAAY1B,EAASiD,aAAa3C,KAAKE,OAAOuC,QAAQ,GAC1DrB,EAAUwB,kBACVxB,EAAUyB,SAASN,QA7BR,CAEZ9C,EAASqD,UAAUC,YAAYC,KAAKhD,KAAKE,OAAQ,cAAeF,KAAKL,mBAErE,IAAIsD,EAAQjD,KAAKE,OAAOkB,UAAUU,mBAAmB9B,KAAKL,mBAC1D,GAAGsD,GAEF,GADAA,EAAMC,UAAYlD,KAAKmD,iBACpB9D,EAAI,OAAS,EAAE,CAEjB,IAAI8B,EAAInB,KAAKE,OAAOO,SAASW,UAAUC,cACvCF,EAAEG,KAAK,aAAc,GACrBH,EAAEI,eAGH6B,QAAQC,MAAM,iDAmBjBrD,KAAK2B,iBAAkB,EAErB3B,KAAKsD,uBAEJtD,KAAKsD,qBAAqBC,iBAC5BvD,KAAKwD,iBAAiBxD,KAAKsD,qBAAqBC,wBAE1CvD,KAAKsD,uBAMdH,iBAAkB,SAIlBM,WAAY,+BAEZ1C,eAAgB,SAASL,GASxB,IAAIU,EAAWsC,EAAOnB,EAAUoB,EAAwDC,EAAIC,EAAIC,EAApCC,EAAM/D,KAAKE,OAAOO,SAC9E,GAAGC,EAAEI,SAAS,CACb,IAAIkD,EAAShE,KAAKE,OAAOkB,UAAU6C,mBAC/BC,EAASxE,EAASyE,YAAYH,EAAQhE,KAAKyD,YAC/C,GAAGS,EAAO,CACT,GAAqB,MAAlBA,EAAOE,QACT,OAAO,EASR,IANAV,GADAtC,EAAY1B,EAASiD,aAAa3C,KAAKE,OAAOuC,SAC5B4B,WAAW,IACnBC,YACTZ,EAAMa,iBAENb,GADAtC,EAAY1B,EAASiD,aAAa3C,KAAKE,OAAOuC,SAC5B4B,WAAW,IAE3B3E,EAAS8E,uBAAuBN,EAAQR,EAAMe,eAAgBf,EAAMgB,aACtEd,EAAKG,EAAIY,cAAc,MACvBpC,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,QACvCyB,EAAO9B,aAAawB,EAAIM,EAAOhC,YAC/BK,EAASqC,cAAchB,GACvBxC,EAAUwB,kBACVxB,EAAUyB,SAASN,OACd,CAAA,IAAG7C,EAASmF,iBAAiBX,EAAQR,EAAMe,eAAgBf,EAAMgB,aAUtE,QADAb,EAAKH,EAAMe,iBACa,GAAfZ,EAAG1B,WAEX2B,EAAMD,EAAGiB,UACTnB,EAAYI,EAAIzB,eAAewB,EAAIiB,UAAU,EAAGrB,EAAMgB,cACtDM,EAAUjB,EAAIzB,eAAewB,EAAIiB,UAAUrB,EAAMgB,cACjDO,EAASlB,EAAIY,cAAc,MAEH,IAArBK,EAAQF,WAAmBzF,EAAI,YACjC2F,EAAUjB,EAAIzB,eAAe,MAE9BrD,EAAaiG,MAAMvB,EAAWE,EAAI,SAClC5E,EAAaiG,MAAMD,EAAQtB,EAAW,SACtC1E,EAAaiG,MAAMF,EAASC,EAAQ,SACpChG,EAAakG,QAAQtB,IACrBtB,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,SAC9BC,SAASsC,EAAS,GAC3B5D,EAAUwB,kBACVxB,EAAUyB,SAASN,IACZ,GA3BRA,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,QACvCmB,EAAKG,EAAIY,cAAc,MACvBT,EAAOkB,YAAYxB,GACnBM,EAAOkB,YAAYrB,EAAIzB,eAAe,MACtCC,EAASG,SAASwB,EAAOmB,UAAW,GACpCjE,EAAUwB,kBACVxB,EAAUyB,SAASN,SA2BpB,IADAnB,EAAY1B,EAASiD,aAAa3C,KAAKE,OAAOuC,SACjC6C,YAEZ,IADA5B,EAAQtC,EAAUiD,WAAW,KACjBX,EAAMe,eAOjB,GANIf,EAAMY,YACTZ,EAAMa,iBAENb,GADAtC,EAAY1B,EAASiD,aAAa3C,KAAKE,OAAOuC,SAC5B4B,WAAW,KAE9BR,EAAKH,EAAMe,iBACa,GAAfZ,EAAG1B,SAAc,CAGzB,IAAIoD,EAAS7B,EAAMgB,YAChBb,EAAG2B,OAASD,IAGd1B,GADA4B,EAAMzF,KAAK0F,qBAAqB7B,EAAI0B,IAC3BI,KACTJ,EAASE,EAAIF,QAEdzB,EAAMD,EAAGiB,UAETnB,EAAYI,EAAIzB,eAAewB,EAAIiB,UAAU,EAAGQ,IAChDP,EAAUjB,EAAIzB,eAAewB,EAAIiB,UAAUQ,IAC3CN,EAASlB,EAAIY,cAAc,MAEvBK,EAAQQ,SAGXR,EAAUjB,EAAIzB,eAAe,MAG3BqB,EAAU6B,OACZvG,EAAaiG,MAAMvB,EAAWE,EAAI,SAElCF,EAAYE,EAEb5E,EAAaiG,MAAMD,EAAQtB,EAAW,SACtC1E,EAAaiG,MAAMF,EAASC,EAAQ,SACpChG,EAAakG,QAAQtB,IACrBtB,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,SAC9BC,SAASsC,EAAS,GAC3BzC,EAASqD,OAAOZ,EAASA,EAAQQ,QACjCpE,EAAUwB,kBACVxB,EAAUyB,SAASN,GACnBvC,KAAKE,OAAOkB,UAAUyE,UAAS,OAC3B,CACJ,IAAIC,EACDpC,EAAMgB,aAAe,IACvBoB,EAAajC,EAAGkC,WAAWrC,EAAMgB,cAElC,IAAIO,EAASlB,EAAIY,cAAc,MAC3BK,EAAUjB,EAAIzB,eAAe,KAC7BwD,GAIH7G,EAAaiG,MAAMD,EAAQa,EAAY,UACvC7G,EAAaiG,MAAMF,EAASC,EAAQ,WAJpCpB,EAAGuB,YAAYH,GACfpB,EAAGuB,YAAYJ,KAKhBzC,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,SAC9BC,SAASsC,EAAS,GAC3BzC,EAASqD,OAAOZ,EAASA,EAAQQ,QACjCpE,EAAUwB,kBACVxB,EAAUyB,SAASN,GACnBvC,KAAKE,OAAOkB,UAAUyE,UAAS,SAQjCpG,EAASqD,UAAUC,YAAYC,KAAKhD,KAAKE,OAAQ,aAAc,QAGjE,OAAO,EAER,IAAI8F,GAAoB,GAIxBtC,GADAtC,EAAY1B,EAASiD,aAAa3C,KAAKE,OAAOuC,SAC5B4B,WAAW,IACnBC,YACTZ,EAAMa,iBAENb,GADAtC,EAAY1B,EAASiD,aAAa3C,KAAKE,OAAOuC,SAC5B4B,WAAW,IAG9B,IAAIpB,EAAQvD,EAASuG,iBAAiBvC,EAAMwC,aAAc,KAAMlG,KAAKE,OAAOiG,UACxEC,EAAYnD,EAAMmD,UAGtB,GAAIpG,KAAK2B,gBAAmByE,IAAoC,MAAtBA,EAAUpE,UAAqD,MAAjCoE,EAAUrE,WAAWC,UAiB5F,OAhBG3C,EAAI,aAENW,KAAKsD,qBAAuB8C,GAG1B,sHAAsHC,KAAKD,EAAUlD,aAEvIkD,EAAUlD,UAAY,GACnB7D,EAAI,aACNkD,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,SAC9BC,SAAS0D,EAAW,GAC7BhF,EAAUwB,kBACVxB,EAAUyB,SAASN,IAEpBvC,KAAK2B,iBAAkB,IAEjB,EAIR,IAAIsB,EAAMmD,WAAanD,EAAMmD,YAAcpG,KAAKE,OAAOiG,SAAS,CAC/D,IACC1G,EAASqD,UAAUC,YAAYC,KAAKhD,KAAKE,OAAQ,cAAeF,KAAKL,mBACrE,MAAM2G,IAMP,IAFArD,GAASmD,UAAWpG,KAAKE,OAAOkB,UAAUU,mBAAmB9B,KAAKL,mBACjE4G,eAAgBvG,KAAKE,OAAOiG,WACpBC,WACR,GAAGnD,EAAMmD,WAAapG,KAAKE,OAAOiG,YAC9BlD,EAAMmD,UAAUI,aAAevD,EAAMmD,UAAUlD,WAAWuD,QAAQ,aAAc,IAAIjB,OAEvF,OADAxF,KAAKwD,iBAAiBP,EAAMmD,YACrB,OAGRnD,EAAMmD,UAAYpG,KAAKE,OAAOiG,SAG/BzC,GADAtC,EAAY1B,EAASiD,aAAa3C,KAAKE,OAAOuC,SAC5B4B,WAAW,GAG9B,IAAIqC,EAAW3C,EAAIY,cAAc3E,KAAKL,mBACtC+G,EAASxD,UAAYlD,KAAKmD,iBAC1BnD,KAAKwD,iBAAiBP,EAAMmD,WAC5B,IAAIO,EAAYjD,EAAMiD,UAClBhB,EAAOjC,EAAMwC,aACjB,GAAGP,EAAKH,OAASmB,EAAU,CAE1B,IAAIlB,EAAMzF,KAAK0F,qBAAqBC,EAAMgB,GAC1ChB,EAAOF,EAAIE,KACXgB,EAAYlB,EAAIF,OAEjB,GAAG7F,EAASmF,iBAAiB5B,EAAMmD,UAAWT,EAAMgB,GAChD1D,EAAMmD,YAAcnD,EAAMsD,eAC5BtD,EAAMmD,UAAUhB,YAAYsB,GAE5BzH,EAAaiG,MAAMwB,EAAUzD,EAAMmD,UAAW,SAE/CJ,GAAoB,GAEpBzD,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,SAC9BC,SAASgE,EAAU,GAC5BtF,EAAUwB,kBACVxB,EAAUyB,SAASN,GAChBvC,KAAKE,OAAO0G,QACdrH,EAASsH,eAAeH,QAEpB,GAAGhH,EAAS8E,uBAAuBvB,EAAMmD,UAC9C1C,EAAMe,eAAgBf,EAAMgB,aAC5BzF,EAAaiG,MAAMwB,EAAUzD,EAAMmD,UAAWnD,EAAMmD,YAAcnD,EAAMsD,eAAiB,QAAU,UAChGG,EAASI,aAAe9G,KAAKE,OAAO0G,UAEtCrE,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,SAC9BC,SAASgE,EAASI,YAAa,GACxC1F,EAAUwB,kBACVxB,EAAUyB,SAASN,GAEnBhD,EAASsH,eAAeH,EAASI,cAElCd,GAAoB,MAChB,CAmBJ,IAAIe,EA+EAC,EA9EJ,GAnBG/D,EAAMmD,YAAcnD,EAAMsD,eAC5BtD,EAAMmD,UAAUhB,YAAYsB,GAE5BzH,EAAaiG,MAAMwB,EAAUzD,EAAMmD,UAAW,SAE/CJ,GAAoB,EAGjB/C,EAAMmD,UAAUa,OACfP,EAASO,OACRhE,EAAMmD,UAAUa,MAAMC,UACxBR,EAASO,MAAMC,QAAUjE,EAAMmD,UAAUa,MAAMC,UAMlDrD,EAAKH,EAAMe,iBAEa,GAAfZ,EAAG1B,SAAc,CAEzB,IAAIgF,EAAYC,EAChBT,EAAYjD,EAAMiD,UACf9C,EAAG2B,OAASmB,IAGd9C,GADA4B,EAAMzF,KAAK0F,qBAAqB7B,EAAI8C,IAC3BhB,KACTgB,EAAYlB,EAAIF,QAGjBzB,EAAMD,EAAGiB,UACTnB,EAAYI,EAAIzB,eAAewB,EAAIiB,UAAU,EAAG4B,IAChD3B,EAAUjB,EAAIzB,eAAewB,EAAIiB,UAAU4B,EAAW7C,EAAI0B,SAG1DvG,EAAaiG,MAAMvB,EAAWE,EAAI,UAClC5E,EAAaiG,MAAMF,EAASnB,EAAI,SAChC5E,EAAakG,QAAQtB,GAMrB,IADA,IAAIwD,EAAU1D,EAAU5B,WAClBsF,IAAYpE,EAAMmD,WAAU,CACjC,IAAIkB,EAAKD,EAAQjD,QACbmD,EAAQxD,EAAIY,cAAc2C,GAuB9B,IArBGD,EAAQJ,OACPM,EAAMN,OACLI,EAAQJ,MAAMC,UAChBK,EAAMN,MAAMC,QAAUG,EAAQJ,MAAMC,SAKhB,SAApBG,EAAQjD,UACPiD,EAAQG,QACVD,EAAMC,MAAQH,EAAQG,OAEpBH,EAAQI,OACVF,EAAME,KAAOJ,EAAQI,MAEnBJ,EAAQK,OACVH,EAAMG,KAAOL,EAAQK,OAIvBP,EAAanC,EACPmC,GACLC,EAAQD,EAAWL,YACnBS,EAAMnC,YAAY+B,GAClBA,EAAaC,EAEdnI,EAAaiG,MAAMqC,EAAOF,EAAS,SACnC1D,EAAY0D,EACZrC,EAAUuC,EACVF,EAAUA,EAAQtF,WAYnB,KAN0B,IAD1BoF,EAAanC,GACC7C,UAAyC,GAAvBgF,EAAWhF,UAAiBgF,EAAWrC,aAGtE4B,EAASxD,UAAY,IAEtB6D,EAAiBI,EACXA,GACLC,EAAQD,EAAWL,YACnBJ,EAAStB,YAAY+B,GACrBA,EAAaC,EAKf7E,EAAW7C,EAAS8C,OAAOxC,KAAKE,OAAOuC,QAEvC,IAAIkF,EAA0BZ,EAC9B,GAA8B,OAA3B/G,KAAKL,kBAA2B,CAClC,KAAMgI,GACLX,EAAgBW,EAEhBA,EADAP,EAAQO,EAAwBzF,WAG9B8E,GAAiBA,EAAcjF,YACjC2E,EAAWM,EAAcjF,WACzBQ,EAASG,SAASgE,EAAU,GAC5BtF,EAAUwB,kBACVxB,EAAUyB,SAASN,GAChBvC,KAAKE,OAAO0G,QACdrH,EAASsH,eAAeH,GAEtBrH,EAAI,aAENW,KAAKsD,qBAAuBL,EAAMmD,YAGnCJ,GAAoB,OAGrBzD,EAASG,SAASgE,EAAU,GAC5BtF,EAAUwB,kBACVxB,EAAUyB,SAASN,GAChBvC,KAAKE,OAAO0G,QACdrH,EAASsH,eAAeH,GAEtBrH,EAAI,aAENW,KAAKsD,qBAAuBL,EAAMmD,WAIrC,OAAOJ,GAGRN,qBAAsB,SAAoBC,EAAaJ,GAUtD,KAAMI,EAAKH,OAASD,GAAUI,EAAKmB,aAA4C,GAA7BnB,EAAKmB,YAAY3E,UAElEoD,GAAkBI,EAAKH,OACvBG,EAAOA,EAAKmB,YAEb,OAAQnB,KAAQA,EAAMJ,OAAUA,IAGjC/B,iBAAkB,SAASoE,GAK1B,IAAIC,EAAO,YAAYxB,KAAKuB,EAAUxD,SACrCwD,EAAY5H,KAAKE,OAAOkB,UAAU0G,gBAAgBF,GAAY,IAAK,MAAO,OAEvEC,IAGDA,EAAKxC,YACHwC,EAAK9B,WAAWP,OAAS,GAAgC,GAA3BqC,EAAKxC,UAAUlD,UAAiB,cAAckE,KAAKwB,EAAKxC,UAAUP,YACzE,MAA1B+C,EAAKxC,UAAUjB,UAEfnF,EAAakG,QAAQ0C,EAAKxC,WAGxBwC,EAAK9B,WAAWP,SACnBqC,EAAK3E,UAAYlD,KAAKmD","file":"../../../_editor/plugins/EnterKeyHandling.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.destroy domConstruct.place\r\n\t\"dojo/keys\", // keys.ENTER\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"mozilla\") has(\"webkit\")\r\n\t\"dojo/_base/window\", // win.withGlobal\r\n\t\"dojo/window\", // winUtils.scrollIntoView\r\n\t\"../_Plugin\",\r\n\t\"../RichText\",\r\n\t\"../range\"\r\n], function(declare, domConstruct, keys, lang, on, has, win, winUtils, _Plugin, RichText, rangeapi){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/EnterKeyHandling\r\n\r\n\treturn declare(\"dijit._editor.plugins.EnterKeyHandling\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin tries to make all browsers behave consistently with regard to\r\n\t\t//\t\thow ENTER behaves in the editor window.  It traps the ENTER key and alters\r\n\t\t//\t\tthe way DOM is constructed in certain cases to try to commonize the generated\r\n\t\t//\t\tDOM and behaviors across browsers.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tThis plugin has three modes:\r\n\t\t//\r\n\t\t//\t\t- blockNodeForEnter=BR\r\n\t\t//\t\t- blockNodeForEnter=DIV\r\n\t\t//\t\t- blockNodeForEnter=P\r\n\t\t//\r\n\t\t//\t\tIn blockNodeForEnter=P, the ENTER key starts a new\r\n\t\t//\t\tparagraph, and shift-ENTER starts a new line in the current paragraph.\r\n\t\t//\t\tFor example, the input:\r\n\t\t//\r\n\t\t//\t|\tfirst paragraph <shift-ENTER>\r\n\t\t//\t|\tsecond line of first paragraph <ENTER>\r\n\t\t//\t|\tsecond paragraph\r\n\t\t//\r\n\t\t//\t\twill generate:\r\n\t\t//\r\n\t\t//\t|\t<p>\r\n\t\t//\t|\t\tfirst paragraph\r\n\t\t//\t|\t\t<br/>\r\n\t\t//\t|\t\tsecond line of first paragraph\r\n\t\t//\t|\t</p>\r\n\t\t//\t|\t<p>\r\n\t\t//\t|\t\tsecond paragraph\r\n\t\t//\t|\t</p>\r\n\t\t//\r\n\t\t//\t\tIn BR and DIV mode, the ENTER key conceptually goes to a new line in the\r\n\t\t//\t\tcurrent paragraph, and users conceptually create a new paragraph by pressing ENTER twice.\r\n\t\t//\t\tFor example, if the user enters text into an editor like this:\r\n\t\t//\r\n\t\t//\t|\t\tone <ENTER>\r\n\t\t//\t|\t\ttwo <ENTER>\r\n\t\t//\t|\t\tthree <ENTER>\r\n\t\t//\t|\t\t<ENTER>\r\n\t\t//\t|\t\tfour <ENTER>\r\n\t\t//\t|\t\tfive <ENTER>\r\n\t\t//\t|\t\tsix <ENTER>\r\n\t\t//\r\n\t\t//\t\tIt will appear on the screen as two 'paragraphs' of three lines each.  Markupwise, this generates:\r\n\t\t//\r\n\t\t//\t\tBR:\r\n\t\t//\t|\t\tone<br/>\r\n\t\t//\t|\t\ttwo<br/>\r\n\t\t//\t|\t\tthree<br/>\r\n\t\t//\t|\t\t<br/>\r\n\t\t//\t|\t\tfour<br/>\r\n\t\t//\t|\t\tfive<br/>\r\n\t\t//\t|\t\tsix<br/>\r\n\t\t//\r\n\t\t//\t\tDIV:\r\n\t\t//\t|\t\t<div>one</div>\r\n\t\t//\t|\t\t<div>two</div>\r\n\t\t//\t|\t\t<div>three</div>\r\n\t\t//\t|\t\t<div>&nbsp;</div>\r\n\t\t//\t|\t\t<div>four</div>\r\n\t\t//\t|\t\t<div>five</div>\r\n\t\t//\t|\t\t<div>six</div>\r\n\r\n\t\t// blockNodeForEnter: String\r\n\t\t//\t\tThis property decides the behavior of Enter key. It can be either P,\r\n\t\t//\t\tDIV, BR, or empty (which means disable this feature). Anything else\r\n\t\t//\t\twill trigger errors.  The default is 'BR'\r\n\t\t//\r\n\t\t//\t\tSee class description for more details.\r\n\t\tblockNodeForEnter: 'BR',\r\n\r\n\t\tconstructor: function(args){\r\n\t\t\tif(args){\r\n\t\t\t\tif(\"blockNodeForEnter\" in args){\r\n\t\t\t\t\targs.blockNodeForEnter = args.blockNodeForEnter.toUpperCase();\r\n\t\t\t\t}\r\n\t\t\t\tlang.mixin(this, args);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetEditor: function(editor){\r\n\t\t\t// Overrides _Plugin.setEditor().\r\n\t\t\tif(this.editor === editor){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.editor = editor;\r\n\t\t\tif(this.blockNodeForEnter == 'BR'){\r\n\t\t\t\t// While Moz has a mode tht mostly works, it's still a little different,\r\n\t\t\t\t// So, try to just have a common mode and be consistent.  Which means\r\n\t\t\t\t// we need to enable customUndo, if not already enabled.\r\n\t\t\t\tthis.editor.customUndo = true;\r\n\t\t\t\teditor.onLoadDeferred.then(lang.hitch(this, function(d){\r\n\t\t\t\t\tthis.own(on(editor.document, \"keydown\", lang.hitch(this, function(e){\r\n\t\t\t\t\t\tif(e.keyCode == keys.ENTER){\r\n\t\t\t\t\t\t\t// Just do it manually.  The handleEnterKey has a shift mode that\r\n\t\t\t\t\t\t\t// Always acts like <br>, so just use it.\r\n\t\t\t\t\t\t\tvar ne = lang.mixin({}, e);\r\n\t\t\t\t\t\t\tne.shiftKey = true;\r\n\t\t\t\t\t\t\tif(!this.handleEnterKey(ne)){\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})));\r\n\t\t\t\t\tif(has(\"ie\") >= 9 && has(\"ie\") <= 10){\r\n\t\t\t\t\t\tthis.own(on(editor.document, \"paste\", lang.hitch(this, function(e){\r\n\t\t\t\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\t\t\t// Use the old range/selection code to kick IE 9 into updating\r\n\t\t\t\t\t\t\t\t// its range by moving it back, then forward, one 'character'.\r\n\t\t\t\t\t\t\t\tvar r = this.editor.document.selection.createRange();\r\n\t\t\t\t\t\t\t\tr.move('character', -1);\r\n\t\t\t\t\t\t\t\tr.select();\r\n\t\t\t\t\t\t\t\tr.move('character', 1);\r\n\t\t\t\t\t\t\t\tr.select();\r\n\t\t\t\t\t\t\t}), 0);\r\n\t\t\t\t\t\t})));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}));\r\n\t\t\t}else if(this.blockNodeForEnter){\r\n\t\t\t\t// add enter key handler\r\n\t\t\t\tvar h = lang.hitch(this, \"handleEnterKey\");\r\n\t\t\t\teditor.addKeyHandler(13, 0, 0, h); //enter\r\n\t\t\t\teditor.addKeyHandler(13, 0, 1, h); //shift+enter\r\n\t\t\t\tthis.own(this.editor.on('KeyPressed', lang.hitch(this, 'onKeyPressed')));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonKeyPressed: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for after the user has pressed a key, and the display has been updated.\r\n\t\t\t//\t\tConnected to RichText's onKeyPressed() method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._checkListLater){\r\n\t\t\t\tif(this.editor.selection.isCollapsed()){\r\n\t\t\t\t\tvar liparent = this.editor.selection.getAncestorElement('LI');\r\n\t\t\t\t\tif(!liparent){\r\n\t\t\t\t\t\t// circulate the undo detection code by calling RichText::execCommand directly\r\n\t\t\t\t\t\tRichText.prototype.execCommand.call(this.editor, 'formatblock', this.blockNodeForEnter);\r\n\t\t\t\t\t\t// set the innerHTML of the new block node\r\n\t\t\t\t\t\tvar block = this.editor.selection.getAncestorElement(this.blockNodeForEnter);\r\n\t\t\t\t\t\tif(block){\r\n\t\t\t\t\t\t\tblock.innerHTML = this.bogusHtmlContent;\r\n\t\t\t\t\t\t\tif(has(\"ie\") <= 9){\r\n\t\t\t\t\t\t\t\t// move to the start by moving backwards one char\r\n\t\t\t\t\t\t\t\tvar r = this.editor.document.selection.createRange();\r\n\t\t\t\t\t\t\t\tr.move('character', -1);\r\n\t\t\t\t\t\t\t\tr.select();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tconsole.error('onKeyPressed: Cannot find the new block node'); // FIXME\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t\t\tif(liparent.parentNode.parentNode.nodeName == 'LI'){\r\n\t\t\t\t\t\t\t\tliparent = liparent.parentNode.parentNode;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar fc = liparent.firstChild;\r\n\t\t\t\t\t\tif(fc && fc.nodeType == 1 && (fc.nodeName == 'UL' || fc.nodeName == 'OL')){\r\n\t\t\t\t\t\t\tliparent.insertBefore(fc.ownerDocument.createTextNode('\\xA0'), fc);\r\n\t\t\t\t\t\t\tvar newrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\t\tnewrange.setStart(liparent.firstChild, 0);\r\n\t\t\t\t\t\t\tvar selection = rangeapi.getSelection(this.editor.window, true);\r\n\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._checkListLater = false;\r\n\t\t\t}\r\n\t\t\tif(this._pressedEnterInBlock){\r\n\t\t\t\t// the new created is the original current P, so we have previousSibling below\r\n\t\t\t\tif(this._pressedEnterInBlock.previousSibling){\r\n\t\t\t\t\tthis.removeTrailingBr(this._pressedEnterInBlock.previousSibling);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._pressedEnterInBlock;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// bogusHtmlContent: [private] String\r\n\t\t//\t\tHTML to stick into a new empty block\r\n\t\tbogusHtmlContent: '&#160;', // &nbsp;\r\n\r\n\t\t// blockNodes: [private] Regex\r\n\t\t//\t\tRegex for testing if a given tag is a block level (display:block) tag\r\n\t\tblockNodes: /^(?:P|H1|H2|H3|H4|H5|H6|LI)$/,\r\n\r\n\t\thandleEnterKey: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for enter key events when blockNodeForEnter is DIV or P.\r\n\t\t\t// description:\r\n\t\t\t//\t\tManually handle enter key event to make the behavior consistent across\r\n\t\t\t//\t\tall supported browsers. See class description for details.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar selection, range, newrange, startNode, endNode, brNode, doc = this.editor.document, br, rs, txt;\r\n\t\t\tif(e.shiftKey){        // shift+enter always generates <br>\r\n\t\t\t\tvar parent = this.editor.selection.getParentElement();\r\n\t\t\t\tvar header = rangeapi.getAncestor(parent, this.blockNodes);\r\n\t\t\t\tif(header){\r\n\t\t\t\t\tif(header.tagName == 'LI'){\r\n\t\t\t\t\t\treturn true; // let browser handle\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\tif(!range.collapsed){\r\n\t\t\t\t\t\trange.deleteContents();\r\n\t\t\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rangeapi.atBeginningOfContainer(header, range.startContainer, range.startOffset)){\r\n\t\t\t\t\t\tbr = doc.createElement('br');\r\n\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\theader.insertBefore(br, header.firstChild);\r\n\t\t\t\t\t\tnewrange.setStartAfter(br);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t}else if(rangeapi.atEndOfContainer(header, range.startContainer, range.startOffset)){\r\n\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\tbr = doc.createElement('br');\r\n\t\t\t\t\t\theader.appendChild(br);\r\n\t\t\t\t\t\theader.appendChild(doc.createTextNode('\\xA0'));\r\n\t\t\t\t\t\tnewrange.setStart(header.lastChild, 0);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trs = range.startContainer;\r\n\t\t\t\t\t\tif(rs && rs.nodeType == 3){\r\n\t\t\t\t\t\t\t// Text node, we have to split it.\r\n\t\t\t\t\t\t\ttxt = rs.nodeValue;\r\n\t\t\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, range.startOffset));\r\n\t\t\t\t\t\t\tendNode = doc.createTextNode(txt.substring(range.startOffset));\r\n\t\t\t\t\t\t\tbrNode = doc.createElement(\"br\");\r\n\r\n\t\t\t\t\t\t\tif(endNode.nodeValue == \"\" && has(\"webkit\")){\r\n\t\t\t\t\t\t\t\tendNode = doc.createTextNode('\\xA0')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdomConstruct.place(startNode, rs, \"after\");\r\n\t\t\t\t\t\t\tdomConstruct.place(brNode, startNode, \"after\");\r\n\t\t\t\t\t\t\tdomConstruct.place(endNode, brNode, \"after\");\r\n\t\t\t\t\t\t\tdomConstruct.destroy(rs);\r\n\t\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\t\tnewrange.setStart(endNode, 0);\r\n\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true; // let browser handle\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\tif(selection.rangeCount){\r\n\t\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\t\tif(range && range.startContainer){\r\n\t\t\t\t\t\t\tif(!range.collapsed){\r\n\t\t\t\t\t\t\t\trange.deleteContents();\r\n\t\t\t\t\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trs = range.startContainer;\r\n\t\t\t\t\t\t\tif(rs && rs.nodeType == 3){\r\n\t\t\t\t\t\t\t\t// Text node, we have to split it.\r\n\r\n\t\t\t\t\t\t\t\tvar offset = range.startOffset;\r\n\t\t\t\t\t\t\t\tif(rs.length < offset){\r\n\t\t\t\t\t\t\t\t\t//We are not splitting the right node, try to locate the correct one\r\n\t\t\t\t\t\t\t\t\tret = this._adjustNodeAndOffset(rs, offset);\r\n\t\t\t\t\t\t\t\t\trs = ret.node;\r\n\t\t\t\t\t\t\t\t\toffset = ret.offset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttxt = rs.nodeValue;\r\n\r\n\t\t\t\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, offset));\r\n\t\t\t\t\t\t\t\tendNode = doc.createTextNode(txt.substring(offset));\r\n\t\t\t\t\t\t\t\tbrNode = doc.createElement(\"br\");\r\n\r\n\t\t\t\t\t\t\t\tif(!endNode.length){\r\n\t\t\t\t\t\t\t\t\t// Create dummy text with a &nbsp to go after the BR, to prevent IE crash.\r\n\t\t\t\t\t\t\t\t\t// See https://bugs.dojotoolkit.org/ticket/12008 for details.\r\n\t\t\t\t\t\t\t\t\tendNode = doc.createTextNode('\\xA0');\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif(startNode.length){\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(startNode, rs, \"after\");\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tstartNode = rs;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdomConstruct.place(brNode, startNode, \"after\");\r\n\t\t\t\t\t\t\t\tdomConstruct.place(endNode, brNode, \"after\");\r\n\t\t\t\t\t\t\t\tdomConstruct.destroy(rs);\r\n\t\t\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\t\t\tnewrange.setStart(endNode, 0);\r\n\t\t\t\t\t\t\t\tnewrange.setEnd(endNode, endNode.length);\r\n\t\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\t\tthis.editor.selection.collapse(true);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tvar targetNode;\r\n\t\t\t\t\t\t\t\tif(range.startOffset >= 0){\r\n\t\t\t\t\t\t\t\t\ttargetNode = rs.childNodes[range.startOffset];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar brNode = doc.createElement(\"br\");\r\n\t\t\t\t\t\t\t\tvar endNode = doc.createTextNode('\\xA0');\r\n\t\t\t\t\t\t\t\tif(!targetNode){\r\n\t\t\t\t\t\t\t\t\trs.appendChild(brNode);\r\n\t\t\t\t\t\t\t\t\trs.appendChild(endNode);\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(brNode, targetNode, \"before\");\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(endNode, brNode, \"after\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\t\t\tnewrange.setStart(endNode, 0);\r\n\t\t\t\t\t\t\t\tnewrange.setEnd(endNode, endNode.length);\r\n\t\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\t\tthis.editor.selection.collapse(true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// \\xA0 dummy text node remains, but is stripped before get(\"value\")\r\n\t\t\t\t\t\t\t// by RichText._stripTrailingEmptyNodes().  Still, could we just use a plain\r\n\t\t\t\t\t\t\t// space (\" \") instead?\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// don't change this: do not call this.execCommand, as that may have other logic in subclass\r\n\t\t\t\t\t\tRichText.prototype.execCommand.call(this.editor, 'inserthtml', '<br>');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar _letBrowserHandle = true;\r\n\r\n\t\t\t// first remove selection\r\n\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\trange = selection.getRangeAt(0);\r\n\t\t\tif(!range.collapsed){\r\n\t\t\t\trange.deleteContents();\r\n\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t}\r\n\r\n\t\t\tvar block = rangeapi.getBlockAncestor(range.endContainer, null, this.editor.editNode);\r\n\t\t\tvar blockNode = block.blockNode;\r\n\r\n\t\t\t// if this is under a LI or the parent of the blockNode is LI, just let browser to handle it\r\n\t\t\tif((this._checkListLater = (blockNode && (blockNode.nodeName == 'LI' || blockNode.parentNode.nodeName == 'LI')))){\r\n\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t// press enter in middle of P may leave a trailing <br/>, let's remove it later\r\n\t\t\t\t\tthis._pressedEnterInBlock = blockNode;\r\n\t\t\t\t}\r\n\t\t\t\t// if this li only contains spaces, set the content to empty so the browser will outdent this item\r\n\t\t\t\tif(/^(\\s|&nbsp;|&#160;|\\xA0|<span\\b[^>]*\\bclass=['\"]Apple-style-span['\"][^>]*>(\\s|&nbsp;|&#160;|\\xA0)<\\/span>)?(<br>)?$/.test(blockNode.innerHTML)){\r\n\t\t\t\t\t// empty LI node\r\n\t\t\t\t\tblockNode.innerHTML = '';\r\n\t\t\t\t\tif(has(\"webkit\")){ // WebKit tosses the range when innerHTML is reset\r\n\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\tnewrange.setStart(blockNode, 0);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._checkListLater = false; // nothing to check since the browser handles outdent\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// text node directly under body, let's wrap them in a node\r\n\t\t\tif(!block.blockNode || block.blockNode === this.editor.editNode){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tRichText.prototype.execCommand.call(this.editor, 'formatblock', this.blockNodeForEnter);\r\n\t\t\t\t}catch(e2){ /*squelch FF3 exception bug when editor content is a single BR*/\r\n\t\t\t\t}\r\n\t\t\t\t// get the newly created block node\r\n\t\t\t\t// FIXME\r\n\t\t\t\tblock = {blockNode: this.editor.selection.getAncestorElement(this.blockNodeForEnter),\r\n\t\t\t\t\tblockContainer: this.editor.editNode};\r\n\t\t\t\tif(block.blockNode){\r\n\t\t\t\t\tif(block.blockNode != this.editor.editNode &&\r\n\t\t\t\t\t\t(!(block.blockNode.textContent || block.blockNode.innerHTML).replace(/^\\s+|\\s+$/g, \"\").length)){\r\n\t\t\t\t\t\tthis.removeTrailingBr(block.blockNode);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{    // we shouldn't be here if formatblock worked\r\n\t\t\t\t\tblock.blockNode = this.editor.editNode;\r\n\t\t\t\t}\r\n\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t}\r\n\r\n\t\t\tvar newblock = doc.createElement(this.blockNodeForEnter);\r\n\t\t\tnewblock.innerHTML = this.bogusHtmlContent;\r\n\t\t\tthis.removeTrailingBr(block.blockNode);\r\n\t\t\tvar endOffset = range.endOffset;\r\n\t\t\tvar node = range.endContainer;\r\n\t\t\tif(node.length < endOffset){\r\n\t\t\t\t//We are not checking the right node, try to locate the correct one\r\n\t\t\t\tvar ret = this._adjustNodeAndOffset(node, endOffset);\r\n\t\t\t\tnode = ret.node;\r\n\t\t\t\tendOffset = ret.offset;\r\n\t\t\t}\r\n\t\t\tif(rangeapi.atEndOfContainer(block.blockNode, node, endOffset)){\r\n\t\t\t\tif(block.blockNode === block.blockContainer){\r\n\t\t\t\t\tblock.blockNode.appendChild(newblock);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomConstruct.place(newblock, block.blockNode, \"after\");\r\n\t\t\t\t}\r\n\t\t\t\t_letBrowserHandle = false;\r\n\t\t\t\t// lets move caret to the newly created block\r\n\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\tnewrange.setStart(newblock, 0);\r\n\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\tif(this.editor.height){\r\n\t\t\t\t\twinUtils.scrollIntoView(newblock);\r\n\t\t\t\t}\r\n\t\t\t}else if(rangeapi.atBeginningOfContainer(block.blockNode,\r\n\t\t\t\trange.startContainer, range.startOffset)){\r\n\t\t\t\tdomConstruct.place(newblock, block.blockNode, block.blockNode === block.blockContainer ? \"first\" : \"before\");\r\n\t\t\t\tif(newblock.nextSibling && this.editor.height){\r\n\t\t\t\t\t// position input caret - mostly WebKit needs this\r\n\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\tnewrange.setStart(newblock.nextSibling, 0);\r\n\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t// browser does not scroll the caret position into view, do it manually\r\n\t\t\t\t\twinUtils.scrollIntoView(newblock.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t\t_letBrowserHandle = false;\r\n\t\t\t}else{ //press enter in the middle of P/DIV/Whatever/\r\n\t\t\t\tif(block.blockNode === block.blockContainer){\r\n\t\t\t\t\tblock.blockNode.appendChild(newblock);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomConstruct.place(newblock, block.blockNode, \"after\");\r\n\t\t\t\t}\r\n\t\t\t\t_letBrowserHandle = false;\r\n\r\n\t\t\t\t// Clone any block level styles.\r\n\t\t\t\tif(block.blockNode.style){\r\n\t\t\t\t\tif(newblock.style){\r\n\t\t\t\t\t\tif(block.blockNode.style.cssText){\r\n\t\t\t\t\t\t\tnewblock.style.cssText = block.blockNode.style.cssText;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Okay, we probably have to split.\r\n\t\t\t\trs = range.startContainer;\r\n\t\t\t\tvar firstNodeMoved;\r\n\t\t\t\tif(rs && rs.nodeType == 3){\r\n\t\t\t\t\t// Text node, we have to split it.\r\n\t\t\t\t\tvar nodeToMove, tNode;\r\n\t\t\t\t\tendOffset = range.endOffset;\r\n\t\t\t\t\tif(rs.length < endOffset){\r\n\t\t\t\t\t\t//We are not splitting the right node, try to locate the correct one\r\n\t\t\t\t\t\tret = this._adjustNodeAndOffset(rs, endOffset);\r\n\t\t\t\t\t\trs = ret.node;\r\n\t\t\t\t\t\tendOffset = ret.offset;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttxt = rs.nodeValue;\r\n\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, endOffset));\r\n\t\t\t\t\tendNode = doc.createTextNode(txt.substring(endOffset, txt.length));\r\n\r\n\t\t\t\t\t// Place the split, then remove original nodes.\r\n\t\t\t\t\tdomConstruct.place(startNode, rs, \"before\");\r\n\t\t\t\t\tdomConstruct.place(endNode, rs, \"after\");\r\n\t\t\t\t\tdomConstruct.destroy(rs);\r\n\r\n\t\t\t\t\t// Okay, we split the text.  Now we need to see if we're\r\n\t\t\t\t\t// parented to the block element we're splitting and if\r\n\t\t\t\t\t// not, we have to split all the way up.  Ugh.\r\n\t\t\t\t\tvar parentC = startNode.parentNode;\r\n\t\t\t\t\twhile(parentC !== block.blockNode){\r\n\t\t\t\t\t\tvar tg = parentC.tagName;\r\n\t\t\t\t\t\tvar newTg = doc.createElement(tg);\r\n\t\t\t\t\t\t// Clone over any 'style' data.\r\n\t\t\t\t\t\tif(parentC.style){\r\n\t\t\t\t\t\t\tif(newTg.style){\r\n\t\t\t\t\t\t\t\tif(parentC.style.cssText){\r\n\t\t\t\t\t\t\t\t\tnewTg.style.cssText = parentC.style.cssText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// If font also need to clone over any font data.\r\n\t\t\t\t\t\tif(parentC.tagName === \"FONT\"){\r\n\t\t\t\t\t\t\tif(parentC.color){\r\n\t\t\t\t\t\t\t\tnewTg.color = parentC.color;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(parentC.face){\r\n\t\t\t\t\t\t\t\tnewTg.face = parentC.face;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(parentC.size){  // this check was necessary on IE\r\n\t\t\t\t\t\t\t\tnewTg.size = parentC.size;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnodeToMove = endNode;\r\n\t\t\t\t\t\twhile(nodeToMove){\r\n\t\t\t\t\t\t\ttNode = nodeToMove.nextSibling;\r\n\t\t\t\t\t\t\tnewTg.appendChild(nodeToMove);\r\n\t\t\t\t\t\t\tnodeToMove = tNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdomConstruct.place(newTg, parentC, \"after\");\r\n\t\t\t\t\t\tstartNode = parentC;\r\n\t\t\t\t\t\tendNode = newTg;\r\n\t\t\t\t\t\tparentC = parentC.parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lastly, move the split out tags to the new block.\r\n\t\t\t\t\t// as they should now be split properly.\r\n\t\t\t\t\tnodeToMove = endNode;\r\n\t\t\t\t\tif(nodeToMove.nodeType == 1 || (nodeToMove.nodeType == 3 && nodeToMove.nodeValue)){\r\n\t\t\t\t\t\t// Non-blank text and non-text nodes need to clear out that blank space\r\n\t\t\t\t\t\t// before moving the contents.\r\n\t\t\t\t\t\tnewblock.innerHTML = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstNodeMoved = nodeToMove;\r\n\t\t\t\t\twhile(nodeToMove){\r\n\t\t\t\t\t\ttNode = nodeToMove.nextSibling;\r\n\t\t\t\t\t\tnewblock.appendChild(nodeToMove);\r\n\t\t\t\t\t\tnodeToMove = tNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//lets move caret to the newly created block\r\n\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\tvar nodeForCursor;\r\n\t\t\t\tvar innerMostFirstNodeMoved = firstNodeMoved;\r\n\t\t\t\tif(this.blockNodeForEnter !== 'BR'){\r\n\t\t\t\t\twhile(innerMostFirstNodeMoved){\r\n\t\t\t\t\t\tnodeForCursor = innerMostFirstNodeMoved;\r\n\t\t\t\t\t\ttNode = innerMostFirstNodeMoved.firstChild;\r\n\t\t\t\t\t\tinnerMostFirstNodeMoved = tNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodeForCursor && nodeForCursor.parentNode){\r\n\t\t\t\t\t\tnewblock = nodeForCursor.parentNode;\r\n\t\t\t\t\t\tnewrange.setStart(newblock, 0);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\tif(this.editor.height){\r\n\t\t\t\t\t\t\twinUtils.scrollIntoView(newblock);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t\t\t// press enter in middle of P may leave a trailing <br/>, let's remove it later\r\n\t\t\t\t\t\t\tthis._pressedEnterInBlock = block.blockNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t_letBrowserHandle = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnewrange.setStart(newblock, 0);\r\n\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\tif(this.editor.height){\r\n\t\t\t\t\t\twinUtils.scrollIntoView(newblock);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t\t// press enter in middle of P may leave a trailing <br/>, let's remove it later\r\n\t\t\t\t\t\tthis._pressedEnterInBlock = block.blockNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn _letBrowserHandle;\r\n\t\t},\r\n\r\n\t\t_adjustNodeAndOffset: function(/*DomNode*/node, /*Int*/offset){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIn the case there are multiple text nodes in a row the offset may not be within the node.  If the offset is larger than the node length, it will attempt to find\r\n\t\t\t//\t\tthe next text sibling until it locates the text node in which the offset refers to\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to check.\r\n\t\t\t// offset:\r\n\t\t\t//\t\tThe position to find within the text node\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate.\r\n\t\t\twhile(node.length < offset && node.nextSibling && node.nextSibling.nodeType == 3){\r\n\t\t\t\t//Adjust the offset and node in the case of multiple text nodes in a row\r\n\t\t\t\toffset = offset - node.length;\r\n\t\t\t\tnode = node.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn {\"node\": node, \"offset\": offset};\r\n\t\t},\r\n\r\n\t\tremoveTrailingBr: function(container){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIf last child of container is a `<br>`, then remove it.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar para = /P|DIV|LI/i.test(container.tagName) ?\r\n\t\t\t\tcontainer : this.editor.selection.getParentOfType(container, ['P', 'DIV', 'LI']);\r\n\r\n\t\t\tif(!para){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(para.lastChild){\r\n\t\t\t\tif((para.childNodes.length > 1 && para.lastChild.nodeType == 3 && /^[\\s\\xAD]*$/.test(para.lastChild.nodeValue)) ||\r\n\t\t\t\t\tpara.lastChild.tagName == 'BR'){\r\n\r\n\t\t\t\t\tdomConstruct.destroy(para.lastChild);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!para.childNodes.length){\r\n\t\t\t\tpara.innerHTML = this.bogusHtmlContent;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n});\r\n"]}