{"version":3,"sources":["_editor/plugins/ToggleDir.js"],"names":["define","declare","domStyle","kernel","lang","on","_Plugin","ToggleButton","ToggleDir","useDefaultCommand","command","buttonClass","_initButton","this","inherited","arguments","button","editorLtr","editor","isLeftToRight","own","hitch","checked","set","editorDir","setButtonChecked","textDir","get","watch","name","oval","nval","updateState","registry"],"mappings":";;;;;;;AAAAA,QACC,qBACA,iBACA,oBACA,kBACA,UACA,aACA,2BACE,SAASC,EAASC,EAAUC,EAAQC,EAAMC,EAAIC,EAASC,GAKzD,IAAIC,EAAYP,EAAQ,kCAAmCK,GAO1DG,mBAAmB,EAEnBC,QAAS,YAGTC,YAAaJ,EAEbK,YAAa,WACZC,KAAKC,UAAUC,WAEf,IAAIC,EAASH,KAAKG,OACjBC,EAAYJ,KAAKK,OAAOC,gBAEzBN,KAAKO,IAAIP,KAAKG,OAAOX,GAAG,SAAUD,EAAKiB,MAAMR,KAAM,SAASS,GAC3DT,KAAKK,OAAOK,IAAI,UAAWN,EAAYK,EAAU,MAAQ,WAK1D,IAAIE,EAAYP,EAAY,MAAQ,MACpC,SAASQ,EAAiBC,GACzBV,EAAOO,IAAI,UAAWG,GAAWA,IAAYF,GAAW,GAEzDC,EAAiBZ,KAAKK,OAAOS,IAAI,YACjCd,KAAKK,OAAOU,MAAM,UAAW,SAASC,EAAMC,EAAMC,GACjDN,EAAiBM,MAInBC,YAAa,WAGZnB,KAAKG,OAAOO,IAAI,WAAYV,KAAKc,IAAI,gBASvC,OAJArB,EAAQ2B,SAAoB,UAAI,WAC/B,OAAO,IAAIzB,GAAWE,QAAS,eAGzBF","file":"../../../_editor/plugins/ToggleDir.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/_base/kernel\", // kernel.experimental\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"../_Plugin\",\r\n\t\"../../form/ToggleButton\"\r\n], function(declare, domStyle, kernel, lang, on, _Plugin, ToggleButton){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/ToggleDir\r\n\r\n\tvar ToggleDir = declare(\"dijit._editor.plugins.ToggleDir\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin is used to toggle direction of the edited document,\r\n\t\t//\t\tindependent of what direction the whole page is.\r\n\r\n\t\t// Override _Plugin.useDefaultCommand: processing is done in this plugin\r\n\t\t// rather than by sending commands to the Editor\r\n\t\tuseDefaultCommand: false,\r\n\r\n\t\tcommand: \"toggleDir\",\r\n\r\n\t\t// Override _Plugin.buttonClass to use a ToggleButton for this plugin rather than a vanilla Button\r\n\t\tbuttonClass: ToggleButton,\r\n\r\n\t\t_initButton: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar button = this.button,\r\n\t\t\t\teditorLtr = this.editor.isLeftToRight();\r\n\r\n\t\t\tthis.own(this.button.on(\"change\", lang.hitch(this, function(checked){\r\n\t\t\t\tthis.editor.set(\"textDir\", editorLtr ^ checked ? \"ltr\" : \"rtl\");\r\n\t\t\t})));\r\n\r\n\t\t\t// Button should be checked if the editor's textDir is opposite of the editor's dir.\r\n\t\t\t// Note that the arrow in the icon points in opposite directions depending on the editor's dir.\r\n\t\t\tvar editorDir = editorLtr ? \"ltr\" : \"rtl\";\r\n\t\t\tfunction setButtonChecked(textDir){\r\n\t\t\t\tbutton.set(\"checked\", textDir && textDir !== editorDir, false);\r\n\t\t\t}\r\n\t\t\tsetButtonChecked(this.editor.get(\"textDir\"));\r\n\t\t\tthis.editor.watch(\"textDir\", function(name, oval, nval){\r\n\t\t\t\tsetButtonChecked(nval);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for button state control for disabled to work.\r\n\t\t\tthis.button.set(\"disabled\", this.get(\"disabled\"));\r\n\t\t}\r\n\t});\r\n\r\n\t// Register this plugin.\r\n\t_Plugin.registry[\"toggleDir\"] = function(){\r\n\t\treturn new ToggleDir({command: \"toggleDir\"});\r\n\t};\r\n\r\n\treturn ToggleDir;\r\n});\r\n"]}