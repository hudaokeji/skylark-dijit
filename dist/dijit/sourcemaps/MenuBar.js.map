{"version":3,"sources":["MenuBar.js"],"names":["define","declare","keys","_MenuBase","template","templateString","baseClass","popupDelay","_isMenuBar","_orient","_moveToPopup","evt","this","focusedChild","popup","disabled","onItemClick","focusChild","item","inherited","arguments","activated","_openItemPopup","_onChildDeselect","currentPopupItem","_closePopup","_onLeftArrow","focusPrev","_onRightArrow","focusNext","_onDownArrow","_onUpArrow","isShowingNow","test","type","keyCode","DOWN_ARROW","focusNode","focus","_cleanUp"],"mappings":";;;;;;;AAAAA,QACC,qBACA,YACA,cACA,sCACE,SAASC,EAASC,EAAMC,EAAWC,GAKrC,OAAOH,EAAQ,gBAAiBE,GAI/BE,eAAgBD,EAEhBE,UAAW,eAGXC,WAAY,EAIZC,YAAY,EAGZC,SAAU,SAEVC,aAAc,SAAmBC,GAO7BC,KAAKC,cAAgBD,KAAKC,aAAaC,QAAUF,KAAKC,aAAaE,UACrEH,KAAKI,YAAYJ,KAAKC,aAAcF,IAItCM,WAAY,SAASC,GAGpBN,KAAKO,UAAUC,WACZR,KAAKS,WAAaH,EAAKJ,QAAUI,EAAKH,UACxCH,KAAKU,eAAeJ,GAAM,IAI5BK,iBAAkB,SAASL,GAGvBN,KAAKY,kBAAoBN,IAC3BN,KAAKY,iBAAmB,KACxBN,EAAKO,eAGNb,KAAKO,UAAUC,YAIhBM,aAAc,WACbd,KAAKe,aAENC,cAAe,WACdhB,KAAKiB,aAENC,aAAc,SAAmBnB,GAChCC,KAAKF,aAAaC,IAEnBoB,WAAY,aAGZf,YAAa,SAA+BE,EAAgBP,IAOxDO,EAAKJ,QAASI,EAAKJ,MAAMkB,cAAkB,OAAOC,KAAKtB,EAAIuB,OAASvB,EAAIwB,UAAYjC,EAAKkC,WAI3FxB,KAAKO,UAAUC,YAHfF,EAAKmB,UAAUC,QACf1B,KAAK2B,UAAS","file":"../MenuBar.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys.DOWN_ARROW\r\n\t\"./_MenuBase\",\r\n\t\"dojo/text!./templates/MenuBar.html\"\r\n], function(declare, keys, _MenuBase, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/MenuBar\r\n\r\n\treturn declare(\"dijit.MenuBar\", _MenuBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA menu bar, listing menu choices horizontally, like the \"File\" menu in most desktop applications\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitMenuBar\",\r\n\r\n\t\t// By default open popups for MenuBar instantly\r\n\t\tpopupDelay: 0,\r\n\r\n\t\t// _isMenuBar: [protected] Boolean\r\n\t\t//\t\tThis is a MenuBar widget, not a (vertical) Menu widget.\r\n\t\t_isMenuBar: true,\r\n\r\n\t\t// parameter to dijit.popup.open() about where to put popup (relative to this.domNode)\r\n\t\t_orient: [\"below\"],\r\n\r\n\t\t_moveToPopup: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis handles the down arrow key, opening a submenu if one exists.\r\n\t\t\t//\t\tUnlike _MenuBase._moveToPopup(), will never move to the next item in the MenuBar.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.focusedChild && this.focusedChild.popup && !this.focusedChild.disabled){\r\n\t\t\t\tthis.onItemClick(this.focusedChild, evt);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocusChild: function(item){\r\n\t\t\t// Overload focusChild so that whenever a new item is focused and the menu is active, open its submenu immediately.\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.activated && item.popup && !item.disabled){\r\n\t\t\t\tthis._openItemPopup(item, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onChildDeselect: function(item){\r\n\t\t\t// override _MenuBase._onChildDeselect() to close submenu immediately\r\n\r\n\t\t\tif(this.currentPopupItem == item){\r\n\t\t\t\tthis.currentPopupItem = null;\r\n\t\t\t\titem._closePopup(); // this calls onClose\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t// Arrow key navigation\r\n\t\t_onLeftArrow: function(){\r\n\t\t\tthis.focusPrev();\r\n\t\t},\r\n\t\t_onRightArrow: function(){\r\n\t\t\tthis.focusNext();\r\n\t\t},\r\n\t\t_onDownArrow: function(/*Event*/ evt){\r\n\t\t\tthis._moveToPopup(evt);\r\n\t\t},\r\n\t\t_onUpArrow: function(){\r\n\t\t},\r\n\r\n\t\tonItemClick: function(/*dijit/_WidgetBase*/ item, /*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandle clicks on an item.   Also called by _moveToPopup() due to a down-arrow key on the item.\r\n\t\t\t//\t\tCancels a dropdown if already open and click is either mouse or space/enter.\r\n\t\t\t//\t\tDon't close dropdown due to down arrow.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(item.popup && item.popup.isShowingNow && (!/^key/.test(evt.type) || evt.keyCode !== keys.DOWN_ARROW)){\r\n\t\t\t\titem.focusNode.focus();\r\n\t\t\t\tthis._cleanUp(true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}