{"version":3,"sources":["layout/ScrollingTabController.js"],"names":["define","array","declare","domClass","domGeometry","domStyle","fx","lang","on","query","has","registry","tabControllerTemplate","buttonTemplate","TabController","layoutUtils","_WidgetsInTemplateMixin","Menu","MenuItem","Button","_HasDropDown","ScrollingTabController","baseClass","templateString","useMenu","useSlider","tabStripClass","_minScroll","_setClassAttr","node","type","buildRendering","this","inherited","arguments","n","domNode","scrollNode","tablistWrapper","_initButtons","tabPosition","charAt","toUpperCase","substr","replace","add","onStartup","set","_postStartup","own","containerNode","hitch","evt","_dim","resize","onAddChild","page","insertIndex","get","onRemoveChild","button","pane2button","id","_selectedTab","_btnWidth","_buttons","filter","btn","_menuBtn","_rightBtn","_leftBtn","getMarginSize","w","_getTabsWidth","children","getChildren","length","leftTab","isLeftToRight","rightTab","offsetLeft","offsetWidth","_enableBtn","width","tabsWidth","dim","style","height","cb","_contentBox","marginBox2contentBox","h","offsetHeight","setContentSize","enable","region","layoutChildren","_anim","status","stop","scrollLeft","_convertToScrollLeft","_getScrollForSelectedTab","_setButtonClass","_getScroll","_postResize","val","maxScroll","onSelectChild","tab","sl","createSmoothScroll","play","_getScrollBounds","scrollNodeWidth","maxPossibleScroll","min","max","onlyScrollPosition","scrollBounds","pos","Math","x","self","anim","Animation","beforeBegin","curve","oldS","newS","_Line","onAnimate","_getBtnNode","e","target","contains","parentNode","doSlideRight","doSlide","doSlideLeft","direction","d","to","scroll","ScrollingTabControllerButtonMixin","tabIndex","isFocusable","containerId","isLoaded","loadDropDown","callback","dropDown","ownerDocument","dir","textDir","container","byId","forEach","menuItem","label","title","iconClass","disabled","onClick","selectChild","addChild","closeDropDown","focus","_popupStateNode","removeAttribute","destroyRecursive"],"mappings":";;;;;;;AAAAA,QACC,mBACA,qBACA,iBACA,oBACA,iBACA,gBACA,kBACA,UACA,aACA,aACA,cACA,oDACA,2DACA,kBACA,UACA,6BACA,UACA,cACA,iBACA,kBACA,oBACA,gBACE,SAASC,EAAOC,EAASC,EAAUC,EAAaC,EAAUC,EAAIC,EAAMC,EAAIC,EAAOC,EACjFC,EAAUC,EAAuBC,EAAgBC,EAAeC,EAAaC,EAC7EC,EAAMC,EAAUC,EAAQC,GAKxB,IAAIC,EAAyBnB,EAAQ,uCAAwCY,EAAeE,IAS3FM,UAAW,iDAEXC,eAAgBX,EAKhBY,SAAS,EAKTC,WAAW,EAIXC,cAAe,GAMfC,WAAY,EAGZC,eAAiBC,KAAM,gBAAiBC,KAAM,SAE9CC,eAAgB,WACfC,KAAKC,UAAUC,WACf,IAAIC,EAAIH,KAAKI,QAEbJ,KAAKK,WAAaL,KAAKM,eACvBN,KAAKO,eAEDP,KAAKN,gBACRM,KAAKN,cAAgB,oBACpBM,KAAKQ,YAAYC,OAAO,GAAGC,cAC3BV,KAAKQ,YAAYG,OAAO,GAAGC,QAAQ,MAAO,IAC1C,OACDzC,EAAS0C,IAAIV,EAAG,sBAGjBhC,EAAS0C,IAAIb,KAAKM,eAAgBN,KAAKN,gBAGxCoB,UAAW,WACVd,KAAKC,UAAUC,WAKf7B,EAAS0C,IAAIf,KAAKI,QAAS,aAAc,IACzCJ,KAAKgB,cAAe,EAIpBhB,KAAKiB,IAAIzC,EAAGwB,KAAKkB,cAAe,6CAA8C3C,EAAK4C,MAAMnB,KAAM,SAASoB,GACpGpB,KAAKqB,MACPrB,KAAKsB,OAAOtB,KAAKqB,WAKpBE,WAAY,SAASC,EAAMC,GAC1BzB,KAAKC,UAAUC,WAMf7B,EAAS0C,IAAIf,KAAKkB,cAAe,QAC/B7C,EAASqD,IAAI1B,KAAKkB,cAAe,SAAW,IAAO,OAGtDS,cAAe,SAASH,EAAMC,GAE7B,IAAIG,EAAS5B,KAAK6B,YAAYL,EAAKM,IAChC9B,KAAK+B,eAAiBH,EAAOxB,UAC/BJ,KAAK+B,aAAe,MAGrB/B,KAAKC,UAAUC,YAGhBK,aAAc,WAQbP,KAAKgC,UAAY,EACjBhC,KAAKiC,SAAWxD,EAAM,oBAAqBuB,KAAKI,SAAS8B,OAAO,SAASC,GACxE,OAAInC,KAAKR,SAAW2C,GAAOnC,KAAKoC,SAAShC,SACvCJ,KAAKP,YAAc0C,GAAOnC,KAAKqC,UAAUjC,SAAW+B,GAAOnC,KAAKsC,SAASlC,UAC1EJ,KAAKgC,WAAa5D,EAAYmE,cAAcJ,GAAKK,GAC1C,IAEPnE,EAAS0C,IAAIoB,EAAK,UAAW,SACtB,IAENnC,OAGJyC,cAAe,WACd,IAAIC,EAAW1C,KAAK2C,cACpB,GAAGD,EAASE,OAAO,CAClB,IAAIC,EAAUH,EAAS1C,KAAK8C,gBAAkB,EAAIJ,EAASE,OAAS,GAAGxC,QACtE2C,EAAWL,EAAS1C,KAAK8C,gBAAkBJ,EAASE,OAAS,EAAI,GAAGxC,QACrE,OAAO2C,EAASC,WAAaD,EAASE,YAAcJ,EAAQG,WAE5D,OAAO,GAITE,WAAY,SAASC,GAIpB,IAAIC,EAAYpD,KAAKyC,gBAErB,OADAU,EAAQA,GAAS9E,EAASqD,IAAI1B,KAAKK,WAAY,SACxC+C,EAAY,GAAKD,EAAQC,GAGjC9B,OAAQ,SAAS+B,GAMhBrD,KAAKqB,KAAOgC,EAMZrD,KAAKK,WAAWiD,MAAMC,OAAS,OAC/B,IAAIC,EAAKxD,KAAKyD,YAAc1E,EAAY2E,qBAAqB1D,KAAKI,SAAUuD,EAAG,EAAGnB,EAAGa,EAAIb,IACzFgB,EAAGG,EAAI3D,KAAKK,WAAWuD,aACvBxF,EAAYyF,eAAe7D,KAAKI,QAASoD,GAIzC,IAAIM,EAAS9D,KAAKkD,WAAWlD,KAAKyD,YAAYjB,GAyB9C,OAxBAxC,KAAKiC,SAASqB,MAAM,UAAWQ,EAAS,GAAK,QAG7C9D,KAAKsC,SAASyB,OAAS,OACvB/D,KAAKqC,UAAU0B,OAAS,QACxB/D,KAAKoC,SAAS2B,OAAS/D,KAAK8C,gBAAkB,QAAU,OACxD/D,EAAYiF,eAAehE,KAAKI,QAASJ,KAAKyD,aAC5CzD,KAAKoC,SAAUpC,KAAKsC,SAAUtC,KAAKqC,WAAYjC,QAASJ,KAAKK,WAAY0D,OAAQ,YAGhF/D,KAAK+B,eACJ/B,KAAKiE,OAAgC,WAAvBjE,KAAKiE,MAAMC,UAC3BlE,KAAKiE,MAAME,OAEZnE,KAAKK,WAAW+D,WAAapE,KAAKqE,qBAAqBrE,KAAKsE,6BAI7DtE,KAAKuE,gBAAgBvE,KAAKwE,cAE1BxE,KAAKyE,aAAc,GAIXd,EAAG3D,KAAKyD,YAAYE,EAAGnB,EAAGa,EAAIb,IAGvCgC,WAAY,WAKX,OAAQxE,KAAK8C,iBAAmBpE,EAAI,MAAQ,GAAMA,EAAI,OAASA,EAAI,WAAcA,EAAI,UAAasB,KAAKK,WAAW+D,WACjH/F,EAASqD,IAAI1B,KAAKkB,cAAe,SAAW7C,EAASqD,IAAI1B,KAAKK,WAAY,UACtE3B,EAAI,OAAS,GAAK,EAAI,GAAKsB,KAAKK,WAAW+D,YAGjDC,qBAAsB,SAASK,GAQ9B,GAAG1E,KAAK8C,iBAAmBpE,EAAI,MAAQ,GAAMA,EAAI,OAASA,EAAI,WAAcA,EAAI,UAC/E,OAAOgG,EAEP,IAAIC,EAAYtG,EAASqD,IAAI1B,KAAKkB,cAAe,SAAW7C,EAASqD,IAAI1B,KAAKK,WAAY,SAC1F,OAAQ3B,EAAI,OAAS,GAAK,EAAI,IAAMgG,EAAMC,IAI5CC,cAAe,SAA+BpD,GAI7C,IAAIqD,EAAM7E,KAAK6B,YAAYL,EAAKM,IAChC,GAAI+C,EAAJ,CAIA,IAAIhF,EAAOgF,EAAIzE,QAGf,GAAGP,GAAQG,KAAK+B,eACf/B,KAAK+B,aAAelC,EAGjBG,KAAKyE,aAAY,CACnB,IAAIK,EAAK9E,KAAKwE,cAEXM,EAAKjF,EAAKmD,YACZ8B,EAAKzG,EAASqD,IAAI1B,KAAKK,WAAY,SAClCR,EAAKmD,WAAa3E,EAASqD,IAAI7B,EAAM,WACtCG,KAAK+E,qBAAqBC,OAK7BhF,KAAKC,UAAUC,aAGhB+E,iBAAkB,WAIjB,IAAIvC,EAAW1C,KAAK2C,cACnBuC,EAAkB7G,EAASqD,IAAI1B,KAAKK,WAAY,SAEhD8E,EADiB9G,EAASqD,IAAI1B,KAAKkB,cAAe,SACbgE,EACrC9B,EAAYpD,KAAKyC,gBAElB,GAAGC,EAASE,QAAUQ,EAAY8B,EAEjC,OACCE,IAAKpF,KAAK8C,gBAAkB,EAAIJ,EAASA,EAASE,OAAS,GAAGxC,QAAQ4C,WACtEqC,IAAKrF,KAAK8C,gBACRJ,EAASA,EAASE,OAAS,GAAGxC,QAAQ4C,WAAaN,EAASA,EAASE,OAAS,GAAGxC,QAAQ6C,YAAeiC,EACzGC,GAIF,IAAIG,EAAqBtF,KAAK8C,gBAAkB,EAAIqC,EACpD,OACCC,IAAKE,EACLD,IAAKC,IAKRhB,yBAA0B,WAIjBtE,KAAKK,WAAb,IACCF,EAAIH,KAAK+B,aACTmD,EAAkB7G,EAASqD,IAAI1B,KAAKK,WAAY,SAChDkF,EAAevF,KAAKiF,mBAIjBO,EAAOrF,EAAE6C,WAAa3E,EAASqD,IAAIvB,EAAG,SAAW,EAAK+E,EAAkB,EAO5E,OANAM,EAAMC,KAAKL,IAAIK,KAAKJ,IAAIG,EAAKD,EAAaH,KAAMG,EAAaF,MAS9DN,mBAAoB,SAASW,GAY5B,GAAGxF,UAAU0C,OAAS,EAAE,CAEvB,IAAI2C,EAAevF,KAAKiF,mBACxBS,EAAID,KAAKL,IAAIK,KAAKJ,IAAIK,EAAGH,EAAaH,KAAMG,EAAaF,UAGzDK,EAAI1F,KAAKsE,2BAGPtE,KAAKiE,OAAgC,WAAvBjE,KAAKiE,MAAMC,UAC3BlE,KAAKiE,MAAME,OAGZ,IAAIwB,EAAO3F,KACVwC,EAAIxC,KAAKK,WACTuF,EAAO,IAAItH,EAAGuH,WACbC,YAAa,WACT9F,KAAK+F,cACA/F,KAAK+F,MAEb,IAAIC,EAAOxD,EAAE4B,WACZ6B,EAAON,EAAKtB,qBAAqBqB,GAClCE,EAAKG,MAAQ,IAAIzH,EAAG4H,MAAMF,EAAMC,IAEjCE,UAAW,SAASzB,GACnBlC,EAAE4B,WAAaM,KAQlB,OALA1E,KAAKiE,MAAQ2B,EAGb5F,KAAKuE,gBAAgBmB,GAEdE,GAGRQ,YAAa,SAAmBC,GAM/B,IADA,IAAIlG,EAAIkG,EAAEC,OACJnG,IAAMhC,EAASoI,SAASpG,EAAG,mBAChCA,EAAIA,EAAEqG,WAEP,OAAOrG,GAGRsG,aAAc,SAAmBJ,GAKhCrG,KAAK0G,QAAQ,EAAG1G,KAAKoG,YAAYC,KAGlCM,YAAa,SAAmBN,GAK/BrG,KAAK0G,SAAS,EAAG1G,KAAKoG,YAAYC,KAGnCK,QAAS,SAAoBE,EAAuB/G,GAOnD,IAAGA,IAAQ1B,EAASoI,SAAS1G,EAAM,oBAAnC,CAIA,IACIgH,EAAc,IADLxI,EAASqD,IAAI1B,KAAKK,WAAY,SACjBuG,EAEtBE,EAAK9G,KAAKwE,aAAeqC,EAE7B7G,KAAKuE,gBAAgBuC,GAErB9G,KAAK+E,mBAAmB+B,GAAI9B,SAG7BT,gBAAiB,SAAoBwC,GAOpC,IAAIxB,EAAevF,KAAKiF,mBACxBjF,KAAKsC,SAASvB,IAAI,WAAYgG,GAAUxB,EAAaH,KACrDpF,KAAKqC,UAAUtB,IAAI,WAAYgG,GAAUxB,EAAaF,QAKpD2B,EAAoC9I,EAAQ,kDAAmD,MAClGoB,UAAW,0BAEXC,eAAgBV,EAIhBoI,SAAU,GAIVC,YAAa,WACZ,OAAO,KA2DT,OAtDAhJ,EAAQ,8CAA+CiB,EAAQ6H,IAG/D9I,EAAQ,kDAAmDiB,EAAQC,EAAc4H,IAEhFG,YAAa,GAIbF,SAAU,KAEVG,SAAU,WAET,OAAO,GAGRC,aAAc,SAASC,GACtBtH,KAAKuH,SAAW,IAAItI,GACnB6C,GAAI9B,KAAKmH,YAAc,QACvBK,cAAexH,KAAKwH,cACpBC,IAAKzH,KAAKyH,IACVlJ,KAAMyB,KAAKzB,KACXmJ,QAAS1H,KAAK0H,UAEf,IAAIC,EAAYhJ,EAASiJ,KAAK5H,KAAKmH,aACnClJ,EAAM4J,QAAQF,EAAUhF,cAAe,SAASnB,GAC/C,IAAIsG,EAAW,IAAI5I,GAClB4C,GAAIN,EAAKM,GAAK,SACdiG,MAAOvG,EAAKwG,MACZC,UAAWzG,EAAKyG,UAChBC,SAAU1G,EAAK0G,SACfV,cAAexH,KAAKwH,cACpBC,IAAKjG,EAAKiG,IACVlJ,KAAMiD,EAAKjD,KACXmJ,QAASlG,EAAKkG,SAAWC,EAAUD,QACnCS,QAAS,WACRR,EAAUS,YAAY5G,MAGxBxB,KAAKuH,SAASc,SAASP,IACrB9H,MACHsH,KAGDgB,cAAe,SAAqBC,GACnCvI,KAAKC,UAAUC,WACZF,KAAKuH,WACPvH,KAAKwI,gBAAgBC,gBAAgB,aACrCzI,KAAKuH,SAASmB,0BACP1I,KAAKuH,aAKRlI","file":"../../layout/ScrollingTabController.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains\r\n\t\"dojo/dom-geometry\", // domGeometry.contentBox\r\n\t\"dojo/dom-style\", // domStyle.style\r\n\t\"dojo/_base/fx\", // Animation\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/query\", // query\r\n\t\"dojo/sniff\", // has(\"ie\"), has(\"webkit\"), has(\"quirks\")\r\n\t\"../registry\", // registry.byId()\r\n\t\"dojo/text!./templates/ScrollingTabController.html\",\r\n\t\"dojo/text!./templates/_ScrollingTabControllerButton.html\",\r\n\t\"./TabController\",\r\n\t\"./utils\", // marginBox2contextBox, layoutChildren\r\n\t\"../_WidgetsInTemplateMixin\",\r\n\t\"../Menu\",\r\n\t\"../MenuItem\",\r\n\t\"../form/Button\",\r\n\t\"../_HasDropDown\",\r\n\t\"dojo/NodeList-dom\", // NodeList.style\r\n\t\"../a11yclick\"\t// template uses ondijitclick (not for keyboard support, but for responsive touch support)\r\n], function(array, declare, domClass, domGeometry, domStyle, fx, lang, on, query, has,\r\n\tregistry, tabControllerTemplate, buttonTemplate, TabController, layoutUtils, _WidgetsInTemplateMixin,\r\n\tMenu, MenuItem, Button, _HasDropDown){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/ScrollingTabController\r\n\r\n\tvar ScrollingTabController = declare(\"dijit.layout.ScrollingTabController\", [TabController, _WidgetsInTemplateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tSet of tabs with left/right arrow keys and a menu to switch between tabs not\r\n\t\t//\t\tall fitting on a single row.\r\n\t\t//\t\tWorks only for horizontal tabs (either above or below the content, not to the left\r\n\t\t//\t\tor right).\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tbaseClass: \"dijitTabController dijitScrollingTabController\",\r\n\r\n\t\ttemplateString: tabControllerTemplate,\r\n\r\n\t\t// useMenu: [const] Boolean\r\n\t\t//\t\tTrue if a menu should be used to select tabs when they are too\r\n\t\t//\t\twide to fit the TabContainer, false otherwise.\r\n\t\tuseMenu: true,\r\n\r\n\t\t// useSlider: [const] Boolean\r\n\t\t//\t\tTrue if a slider should be used to select tabs when they are too\r\n\t\t//\t\twide to fit the TabContainer, false otherwise.\r\n\t\tuseSlider: true,\r\n\r\n\t\t// tabStripClass: [const] String\r\n\t\t//\t\tThe css class to apply to the tab strip, if it is visible.\r\n\t\ttabStripClass: \"\",\r\n\r\n\t\t// _minScroll: Number\r\n\t\t//\t\tThe distance in pixels from the edge of the tab strip which,\r\n\t\t//\t\tif a scroll animation is less than, forces the scroll to\r\n\t\t//\t\tgo all the way to the left/right.\r\n\t\t_minScroll: 5,\r\n\r\n\t\t// Override default behavior mapping class to DOMNode\r\n\t\t_setClassAttr: { node: \"containerNode\", type: \"class\" },\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar n = this.domNode;\r\n\r\n\t\t\tthis.scrollNode = this.tablistWrapper;\r\n\t\t\tthis._initButtons();\r\n\r\n\t\t\tif(!this.tabStripClass){\r\n\t\t\t\tthis.tabStripClass = \"dijitTabContainer\" +\r\n\t\t\t\t\tthis.tabPosition.charAt(0).toUpperCase() +\r\n\t\t\t\t\tthis.tabPosition.substr(1).replace(/-.*/, \"\") +\r\n\t\t\t\t\t\"None\";\r\n\t\t\t\tdomClass.add(n, \"tabStrip-disabled\")\r\n\t\t\t}\r\n\r\n\t\t\tdomClass.add(this.tablistWrapper, this.tabStripClass);\r\n\t\t},\r\n\r\n\t\tonStartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// TabController is hidden until it finishes drawing, to give\r\n\t\t\t// a less visually jumpy instantiation.   When it's finished, set visibility to \"\"\r\n\t\t\t// to that the tabs are hidden/shown depending on the container's visibility setting.\r\n\t\t\tdomStyle.set(this.domNode, \"visibility\", \"\");\r\n\t\t\tthis._postStartup = true;\r\n\r\n\t\t\t// changes to the tab button label or iconClass will have changed the width of the\r\n\t\t\t// buttons, so do a resize\r\n\t\t\tthis.own(on(this.containerNode, \"attrmodified-label, attrmodified-iconclass\", lang.hitch(this, function(evt){\r\n\t\t\t\tif(this._dim){\r\n\t\t\t\t\tthis.resize(this._dim);\r\n\t\t\t\t}\r\n\t\t\t})));\r\n\t\t},\r\n\r\n\t\tonAddChild: function(page, insertIndex){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Increment the width of the wrapper when a tab is added\r\n\t\t\t// This makes sure that the buttons never wrap.\r\n\t\t\t// The value 200 is chosen as it should be bigger than most\r\n\t\t\t// Tab button widths.\r\n\t\t\tdomStyle.set(this.containerNode, \"width\",\r\n\t\t\t\t(domStyle.get(this.containerNode, \"width\") + 200) + \"px\");\r\n\t\t},\r\n\r\n\t\tonRemoveChild: function(page, insertIndex){\r\n\t\t\t// null out _selectedTab because we are about to delete that dom node\r\n\t\t\tvar button = this.pane2button(page.id);\r\n\t\t\tif(this._selectedTab === button.domNode){\r\n\t\t\t\tthis._selectedTab = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_initButtons: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the buttons used to scroll to view tabs that\r\n\t\t\t//\t\tmay not be visible if the TabContainer is too narrow.\r\n\r\n\t\t\t// Make a list of the buttons to display when the tab labels become\r\n\t\t\t// wider than the TabContainer, and hide the other buttons.\r\n\t\t\t// Also gets the total width of the displayed buttons.\r\n\t\t\tthis._btnWidth = 0;\r\n\t\t\tthis._buttons = query(\"> .tabStripButton\", this.domNode).filter(function(btn){\r\n\t\t\t\tif((this.useMenu && btn == this._menuBtn.domNode) ||\r\n\t\t\t\t\t(this.useSlider && (btn == this._rightBtn.domNode || btn == this._leftBtn.domNode))){\r\n\t\t\t\t\tthis._btnWidth += domGeometry.getMarginSize(btn).w;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomStyle.set(btn, \"display\", \"none\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_getTabsWidth: function(){\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tif(children.length){\r\n\t\t\t\tvar leftTab = children[this.isLeftToRight() ? 0 : children.length - 1].domNode,\r\n\t\t\t\t\trightTab = children[this.isLeftToRight() ? children.length - 1 : 0].domNode;\r\n\t\t\t\treturn rightTab.offsetLeft + rightTab.offsetWidth - leftTab.offsetLeft;\r\n\t\t\t}else{\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_enableBtn: function(width){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetermines if the tabs are wider than the width of the TabContainer, and\r\n\t\t\t//\t\tthus that we need to display left/right/menu navigation buttons.\r\n\t\t\tvar tabsWidth = this._getTabsWidth();\r\n\t\t\twidth = width || domStyle.get(this.scrollNode, \"width\");\r\n\t\t\treturn tabsWidth > 0 && width < tabsWidth;\r\n\t\t},\r\n\r\n\t\tresize: function(dim){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHides or displays the buttons used to scroll the tab list and launch the menu\r\n\t\t\t//\t\tthat selects tabs.\r\n\r\n\t\t\t// Save the dimensions to be used when a child is renamed.\r\n\t\t\tthis._dim = dim;\r\n\r\n\t\t\t// Set my height to be my natural height (tall enough for one row of tab labels),\r\n\t\t\t// and my content-box width based on margin-box width specified in dim parameter.\r\n\t\t\t// But first reset scrollNode.height in case it was set by layoutChildren() call\r\n\t\t\t// in a previous run of this method.\r\n\t\t\tthis.scrollNode.style.height = \"auto\";\r\n\t\t\tvar cb = this._contentBox = layoutUtils.marginBox2contentBox(this.domNode, {h: 0, w: dim.w});\r\n\t\t\tcb.h = this.scrollNode.offsetHeight;\r\n\t\t\tdomGeometry.setContentSize(this.domNode, cb);\r\n\r\n\t\t\t// Show/hide the left/right/menu navigation buttons depending on whether or not they\r\n\t\t\t// are needed.\r\n\t\t\tvar enable = this._enableBtn(this._contentBox.w);\r\n\t\t\tthis._buttons.style(\"display\", enable ? \"\" : \"none\");\r\n\r\n\t\t\t// Position and size the navigation buttons and the tablist\r\n\t\t\tthis._leftBtn.region = \"left\";\r\n\t\t\tthis._rightBtn.region = \"right\";\r\n\t\t\tthis._menuBtn.region = this.isLeftToRight() ? \"right\" : \"left\";\r\n\t\t\tlayoutUtils.layoutChildren(this.domNode, this._contentBox,\r\n\t\t\t\t[this._menuBtn, this._leftBtn, this._rightBtn, {domNode: this.scrollNode, region: \"center\"}]);\r\n\r\n\t\t\t// set proper scroll so that selected tab is visible\r\n\t\t\tif(this._selectedTab){\r\n\t\t\t\tif(this._anim && this._anim.status() == \"playing\"){\r\n\t\t\t\t\tthis._anim.stop();\r\n\t\t\t\t}\r\n\t\t\t\tthis.scrollNode.scrollLeft = this._convertToScrollLeft(this._getScrollForSelectedTab());\r\n\t\t\t}\r\n\r\n\t\t\t// Enable/disabled left right buttons depending on whether or not user can scroll to left or right\r\n\t\t\tthis._setButtonClass(this._getScroll());\r\n\r\n\t\t\tthis._postResize = true;\r\n\r\n\t\t\t// Return my size so layoutChildren() can use it.\r\n\t\t\t// Also avoids IE9 layout glitch on browser resize when scroll buttons present\r\n\t\t\treturn {h: this._contentBox.h, w: dim.w};\r\n\t\t},\r\n\r\n\t\t_getScroll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the current scroll of the tabs where 0 means\r\n\t\t\t//\t\t\"scrolled all the way to the left\" and some positive number, based on #\r\n\t\t\t//\t\tof pixels of possible scroll (ex: 1000) means \"scrolled all the way to the right\"\r\n\t\t\treturn (this.isLeftToRight() || has(\"ie\") < 8 || (has(\"ie\") && has(\"quirks\")) || has(\"webkit\")) ? this.scrollNode.scrollLeft :\r\n\t\t\t\tdomStyle.get(this.containerNode, \"width\") - domStyle.get(this.scrollNode, \"width\")\r\n\t\t\t\t\t+ (has(\"ie\") >= 8 ? -1 : 1) * this.scrollNode.scrollLeft;\r\n\t\t},\r\n\r\n\t\t_convertToScrollLeft: function(val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGiven a scroll value where 0 means \"scrolled all the way to the left\"\r\n\t\t\t//\t\tand some positive number, based on # of pixels of possible scroll (ex: 1000)\r\n\t\t\t//\t\tmeans \"scrolled all the way to the right\", return value to set this.scrollNode.scrollLeft\r\n\t\t\t//\t\tto achieve that scroll.\r\n\t\t\t//\r\n\t\t\t//\t\tThis method is to adjust for RTL funniness in various browsers and versions.\r\n\t\t\tif(this.isLeftToRight() || has(\"ie\") < 8 || (has(\"ie\") && has(\"quirks\")) || has(\"webkit\")){\r\n\t\t\t\treturn val;\r\n\t\t\t}else{\r\n\t\t\t\tvar maxScroll = domStyle.get(this.containerNode, \"width\") - domStyle.get(this.scrollNode, \"width\");\r\n\t\t\t\treturn (has(\"ie\") >= 8 ? -1 : 1) * (val - maxScroll);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonSelectChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSmoothly scrolls to a tab when it is selected.\r\n\r\n\t\t\tvar tab = this.pane2button(page.id);\r\n\t\t\tif(!tab){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar node = tab.domNode;\r\n\r\n\t\t\t// Save the selection\r\n\t\t\tif(node != this._selectedTab){\r\n\t\t\t\tthis._selectedTab = node;\r\n\r\n\t\t\t\t// Scroll to the selected tab, except on startup, when scrolling is handled in resize()\r\n\t\t\t\tif(this._postResize){\r\n\t\t\t\t\tvar sl = this._getScroll();\r\n\r\n\t\t\t\t\tif(sl > node.offsetLeft ||\r\n\t\t\t\t\t\tsl + domStyle.get(this.scrollNode, \"width\") <\r\n\t\t\t\t\t\t\tnode.offsetLeft + domStyle.get(node, \"width\")){\r\n\t\t\t\t\t\tthis.createSmoothScroll().play();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_getScrollBounds: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the minimum and maximum scroll setting to show the leftmost and rightmost\r\n\t\t\t//\t\ttabs (respectively)\r\n\t\t\tvar children = this.getChildren(),\r\n\t\t\t\tscrollNodeWidth = domStyle.get(this.scrollNode, \"width\"), // about 500px\r\n\t\t\t\tcontainerWidth = domStyle.get(this.containerNode, \"width\"), // 50,000px\r\n\t\t\t\tmaxPossibleScroll = containerWidth - scrollNodeWidth, // scrolling until right edge of containerNode visible\r\n\t\t\t\ttabsWidth = this._getTabsWidth();\r\n\r\n\t\t\tif(children.length && tabsWidth > scrollNodeWidth){\r\n\t\t\t\t// Scrolling should happen\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmin: this.isLeftToRight() ? 0 : children[children.length - 1].domNode.offsetLeft,\r\n\t\t\t\t\tmax: this.isLeftToRight() ?\r\n\t\t\t\t\t\t(children[children.length - 1].domNode.offsetLeft + children[children.length - 1].domNode.offsetWidth) - scrollNodeWidth :\r\n\t\t\t\t\t\tmaxPossibleScroll\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\t// No scrolling needed, all tabs visible, we stay either scrolled to far left or far right (depending on dir)\r\n\t\t\t\tvar onlyScrollPosition = this.isLeftToRight() ? 0 : maxPossibleScroll;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmin: onlyScrollPosition,\r\n\t\t\t\t\tmax: onlyScrollPosition\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getScrollForSelectedTab: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the scroll value setting so that the selected tab\r\n\t\t\t//\t\twill appear in the center\r\n\t\t\tvar w = this.scrollNode,\r\n\t\t\t\tn = this._selectedTab,\r\n\t\t\t\tscrollNodeWidth = domStyle.get(this.scrollNode, \"width\"),\r\n\t\t\t\tscrollBounds = this._getScrollBounds();\r\n\r\n\t\t\t// TODO: scroll minimal amount (to either right or left) so that\r\n\t\t\t// selected tab is fully visible, and just return if it's already visible?\r\n\t\t\tvar pos = (n.offsetLeft + domStyle.get(n, \"width\") / 2) - scrollNodeWidth / 2;\r\n\t\t\tpos = Math.min(Math.max(pos, scrollBounds.min), scrollBounds.max);\r\n\r\n\t\t\t// TODO:\r\n\t\t\t// If scrolling close to the left side or right side, scroll\r\n\t\t\t// all the way to the left or right.  See this._minScroll.\r\n\t\t\t// (But need to make sure that doesn't scroll the tab out of view...)\r\n\t\t\treturn pos;\r\n\t\t},\r\n\r\n\t\tcreateSmoothScroll: function(x){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a dojo._Animation object that smoothly scrolls the tab list\r\n\t\t\t//\t\teither to a fixed horizontal pixel value, or to the selected tab.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf an number argument is passed to the function, that horizontal\r\n\t\t\t//\t\tpixel position is scrolled to.  Otherwise the currently selected\r\n\t\t\t//\t\ttab is scrolled to.\r\n\t\t\t// x: Integer?\r\n\t\t\t//\t\tAn optional pixel value to scroll to, indicating distance from left.\r\n\r\n\t\t\t// Calculate position to scroll to\r\n\t\t\tif(arguments.length > 0){\r\n\t\t\t\t// position specified by caller, just make sure it's within bounds\r\n\t\t\t\tvar scrollBounds = this._getScrollBounds();\r\n\t\t\t\tx = Math.min(Math.max(x, scrollBounds.min), scrollBounds.max);\r\n\t\t\t}else{\r\n\t\t\t\t// scroll to center the current tab\r\n\t\t\t\tx = this._getScrollForSelectedTab();\r\n\t\t\t}\r\n\r\n\t\t\tif(this._anim && this._anim.status() == \"playing\"){\r\n\t\t\t\tthis._anim.stop();\r\n\t\t\t}\r\n\r\n\t\t\tvar self = this,\r\n\t\t\t\tw = this.scrollNode,\r\n\t\t\t\tanim = new fx.Animation({\r\n\t\t\t\t\tbeforeBegin: function(){\r\n\t\t\t\t\t\tif(this.curve){\r\n\t\t\t\t\t\t\tdelete this.curve;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar oldS = w.scrollLeft,\r\n\t\t\t\t\t\t\tnewS = self._convertToScrollLeft(x);\r\n\t\t\t\t\t\tanim.curve = new fx._Line(oldS, newS);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonAnimate: function(val){\r\n\t\t\t\t\t\tw.scrollLeft = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\tthis._anim = anim;\r\n\r\n\t\t\t// Disable/enable left/right buttons according to new scroll position\r\n\t\t\tthis._setButtonClass(x);\r\n\r\n\t\t\treturn anim; // dojo/_base/fx/Animation\r\n\t\t},\r\n\r\n\t\t_getBtnNode: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets a button DOM node from a mouse click event.\r\n\t\t\t// e:\r\n\t\t\t//\t\tThe mouse click event.\r\n\t\t\tvar n = e.target;\r\n\t\t\twhile(n && !domClass.contains(n, \"tabStripButton\")){\r\n\t\t\t\tn = n.parentNode;\r\n\t\t\t}\r\n\t\t\treturn n;\r\n\t\t},\r\n\r\n\t\tdoSlideRight: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScrolls the menu to the right.\r\n\t\t\t// e:\r\n\t\t\t//\t\tThe mouse click event.\r\n\t\t\tthis.doSlide(1, this._getBtnNode(e));\r\n\t\t},\r\n\r\n\t\tdoSlideLeft: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScrolls the menu to the left.\r\n\t\t\t// e:\r\n\t\t\t//\t\tThe mouse click event.\r\n\t\t\tthis.doSlide(-1, this._getBtnNode(e));\r\n\t\t},\r\n\r\n\t\tdoSlide: function(/*Number*/ direction, /*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScrolls the tab list to the left or right by 75% of the widget width.\r\n\t\t\t// direction:\r\n\t\t\t//\t\tIf the direction is 1, the widget scrolls to the right, if it is -1,\r\n\t\t\t//\t\tit scrolls to the left.\r\n\r\n\t\t\tif(node && domClass.contains(node, \"dijitTabDisabled\")){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sWidth = domStyle.get(this.scrollNode, \"width\");\r\n\t\t\tvar d = (sWidth * 0.75) * direction;\r\n\r\n\t\t\tvar to = this._getScroll() + d;\r\n\r\n\t\t\tthis._setButtonClass(to);\r\n\r\n\t\t\tthis.createSmoothScroll(to).play();\r\n\t\t},\r\n\r\n\t\t_setButtonClass: function(/*Number*/ scroll){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisables the left scroll button if the tabs are scrolled all the way to the left,\r\n\t\t\t//\t\tor the right scroll button in the opposite case.\r\n\t\t\t// scroll: Integer\r\n\t\t\t//\t\tamount of horizontal scroll\r\n\r\n\t\t\tvar scrollBounds = this._getScrollBounds();\r\n\t\t\tthis._leftBtn.set(\"disabled\", scroll <= scrollBounds.min);\r\n\t\t\tthis._rightBtn.set(\"disabled\", scroll >= scrollBounds.max);\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tvar ScrollingTabControllerButtonMixin = declare(\"dijit.layout._ScrollingTabControllerButtonMixin\", null, {\r\n\t\tbaseClass: \"dijitTab tabStripButton\",\r\n\r\n\t\ttemplateString: buttonTemplate,\r\n\r\n\t\t// Override inherited tabIndex: 0 from dijit/form/Button, because user shouldn't be\r\n\t\t// able to tab to the left/right/menu buttons\r\n\t\ttabIndex: \"\",\r\n\r\n\t\t// Similarly, override FormWidget.isFocusable() because clicking a button shouldn't focus it\r\n\t\t// either (this override avoids focus() call in FormWidget.js)\r\n\t\tisFocusable: function(){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n\r\n\t// Class used in template\r\n\tdeclare(\"dijit.layout._ScrollingTabControllerButton\", [Button, ScrollingTabControllerButtonMixin]);\r\n\r\n\t// Class used in template\r\n\tdeclare(\"dijit.layout._ScrollingTabControllerMenuButton\", [Button, _HasDropDown, ScrollingTabControllerButtonMixin], {\r\n\t\t// id of the TabContainer itself\r\n\t\tcontainerId: \"\",\r\n\r\n\t\t// -1 so user can't tab into the button, but so that button can still be focused programatically.\r\n\t\t// Because need to move focus to the button (or somewhere) before the menu is hidden or IE6 will crash.\r\n\t\ttabIndex: \"-1\",\r\n\r\n\t\tisLoaded: function(){\r\n\t\t\t// recreate menu every time, in case the TabContainer's list of children (or their icons/labels) have changed\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tloadDropDown: function(callback){\r\n\t\t\tthis.dropDown = new Menu({\r\n\t\t\t\tid: this.containerId + \"_menu\",\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir\r\n\t\t\t});\r\n\t\t\tvar container = registry.byId(this.containerId);\r\n\t\t\tarray.forEach(container.getChildren(), function(page){\r\n\t\t\t\tvar menuItem = new MenuItem({\r\n\t\t\t\t\tid: page.id + \"_stcMi\",\r\n\t\t\t\t\tlabel: page.title,\r\n\t\t\t\t\ticonClass: page.iconClass,\r\n\t\t\t\t\tdisabled: page.disabled,\r\n\t\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\t\tdir: page.dir,\r\n\t\t\t\t\tlang: page.lang,\r\n\t\t\t\t\ttextDir: page.textDir || container.textDir,\r\n\t\t\t\t\tonClick: function(){\r\n\t\t\t\t\t\tcontainer.selectChild(page);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.dropDown.addChild(menuItem);\r\n\t\t\t}, this);\r\n\t\t\tcallback();\r\n\t\t},\r\n\r\n\t\tcloseDropDown: function(/*Boolean*/ focus){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\tthis._popupStateNode.removeAttribute(\"aria-owns\");\t// remove ref to node that we are about to delete\r\n\t\t\t\tthis.dropDown.destroyRecursive();\r\n\t\t\t\tdelete this.dropDown;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn ScrollingTabController;\r\n});\r\n"]}