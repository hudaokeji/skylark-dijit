{"version":3,"sources":["layout/StackController.js"],"names":["define","array","declare","domClass","domConstruct","keys","lang","on","topic","focus","registry","_Widget","_TemplatedMixin","_Container","ToggleButton","StackButton","tabIndex","closeButton","_aria_attr","buildRendering","evt","this","inherited","arguments","focusNode","domNode","setAttribute","StackController","baseClass","templateString","containerId","buttonWidget","buttonWidgetCloseClass","pane2button","id","byId","postCreate","own","subscribe","hitch","containerNode","dojoClick","button","getEnclosingWidget","target","disabled","page","parentNode","contains","onCloseButtonClick","onButtonClick","onStartup","info","textDir","forEach","children","onAddChild","selected","onSelectChild","paneToButtonAttr","title","showtitle","iconclass","closable","tooltip","textdir","connectFunc","attr","buttonAttr","detail","widget","set","newValue","destroy","preserveDom","destroyDescendants","insertIndex","isString","getObject","name","label","ownerDocument","dir","showLabel","showTitle","iconClass","addChild","controlButton","_currentChild","labelledby","_wrapper","getAttribute","removeAttribute","onRemoveChild","removeChild","oldButton","newButton","selectChild","closeChild","b","adjacent","forward","isLeftToRight","tabPosition","test","child","getChildren","idx","indexOf","current","length","onkeydown","e","fromContainer","altKey","ctrlKey","_djpage","keyCode","LEFT_ARROW","UP_ARROW","PAGE_UP","RIGHT_ARROW","DOWN_ARROW","PAGE_DOWN","HOME","stopPropagation","preventDefault","END","DELETE","charCodeAt","TAB","shiftKey","onContainerKeyDown"],"mappings":"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","file":"../../layout/StackController.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/on\",\r\n\t\"dojo/topic\",\r\n\t\"../focus\", // focus.focus()\r\n\t\"../registry\", // registry.byId\r\n\t\"../_Widget\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"../_Container\",\r\n\t\"../form/ToggleButton\",\r\n\t\"dojo/touch\"\t// for normalized click handling, see dojoClick property setting in postCreate()\r\n], function(array, declare, domClass, domConstruct, keys, lang, on, topic,\r\n\t\t\tfocus, registry, _Widget, _TemplatedMixin,_Container, ToggleButton){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/StackController\r\n\r\n\tvar StackButton = declare(\"dijit.layout._StackButton\", ToggleButton, {\r\n\t\t// summary:\r\n\t\t//\t\tInternal widget used by StackContainer.\r\n\t\t// description:\r\n\t\t//\t\tThe button-like or tab-like object you click to select or delete a page\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// Override _FormWidget.tabIndex.\r\n\t\t// StackContainer buttons are not in the tab order by default.\r\n\t\t// Probably we should be calling this.startupKeyNavChildren() instead.\r\n\t\ttabIndex: \"-1\",\r\n\r\n\t\t// closeButton: Boolean\r\n\t\t//\t\tWhen true, display close button for this tab\r\n\t\tcloseButton: false,\r\n\r\n\t\t_aria_attr: \"aria-selected\",\r\n\r\n\t\tbuildRendering: function(/*Event*/ evt){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t(this.focusNode || this.domNode).setAttribute(\"role\", \"tab\");\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tvar StackController = declare(\"dijit.layout.StackController\", [_Widget, _TemplatedMixin, _Container], {\r\n\t\t// summary:\r\n\t\t//\t\tSet of buttons to select a page in a `dijit/layout/StackContainer`\r\n\t\t// description:\r\n\t\t//\t\tMonitors the specified StackContainer, and whenever a page is\r\n\t\t//\t\tadded, deleted, or selected, updates itself accordingly.\r\n\r\n\t\tbaseClass: \"dijitStackController\",\r\n\r\n\t\ttemplateString: \"<span role='tablist' data-dojo-attach-event='onkeydown'></span>\",\r\n\r\n\t\t// containerId: [const] String\r\n\t\t//\t\tThe id of the page container that I point to\r\n\t\tcontainerId: \"\",\r\n\r\n\t\t// buttonWidget: [const] Constructor\r\n\t\t//\t\tThe button widget to create to correspond to each page\r\n\t\tbuttonWidget: StackButton,\r\n\r\n\t\t// buttonWidgetCloseClass: String\r\n\t\t//\t\tCSS class of [x] close icon, used by event delegation code to tell when close button was clicked\r\n\t\tbuttonWidgetCloseClass: \"dijitStackCloseButton\",\r\n\r\n\t\tpane2button: function(/*String*/ id){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the button corresponding to the pane w/the given id.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn registry.byId(this.id + \"_\" + id);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Listen to notifications from StackContainer.  This is tricky because the StackContainer may not have\r\n\t\t\t// been created yet, so abstracting it through topics.\r\n\t\t\t// Note: for TabContainer we can do this through bubbled events instead of topics; maybe that's\r\n\t\t\t// all we support for 2.0?\r\n\t\t\tthis.own(\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-startup\", lang.hitch(this, \"onStartup\")),\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-addChild\", lang.hitch(this, \"onAddChild\")),\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-removeChild\", lang.hitch(this, \"onRemoveChild\")),\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-selectChild\", lang.hitch(this, \"onSelectChild\")),\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-containerKeyDown\", lang.hitch(this, \"onContainerKeyDown\"))\r\n\t\t\t);\r\n\r\n\t\t\t// Listen for click events to select or close tabs.\r\n\t\t\t// No need to worry about ENTER/SPACE key handling: tabs are selected via left/right arrow keys,\r\n\t\t\t// and closed via shift-F10 (to show the close menu).\r\n\t\t\t// Also, add flag to use normalized click handling from dojo/touch\r\n\t\t\tthis.containerNode.dojoClick = true;\r\n\t\t\tthis.own(on(this.containerNode, 'click', lang.hitch(this, function(evt){\r\n\t\t\t\tvar button = registry.getEnclosingWidget(evt.target);\r\n\t\t\t\tif(button != this.containerNode && !button.disabled && button.page){\r\n\t\t\t\t\tfor(var target = evt.target; target !== this.containerNode; target = target.parentNode){\r\n\t\t\t\t\t\tif(domClass.contains(target, this.buttonWidgetCloseClass)){\r\n\t\t\t\t\t\t\tthis.onCloseButtonClick(button.page);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}else if(target == button.domNode){\r\n\t\t\t\t\t\t\tthis.onButtonClick(button.page);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})));\r\n\t\t},\r\n\r\n\t\tonStartup: function(/*Object*/ info){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after StackContainer has finished initializing\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.textDir = info.textDir;\r\n\t\t\tarray.forEach(info.children, this.onAddChild, this);\r\n\t\t\tif(info.selected){\r\n\t\t\t\t// Show button corresponding to selected pane (unless selected\r\n\t\t\t\t// is null because there are no panes)\r\n\t\t\t\tthis.onSelectChild(info.selected);\r\n\t\t\t}\r\n\r\n\t\t\t// Reflect events like page title changes to tab buttons\r\n\t\t\tvar containerNode = registry.byId(this.containerId).containerNode,\r\n\t\t\t\tpane2button = lang.hitch(this, \"pane2button\"),\r\n\t\t\t\tpaneToButtonAttr = {\r\n\t\t\t\t\t\"title\": \"label\",\r\n\t\t\t\t\t\"showtitle\": \"showLabel\",\r\n\t\t\t\t\t\"iconclass\": \"iconClass\",\r\n\t\t\t\t\t\"closable\": \"closeButton\",\r\n\t\t\t\t\t\"tooltip\": \"title\",\r\n\t\t\t\t\t\"disabled\": \"disabled\",\r\n\t\t\t\t\t\"textdir\": \"textdir\"\r\n\t\t\t\t},\r\n\t\t\t\tconnectFunc = function(attr, buttonAttr){\r\n\t\t\t\t\treturn on(containerNode, \"attrmodified-\" + attr, function(evt){\r\n\t\t\t\t\t\tvar button = pane2button(evt.detail && evt.detail.widget && evt.detail.widget.id);\r\n\t\t\t\t\t\tif(button){\r\n\t\t\t\t\t\t\tbutton.set(buttonAttr, evt.detail.newValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\tfor(var attr in paneToButtonAttr){\r\n\t\t\t\tthis.own(connectFunc(attr, paneToButtonAttr[attr]));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(preserveDom){\r\n\t\t\t// Since the buttons are internal to the StackController widget, destroy() should remove them.\r\n\t\t\t// When #5796 is fixed for 2.0 can get rid of this function completely.\r\n\t\t\tthis.destroyDescendants(preserveDom);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tonAddChild: function(/*dijit/_WidgetBase*/ page, /*Integer?*/ insertIndex){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled whenever a page is added to the container.\r\n\t\t\t//\t\tCreate button corresponding to the page.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// create an instance of the button widget\r\n\t\t\t// (remove typeof buttonWidget == string support in 2.0)\r\n\t\t\tvar Cls = lang.isString(this.buttonWidget) ? lang.getObject(this.buttonWidget) : this.buttonWidget;\r\n\t\t\tvar button = new Cls({\r\n\t\t\t\tid: this.id + \"_\" + page.id,\r\n\t\t\t\tname: this.id + \"_\" + page.id, // note: must match id used in pane2button()\r\n\t\t\t\tlabel: page.title,\r\n\t\t\t\tdisabled: page.disabled,\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: page.dir,\r\n\t\t\t\tlang: page.lang,\r\n\t\t\t\ttextDir: page.textDir || this.textDir,\r\n\t\t\t\tshowLabel: page.showTitle,\r\n\t\t\t\ticonClass: page.iconClass,\r\n\t\t\t\tcloseButton: page.closable,\r\n\t\t\t\ttitle: page.tooltip,\r\n\t\t\t\tpage: page\r\n\t\t\t});\r\n\r\n\t\t\tthis.addChild(button, insertIndex);\r\n\t\t\tpage.controlButton = button;\t// this value might be overwritten if two tabs point to same container\r\n\t\t\tif(!this._currentChild){\r\n\t\t\t\t// If this is the first child then StackContainer will soon publish that it's selected,\r\n\t\t\t\t// but before that StackContainer calls layout(), and before layout() is called the\r\n\t\t\t\t// StackController needs to have the proper height... which means that the button needs\r\n\t\t\t\t// to be marked as selected now.   See test_TabContainer_CSS.html for test.\r\n\t\t\t\tthis.onSelectChild(page);\r\n\t\t\t}\r\n\r\n\t\t\t// Add this StackController button to the list of things that labels that StackContainer pane.\r\n\t\t\t// Also, if there's an aria-labelledby parameter for the pane, then the aria-label parameter is unneeded.\r\n\t\t\tvar labelledby = page._wrapper.getAttribute(\"aria-labelledby\") ?\r\n\t\t\t\tpage._wrapper.getAttribute(\"aria-labelledby\") + \" \" + button.id : button.id;\r\n\t\t\tpage._wrapper.removeAttribute(\"aria-label\");\r\n\t\t\tpage._wrapper.setAttribute(\"aria-labelledby\", labelledby);\r\n\t\t},\r\n\r\n\t\tonRemoveChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled whenever a page is removed from the container.\r\n\t\t\t//\t\tRemove the button corresponding to the page.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this._currentChild === page){\r\n\t\t\t\tthis._currentChild = null;\r\n\t\t\t}\r\n\r\n\t\t\tvar button = this.pane2button(page.id);\r\n\t\t\tif(button){\r\n\t\t\t\tthis.removeChild(button);\r\n\t\t\t\tbutton.destroy();\r\n\t\t\t}\r\n\t\t\tdelete page.controlButton;\r\n\t\t},\r\n\r\n\t\tonSelectChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when a page has been selected in the StackContainer, either by me or by another StackController\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!page){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._currentChild){\r\n\t\t\t\tvar oldButton = this.pane2button(this._currentChild.id);\r\n\t\t\t\toldButton.set('checked', false);\r\n\t\t\t\toldButton.focusNode.setAttribute(\"tabIndex\", \"-1\");\r\n\t\t\t}\r\n\r\n\t\t\tvar newButton = this.pane2button(page.id);\r\n\t\t\tnewButton.set('checked', true);\r\n\t\t\tthis._currentChild = page;\r\n\t\t\tnewButton.focusNode.setAttribute(\"tabIndex\", \"0\");\r\n\t\t\tvar container = registry.byId(this.containerId);\r\n\t\t},\r\n\r\n\t\tonButtonClick: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled whenever one of my child buttons is pressed in an attempt to select a page\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar button = this.pane2button(page.id);\r\n\r\n\t\t\t// For TabContainer where the tabs are <span>, need to set focus explicitly when left/right arrow\r\n\t\t\tfocus.focus(button.focusNode);\r\n\r\n\t\t\tif(this._currentChild && this._currentChild.id === page.id){\r\n\t\t\t\t//In case the user clicked the checked button, keep it in the checked state because it remains to be the selected stack page.\r\n\t\t\t\tbutton.set('checked', true);\r\n\t\t\t}\r\n\t\t\tvar container = registry.byId(this.containerId);\r\n\t\t\tcontainer.selectChild(page);\r\n\t\t},\r\n\r\n\t\tonCloseButtonClick: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled whenever one of my child buttons [X] is pressed in an attempt to close a page\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar container = registry.byId(this.containerId);\r\n\t\t\tcontainer.closeChild(page);\r\n\t\t\tif(this._currentChild){\r\n\t\t\t\tvar b = this.pane2button(this._currentChild.id);\r\n\t\t\t\tif(b){\r\n\t\t\t\t\tfocus.focus(b.focusNode || b.domNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// TODO: this is a bit redundant with forward, back api in StackContainer\r\n\t\tadjacent: function(/*Boolean*/ forward){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper for onkeydown to find next/previous button\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!this.isLeftToRight() && (!this.tabPosition || /top|bottom/.test(this.tabPosition))){\r\n\t\t\t\tforward = !forward;\r\n\t\t\t}\r\n\t\t\t// find currently focused button in children array\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tvar idx = array.indexOf(children, this.pane2button(this._currentChild.id)),\r\n\t\t\t\tcurrent = children[idx];\r\n\r\n\t\t\t// Pick next/previous non-disabled button to focus on.   If we get back to the original button it means\r\n\t\t\t// that all buttons must be disabled, so return current child to avoid an infinite loop.\r\n\t\t\tvar child;\r\n\t\t\tdo{\r\n\t\t\t\tidx = (idx + (forward ? 1 : children.length - 1)) % children.length;\r\n\t\t\t\tchild = children[idx];\r\n\t\t\t}while(child.disabled && child != current);\r\n\r\n\t\t\treturn child; // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tonkeydown: function(/*Event*/ e, /*Boolean?*/ fromContainer){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandle keystrokes on the page list, for advancing to next/previous button\r\n\t\t\t//\t\tand closing the current page if the page is closable.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.disabled || e.altKey){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar forward = null;\r\n\t\t\tif(e.ctrlKey || !e._djpage){\r\n\t\t\t\tswitch(e.keyCode){\r\n\t\t\t\t\tcase keys.LEFT_ARROW:\r\n\t\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\t\t\tif(!e._djpage){\r\n\t\t\t\t\t\t\tforward = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.PAGE_UP:\r\n\t\t\t\t\t\tif(e.ctrlKey){\r\n\t\t\t\t\t\t\tforward = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.RIGHT_ARROW:\r\n\t\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\t\t\tif(!e._djpage){\r\n\t\t\t\t\t\t\tforward = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.PAGE_DOWN:\r\n\t\t\t\t\t\tif(e.ctrlKey){\r\n\t\t\t\t\t\t\tforward = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.HOME:\r\n\t\t\t\t\t\t// Navigate to first non-disabled child\r\n\t\t\t\t\t\tvar children = this.getChildren();\r\n\t\t\t\t\t\tfor(var idx = 0; idx < children.length; idx++){\r\n\t\t\t\t\t\t\tvar child = children[idx];\r\n\t\t\t\t\t\t\tif(!child.disabled){\r\n\t\t\t\t\t\t\t\tthis.onButtonClick(child.page);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.END:\r\n\t\t\t\t\t\t// Navigate to last non-disabled child\r\n\t\t\t\t\t\tvar children = this.getChildren();\r\n\t\t\t\t\t\tfor(var idx = children.length - 1; idx >= 0; idx--){\r\n\t\t\t\t\t\t\tvar child = children[idx];\r\n\t\t\t\t\t\t\tif(!child.disabled){\r\n\t\t\t\t\t\t\t\tthis.onButtonClick(child.page);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.DELETE:\r\n\t\t\t\t\tcase \"W\".charCodeAt(0):    // ctrl-W\r\n\t\t\t\t\t\tif(this._currentChild.closable &&\r\n\t\t\t\t\t\t\t(e.keyCode == keys.DELETE || e.ctrlKey)){\r\n\t\t\t\t\t\t\tthis.onCloseButtonClick(this._currentChild);\r\n\r\n\t\t\t\t\t\t\t// avoid browser tab closing\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.TAB:\r\n\t\t\t\t\t\tif(e.ctrlKey){\r\n\t\t\t\t\t\t\tthis.onButtonClick(this.adjacent(!e.shiftKey).page);\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t// handle next/previous page navigation (left/right arrow, etc.)\r\n\t\t\t\tif(forward !== null){\r\n\t\t\t\t\tthis.onButtonClick(this.adjacent(forward).page);\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonContainerKeyDown: function(/*Object*/ info){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when there was a keydown on the container\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tinfo.e._djpage = info.page;\r\n\t\t\tthis.onkeydown(info.e);\r\n\t\t}\r\n\t});\r\n\r\n\tStackController.StackButton = StackButton;\t// for monkey patching\r\n\r\n\treturn StackController;\r\n});\r\n"]}