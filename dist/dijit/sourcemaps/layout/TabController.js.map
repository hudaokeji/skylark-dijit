{"version":3,"sources":["layout/TabController.js"],"names":["define","declare","dom","domAttr","domClass","has","i18n","lang","StackController","registry","Menu","MenuItem","template","TabButton","StackButton","baseClass","cssStateNodes","closeNode","templateString","_setNameAttr","scrollOnFocus","buildRendering","this","inherited","arguments","setSelectable","containerNode","startup","n","domNode","defer","className","_setCloseButtonAttr","disp","_set","toggle","style","display","_nlsResources","getLocalization","set","itemClose","_setDisabledAttr","disabled","remove","_setLabelAttr","content","showLabel","params","title","iconNode","alt","trim","innerText","textContent","applyTextDir","TabController","tabPosition","buttonWidget","buttonWidgetCloseClass","postCreate","closeMenu","id","ownerDocument","dir","textDir","targetNodeIds","selector","node","contains","own","controller","addChild","label","onClick","evt","button","byNode","getParent","currentTarget","onCloseButtonClick","page"],"mappings":";;;;;;;AAAAA,QACC,qBACA,WACA,gBACA,iBACA,WACA,YACA,kBACA,oBACA,cACA,UACA,cACA,wCACA,2BACE,SAASC,EAASC,EAAKC,EAASC,EAAUC,EAAKC,EAAMC,EAAMC,EAAiBC,EAAUC,EAAMC,EAAUC,GAKxG,IAAIC,EAAYZ,EAAQ,2BAA6BI,EAAI,aAAe,UAAY,IAAKG,EAAgBM,aAWxGC,UAAW,WAGXC,eACCC,UAAW,uBAGZC,eAAgBN,EAGhBO,aAAc,YAIdC,eAAe,EAEfC,eAAgB,WACfC,KAAKC,UAAUC,WAEftB,EAAIuB,cAAcH,KAAKI,eAAe,IAGvCC,QAAS,WACRL,KAAKC,UAAUC,WACf,IAAII,EAAIN,KAAKO,QAIbP,KAAKQ,MAAM,WACVF,EAAEG,UAAYH,EAAEG,WACd,IAGJC,oBAAqB,SAAqBC,GAMzC,GAHAX,KAAKY,KAAK,cAAeD,GACzB7B,EAAS+B,OAAOb,KAAKO,QAAS,gBAAiBI,GAC/CX,KAAKL,UAAUmB,MAAMC,QAAUJ,EAAO,GAAK,OACxCA,EAAK,CACP,IAAIK,EAAgBhC,EAAKiC,gBAAgB,QAAS,UAC/CjB,KAAKL,WACPd,EAAQqC,IAAIlB,KAAKL,UAAW,QAASqB,EAAcG,aAKtDC,iBAAkB,SAAqBC,GAOtC,GAHArB,KAAKC,UAAUC,WAGZF,KAAKL,UACP,GAAG0B,EACFxC,EAAQyC,OAAOtB,KAAKL,UAAW,aAC3B,CACJ,IAAIqB,EAAgBhC,EAAKiC,gBAAgB,QAAS,UAClDpC,EAAQqC,IAAIlB,KAAKL,UAAW,QAASqB,EAAcG,aAKtDI,cAAe,SAAoBC,GAOlCxB,KAAKC,UAAUC,WACXF,KAAKyB,WAAczB,KAAK0B,OAAOC,QAClC3B,KAAK4B,SAASC,IAAM5C,EAAK6C,KAAK9B,KAAKI,cAAc2B,WAAa/B,KAAKI,cAAc4B,aAAe,QAKhGjD,EAAI,eACNQ,EAAYZ,EAAQ,0BAA2BY,GAC9CgC,cAAe,SAAoBC,GAClCxB,KAAKC,UAAUC,WACfF,KAAKiC,aAAajC,KAAK4B,SAAU5B,KAAK4B,SAASC,SAKlD,IAAIK,EAAgBvD,EAAQ,6BAA8BO,GAWzDO,UAAW,qBAEXG,eAAgB,0EAKhBuC,YAAa,MAIbC,aAAc7C,EAId8C,uBAAwB,sBAExBC,WAAY,WACXtC,KAAKC,UAAUC,WAGf,IAAIqC,EAAY,IAAInD,GACnBoD,GAAIxC,KAAKwC,GAAK,QACdC,cAAezC,KAAKyC,cACpBC,IAAK1C,KAAK0C,IACVzD,KAAMe,KAAKf,KACX0D,QAAS3C,KAAK2C,QACdC,eAAgB5C,KAAKO,SACrBsC,SAAU,SAASC,GAClB,OAAOhE,EAASiE,SAASD,EAAM,mBAAqBhE,EAASiE,SAASD,EAAM,uBAG9E9C,KAAKgD,IAAIT,GAET,IAAIvB,EAAgBhC,EAAKiC,gBAAgB,QAAS,UACjDgC,EAAajD,KACduC,EAAUW,SAAS,IAAI7D,GACtB8D,MAAOnC,EAAcG,UACrBsB,cAAezC,KAAKyC,cACpBC,IAAK1C,KAAK0C,IACVzD,KAAMe,KAAKf,KACX0D,QAAS3C,KAAK2C,QACdS,QAAS,SAASC,GACjB,IAAIC,EAASnE,EAASoE,OAAOvD,KAAKwD,YAAYC,eAC9CR,EAAWS,mBAAmBJ,EAAOK,aAQzC,OAFAzB,EAAc3C,UAAYA,EAEnB2C","file":"../../layout/TabController.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-attr\", // domAttr.attr\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/has\",\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/_base/lang\", // lang.hitch lang.trim\r\n\t\"./StackController\",\r\n\t\"../registry\",\r\n\t\"../Menu\",\r\n\t\"../MenuItem\",\r\n\t\"dojo/text!./templates/_TabButton.html\",\r\n\t\"dojo/i18n!../nls/common\"\r\n], function(declare, dom, domAttr, domClass, has, i18n, lang, StackController, registry, Menu, MenuItem, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/TabController\r\n\r\n\tvar TabButton = declare(\"dijit.layout._TabButton\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), StackController.StackButton, {\r\n\t\t// summary:\r\n\t\t//\t\tA tab (the thing you click to select a pane).\r\n\t\t// description:\r\n\t\t//\t\tContains the title of the pane, and optionally a close-button to destroy the pane.\r\n\t\t//\t\tThis is an internal widget and should not be instantiated directly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// baseClass: String\r\n\t\t//\t\tThe CSS class applied to the domNode.\r\n\t\tbaseClass: \"dijitTab\",\r\n\r\n\t\t// Apply dijitTabCloseButtonHover when close button is hovered\r\n\t\tcssStateNodes: {\r\n\t\t\tcloseNode: \"dijitTabCloseButton\"\r\n\t\t},\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Button superclass maps name to a this.valueNode, but we don't have a this.valueNode attach point\r\n\t\t_setNameAttr: \"focusNode\",\r\n\r\n\t\t// Override _FormWidget.scrollOnFocus.\r\n\t\t// Don't scroll the whole tab container into view when the button is focused.\r\n\t\tscrollOnFocus: false,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tdom.setSelectable(this.containerNode, false);\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar n = this.domNode;\r\n\r\n\t\t\t// Required to give IE6 a kick, as it initially hides the\r\n\t\t\t// tabs until they are focused on.\r\n\t\t\tthis.defer(function(){\r\n\t\t\t\tn.className = n.className;\r\n\t\t\t}, 1);\r\n\t\t},\r\n\r\n\t\t_setCloseButtonAttr: function(/*Boolean*/ disp){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide/show close button\r\n\t\t\tthis._set(\"closeButton\", disp);\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitClosable\", disp);\r\n\t\t\tthis.closeNode.style.display = disp ? \"\" : \"none\";\r\n\t\t\tif(disp){\r\n\t\t\t\tvar _nlsResources = i18n.getLocalization(\"dijit\", \"common\");\r\n\t\t\t\tif(this.closeNode){\r\n\t\t\t\t\tdomAttr.set(this.closeNode, \"title\", _nlsResources.itemClose);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMake tab selected/unselectable\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Don't show tooltip for close button when tab is disabled\r\n\t\t\tif(this.closeNode){\r\n\t\t\t\tif(disabled){\r\n\t\t\t\t\tdomAttr.remove(this.closeNode, \"title\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar _nlsResources = i18n.getLocalization(\"dijit\", \"common\");\r\n\t\t\t\t\tdomAttr.set(this.closeNode, \"title\", _nlsResources.itemClose);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setLabelAttr: function(/*String*/ content){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for set('label', ...) to work.\r\n\t\t\t// description:\r\n\t\t\t//\t\ttakes an HTML string.\r\n\t\t\t//\t\tInherited ToggleButton implementation will Set the label (text) of the button;\r\n\t\t\t//\t\tNeed to set the alt attribute of icon on tab buttons if no label displayed\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.showLabel && !this.params.title){\r\n\t\t\t\tthis.iconNode.alt = lang.trim(this.containerNode.innerText || this.containerNode.textContent || '');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tTabButton = declare(\"dijit.layout._TabButton\", TabButton, {\r\n\t\t\t_setLabelAttr: function(/*String*/ content){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.applyTextDir(this.iconNode, this.iconNode.alt);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar TabController = declare(\"dijit.layout.TabController\", StackController, {\r\n\t\t// summary:\r\n\t\t//\t\tSet of tabs (the things with titles and a close button, that you click to show a tab panel).\r\n\t\t//\t\tUsed internally by `dijit/layout/TabContainer`.\r\n\t\t// description:\r\n\t\t//\t\tLets the user select the currently shown pane in a TabContainer or StackContainer.\r\n\t\t//\t\tTabController also monitors the TabContainer, and whenever a pane is\r\n\t\t//\t\tadded or deleted updates itself accordingly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tbaseClass: \"dijitTabController\",\r\n\r\n\t\ttemplateString: \"<div role='tablist' data-dojo-attach-event='onkeydown:onkeydown'></div>\",\r\n\r\n\t\t// tabPosition: String\r\n\t\t//\t\tDefines where tabs go relative to the content.\r\n\t\t//\t\t\"top\", \"bottom\", \"left-h\", \"right-h\"\r\n\t\ttabPosition: \"top\",\r\n\r\n\t\t// buttonWidget: Constructor\r\n\t\t//\t\tThe tab widget to create to correspond to each page\r\n\t\tbuttonWidget: TabButton,\r\n\r\n\t\t// buttonWidgetCloseClass: String\r\n\t\t//\t\tClass of [x] close icon, used by event delegation code to tell when close button was clicked\r\n\t\tbuttonWidgetCloseClass: \"dijitTabCloseButton\",\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Setup a close menu to be shared between all the closable tabs (excluding disabled tabs)\r\n\t\t\tvar closeMenu = new Menu({\r\n\t\t\t\tid: this.id + \"_Menu\",\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\ttargetNodeIds: [this.domNode],\r\n\t\t\t\tselector: function(node){\r\n\t\t\t\t\treturn domClass.contains(node, \"dijitClosable\") && !domClass.contains(node, \"dijitTabDisabled\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.own(closeMenu);\r\n\r\n\t\t\tvar _nlsResources = i18n.getLocalization(\"dijit\", \"common\"),\r\n\t\t\t\tcontroller = this;\r\n\t\t\tcloseMenu.addChild(new MenuItem({\r\n\t\t\t\tlabel: _nlsResources.itemClose,\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\tonClick: function(evt){\r\n\t\t\t\t\tvar button = registry.byNode(this.getParent().currentTarget);\r\n\t\t\t\t\tcontroller.onCloseButtonClick(button.page);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\tTabController.TabButton = TabButton;\t// for monkey patching\r\n\r\n\treturn TabController;\r\n});\r\n"]}