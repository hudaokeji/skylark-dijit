{"version":3,"sources":["layout/BorderContainer.js"],"names":["define","array","cookie","declare","domClass","domConstruct","domGeometry","domStyle","keys","lang","on","touch","_WidgetBase","_Widget","_TemplatedMixin","LayoutContainer","layoutUtils","_Splitter","live","templateString","constructor","this","_handlers","postMixInProperties","inherited","arguments","horizontal","test","region","_factor","_cookieName","container","id","buildRendering","add","domNode","persist","persistSize","child","style","_computeMaxSize","dim","childSize","getMarginBox","center","filter","getChildren","spaceAvailable","getContentBox","Math","min","maxSize","_startDrag","e","cover","place","fake","destroy","_resize","cloneNode","removeAttribute","remove","factor","isHorizontal","axis","pageStart","splitterStyle","childCS","getComputedStyle","childStart","max","minSize","getPadBorderExtents","splitterAttr","splitterStart","parseInt","resize","layoutFunc","hitch","de","ownerDocument","concat","move","_drag","forceResize","delta","boundChildSize","stopPropagation","preventDefault","ownerDocumentBody","release","_onMouse","o","type","toggle","_stopDrag","_cleanupHandlers","expires","h","pop","_onKeyDown","tick","keyCode","UP_ARROW","LEFT_ARROW","DOWN_ARROW","RIGHT_ARROW","getMarginSize","_layoutChildren","_Gutter","BorderContainer","gutters","liveSplitters","baseClass","_splitterClass","_setupChild","ltr","isLeftToRight","splitter","_splitterWidget","isString","getObject","isSplitter","before","startup","layout","removeChild","widget","getSplitter","newSize","currentSize","cs","pe","node","getPadExtents","r","toPixelValue","paddingRight","b","paddingBottom","set","changedChildId","changedChildSize","_borderBox","childrenAndSplitters","forEach","_getOrderedChildren","pane","push","l","t","w","layoutChildren","destroyRecursive","ChildWidgetProperties","Infinity","mixin","extend"],"mappings":"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","file":"../../layout/BorderContainer.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.filter array.forEach array.map\r\n\t\"dojo/cookie\", // cookie\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove domClass.toggle\r\n\t\"dojo/dom-construct\", // domConstruct.destroy domConstruct.place\r\n\t\"dojo/dom-geometry\", // domGeometry.marginBox\r\n\t\"dojo/dom-style\", // domStyle.style\r\n\t\"dojo/keys\",\r\n\t\"dojo/_base/lang\", // getObject() hitch() delegate()\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"../_WidgetBase\",\r\n\t\"../_Widget\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"./LayoutContainer\",\r\n\t\"./utils\"        // layoutUtils.layoutChildren\r\n], function(array, cookie, declare, domClass, domConstruct, domGeometry, domStyle, keys, lang, on, touch,\r\n\t\t\t_WidgetBase, _Widget, _TemplatedMixin, LayoutContainer, layoutUtils){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/BorderContainer\r\n\r\n\tvar _Splitter = declare(\"dijit.layout._Splitter\", [_Widget, _TemplatedMixin ], {\r\n\t\t// summary:\r\n\t\t//\t\tA draggable spacer between two items in a `dijit/layout/BorderContainer`.\r\n\t\t// description:\r\n\t\t//\t\tThis is instantiated by `dijit/layout/BorderContainer`.  Users should not\r\n\t\t//\t\tcreate it directly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t/*=====\r\n\t\t // container: [const] dijit/layout/BorderContainer\r\n\t\t //\t\tPointer to the parent BorderContainer\r\n\t\t container: null,\r\n\r\n\t\t // child: [const] dijit/layout/_LayoutWidget\r\n\t\t //\t\tPointer to the pane associated with this splitter\r\n\t\t child: null,\r\n\r\n\t\t // region: [const] String\r\n\t\t //\t\tRegion of pane associated with this splitter.\r\n\t\t //\t\t\"top\", \"bottom\", \"left\", \"right\".\r\n\t\t region: null,\r\n\t\t =====*/\r\n\r\n\t\t// live: [const] Boolean\r\n\t\t//\t\tIf true, the child's size changes and the child widget is redrawn as you drag the splitter;\r\n\t\t//\t\totherwise, the size doesn't change until you drop the splitter (by mouse-up)\r\n\t\tlive: true,\r\n\r\n\t\ttemplateString: '<div class=\"dijitSplitter\" data-dojo-attach-event=\"onkeydown:_onKeyDown,press:_startDrag,onmouseenter:_onMouse,onmouseleave:_onMouse\" tabIndex=\"0\" role=\"separator\"><div class=\"dijitSplitterThumb\"></div></div>',\r\n\r\n\t\tconstructor: function(){\r\n\t\t\tthis._handlers = [];\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis.horizontal = /top|bottom/.test(this.region);\r\n\t\t\tthis._factor = /top|left/.test(this.region) ? 1 : -1;\r\n\t\t\tthis._cookieName = this.container.id + \"_\" + this.region;\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tdomClass.add(this.domNode, \"dijitSplitter\" + (this.horizontal ? \"H\" : \"V\"));\r\n\r\n\t\t\tif(this.container.persist){\r\n\t\t\t\t// restore old size\r\n\t\t\t\tvar persistSize = cookie(this._cookieName);\r\n\t\t\t\tif(persistSize){\r\n\t\t\t\t\tthis.child.domNode.style[this.horizontal ? \"height\" : \"width\"] = persistSize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_computeMaxSize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the maximum size that my corresponding pane can be set to\r\n\r\n\t\t\tvar dim = this.horizontal ? 'h' : 'w',\r\n\t\t\t\tchildSize = domGeometry.getMarginBox(this.child.domNode)[dim],\r\n\t\t\t\tcenter = array.filter(this.container.getChildren(), function(child){\r\n\t\t\t\t\treturn child.region == \"center\";\r\n\t\t\t\t})[0];\r\n\r\n\t\t\t// Can expand until center is crushed.  But always leave room for center's padding + border,\r\n\t\t\t//  otherwise on the next call domGeometry methods start to lie about size.\r\n\t\t\tvar spaceAvailable = domGeometry.getContentBox(center.domNode)[dim] - 10;\r\n\r\n\t\t\treturn Math.min(this.child.maxSize, childSize + spaceAvailable);\r\n\t\t},\r\n\r\n\t\t_startDrag: function(e){\r\n\t\t\tif(!this.cover){\r\n\t\t\t\tthis.cover = domConstruct.place(\"<div class=dijitSplitterCover></div>\", this.child.domNode, \"after\");\r\n\t\t\t}\r\n\t\t\tdomClass.add(this.cover, \"dijitSplitterCoverActive\");\r\n\r\n\t\t\t// Safeguard in case the stop event was missed.  Shouldn't be necessary if we always get the mouse up.\r\n\t\t\tif(this.fake){\r\n\t\t\t\tdomConstruct.destroy(this.fake);\r\n\t\t\t}\r\n\t\t\tif(!(this._resize = this.live)){ //TODO: disable live for IE6?\r\n\t\t\t\t// create fake splitter to display at old position while we drag\r\n\t\t\t\t(this.fake = this.domNode.cloneNode(true)).removeAttribute(\"id\");\r\n\t\t\t\tdomClass.add(this.domNode, \"dijitSplitterShadow\");\r\n\t\t\t\tdomConstruct.place(this.fake, this.domNode, \"after\");\r\n\t\t\t}\r\n\t\t\tdomClass.add(this.domNode, \"dijitSplitterActive dijitSplitter\" + (this.horizontal ? \"H\" : \"V\") + \"Active\");\r\n\t\t\tif(this.fake){\r\n\t\t\t\tdomClass.remove(this.fake, \"dijitSplitterHover dijitSplitter\" + (this.horizontal ? \"H\" : \"V\") + \"Hover\");\r\n\t\t\t}\r\n\r\n\t\t\t//Performance: load data info local vars for onmousevent function closure\r\n\t\t\tvar factor = this._factor,\r\n\t\t\t\tisHorizontal = this.horizontal,\r\n\t\t\t\taxis = isHorizontal ? \"pageY\" : \"pageX\",\r\n\t\t\t\tpageStart = e[axis],\r\n\t\t\t\tsplitterStyle = this.domNode.style,\r\n\t\t\t\tdim = isHorizontal ? 'h' : 'w',\r\n\t\t\t\tchildCS = domStyle.getComputedStyle(this.child.domNode),\r\n\t\t\t\tchildStart = domGeometry.getMarginBox(this.child.domNode, childCS)[dim],\r\n\t\t\t\tmax = this._computeMaxSize(),\r\n\t\t\t\tmin = Math.max(this.child.minSize, domGeometry.getPadBorderExtents(this.child.domNode, childCS)[dim] + 10),\r\n\t\t\t\tregion = this.region,\r\n\t\t\t\tsplitterAttr = region == \"top\" || region == \"bottom\" ? \"top\" : \"left\", // style attribute of splitter to adjust\r\n\t\t\t\tsplitterStart = parseInt(splitterStyle[splitterAttr], 10),\r\n\t\t\t\tresize = this._resize,\r\n\t\t\t\tlayoutFunc = lang.hitch(this.container, \"_layoutChildren\", this.child.id),\r\n\t\t\t\tde = this.ownerDocument;\r\n\r\n\t\t\tthis._handlers = this._handlers.concat([\r\n\t\t\t\ton(de, touch.move, this._drag = function(e, forceResize){\r\n\t\t\t\t\tvar delta = e[axis] - pageStart,\r\n\t\t\t\t\t\tchildSize = factor * delta + childStart,\r\n\t\t\t\t\t\tboundChildSize = Math.max(Math.min(childSize, max), min);\r\n\r\n\t\t\t\t\tif(resize || forceResize){\r\n\t\t\t\t\t\tlayoutFunc(boundChildSize);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// TODO: setting style directly (usually) sets content box size, need to set margin box size\r\n\t\t\t\t\tsplitterStyle[splitterAttr] = delta + splitterStart + factor * (boundChildSize - childSize) + \"px\";\r\n\t\t\t\t}),\r\n\t\t\t\ton(de, \"dragstart\", function(e){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.ownerDocumentBody, \"selectstart\", function(e){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}),\r\n\t\t\t\ton(de, touch.release, lang.hitch(this, \"_stopDrag\"))\r\n\t\t\t]);\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\r\n\t\t_onMouse: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for onmouseenter / onmouseleave events\r\n\t\t\tvar o = (e.type == \"mouseover\" || e.type == \"mouseenter\");\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitSplitterHover\", o);\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitSplitter\" + (this.horizontal ? \"H\" : \"V\") + \"Hover\", o);\r\n\t\t},\r\n\r\n\t\t_stopDrag: function(e){\r\n\t\t\ttry{\r\n\t\t\t\tif(this.cover){\r\n\t\t\t\t\tdomClass.remove(this.cover, \"dijitSplitterCoverActive\");\r\n\t\t\t\t}\r\n\t\t\t\tif(this.fake){\r\n\t\t\t\t\tdomConstruct.destroy(this.fake);\r\n\t\t\t\t}\r\n\t\t\t\tdomClass.remove(this.domNode, \"dijitSplitterActive dijitSplitter\"\r\n\t\t\t\t\t+ (this.horizontal ? \"H\" : \"V\") + \"Active dijitSplitterShadow\");\r\n\t\t\t\tthis._drag(e); //TODO: redundant with onmousemove?\r\n\t\t\t\tthis._drag(e, true);\r\n\t\t\t}finally{\r\n\t\t\t\tthis._cleanupHandlers();\r\n\t\t\t\tdelete this._drag;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.container.persist){\r\n\t\t\t\tcookie(this._cookieName, this.child.domNode.style[this.horizontal ? \"height\" : \"width\"], {expires: 365});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_cleanupHandlers: function(){\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this._handlers.pop()){\r\n\t\t\t\th.remove();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(/*Event*/ e){\r\n\t\t\t// should we apply typematic to this?\r\n\t\t\tthis._resize = true;\r\n\t\t\tvar horizontal = this.horizontal;\r\n\t\t\tvar tick = 1;\r\n\t\t\tswitch(e.keyCode){\r\n\t\t\t\tcase horizontal ? keys.UP_ARROW : keys.LEFT_ARROW:\r\n\t\t\t\t\ttick *= -1;\r\n//\t\t\t\tbreak;\r\n\t\t\t\tcase horizontal ? keys.DOWN_ARROW : keys.RIGHT_ARROW:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n//\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar childSize = domGeometry.getMarginSize(this.child.domNode)[ horizontal ? 'h' : 'w' ] + this._factor * tick;\r\n\t\t\tthis.container._layoutChildren(this.child.id, Math.max(Math.min(childSize, this._computeMaxSize()), this.child.minSize));\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis._cleanupHandlers();\r\n\t\t\tdelete this.child;\r\n\t\t\tdelete this.container;\r\n\t\t\tdelete this.cover;\r\n\t\t\tdelete this.fake;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tvar _Gutter = declare(\"dijit.layout._Gutter\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tJust a spacer div to separate side pane from center pane.\r\n\t\t//\t\tBasically a trick to lookup the gutter/splitter width from the theme.\r\n\t\t// description:\r\n\t\t//\t\tInstantiated by `dijit/layout/BorderContainer`.  Users should not\r\n\t\t//\t\tcreate directly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\ttemplateString: '<div class=\"dijitGutter\" role=\"presentation\"></div>',\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.horizontal = /top|bottom/.test(this.region);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.add(this.domNode, \"dijitGutter\" + (this.horizontal ? \"H\" : \"V\"));\r\n\t\t}\r\n\t});\r\n\r\n\tvar BorderContainer = declare(\"dijit.layout.BorderContainer\", LayoutContainer, {\r\n\t\t// summary:\r\n\t\t//\t\tA BorderContainer is a `dijit/LayoutContainer` that can have draggable splitters between the children,\r\n\t\t//\t\tin order to adjust their sizes.\r\n\t\t//\r\n\t\t//\t\tIn addition, it automatically adds some space between the children even\r\n\t\t//\t\tif they don't have a draggable splitter between them, and space between the edge of the BorderContainer\r\n\t\t//\t\tand the children that are adjacent to the edge.  Note that the intended style is that all the children\r\n\t\t//\t\thave borders, but (despite the name) the BorderContainer itself does not.\r\n\t\t//\r\n\t\t//\t\tSee `BorderContainer.ChildWidgetProperties` for details on the properties that can be set on\r\n\t\t//\t\tchildren of a `BorderContainer`.\r\n\r\n\t\t// gutters: [const] Boolean\r\n\t\t//\t\tGive each pane a border and margin.\r\n\t\t//\t\tMargin determined by domNode.paddingLeft.\r\n\t\t//\t\tWhen false, only resizable panes have a gutter (i.e. draggable splitter) for resizing.\r\n\t\tgutters: true,\r\n\r\n\t\t// liveSplitters: [const] Boolean\r\n\t\t//\t\tSpecifies whether splitters resize as you drag (true) or only upon mouseup (false)\r\n\t\tliveSplitters: true,\r\n\r\n\t\t// persist: Boolean\r\n\t\t//\t\tSave splitter positions in a cookie.\r\n\t\tpersist: false,\r\n\r\n\t\tbaseClass: \"dijitBorderContainer\",\r\n\r\n\t\t// _splitterClass: Function||String\r\n\t\t//\t\tOptional hook to override the default Splitter widget used by BorderContainer\r\n\t\t_splitterClass: _Splitter,\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// change class name to indicate that BorderContainer is being used purely for\r\n\t\t\t// layout (like LayoutContainer) rather than for pretty formatting.\r\n\t\t\tif(!this.gutters){\r\n\t\t\t\tthis.baseClass += \"NoGutter\";\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setupChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// Override LayoutContainer._setupChild().\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar region = child.region, ltr = child.isLeftToRight();\r\n\t\t\tif(region == \"leading\"){\r\n\t\t\t\tregion = ltr ? \"left\" : \"right\";\r\n\t\t\t}\r\n\t\t\tif(region == \"trailing\"){\r\n\t\t\t\tregion = ltr ? \"right\" : \"left\";\r\n\t\t\t}\r\n\r\n\t\t\tif(region){\r\n\t\t\t\t// Create draggable splitter for resizing pane,\r\n\t\t\t\t// or alternately if splitter=false but BorderContainer.gutters=true then\r\n\t\t\t\t// insert dummy div just for spacing\r\n\t\t\t\tif(region != \"center\" && (child.splitter || this.gutters) && !child._splitterWidget){\r\n\t\t\t\t\tvar _Splitter = child.splitter ? this._splitterClass : _Gutter;\r\n\t\t\t\t\tif(lang.isString(_Splitter)){\r\n\t\t\t\t\t\t_Splitter = lang.getObject(_Splitter);\t// for back-compat, remove in 2.0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar splitter = new _Splitter({\r\n\t\t\t\t\t\tid: child.id + \"_splitter\",\r\n\t\t\t\t\t\tcontainer: this,\r\n\t\t\t\t\t\tchild: child,\r\n\t\t\t\t\t\tregion: region,\r\n\t\t\t\t\t\tlive: this.liveSplitters\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsplitter.isSplitter = true;\r\n\t\t\t\t\tchild._splitterWidget = splitter;\r\n\r\n\t\t\t\t\t// Make the tab order match the visual layout by placing the splitter before or after the pane,\r\n\t\t\t\t\t// depending on where the splitter is visually compared to the pane.\r\n\t\t\t\t\tvar before = region == \"bottom\" || region == (this.isLeftToRight() ? \"right\" : \"left\");\r\n\t\t\t\t\tdomConstruct.place(splitter.domNode, child.domNode, before ? \"before\" : \"after\");\r\n\r\n\t\t\t\t\t// Splitters aren't added as Contained children, so we need to call startup explicitly\r\n\t\t\t\t\tsplitter.startup();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// Implement _LayoutWidget.layout() virtual method.\r\n\t\t\tthis._layoutChildren();\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// Override _LayoutWidget.removeChild().\r\n\r\n\t\t\tvar splitter = child._splitterWidget;\r\n\t\t\tif(splitter){\r\n\t\t\t\tsplitter.destroy();\r\n\t\t\t\tdelete child._splitterWidget;\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tgetChildren: function(){\r\n\t\t\t// Override _LayoutWidget.getChildren() to only return real children, not the splitters.\r\n\t\t\treturn array.filter(this.inherited(arguments), function(widget){\r\n\t\t\t\treturn !widget.isSplitter;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// TODO: remove in 2.0\r\n\t\tgetSplitter: function(/*String*/region){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the widget responsible for rendering the splitter associated with region\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\treturn array.filter(this.getChildren(), function(child){\r\n\t\t\t\treturn child.region == region;\r\n\t\t\t})[0]._splitterWidget;\r\n\t\t},\r\n\r\n\t\tresize: function(newSize, currentSize){\r\n\t\t\t// Overrides _LayoutWidget.resize().\r\n\r\n\t\t\t// resetting potential padding to 0px to provide support for 100% width/height + padding\r\n\t\t\t// TODO: this hack doesn't respect the box model and is a temporary fix\r\n\t\t\tif(!this.cs || !this.pe){\r\n\t\t\t\tvar node = this.domNode;\r\n\t\t\t\tthis.cs = domStyle.getComputedStyle(node);\r\n\t\t\t\tthis.pe = domGeometry.getPadExtents(node, this.cs);\r\n\t\t\t\tthis.pe.r = domStyle.toPixelValue(node, this.cs.paddingRight);\r\n\t\t\t\tthis.pe.b = domStyle.toPixelValue(node, this.cs.paddingBottom);\r\n\r\n\t\t\t\tdomStyle.set(node, \"padding\", \"0px\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_layoutChildren: function(/*String?*/ changedChildId, /*Number?*/ changedChildSize){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is the main routine for setting size/position of each child.\r\n\t\t\t// description:\r\n\t\t\t//\t\tWith no arguments, measures the height of top/bottom panes, the width\r\n\t\t\t//\t\tof left/right panes, and then sizes all panes accordingly.\r\n\t\t\t//\r\n\t\t\t//\t\tWith changedRegion specified (as \"left\", \"top\", \"bottom\", or \"right\"),\r\n\t\t\t//\t\tit changes that region's width/height to changedRegionSize and\r\n\t\t\t//\t\tthen resizes other regions that were affected.\r\n\t\t\t// changedChildId:\r\n\t\t\t//\t\tId of the child which should be resized because splitter was dragged.\r\n\t\t\t// changedChildSize:\r\n\t\t\t//\t\tThe new width/height (in pixels) to make specified child\r\n\r\n\t\t\tif(!this._borderBox || !this._borderBox.h){\r\n\t\t\t\t// We are currently hidden, or we haven't been sized by our parent yet.\r\n\t\t\t\t// Abort.   Someone will resize us later.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Combining the externally specified children with splitters and gutters\r\n\t\t\tvar childrenAndSplitters = [];\r\n\t\t\tarray.forEach(this._getOrderedChildren(), function(pane){\r\n\t\t\t\tchildrenAndSplitters.push(pane);\r\n\t\t\t\tif(pane._splitterWidget){\r\n\t\t\t\t\tchildrenAndSplitters.push(pane._splitterWidget);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Compute the box in which to lay out my children\r\n\t\t\tvar dim = {\r\n\t\t\t\tl: this.pe.l,\r\n\t\t\t\tt: this.pe.t,\r\n\t\t\t\tw: this._borderBox.w - this.pe.w,\r\n\t\t\t\th: this._borderBox.h - this.pe.h\r\n\t\t\t};\r\n\r\n\t\t\t// Layout the children, possibly changing size due to a splitter drag\r\n\t\t\tlayoutUtils.layoutChildren(this.domNode, dim, childrenAndSplitters,\r\n\t\t\t\tchangedChildId, changedChildSize);\r\n\t\t},\r\n\r\n\t\tdestroyRecursive: function(){\r\n\t\t\t// Destroy splitters first, while getChildren() still works\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tvar splitter = child._splitterWidget;\r\n\t\t\t\tif(splitter){\r\n\t\t\t\t\tsplitter.destroy();\r\n\t\t\t\t}\r\n\t\t\t\tdelete child._splitterWidget;\r\n\t\t\t});\r\n\r\n\t\t\t// Then destroy the real children, and myself\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tBorderContainer.ChildWidgetProperties = {\r\n\t\t// summary:\r\n\t\t//\t\tThese properties can be specified for the children of a BorderContainer.\r\n\r\n\t\t// splitter: [const] Boolean\r\n\t\t//\t\tParameter for children where region != \"center\".\r\n\t\t//\t\tIf true, enables user to resize the widget by putting a draggable splitter between\r\n\t\t//\t\tthis widget and the region=center widget.\r\n\t\tsplitter: false,\r\n\r\n\t\t// minSize: [const] Number\r\n\t\t//\t\tSpecifies a minimum size (in pixels) for this widget when resized by a splitter.\r\n\t\tminSize: 0,\r\n\r\n\t\t// maxSize: [const] Number\r\n\t\t//\t\tSpecifies a maximum size (in pixels) for this widget when resized by a splitter.\r\n\t\tmaxSize: Infinity\r\n\t};\r\n\tlang.mixin(BorderContainer.ChildWidgetProperties, LayoutContainer.ChildWidgetProperties);\r\n\r\n\t// Since any widget can be specified as a BorderContainer child, mix it\r\n\t// into the base widget class.  (This is a hack, but it's effective.)\r\n\t// This is for the benefit of the parser.   Remove for 2.0.  Also, hide from doc viewer.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ BorderContainer.ChildWidgetProperties);\r\n\r\n\t// For monkey patching\r\n\tBorderContainer._Splitter = _Splitter;\r\n\tBorderContainer._Gutter = _Gutter;\r\n\r\n\treturn BorderContainer;\r\n});\r\n"]}