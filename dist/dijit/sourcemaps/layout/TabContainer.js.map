{"version":3,"sources":["layout/TabContainer.js"],"names":["define","lang","declare","_TabContainerBase","TabController","ScrollingTabController","useMenu","useSlider","controllerWidget","_makeController","srcNode","cls","this","baseClass","doLayout","getObject","id","ownerDocument","dir","textDir","tabPosition","containerId","class","nested","tabStripClass","tabStrip","postMixInProperties","inherited","arguments"],"mappings":";;;;;;;AAAAA,QACC,kBACA,qBACA,sBACA,kBACA,4BACE,SAASC,EAAMC,EAASC,EAAmBC,EAAeC,GAM5D,OAAOH,EAAQ,4BAA6BC,GAc3CG,SAAS,EAKTC,WAAW,EAIXC,iBAAkB,GAElBC,gBAAiB,SAAqBC,GAQrC,IAAIC,EAAMC,KAAKC,UAAY,SAAWD,KAAKE,SAAW,GAAK,qBAI3D,OAAO,IAH0C,iBAAzBF,KAAKJ,iBAA+BP,EAAKc,UAAUH,KAAKJ,kBAC7EI,KAAKJ,mBAGPQ,GAAIJ,KAAKI,GAAK,WACdC,cAAeL,KAAKK,cACpBC,IAAKN,KAAKM,IACVjB,KAAMW,KAAKX,KACXkB,QAASP,KAAKO,QACdC,YAAaR,KAAKQ,YAClBN,SAAUF,KAAKE,SACfO,YAAaT,KAAKI,GAClBM,MAASX,EACTY,OAAQX,KAAKW,OACbjB,QAASM,KAAKN,QACdC,UAAWK,KAAKL,UAChBiB,cAAeZ,KAAKa,SAAWb,KAAKC,WAAaD,KAAKa,SAAW,GAAG,MAAQ,QAAS,MACnFf,IAGJgB,oBAAqB,WACpBd,KAAKe,UAAUC,WAGXhB,KAAKJ,mBACRI,KAAKJ,iBAAwC,OAApBI,KAAKQ,aAA4C,UAApBR,KAAKQ,aAA6BR,KAAKW,OACjEnB,EAAzBC","file":"../../layout/TabContainer.js","sourcesContent":["define([\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./_TabContainerBase\",\r\n\t\"./TabController\",\r\n\t\"./ScrollingTabController\"\r\n], function(lang, declare, _TabContainerBase, TabController, ScrollingTabController){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/TabContainer\r\n\r\n\r\n\treturn declare(\"dijit.layout.TabContainer\", _TabContainerBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA Container with tabs to select each child (only one of which is displayed at a time).\r\n\t\t// description:\r\n\t\t//\t\tA TabContainer is a container that has multiple panes, but shows only\r\n\t\t//\t\tone pane at a time.  There are a set of tabs corresponding to each pane,\r\n\t\t//\t\twhere each tab has the name (aka title) of the pane, and optionally a close button.\r\n\t\t//\r\n\t\t//\t\tSee `StackContainer.ChildWidgetProperties` for details on the properties that can be set on\r\n\t\t//\t\tchildren of a `TabContainer`.\r\n\r\n\t\t// useMenu: [const] Boolean\r\n\t\t//\t\tTrue if a menu should be used to select tabs when they are too\r\n\t\t//\t\twide to fit the TabContainer, false otherwise.\r\n\t\tuseMenu: true,\r\n\r\n\t\t// useSlider: [const] Boolean\r\n\t\t//\t\tTrue if a slider should be used to select tabs when they are too\r\n\t\t//\t\twide to fit the TabContainer, false otherwise.\r\n\t\tuseSlider: true,\r\n\r\n\t\t// controllerWidget: Class\r\n\t\t//\t\tAn optional parameter to override the widget used to display the tab labels\r\n\t\tcontrollerWidget: \"\",\r\n\r\n\t\t_makeController: function(/*DomNode*/ srcNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInstantiate tablist controller widget and return reference to it.\r\n\t\t\t//\t\tCallback from _TabContainerBase.postCreate().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\r\n\t\t\t// \"string\" branch for back-compat, remove for 2.0\r\n\t\t\tvar cls = this.baseClass + \"-tabs\" + (this.doLayout ? \"\" : \" dijitTabNoLayout\"),\r\n\t\t\t\tTabController = typeof this.controllerWidget == \"string\" ? lang.getObject(this.controllerWidget) :\r\n\t\t\t\t\t\tthis.controllerWidget;\r\n\r\n\t\t\treturn new TabController({\r\n\t\t\t\tid: this.id + \"_tablist\",\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\ttabPosition: this.tabPosition,\r\n\t\t\t\tdoLayout: this.doLayout,\r\n\t\t\t\tcontainerId: this.id,\r\n\t\t\t\t\"class\": cls,\r\n\t\t\t\tnested: this.nested,\r\n\t\t\t\tuseMenu: this.useMenu,\r\n\t\t\t\tuseSlider: this.useSlider,\r\n\t\t\t\ttabStripClass: this.tabStrip ? this.baseClass + (this.tabStrip ? \"\":\"No\") + \"Strip\": null\r\n\t\t\t}, srcNode);\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Scrolling controller only works for horizontal non-nested tabs\r\n\t\t\tif(!this.controllerWidget){\r\n\t\t\t\tthis.controllerWidget = (this.tabPosition == \"top\" || this.tabPosition == \"bottom\") && !this.nested ?\r\n\t\t\t\t\t\t\tScrollingTabController : TabController;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}