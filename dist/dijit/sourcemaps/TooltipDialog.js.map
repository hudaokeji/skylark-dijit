{"version":3,"sources":["TooltipDialog.js"],"names":["define","declare","domClass","has","keys","lang","on","focus","ContentPane","_DialogMixin","_FormMixin","_TemplatedMixin","template","dijit","TooltipDialog","title","doLayout","autofocus","baseClass","_firstFocusItem","_lastFocusItem","templateString","_setTitleAttr","postCreate","this","inherited","arguments","own","domNode","hitch","orient","node","aroundCorner","tooltipCorner","newC","MR-ML","ML-MR","TM-BM","BM-TM","BL-TL","TL-BL","BR-TR","TR-BR","BR-BL","BL-BR","BR-TL","BL-TR","TL-BR","TR-BL","replace","_currentOrientClass","_getFocusItems","onOpen","pos","corner","aroundNodeCoords","aroundNodePos","charAt","connectorNode","style","top","y","h","offsetHeight","left","x","w","offsetWidth","_onShow","onClose","onHide","_onKey","evt","keyCode","ESCAPE","defer","stopPropagation","preventDefault","TAB","target","shiftKey","extend","containerNode","textDir","enforceTextDirWithUcc","_set","_setTextDirAttr","_created"],"mappings":"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","file":"../TooltipDialog.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.replace\r\n\t\"dojo/has\",\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"./focus\",\r\n\t\"./layout/ContentPane\",\r\n\t\"./_DialogMixin\",\r\n\t\"./form/_FormMixin\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"dojo/text!./templates/TooltipDialog.html\",\r\n\t\"./_dijit\"        // exports methods to dijit global\r\n], function(declare, domClass, has, keys, lang, on, focus, ContentPane, _DialogMixin, _FormMixin, _TemplatedMixin, template, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/TooltipDialog\r\n\r\n\r\n\tvar TooltipDialog = declare(\"dijit.TooltipDialog\",\r\n\t\t[ContentPane, _TemplatedMixin, _FormMixin, _DialogMixin], {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPops up a dialog that appears like a Tooltip\r\n\r\n\t\t\t// title: String\r\n\t\t\t//\t\tDescription of tooltip dialog (required for a11y)\r\n\t\t\ttitle: \"\",\r\n\r\n\t\t\t// doLayout: [protected] Boolean\r\n\t\t\t//\t\tDon't change this parameter from the default value.\r\n\t\t\t//\t\tThis ContentPane parameter doesn't make sense for TooltipDialog, since TooltipDialog\r\n\t\t\t//\t\tis never a child of a layout container, nor can you specify the size of\r\n\t\t\t//\t\tTooltipDialog in order to control the size of an inner widget.\r\n\t\t\tdoLayout: false,\r\n\r\n\t\t\t// autofocus: Boolean\r\n\t\t\t//\t\tA Toggle to modify the default focus behavior of a Dialog, which\r\n\t\t\t//\t\tis to focus on the first dialog element after opening the dialog.\r\n\t\t\t//\t\tFalse will disable autofocusing.  Default: true.\r\n\t\t\tautofocus: true,\r\n\r\n\t\t\t// baseClass: [protected] String\r\n\t\t\t//\t\tThe root className to use for the various states of this widget\r\n\t\t\tbaseClass: \"dijitTooltipDialog\",\r\n\r\n\t\t\t// _firstFocusItem: [private readonly] DomNode\r\n\t\t\t//\t\tThe pointer to the first focusable node in the dialog.\r\n\t\t\t//\t\tSet by `dijit/_DialogMixin._getFocusItems()`.\r\n\t\t\t_firstFocusItem: null,\r\n\r\n\t\t\t// _lastFocusItem: [private readonly] DomNode\r\n\t\t\t//\t\tThe pointer to which node has focus prior to our dialog.\r\n\t\t\t//\t\tSet by `dijit/_DialogMixin._getFocusItems()`.\r\n\t\t\t_lastFocusItem: null,\r\n\r\n\t\t\ttemplateString: template,\r\n\r\n\t\t\t_setTitleAttr: \"containerNode\",\r\n\r\n\t\t\tpostCreate: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.own(on(this.domNode, \"keydown\", lang.hitch(this, \"_onKey\")));\r\n\t\t\t},\r\n\r\n\t\t\torient: function(/*DomNode*/ node, /*String*/ aroundCorner, /*String*/ tooltipCorner){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tConfigure widget to be displayed in given position relative to the button.\r\n\t\t\t\t//\t\tThis is called from the dijit.popup code, and should not be called\r\n\t\t\t\t//\t\tdirectly.\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprotected\r\n\r\n\t\t\t\t// Note: intentionally not using dijitTooltip class since that sets position:absolute, which\r\n\t\t\t\t// confuses dijit/popup trying to get the size of the tooltip.\r\n\t\t\t\tvar newC = {\r\n\t\t\t\t\t// Real around node\r\n\t\t\t\t\t\"MR-ML\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"ML-MR\": \"dijitTooltipLeft\",\r\n\t\t\t\t\t\"TM-BM\": \"dijitTooltipAbove\",\r\n\t\t\t\t\t\"BM-TM\": \"dijitTooltipBelow\",\r\n\t\t\t\t\t\"BL-TL\": \"dijitTooltipBelow dijitTooltipABLeft\",\r\n\t\t\t\t\t\"TL-BL\": \"dijitTooltipAbove dijitTooltipABLeft\",\r\n\t\t\t\t\t\"BR-TR\": \"dijitTooltipBelow dijitTooltipABRight\",\r\n\t\t\t\t\t\"TR-BR\": \"dijitTooltipAbove dijitTooltipABRight\",\r\n\t\t\t\t\t\"BR-BL\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"BL-BR\": \"dijitTooltipLeft\",\r\n\r\n\t\t\t\t\t// Positioning \"around\" a point, ex: mouse position\r\n\t\t\t\t\t\"BR-TL\": \"dijitTooltipBelow dijitTooltipABLeft\",\r\n\t\t\t\t\t\"BL-TR\": \"dijitTooltipBelow dijitTooltipABRight\",\r\n\t\t\t\t\t\"TL-BR\": \"dijitTooltipAbove dijitTooltipABRight\",\r\n\t\t\t\t\t\"TR-BL\": \"dijitTooltipAbove dijitTooltipABLeft\"\r\n\t\t\t\t}[aroundCorner + \"-\" + tooltipCorner];\r\n\r\n\t\t\t\tdomClass.replace(this.domNode, newC, this._currentOrientClass || \"\");\r\n\t\t\t\tthis._currentOrientClass = newC;\r\n\r\n\t\t\t\t// Tooltip.orient() has code to reposition connector for when Tooltip is before/after anchor.\r\n\t\t\t\t// Not putting here to avoid code bloat, and since TooltipDialogs are generally above/below.\r\n\t\t\t\t// Should combine code from Tooltip and TooltipDialog.\r\n\t\t\t},\r\n\r\n\t\t\tfocus: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tFocus on first field\r\n\t\t\t\tthis._getFocusItems();\r\n\t\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t\t},\r\n\r\n\t\t\tonOpen: function(/*Object*/ pos){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tCalled when dialog is displayed.\r\n\t\t\t\t//\t\tThis is called from the dijit.popup code, and should not be called directly.\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprotected\r\n\r\n\t\t\t\tthis.orient(this.domNode, pos.aroundCorner, pos.corner);\r\n\r\n\t\t\t\t// Position the tooltip connector for middle alignment.\r\n\t\t\t\t// This could not have been done in orient() since the tooltip wasn't positioned at that time.\r\n\t\t\t\tvar aroundNodeCoords = pos.aroundNodePos;\r\n\t\t\t\tif(pos.corner.charAt(0) == 'M' && pos.aroundCorner.charAt(0) == 'M'){\r\n\t\t\t\t\tthis.connectorNode.style.top = aroundNodeCoords.y + ((aroundNodeCoords.h - this.connectorNode.offsetHeight) >> 1) - pos.y + \"px\";\r\n\t\t\t\t\tthis.connectorNode.style.left = \"\";\r\n\t\t\t\t}else if(pos.corner.charAt(1) == 'M' && pos.aroundCorner.charAt(1) == 'M'){\r\n\t\t\t\t\tthis.connectorNode.style.left = aroundNodeCoords.x + ((aroundNodeCoords.w - this.connectorNode.offsetWidth) >> 1) - pos.x + \"px\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._onShow(); // lazy load trigger  (TODO: shouldn't we load before positioning?)\r\n\t\t\t},\r\n\r\n\t\t\tonClose: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tCalled when dialog is hidden.\r\n\t\t\t\t//\t\tThis is called from the dijit.popup code, and should not be called directly.\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprotected\r\n\t\t\t\tthis.onHide();\r\n\t\t\t},\r\n\r\n\t\t\t_onKey: function(/*Event*/ evt){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tHandler for keydown events\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tKeep keyboard focus in dialog; close dialog on escape key\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\r\n\t\t\t\tif(evt.keyCode == keys.ESCAPE){\r\n\t\t\t\t\t// Use defer to avoid crash on IE, see #10396.  Not sure if this is still needed or not.\r\n\t\t\t\t\t// If this if() wasn't here, presumably dijit/popup would catch the ESCAPE key and close the popup.\r\n\t\t\t\t\tthis.defer(\"onCancel\");\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t}else if(evt.keyCode == keys.TAB){\r\n\t\t\t\t\tvar node = evt.target;\r\n\t\t\t\t\tthis._getFocusItems();\r\n\t\t\t\t\tif(this._firstFocusItem == this._lastFocusItem){\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}else if(node == this._firstFocusItem && evt.shiftKey){\r\n\t\t\t\t\t\tfocus.focus(this._lastFocusItem); // send focus to last item in dialog\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}else if(node == this._lastFocusItem && !evt.shiftKey){\r\n\t\t\t\t\t\tfocus.focus(this._firstFocusItem); // send focus to first item in dialog\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// we want the browser's default tab handling to move focus\r\n\t\t\t\t\t\t// but we don't want the tab to propagate upwards\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tTooltipDialog.extend({\r\n\t\t\t_setTitleAttr: function(/*String*/ title){\r\n\t\t\t\tthis.containerNode.title = (this.textDir && this.enforceTextDirWithUcc) ? this.enforceTextDirWithUcc(null, title) : title;\r\n\t\t\t\tthis._set(\"title\", title);\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(/*String*/ textDir){\r\n\t\t\t\tif(!this._created || this.textDir != textDir){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tif(this.textDir && this.title){\r\n\t\t\t\t\t\tthis.containerNode.title = this.enforceTextDirWithUcc(null, this.title);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn TooltipDialog;\r\n});\r\n"]}