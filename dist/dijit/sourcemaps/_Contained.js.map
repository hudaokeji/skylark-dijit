{"version":3,"sources":["_Contained.js"],"names":["define","declare","registry","_getSibling","which","node","this","domNode","nodeType","byNode","getPreviousSibling","getNextSibling","getIndexInParent","p","getParent","getIndexOfChild"],"mappings":";;;;;;;AAAAA,QACC,qBACA,cACE,SAASC,EAASC,GAKpB,OAAOD,EAAQ,mBAAoB,MAOlCE,YAAa,SAAoBC,GAOhC,IAAIC,EAAOC,KAAKC,QAChB,GACCF,EAAOA,EAAKD,EAAM,iBACZC,GAAyB,GAAjBA,EAAKG,UACpB,OAAOH,GAAQH,EAASO,OAAOJ,IAGhCK,mBAAoB,WAKnB,OAAOJ,KAAKH,YAAY,aAGzBQ,eAAgB,WAKf,OAAOL,KAAKH,YAAY,SAGzBS,iBAAkB,WAMjB,IAAIC,EAAIP,KAAKQ,YACb,OAAID,GAAMA,EAAEE,gBAGLF,EAAEE,gBAAgBT,OAFhB","file":"../_Contained.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./registry\"\t// registry.getEnclosingWidget(), registry.byNode()\r\n], function(declare, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_Contained\r\n\r\n\treturn declare(\"dijit._Contained\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets that are children of a container widget\r\n\t\t// example:\r\n\t\t//\t|\t// make a basic custom widget that knows about its parents\r\n\t\t//\t|\tdeclare(\"my.customClass\",[dijit._WidgetBase, dijit._Contained],{});\r\n\r\n\t\t_getSibling: function(/*String*/ which){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns next or previous sibling\r\n\t\t\t// which:\r\n\t\t\t//\t\tEither \"next\" or \"previous\"\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar node = this.domNode;\r\n\t\t\tdo{\r\n\t\t\t\tnode = node[which+\"Sibling\"];\r\n\t\t\t}while(node && node.nodeType != 1);\r\n\t\t\treturn node && registry.byNode(node);\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tgetPreviousSibling: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns null if this is the first child of the parent,\r\n\t\t\t//\t\totherwise returns the next element sibling to the \"left\".\r\n\r\n\t\t\treturn this._getSibling(\"previous\"); // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tgetNextSibling: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns null if this is the last child of the parent,\r\n\t\t\t//\t\totherwise returns the next element sibling to the \"right\".\r\n\r\n\t\t\treturn this._getSibling(\"next\"); // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tgetIndexInParent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the index of this widget within its container parent.\r\n\t\t\t//\t\tIt returns -1 if the parent does not exist, or if the parent\r\n\t\t\t//\t\tis not a dijit/_Container\r\n\r\n\t\t\tvar p = this.getParent();\r\n\t\t\tif(!p || !p.getIndexOfChild){\r\n\t\t\t\treturn -1; // int\r\n\t\t\t}\r\n\t\t\treturn p.getIndexOfChild(this); // int\r\n\t\t}\r\n\t});\r\n});\r\n"]}