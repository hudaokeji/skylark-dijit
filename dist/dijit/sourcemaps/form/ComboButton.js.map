{"version":3,"sources":["form/ComboButton.js"],"names":["define","declare","keys","focus","DropDownButton","template","templateString","_setIdAttr","_setTabIndexAttr","_setTitleAttr","optionsTitle","baseClass","cssStateNodes","buttonNode","titleNode","_popupStateNode","_focusedNode","_onButtonKeyDown","evt","keyCode","this","isLeftToRight","stopPropagation","preventDefault","_onArrowKeyDown","position","disabled"],"mappings":";;;;;;;AAAAA,QACC,qBACA,YACA,WACA,mBACA,yCACA,gBACE,SAASC,EAASC,EAAMC,EAAOC,EAAgBC,GAKjD,OAAOJ,EAAQ,yBAA0BG,GAiBxCE,eAAgBD,EAGhBE,WAAY,GACZC,kBAAmB,YAAa,aAChCC,cAAe,YAIfC,aAAc,GAEdC,UAAW,mBAIXC,eACCC,WAAc,kBACdC,UAAa,sBACbC,gBAAmB,wBAGpBC,aAAc,KAEdC,iBAAkB,SAAmBC,GAGjCA,EAAIC,SAAWjB,EAAKkB,KAAKC,gBAAkB,cAAgB,gBAC7DlB,EAAMA,MAAMiB,KAAKL,iBACjBG,EAAII,kBACJJ,EAAIK,mBAINC,gBAAiB,SAAmBN,GAGhCA,EAAIC,SAAWjB,EAAKkB,KAAKC,gBAAkB,aAAe,iBAC5DlB,EAAMA,MAAMiB,KAAKN,WACjBI,EAAII,kBACJJ,EAAIK,mBAINpB,MAAO,SAAoBsB,GAMtBL,KAAKM,UACRvB,EAAMA,MAAkB,SAAZsB,EAAsBL,KAAKN,UAAYM,KAAKL","file":"../../form/ComboButton.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys\r\n\t\"../focus\", // focus.focus()\r\n\t\"./DropDownButton\",\r\n\t\"dojo/text!./templates/ComboButton.html\",\r\n\t\"../a11yclick\"\t// template uses ondijitclick\r\n], function(declare, keys, focus, DropDownButton, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/ComboButton\r\n\r\n\treturn declare(\"dijit.form.ComboButton\", DropDownButton, {\r\n\t\t// summary:\r\n\t\t//\t\tA combination button and drop-down button.\r\n\t\t//\t\tUsers can click one side to \"press\" the button, or click an arrow\r\n\t\t//\t\ticon to display the drop down.\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\t<button data-dojo-type=\"dijit/form/ComboButton\" onClick=\"...\">\r\n\t\t// |\t\t<span>Hello world</span>\r\n\t\t// |\t\t<div data-dojo-type=\"dijit/Menu\">...</div>\r\n\t\t// |\t</button>\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\tvar button1 = new ComboButton({label: \"hello world\", onClick: foo, dropDown: \"myMenu\"});\r\n\t\t// |\tdojo.body().appendChild(button1.domNode);\r\n\t\t//\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Map widget attributes to DOMNode attributes.\r\n\t\t_setIdAttr: \"\", // override _FormWidgetMixin which puts id on the focusNode\r\n\t\t_setTabIndexAttr: [\"focusNode\", \"titleNode\"],\r\n\t\t_setTitleAttr: \"titleNode\",\r\n\r\n\t\t// optionsTitle: String\r\n\t\t//\t\tText that describes the options menu (accessibility)\r\n\t\toptionsTitle: \"\",\r\n\r\n\t\tbaseClass: \"dijitComboButton\",\r\n\r\n\t\t// Set classes like dijitButtonContentsHover or dijitArrowButtonActive depending on\r\n\t\t// mouse action over specified node\r\n\t\tcssStateNodes: {\r\n\t\t\t\"buttonNode\": \"dijitButtonNode\",\r\n\t\t\t\"titleNode\": \"dijitButtonContents\",\r\n\t\t\t\"_popupStateNode\": \"dijitDownArrowButton\"\r\n\t\t},\r\n\r\n\t\t_focusedNode: null,\r\n\r\n\t\t_onButtonKeyDown: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for right arrow key when focus is on left part of button\r\n\t\t\tif(evt.keyCode == keys[this.isLeftToRight() ? \"RIGHT_ARROW\" : \"LEFT_ARROW\"]){\r\n\t\t\t\tfocus.focus(this._popupStateNode);\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onArrowKeyDown: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for left arrow key when focus is on right part of button\r\n\t\t\tif(evt.keyCode == keys[this.isLeftToRight() ? \"LEFT_ARROW\" : \"RIGHT_ARROW\"]){\r\n\t\t\t\tfocus.focus(this.titleNode);\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocus: function(/*String*/ position){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocuses this widget to according to position, if specified,\r\n\t\t\t//\t\totherwise on arrow node\r\n\t\t\t// position:\r\n\t\t\t//\t\t\"start\" or \"end\"\r\n\t\t\tif(!this.disabled){\r\n\t\t\t\tfocus.focus(position == \"start\" ? this.titleNode : this._popupStateNode);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}