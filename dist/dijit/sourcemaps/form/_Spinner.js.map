{"version":3,"sources":["form/_Spinner.js"],"names":["define","declare","keys","lang","has","mouse","on","typematic","RangeBoundTextBox","template","_TextBoxMixin","defaultTimeout","minimumTimeout","timeoutChangeRate","smallDelta","largeDelta","templateString","baseClass","cssStateNodes","upArrowNode","downArrowNode","adjust","val","_arrowPressed","nodePressed","direction","increment","this","disabled","readOnly","_setValueAttr","get","selectInputText","textbox","value","length","_arrowReleased","_wheelTimer","_typematicCallback","count","node","evt","inc","key","keyCode","PAGE_UP","PAGE_DOWN","UP_ARROW","_mouseWheeled","stopPropagation","preventDefault","wheelDelta","Math","floor","scrollAmount","detail","remove","defer","_setConstraintsAttr","constraints","inherited","arguments","focusNode","undefined","min","setAttribute","removeAttribute","max","priorityChange","postCreate","own","domNode","wheel","hitch","addListener","ctrlKey","altKey","shiftKey","metaKey","DOWN_ARROW"],"mappings":"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","file":"../../form/_Spinner.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys keys.DOWN_ARROW keys.PAGE_DOWN keys.PAGE_UP keys.UP_ARROW\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/sniff\", // has(\"mozilla\")\r\n\t\"dojo/mouse\", // mouse.wheel\r\n\t\"dojo/on\",\r\n\t\"../typematic\",\r\n\t\"./RangeBoundTextBox\",\r\n\t\"dojo/text!./templates/Spinner.html\",\r\n\t\"./_TextBoxMixin\"    // selectInputText\r\n], function(declare, keys, lang, has, mouse, on, typematic, RangeBoundTextBox, template, _TextBoxMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_Spinner\r\n\r\n\treturn declare(\"dijit.form._Spinner\", RangeBoundTextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for validation widgets with a spinner.\r\n\t\t// description:\r\n\t\t//\t\tThis class basically (conceptually) extends `dijit/form/ValidationTextBox`.\r\n\t\t//\t\tIt modifies the template to have up/down arrows, and provides related handling code.\r\n\r\n\t\t// defaultTimeout: Number\r\n\t\t//\t\tNumber of milliseconds before a held arrow key or up/down button becomes typematic\r\n\t\tdefaultTimeout: 500,\r\n\r\n\t\t// minimumTimeout: Number\r\n\t\t//\t\tminimum number of milliseconds that typematic event fires when held key or button is held\r\n\t\tminimumTimeout: 10,\r\n\r\n\t\t// timeoutChangeRate: Number\r\n\t\t//\t\tFraction of time used to change the typematic timer between events.\r\n\t\t//\t\t1.0 means that each typematic event fires at defaultTimeout intervals.\r\n\t\t//\t\tLess than 1.0 means that each typematic event fires at an increasing faster rate.\r\n\t\ttimeoutChangeRate: 0.90,\r\n\r\n\t\t// smallDelta: Number\r\n\t\t//\t\tAdjust the value by this much when spinning using the arrow keys/buttons\r\n\t\tsmallDelta: 1,\r\n\r\n\t\t// largeDelta: Number\r\n\t\t//\t\tAdjust the value by this much when spinning using the PgUp/Dn keys\r\n\t\tlargeDelta: 10,\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitSpinner\",\r\n\r\n\t\t// Set classes like dijitUpArrowButtonHover or dijitDownArrowButtonActive depending on\r\n\t\t// mouse action over specified node\r\n\t\tcssStateNodes: {\r\n\t\t\t\"upArrowNode\": \"dijitUpArrowButton\",\r\n\t\t\t\"downArrowNode\": \"dijitDownArrowButton\"\r\n\t\t},\r\n\r\n\t\tadjust: function(val /*=====, delta =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function used to adjust a primitive value(Number/Date/...) by the delta amount specified.\r\n\t\t\t//\t\tThe val is adjusted in a way that makes sense to the object type.\r\n\t\t\t// val: Object\r\n\t\t\t// delta: Number\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\treturn val;\r\n\t\t},\r\n\r\n\t\t_arrowPressed: function(/*Node*/ nodePressed, /*Number*/ direction, /*Number*/ increment){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for arrow button or arrow key being pressed\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._setValueAttr(this.adjust(this.get('value'), direction * increment), false);\r\n\t\t\t_TextBoxMixin.selectInputText(this.textbox, this.textbox.value.length);\r\n\t\t},\r\n\r\n\t\t_arrowReleased: function(/*Node*/ /*===== node =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for arrow button or arrow key being released\r\n\t\t\tthis._wheelTimer = null;\r\n\t\t},\r\n\r\n\t\t_typematicCallback: function(/*Number*/ count, /*DOMNode*/ node, /*Event*/ evt){\r\n\t\t\tvar inc = this.smallDelta;\r\n\t\t\tif(node == this.textbox){\r\n\t\t\t\tvar key = evt.keyCode;\r\n\t\t\t\tinc = (key == keys.PAGE_UP || key == keys.PAGE_DOWN) ? this.largeDelta : this.smallDelta;\r\n\t\t\t\tnode = (key == keys.UP_ARROW || key == keys.PAGE_UP) ? this.upArrowNode : this.downArrowNode;\r\n\t\t\t}\r\n\t\t\tif(count == -1){\r\n\t\t\t\tthis._arrowReleased(node);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._arrowPressed(node, (node == this.upArrowNode) ? 1 : -1, inc);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_wheelTimer: null,\r\n\t\t_mouseWheeled: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse wheel listener where supported\r\n\r\n\t\t\tevt.stopPropagation();\r\n\t\t\tevt.preventDefault();\r\n\t\t\t// FIXME: Safari bubbles\r\n\r\n\t\t\t// be nice to DOH and scroll as much as the event says to\r\n\t\t\tvar wheelDelta = evt.wheelDelta / 120;\r\n\t\t\tif(Math.floor(wheelDelta) != wheelDelta){\r\n\t\t\t\t// If not an int multiple of 120, then its touchpad scrolling.\r\n\t\t\t\t// This can change very fast so just assume 1 wheel click to make it more manageable.\r\n\t\t\t\twheelDelta = evt.wheelDelta > 0 ? 1 : -1;\r\n\t\t\t}\r\n\t\t\tvar scrollAmount = evt.detail ? (evt.detail * -1) : wheelDelta;\r\n\t\t\tif(scrollAmount !== 0){\r\n\t\t\t\tvar node = this[(scrollAmount > 0 ? \"upArrowNode\" : \"downArrowNode\" )];\r\n\r\n\t\t\t\tthis._arrowPressed(node, scrollAmount, this.smallDelta);\r\n\r\n\t\t\t\tif(this._wheelTimer){\r\n\t\t\t\t\tthis._wheelTimer.remove();\r\n\t\t\t\t}\r\n\t\t\t\tthis._wheelTimer = this.defer(function(){\r\n\t\t\t\t\tthis._arrowReleased(node);\r\n\t\t\t\t}, 50);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setConstraintsAttr: function(/*Object*/ constraints){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.focusNode){ // not set when called from postMixInProperties\r\n\t\t\t\tif(this.constraints.min !== undefined){\r\n\t\t\t\t\tthis.focusNode.setAttribute(\"aria-valuemin\", this.constraints.min);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.focusNode.removeAttribute(\"aria-valuemin\");\r\n\t\t\t\t}\r\n\t\t\t\tif(this.constraints.max !== undefined){\r\n\t\t\t\t\tthis.focusNode.setAttribute(\"aria-valuemax\", this.constraints.max);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.focusNode.removeAttribute(\"aria-valuemax\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Number*/ value, /*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', ...) works.\r\n\r\n\t\t\tthis.focusNode.setAttribute(\"aria-valuenow\", value);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// extra listeners\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.domNode, mouse.wheel, lang.hitch(this, \"_mouseWheeled\")),\r\n\t\t\t\ttypematic.addListener(this.upArrowNode, this.textbox, {keyCode: keys.UP_ARROW, ctrlKey: false, altKey: false, shiftKey: false, metaKey: false}, this, \"_typematicCallback\", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout),\r\n\t\t\t\ttypematic.addListener(this.downArrowNode, this.textbox, {keyCode: keys.DOWN_ARROW, ctrlKey: false, altKey: false, shiftKey: false, metaKey: false}, this, \"_typematicCallback\", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout),\r\n\t\t\t\ttypematic.addListener(this.upArrowNode, this.textbox, {keyCode: keys.PAGE_UP, ctrlKey: false, altKey: false, shiftKey: false, metaKey: false}, this, \"_typematicCallback\", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout),\r\n\t\t\t\ttypematic.addListener(this.downArrowNode, this.textbox, {keyCode: keys.PAGE_DOWN, ctrlKey: false, altKey: false, shiftKey: false, metaKey: false}, this, \"_typematicCallback\", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout)\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n});\r\n"]}