{"version":3,"sources":["form/Select.js"],"names":["define","array","declare","domAttr","domClass","domGeometry","i18n","keys","lang","on","has","_FormSelectWidget","_HasDropDown","DropDownMenu","MenuItem","MenuSeparator","Tooltip","_KeyNavMixin","registry","template","_SelectMenu","autoFocus","buildRendering","this","inherited","arguments","domNode","setAttribute","postCreate","own","evt","preventDefault","stopPropagation","focus","found","val","parentWidget","value","isArray","length","forEach","_getChildren","child","option","focusChild","Select","baseClass","templateString","_buttonInputDisabled","required","state","message","tooltipPosition","emptyLabel","_isLoaded","_childrenLoaded","labelType","_fillContent","options","srcNodeRef","si","selectedIndex","_set","dropDown","id","add","replace","_getMenuItemForOption","label","click","hitch","item","toString","onClick","ownerDocument","dir","textDir","disabled","focusNode","_addOptionItem","addChild","getChildren","e","widget","set","_getFirst","children","_getLast","childSelector","node","byNode","getParent","onKeyboardSearch","searchString","numMatches","_loadChildren","loadMenuItems","focusedChild","destroyRecursive","_updateSelection","_loadingStore","_setValueAttr","_refreshState","_started","validate","focused","startup","valueNode","get","_setNameAttr","_setDisabledAttr","_setRequiredAttr","_setOptionsAttr","_setDisplay","newDisplay","lbl","containerNode","innerHTML","isFocused","isValid","_hasBeenBlurred","_missingMsg","show","isLeftToRight","hide","test","reset","postMixInProperties","getLocalization","missingMessage","keyNavCodes","_keyNavCodes","LEFT_ARROW","RIGHT_ARROW","_setStyleAttr","toggle","style","width","isLoaded","loadDropDown","loadCallback","destroy","preserveDom","_destroyed","_onFocus","_onBlur","_onEventAfterLoad","method","applyTextDir","_Menu","prototype","_onContainerKeydown","_onContainerKeypress"],"mappings":";;;;;;;AAAAA,QACC,mBACA,qBACA,gBACA,iBACA,oBACA,YACA,YACA,kBACA,UACA,aACA,sBACA,kBACA,kBACA,cACA,mBACA,aACA,kBACA,cACA,oCACA,4BACE,SAASC,EAAOC,EAASC,EAASC,EAAUC,EAAaC,EAAMC,EAAMC,EAAMC,EAAIC,EAC/EC,EAAmBC,EAAcC,EAAcC,EAAUC,EAAeC,EAASC,EAAcC,EAAUC,GAK3G,IAAIC,EAAclB,EAAQ,yBAA0BW,GAKnDQ,WAAW,EAEXC,eAAgB,WACfC,KAAKC,UAAUC,WAEfF,KAAKG,QAAQC,aAAa,OAAQ,YAGnCC,WAAY,WACXL,KAAKC,UAAUC,WAGfF,KAAKM,IAAIpB,EAAGc,KAAKG,QAAS,cAAe,SAASI,GACjDA,EAAIC,iBACJD,EAAIE,sBAINC,MAAO,WAGN,IAAIC,GAAQ,EACXC,EAAMZ,KAAKa,aAAaC,MACtB7B,EAAK8B,QAAQH,KACfA,EAAMA,EAAIA,EAAII,OAAS,IAErBJ,GACFlC,EAAMuC,QAAQjB,KAAKa,aAAaK,eAAgB,SAASC,GACrDA,EAAMC,QAAWR,IAAQO,EAAMC,OAAON,QACxCH,GAAQ,EACRX,KAAKqB,WAAWF,GAAO,KAEtBnB,MAEAW,GACHX,KAAKC,UAAUC,cAKdoB,EAAS3C,EAAQ,qBAAuBQ,EAAI,aAAe,UAAY,KAAMC,EAAmBC,EAAcK,IAKjH6B,UAAW,qCAEXC,eAAgB5B,EAEhB6B,qBAAsBtC,EAAI,MAAQ,WAAa,GAI/CuC,UAAU,EAIVC,MAAO,GAIPC,QAAS,GAITC,mBAIAC,WAAY,SAIZC,WAAW,EAIXC,iBAAiB,EAKjBC,UAAW,OAEXC,aAAc,WAKb,GAFAlC,KAAKC,UAAUC,WAEZF,KAAKmC,QAAQnB,SAAWhB,KAAKc,OAASd,KAAKoC,WAAW,CACxD,IAAIC,EAAKrC,KAAKoC,WAAWE,eAAiB,EAC1CtC,KAAKuC,KAAK,QAASvC,KAAKmC,QAAQE,GAAM,EAAIA,EAAK,GAAGvB,OAGnDd,KAAKwC,SAAW,IAAI3C,GAAc4C,GAAIzC,KAAKyC,GAAK,QAAS5B,aAAcb,OACvEnB,EAAS6D,IAAI1C,KAAKwC,SAASrC,QAASH,KAAKuB,UAAUoB,QAAQ,SAAU,WAGtEC,sBAAuB,SAA8CxB,GAIpE,GAAIA,EAAON,OAAUM,EAAOyB,MAGvB,CAEJ,IAAIC,EAAQ7D,EAAK8D,MAAM/C,KAAM,gBAAiBoB,GAC1C4B,EAAO,IAAIzD,GACd6B,OAAQA,EACRyB,OAA2B,SAAnB7C,KAAKiC,WAAwBb,EAAOyB,OAAS,IAAII,WACvDN,QAAQ,KAAM,SAASA,QAAQ,KAAM,QACtCvB,EAAOyB,QAAU7C,KAAK8B,WACvBoB,QAASJ,EACTK,cAAenD,KAAKmD,cACpBC,IAAKpD,KAAKoD,IACVC,QAASrD,KAAKqD,QACdC,SAAUlC,EAAOkC,WAAY,IAG9B,OADAN,EAAKO,UAAUnD,aAAa,OAAQ,UAC7B4C,EAhBP,OAAO,IAAIxD,GAAe2D,cAAenD,KAAKmD,iBAoBhDK,eAAgB,SAA8CpC,GAK1DpB,KAAKwC,UACPxC,KAAKwC,SAASiB,SAASzD,KAAK4C,sBAAsBxB,KAIpDF,aAAc,WACb,OAAIlB,KAAKwC,SAGFxC,KAAKwC,SAASkB,kBAGtBhD,MAAO,WAGN,IAAIV,KAAKsD,UAAYtD,KAAKuD,UAAU7C,MACnC,IACCV,KAAKuD,UAAU7C,QACf,MAAMiD,MAMTtC,WAAY,SAA+BuC,GAOvCA,GACF5D,KAAK6D,IAAI,QAASD,EAAOxC,SAI3B0C,UAAW,WAKV,IAAIC,EAAW/D,KAAKkB,eACpB,OAAO6C,EAAS/C,OAAS+C,EAAS,GAAK,MAGxCC,SAAU,WAKT,IAAID,EAAW/D,KAAKkB,eACpB,OAAO6C,EAAS/C,OAAS+C,EAASA,EAAS/C,OAAO,GAAK,MAGxDiD,cAAe,SAAqBC,GAMnC,OADIA,EAAOvE,EAASwE,OAAOD,KACZA,EAAKE,aAAepE,KAAKwC,UAGzC6B,iBAAkB,SAA+BrB,EAAgBzC,EAAgB+D,EAAyBC,GAMtGvB,GACFhD,KAAKqB,WAAW2B,IAIlBwB,cAAe,SAAqBC,GAQnC,IAAqB,IAAlBA,EAQF,GAJGzE,KAAKwC,kBACAxC,KAAKwC,SAASkC,aACrB1E,KAAK0E,aAAe,MAElB1E,KAAKmC,QAAQnB,OACfhB,KAAKC,UAAUC,eACX,CAGJxB,EAAMuC,QAAQjB,KAAKkB,eAAgB,SAASC,GAC3CA,EAAMwD,qBAEP,IAAI3B,EAAO,IAAIzD,GACd4D,cAAenD,KAAKmD,cACpBN,MAAO7C,KAAK8B,aAEb9B,KAAKwC,SAASiB,SAAST,QAGxBhD,KAAK4E,mBAGN5E,KAAK+B,WAAY,EACjB/B,KAAKgC,iBAAkB,EAEnBhC,KAAK6E,eAER7E,KAAK8E,cAAc9E,KAAKc,OAAO,IAIjCiE,cAAe,WACX/E,KAAKgF,UACPhF,KAAKiF,SAASjF,KAAKkF,UAIrBC,QAAS,WACRnF,KAAKC,UAAUC,WACfF,KAAK+E,iBAGND,cAAe,SAAShE,GACvBd,KAAKC,UAAUC,WACftB,EAAQiF,IAAI7D,KAAKoF,UAAW,QAASpF,KAAKqF,IAAI,UAC9CrF,KAAK+E,iBAGNO,aAAc,YAEdC,iBAAkB,SAAqBzE,GACtCd,KAAKC,UAAUC,WACfF,KAAK+E,iBAGNS,iBAAkB,SAAqB1E,GACtCd,KAAKuC,KAAK,WAAYzB,GACtBd,KAAKuD,UAAUnD,aAAa,gBAAiBU,GAC7Cd,KAAK+E,iBAGNU,gBAAiB,SAAmBtD,GACnCnC,KAAK+B,WAAY,EACjB/B,KAAKuC,KAAK,UAAWJ,IAGtBuD,YAAa,SAAoBC,GAIhC,IAAIC,GAA0B,SAAnB5F,KAAKiC,WAAwB0D,GAAc,IACnDhD,QAAQ,KAAM,SAASA,QAAQ,KAAM,QACtCgD,IAAe3F,KAAK8B,WACtB9B,KAAK6F,cAAcC,UAAY,qDAAuD9F,KAAKuB,UAAUoB,QAAQ,SAAU,UAAY,KAAOiD,EAAM,WAGjJX,SAAU,SAAqBc,GAQ9B,IAAIC,EAAUhG,KAAKsD,UAAYtD,KAAKgG,QAAQD,GAC5C/F,KAAKuC,KAAK,QAASyD,EAAU,GAAMhG,KAAKiG,gBAAkB,QAAU,cACpEjG,KAAKuD,UAAUnD,aAAa,eAAgB4F,EAAU,QAAU,QAChE,IAAIpE,EAAUoE,EAAU,GAAKhG,KAAKkG,YAOlC,OANGtE,GAAW5B,KAAKkF,SAAWlF,KAAKiG,gBAClCxG,EAAQ0G,KAAKvE,EAAS5B,KAAKG,QAASH,KAAK6B,iBAAkB7B,KAAKoG,iBAEhE3G,EAAQ4G,KAAKrG,KAAKG,SAEnBH,KAAKuC,KAAK,UAAWX,GACdoE,GAGRA,QAAS,WAIR,OAAShG,KAAK0B,UAA2B,IAAf1B,KAAKc,QAAiB,QAAQwF,KAAKtG,KAAKc,OAAS,KAG5EyF,MAAO,WAGNvG,KAAKC,UAAUC,WACfT,EAAQ4G,KAAKrG,KAAKG,SAClBH,KAAK+E,iBAGNyB,oBAAqB,WAGpBxG,KAAKC,UAAUC,WACfF,KAAKkG,YAAcnH,EAAK0H,gBAAgB,aAAc,WAAYzG,KAAKf,MAAMyH,gBAG9ErG,WAAY,WACXL,KAAKC,UAAUC,WAGfF,KAAKM,IAAIpB,EAAGc,KAAKG,QAAS,cAAe,SAASI,GACjDA,EAAIC,iBACJD,EAAIE,qBAGLT,KAAKG,QAAQC,aAAa,gBAAiB,SAI3C,IAAIuG,EAAc3G,KAAK4G,oBAChBD,EAAY3H,EAAK6H,mBACjBF,EAAY3H,EAAK8H,cAGzBC,cAAe,SAA4BjG,GAC1Cd,KAAKC,UAAUC,WACfrB,EAASmI,OAAOhH,KAAKG,QAASH,KAAKuB,UAAUoB,QAAQ,SAAU,iBAAkB3C,KAAKG,QAAQ8G,MAAMC,QAGrGC,SAAU,WACT,OAAOnH,KAAK+B,WAGbqF,aAAc,SAAsBC,GAGnCrH,KAAKwE,eAAc,GACnBxE,KAAK+B,WAAY,EACjBsF,KAGDC,QAAS,SAASC,GACdvH,KAAKwC,WAAaxC,KAAKwC,SAASgF,aAClCxH,KAAKwC,SAASmC,iBAAiB4C,UACxBvH,KAAKwC,UAEb/C,EAAQ4G,KAAKrG,KAAKG,SAClBH,KAAKC,UAAUC,YAGhBuH,SAAU,WACTzH,KAAKiF,UAAS,IAIfyC,QAAS,WACRjI,EAAQ4G,KAAKrG,KAAKG,SAClBH,KAAKC,UAAUC,WACfF,KAAKiF,UAAS,MAgBhB,SAAS0C,EAAkBC,GAC1B,OAAO,SAASrH,GACXP,KAAK+B,UAGR/B,KAAKC,UAAU2H,EAAQ1H,WAFvBF,KAAKoH,aAAanI,EAAK8D,MAAM/C,KAAM4H,EAAQrH,KAS9C,OAxBGpB,EAAI,eACNmC,EAAS3C,EAAQ,oBAAqB2C,GACrCoE,YAAa,SAAoBC,GAChC3F,KAAKC,UAAUC,WACfF,KAAK6H,aAAa7H,KAAK6F,mBAK1BvE,EAAOwG,MAAQjI,EAYfyB,EAAOyG,UAAUC,oBAAsBL,EAAkB,uBACzDrG,EAAOyG,UAAUE,qBAAuBN,EAAkB,wBAEnDrG","file":"../../form/Select.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove domClass.toggle\r\n\t\"dojo/dom-geometry\", // domGeometry.setMarginBox\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/keys\",\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"./_FormSelectWidget\",\r\n\t\"../_HasDropDown\",\r\n\t\"../DropDownMenu\",\r\n\t\"../MenuItem\",\r\n\t\"../MenuSeparator\",\r\n\t\"../Tooltip\",\r\n\t\"../_KeyNavMixin\",\r\n\t\"../registry\", // registry.byNode\r\n\t\"dojo/text!./templates/Select.html\",\r\n\t\"dojo/i18n!./nls/validate\"\r\n], function(array, declare, domAttr, domClass, domGeometry, i18n, keys, lang, on, has,\r\n\t\t\t_FormSelectWidget, _HasDropDown, DropDownMenu, MenuItem, MenuSeparator, Tooltip, _KeyNavMixin, registry, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/Select\r\n\r\n\tvar _SelectMenu = declare(\"dijit.form._SelectMenu\", DropDownMenu, {\r\n\t\t// summary:\r\n\t\t//\t\tAn internally-used menu for dropdown that allows us a vertical scrollbar\r\n\r\n\t\t// Override Menu.autoFocus setting so that opening a Select highlights the current value.\r\n\t\tautoFocus: true,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis.domNode.setAttribute(\"role\", \"listbox\");\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// stop mousemove from selecting text on IE to be consistent with other browsers\r\n\t\t\tthis.own(on(this.domNode, \"selectstart\", function(evt){\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridden so that the previously selected value will be focused instead of only the first item\r\n\t\t\tvar found = false,\r\n\t\t\t\tval = this.parentWidget.value;\r\n\t\t\tif(lang.isArray(val)){\r\n\t\t\t\tval = val[val.length - 1];\r\n\t\t\t}\r\n\t\t\tif(val){ // if focus selected\r\n\t\t\t\tarray.forEach(this.parentWidget._getChildren(), function(child){\r\n\t\t\t\t\tif(child.option && (val === child.option.value)){ // find menu item widget with this value\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\tthis.focusChild(child, false); // focus previous selection\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\tif(!found){\r\n\t\t\t\tthis.inherited(arguments); // focus first item by default\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tvar Select = declare(\"dijit.form.Select\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), [_FormSelectWidget, _HasDropDown, _KeyNavMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tThis is a \"styleable\" select box - it is basically a DropDownButton which\r\n\t\t//\t\tcan take a `<select>` as its input.\r\n\r\n\t\tbaseClass: \"dijitSelect dijitValidationTextBox\",\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t_buttonInputDisabled: has(\"ie\") ? \"disabled\" : \"\", // allows IE to disallow focus, but Firefox cannot be disabled for mousedown events\r\n\r\n\t\t// required: Boolean\r\n\t\t//\t\tCan be true or false, default is false.\r\n\t\trequired: false,\r\n\r\n\t\t// state: [readonly] String\r\n\t\t//\t\t\"Incomplete\" if this select is required but unset (i.e. blank value), \"\" otherwise\r\n\t\tstate: \"\",\r\n\r\n\t\t// message: String\r\n\t\t//\t\tCurrently displayed error/prompt message\r\n\t\tmessage: \"\",\r\n\r\n\t\t// tooltipPosition: String[]\r\n\t\t//\t\tSee description of `dijit/Tooltip.defaultPosition` for details on this parameter.\r\n\t\ttooltipPosition: [],\r\n\r\n\t\t// emptyLabel: string\r\n\t\t//\t\tWhat to display in an \"empty\" dropdown\r\n\t\temptyLabel: \"&#160;\", // &nbsp;\r\n\r\n\t\t// _isLoaded: Boolean\r\n\t\t//\t\tWhether or not we have been loaded\r\n\t\t_isLoaded: false,\r\n\r\n\t\t// _childrenLoaded: Boolean\r\n\t\t//\t\tWhether or not our children have been loaded\r\n\t\t_childrenLoaded: false,\r\n\r\n\t\t// labelType: String\r\n\t\t//\t\tSpecifies how to interpret the labelAttr in the data store items.\r\n\t\t//\t\tCan be \"html\" or \"text\".\r\n\t\tlabelType: \"html\",\r\n\r\n\t\t_fillContent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the value to be the first, or the selected index\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t// set value from selected option\r\n\t\t\tif(this.options.length && !this.value && this.srcNodeRef){\r\n\t\t\t\tvar si = this.srcNodeRef.selectedIndex || 0; // || 0 needed for when srcNodeRef is not a SELECT\r\n\t\t\t\tthis._set(\"value\", this.options[si >= 0 ? si : 0].value);\r\n\t\t\t}\r\n\t\t\t// Create the dropDown widget\r\n\t\t\tthis.dropDown = new _SelectMenu({ id: this.id + \"_menu\", parentWidget: this });\r\n\t\t\tdomClass.add(this.dropDown.domNode, this.baseClass.replace(/\\s+|$/g, \"Menu \"));\r\n\t\t},\r\n\r\n\t\t_getMenuItemForOption: function(/*_FormSelectWidget.__SelectOption*/ option){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFor the given option, return the menu item that should be\r\n\t\t\t//\t\tused to display it.  This can be overridden as needed\r\n\t\t\tif(!option.value && !option.label){\r\n\t\t\t\t// We are a separator (no label set for it)\r\n\t\t\t\treturn new MenuSeparator({ownerDocument: this.ownerDocument});\r\n\t\t\t}else{\r\n\t\t\t\t// Just a regular menu option\r\n\t\t\t\tvar click = lang.hitch(this, \"_setValueAttr\", option);\r\n\t\t\t\tvar item = new MenuItem({\r\n\t\t\t\t\toption: option,\r\n\t\t\t\t\tlabel: (this.labelType === 'text' ? (option.label || '').toString()\r\n\t\t\t\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;') :\r\n\t\t\t\t\t\toption.label) || this.emptyLabel,\r\n\t\t\t\t\tonClick: click,\r\n\t\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\t\tdir: this.dir,\r\n\t\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\t\tdisabled: option.disabled || false\r\n\t\t\t\t});\r\n\t\t\t\titem.focusNode.setAttribute(\"role\", \"option\");\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_addOptionItem: function(/*_FormSelectWidget.__SelectOption*/ option){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFor the given option, add an option to our dropdown.\r\n\t\t\t//\t\tIf the option doesn't have a value, then a separator is added\r\n\t\t\t//\t\tin that place.\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\tthis.dropDown.addChild(this._getMenuItemForOption(option));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getChildren: function(){\r\n\t\t\tif(!this.dropDown){\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\treturn this.dropDown.getChildren();\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// Override _KeyNavMixin::focus(), which calls focusFirstChild().\r\n\t\t\t// We just want the standard form widget behavior.\r\n\t\t\tif(!this.disabled && this.focusNode.focus){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis.focusNode.focus();\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t/*squelch errors from hidden nodes*/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocusChild: function(/*dijit/_WidgetBase*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the value to the given option, used during search by letter.\r\n\t\t\t// widget:\r\n\t\t\t//\t\tReference to option's widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(widget){\r\n\t\t\t\tthis.set('value', widget.option);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getFirst: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the first child widget.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar children = this._getChildren();\r\n\t\t\treturn children.length ? children[0] : null;\r\n\t\t},\r\n\r\n\t\t_getLast: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the last child widget.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar children = this._getChildren();\r\n\t\t\treturn children.length ? children[children.length-1] : null;\r\n\t\t},\r\n\r\n\t\tchildSelector: function(/*DOMNode*/ node){\r\n\t\t\t// Implement _KeyNavMixin.childSelector, to identify focusable child nodes.\r\n\t\t\t// If we allowed a dojo/query dependency from this module this could more simply be a string \"> *\"\r\n\t\t\t// instead of this function.\r\n\r\n\t\t\tvar node = registry.byNode(node);\r\n\t\t\treturn node && node.getParent() == this.dropDown;\r\n\t\t},\r\n\r\n\t\tonKeyboardSearch: function(/*dijit/_WidgetBase*/ item, /*Event*/ evt, /*String*/ searchString, /*Number*/ numMatches){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen a key is pressed that matches a child item,\r\n\t\t\t//\t\tthis method is called so that a widget can take appropriate action is necessary.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(item){\r\n\t\t\t\tthis.focusChild(item);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_loadChildren: function(/*Boolean*/ loadMenuItems){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResets the menu and the length attribute of the button - and\r\n\t\t\t//\t\tensures that the label is appropriately set.\r\n\t\t\t// loadMenuItems: Boolean\r\n\t\t\t//\t\tactually loads the child menu items - we only do this when we are\r\n\t\t\t//\t\tpopulating for showing the dropdown.\r\n\r\n\t\t\tif(loadMenuItems === true){\r\n\t\t\t\t// this.inherited destroys this.dropDown's child widgets (MenuItems).\r\n\t\t\t\t// Avoid this.dropDown (Menu widget) having a pointer to a destroyed widget (which will cause\r\n\t\t\t\t// issues later in _setSelected). (see #10296)\r\n\t\t\t\tif(this.dropDown){\r\n\t\t\t\t\tdelete this.dropDown.focusedChild;\r\n\t\t\t\t\tthis.focusedChild = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.options.length){\r\n\t\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Drop down menu is blank but add one blank entry just so something appears on the screen\r\n\t\t\t\t\t// to let users know that they are no choices (mimicing native select behavior)\r\n\t\t\t\t\tarray.forEach(this._getChildren(), function(child){\r\n\t\t\t\t\t\tchild.destroyRecursive();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar item = new MenuItem({\r\n\t\t\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\t\t\tlabel: this.emptyLabel\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.dropDown.addChild(item);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t}\r\n\r\n\t\t\tthis._isLoaded = false;\r\n\t\t\tthis._childrenLoaded = true;\r\n\r\n\t\t\tif(!this._loadingStore){\r\n\t\t\t\t// Don't call this if we are loading - since we will handle it later\r\n\t\t\t\tthis._setValueAttr(this.value, false);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_refreshState: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\tthis.validate(this.focused);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._refreshState(); // after all _set* methods have run\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(value){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomAttr.set(this.valueNode, \"value\", this.get(\"value\"));\r\n\t\t\tthis._refreshState();\t// to update this.state\r\n\t\t},\r\n\r\n\t\t_setNameAttr: \"valueNode\",\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._refreshState();\t// to update this.state\r\n\t\t},\r\n\r\n\t\t_setRequiredAttr: function(/*Boolean*/ value){\r\n\t\t\tthis._set(\"required\", value);\r\n\t\t\tthis.focusNode.setAttribute(\"aria-required\", value);\r\n\t\t\tthis._refreshState();\t// to update this.state\r\n\t\t},\r\n\r\n\t\t_setOptionsAttr: function(/*Array*/ options){\r\n\t\t\tthis._isLoaded = false;\r\n\t\t\tthis._set('options', options);\r\n\t\t},\r\n\r\n\t\t_setDisplay: function(/*String*/ newDisplay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the display for the given value (or values)\r\n\r\n\t\t\tvar lbl = (this.labelType === 'text' ? (newDisplay || '')\r\n\t\t\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;') :\r\n\t\t\t\t\tnewDisplay) || this.emptyLabel;\r\n\t\t\tthis.containerNode.innerHTML = '<span role=\"option\" class=\"dijitReset dijitInline ' + this.baseClass.replace(/\\s+|$/g, \"Label \") + '\">' + lbl + '</span>';\r\n\t\t},\r\n\r\n\t\tvalidate: function(/*Boolean*/ isFocused){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled by oninit, onblur, and onkeypress, and whenever required/disabled state changes\r\n\t\t\t// description:\r\n\t\t\t//\t\tShow missing or invalid messages if appropriate, and highlight textbox field.\r\n\t\t\t//\t\tUsed when a select is initially set to no value and the user is required to\r\n\t\t\t//\t\tset the value.\r\n\r\n\t\t\tvar isValid = this.disabled || this.isValid(isFocused);\r\n\t\t\tthis._set(\"state\", isValid ? \"\" : (this._hasBeenBlurred ? \"Error\" : \"Incomplete\"));\r\n\t\t\tthis.focusNode.setAttribute(\"aria-invalid\", isValid ? \"false\" : \"true\");\r\n\t\t\tvar message = isValid ? \"\" : this._missingMsg;\r\n\t\t\tif(message && this.focused && this._hasBeenBlurred){\r\n\t\t\t\tTooltip.show(message, this.domNode, this.tooltipPosition, !this.isLeftToRight());\r\n\t\t\t}else{\r\n\t\t\t\tTooltip.hide(this.domNode);\r\n\t\t\t}\r\n\t\t\tthis._set(\"message\", message);\r\n\t\t\treturn isValid;\r\n\t\t},\r\n\r\n\t\tisValid: function(/*Boolean*/ /*===== isFocused =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhether or not this is a valid value.  The only way a Select\r\n\t\t\t//\t\tcan be invalid is when it's required but nothing is selected.\r\n\t\t\treturn (!this.required || this.value === 0 || !(/^\\s*$/.test(this.value || \"\"))); // handle value is null or undefined\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridden so that the state will be cleared.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tTooltip.hide(this.domNode);\r\n\t\t\tthis._refreshState();\t// to update this.state\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the missing message\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._missingMsg = i18n.getLocalization(\"dijit.form\", \"validate\", this.lang).missingMessage;\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// stop mousemove from selecting text on IE to be consistent with other browsers\r\n\t\t\tthis.own(on(this.domNode, \"selectstart\", function(evt){\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t}));\r\n\r\n\t\t\tthis.domNode.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n\t\t\t// Prevent _KeyNavMixin from calling stopPropagation() on left and right arrow keys, thus breaking\r\n\t\t\t// navigation when Select inside Toolbar.\r\n\t\t\tvar keyNavCodes = this._keyNavCodes;\r\n\t\t\tdelete keyNavCodes[keys.LEFT_ARROW];\r\n\t\t\tdelete keyNavCodes[keys.RIGHT_ARROW];\r\n\t\t},\r\n\r\n\t\t_setStyleAttr: function(/*String||Object*/ value){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.toggle(this.domNode, this.baseClass.replace(/\\s+|$/g, \"FixedWidth \"), !!this.domNode.style.width);\r\n\t\t},\r\n\r\n\t\tisLoaded: function(){\r\n\t\t\treturn this._isLoaded;\r\n\t\t},\r\n\r\n\t\tloadDropDown: function(/*Function*/ loadCallback){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tpopulates the menu\r\n\t\t\tthis._loadChildren(true);\r\n\t\t\tthis._isLoaded = true;\r\n\t\t\tloadCallback();\r\n\t\t},\r\n\r\n\t\tdestroy: function(preserveDom){\r\n\t\t\tif(this.dropDown && !this.dropDown._destroyed){\r\n\t\t\t\tthis.dropDown.destroyRecursive(preserveDom);\r\n\t\t\t\tdelete this.dropDown;\r\n\t\t\t}\r\n\t\t\tTooltip.hide(this.domNode);\t// in case Select (or enclosing Dialog) destroyed while tooltip shown\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onFocus: function(){\r\n\t\t\tthis.validate(true);\t// show tooltip if second focus of required tooltip, but no selection\r\n\t\t\t// Note: not calling superclass _onFocus() to avoid _KeyNavMixin::_onFocus() setting tabIndex --> -1\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\tTooltip.hide(this.domNode);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.validate(false);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tSelect = declare(\"dijit.form.Select\", Select, {\r\n\t\t\t_setDisplay: function(/*String*/ newDisplay){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.applyTextDir(this.containerNode);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tSelect._Menu = _SelectMenu;\t// for monkey patching\r\n\r\n\t// generic event helper to ensure the dropdown items are loaded before the real event handler is called\r\n\tfunction _onEventAfterLoad(method){\r\n\t\treturn function(evt){\r\n\t\t\tif(!this._isLoaded){\r\n\t\t\t\tthis.loadDropDown(lang.hitch(this, method, evt));\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(method, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\tSelect.prototype._onContainerKeydown = _onEventAfterLoad(\"_onContainerKeydown\");\r\n\tSelect.prototype._onContainerKeypress = _onEventAfterLoad(\"_onContainerKeypress\");\r\n\r\n\treturn Select;\r\n});\r\n"]}