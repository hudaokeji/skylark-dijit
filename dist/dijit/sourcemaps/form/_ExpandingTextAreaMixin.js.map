{"version":3,"sources":["form/_ExpandingTextAreaMixin.js"],"names":["define","declare","domConstruct","has","lang","on","win","Viewport","add","body","te","create","rows","cols","value","style","zoom","fontSize","height","overflow","visibility","position","border","margin","padding","boxSizing","MsBoxSizing","WebkitBoxSizing","MozBoxSizing","needsHelpShrinking","scrollHeight","clientHeight","removeChild","_setValueAttr","this","inherited","arguments","resize","postCreate","textarea","textbox","overflowY","own","hitch","startup","_resizeLater","_onInput","e","_estimateHeight","match","length","defer","textareaScrollHeight","empty","sh","scrollTop","busyResizing","offsetHeight","newH","Math","max","newHpx","thisScrollHeight","newScrollHeight","origMinHeight","minHeight","decrement","origScrollTop","change"],"mappings":";;;;;;;AAAAA,QACC,qBACA,qBACA,WACA,kBACA,UACA,oBACA,eACE,SAASC,EAASC,EAAcC,EAAKC,EAAMC,EAAIC,EAAKC,GAmBtD,OAbAJ,EAAIK,IAAI,gCAAiC,WACxC,IAAIC,EAAOH,EAAIG,OACdC,EAAKR,EAAaS,OAAO,YACzBC,KAAK,IACLC,KAAK,KACLC,MAAO,IACPC,OAAQC,KAAK,EAAGC,SAAS,OAAQC,OAAO,OAAQC,SAAS,SAAUC,WAAW,SAAUC,SAAS,WAAYC,OAAO,kBAAmBC,OAAO,IAAKC,QAAQ,IAAKC,UAAW,aAAcC,YAAa,aAAcC,gBAAiB,aAAcC,aAAc,eAC/PnB,EAAM,QACLoB,EAAqBnB,EAAGoB,cAAgBpB,EAAGqB,aAE/C,OADAtB,EAAKuB,YAAYtB,GACVmB,IAGD5B,EAAQ,qCAAsC,MAIpDgC,cAAe,WACdC,KAAKC,UAAUC,WACfF,KAAKG,UAGNC,WAAY,WACXJ,KAAKC,UAAUC,WACf,IAAIG,EAAWL,KAAKM,QACpBD,EAASxB,MAAM0B,UAAY,SAC3BP,KAAKQ,IAAIrC,EAAGkC,EAAU,gBAAiBnC,EAAKuC,MAAMT,KAAM,mBAGzDU,QAAS,WACRV,KAAKC,UAAUC,WACfF,KAAKQ,IAAInC,EAASF,GAAG,SAAUD,EAAKuC,MAAMT,KAAM,kBAChDA,KAAKW,gBAGNC,SAAU,SAASC,GAClBb,KAAKC,UAAUC,WACfF,KAAKG,UAGNW,gBAAiB,WAMhB,IAAIT,EAAWL,KAAKM,QAEpBD,EAAS3B,MAAQ2B,EAASzB,MAAMmC,MAAM,YAAcC,OAAS,GAG9DL,aAAc,WACbX,KAAKiB,MAAM,WAGZd,OAAQ,WAIP,IAAIE,EAAWL,KAAKM,QAEpB,SAASY,IACR,IAAIC,GAAQ,EACU,KAAnBd,EAASzB,QACXyB,EAASzB,MAAQ,IACjBuC,GAAQ,GAET,IAAIC,EAAKf,EAAST,aAElB,OADGuB,IAAQd,EAASzB,MAAQ,IACrBwC,EAIR,GAD+B,UAA5Bf,EAASxB,MAAM0B,YAAwBF,EAASgB,UAAY,IAC5DrB,KAAKsB,aAAR,CAEA,GADAtB,KAAKsB,cAAe,EACjBJ,KAA0Bb,EAASkB,aAAa,CAClD,IAAIC,EAAON,IAAyBO,KAAKC,IAAIrB,EAASkB,aAAelB,EAASR,aAAc,GACxF8B,EAASH,EAAO,KAKpB,GAJGG,GAAUtB,EAASxB,MAAMG,SAC3BqB,EAASxB,MAAMG,OAAS2C,EACxBtB,EAAS3B,KAAO,GAEdT,EAAI,iCAAiC,CACvC,IAIC2D,EAHAC,EADsBX,IAEtBY,EAAgBzB,EAASxB,MAAMkD,UAC/BC,EAAY,EAEZC,EAAgB5B,EAASgB,UAG1B,IAFAhB,EAASxB,MAAMkD,UAAYJ,EAC3BtB,EAASxB,MAAMG,OAAS,OAClBwC,EAAO,GAAE,CACdnB,EAASxB,MAAMkD,UAAYN,KAAKC,IAAIF,EAAOQ,EAAW,GAAK,KAE3D,IAAIE,EAASL,GADbD,EAAmBV,KAGnB,GADAM,GAAQU,EACLA,EAASF,EACX,MAEDH,EAAkBD,EAClBI,IAAc,EAEf3B,EAASxB,MAAMG,OAASwC,EAAO,KAC/BnB,EAASxB,MAAMkD,UAAYD,EAC3BzB,EAASgB,UAAYY,EAEtB5B,EAASxB,MAAM0B,UAAYW,IAAyBb,EAASR,aAAe,OAAS,SACtD,UAA5BQ,EAASxB,MAAM0B,YAAwBF,EAASgB,UAAY,QAG/DrB,KAAKc,kBAENd,KAAKsB,cAAe","file":"../../form/_ExpandingTextAreaMixin.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.create\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"../Viewport\"\r\n], function(declare, domConstruct, has, lang, on, win, Viewport){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ExpandingTextAreaMixin\r\n\r\n\t// feature detection, true for mozilla and webkit\r\n\thas.add(\"textarea-needs-help-shrinking\", function(){\r\n\t\tvar body = win.body(),\t// note: if multiple documents exist, doesn't matter which one we use\r\n\t\t\tte = domConstruct.create('textarea', {\r\n\t\t\trows:\"5\",\r\n\t\t\tcols:\"20\",\r\n\t\t\tvalue: ' ',\r\n\t\t\tstyle: {zoom:1, fontSize:\"12px\", height:\"96px\", overflow:'hidden', visibility:'hidden', position:'absolute', border:\"5px solid white\", margin:\"0\", padding:\"0\", boxSizing: 'border-box', MsBoxSizing: 'border-box', WebkitBoxSizing: 'border-box', MozBoxSizing: 'border-box' }\r\n\t\t}, body, \"last\");\r\n\t\tvar needsHelpShrinking = te.scrollHeight >= te.clientHeight;\r\n\t\tbody.removeChild(te);\r\n\t\treturn needsHelpShrinking;\r\n\t});\r\n\r\n\treturn declare(\"dijit.form._ExpandingTextAreaMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for textarea widgets to add auto-expanding capability\r\n\r\n\t\t_setValueAttr: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar textarea = this.textbox;\r\n\t\t\ttextarea.style.overflowY = \"hidden\";\r\n\t\t\tthis.own(on(textarea, \"focus, resize\", lang.hitch(this, \"_resizeLater\")));\r\n\t\t},\r\n\r\n\t\tstartup: function(){ \r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.own(Viewport.on(\"resize\", lang.hitch(this, \"_resizeLater\")));\r\n\t\t\tthis._resizeLater();\r\n\t\t},\r\n\r\n\t\t_onInput: function(e){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\r\n\t\t_estimateHeight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApproximate the height when the textarea is invisible with the number of lines in the text.\r\n\t\t\t//\t\tFails when someone calls setValue with a long wrapping line, but the layout fixes itself when the user clicks inside so . . .\r\n\t\t\t//\t\tIn IE, the resize event is supposed to fire when the textarea becomes visible again and that will correct the size automatically.\r\n\t\t\t//\r\n\t\t\tvar textarea = this.textbox;\r\n\t\t\t// #rows = #newlines+1\r\n\t\t\ttextarea.rows = (textarea.value.match(/\\n/g) || []).length + 1;\r\n\t\t},\r\n\r\n\t\t_resizeLater: function(){\r\n\t\t\tthis.defer(\"resize\");\r\n\t\t},\r\n\r\n\t\tresize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResizes the textarea vertically (should be called after a style/value change)\r\n\r\n\t\t\tvar textarea = this.textbox;\r\n\r\n\t\t\tfunction textareaScrollHeight(){\r\n\t\t\t\tvar empty = false;\r\n\t\t\t\tif(textarea.value === ''){\r\n\t\t\t\t\ttextarea.value = ' ';\r\n\t\t\t\t\tempty = true;\r\n\t\t\t\t}\r\n\t\t\t\tvar sh = textarea.scrollHeight;\r\n\t\t\t\tif(empty){ textarea.value = ''; }\r\n\t\t\t\treturn sh;\r\n\t\t\t}\r\n\r\n\t\t\tif(textarea.style.overflowY == \"hidden\"){ textarea.scrollTop = 0; }\r\n\t\t\tif(this.busyResizing){ return; }\r\n\t\t\tthis.busyResizing = true;\r\n\t\t\tif(textareaScrollHeight() || textarea.offsetHeight){\r\n\t\t\t\tvar newH = textareaScrollHeight() + Math.max(textarea.offsetHeight - textarea.clientHeight, 0);\r\n\t\t\t\tvar newHpx = newH + \"px\";\r\n\t\t\t\tif(newHpx != textarea.style.height){\r\n\t\t\t\t\ttextarea.style.height = newHpx;\r\n\t\t\t\t\ttextarea.rows = 1; // rows can act like a minHeight if not cleared\r\n\t\t\t\t}\r\n\t\t\t\tif(has(\"textarea-needs-help-shrinking\")){\r\n\t\t\t\t\tvar\torigScrollHeight = textareaScrollHeight(),\r\n\t\t\t\t\t\tnewScrollHeight = origScrollHeight,\r\n\t\t\t\t\t\torigMinHeight = textarea.style.minHeight,\r\n\t\t\t\t\t\tdecrement = 4, // not too fast, not too slow\r\n\t\t\t\t\t\tthisScrollHeight,\r\n\t\t\t\t\t\torigScrollTop = textarea.scrollTop;\r\n\t\t\t\t\ttextarea.style.minHeight = newHpx; // maintain current height\r\n\t\t\t\t\ttextarea.style.height = \"auto\"; // allow scrollHeight to change\r\n\t\t\t\t\twhile(newH > 0){\r\n\t\t\t\t\t\ttextarea.style.minHeight = Math.max(newH - decrement, 4) + \"px\";\r\n\t\t\t\t\t\tthisScrollHeight = textareaScrollHeight();\r\n\t\t\t\t\t\tvar change = newScrollHeight - thisScrollHeight;\r\n\t\t\t\t\t\tnewH -= change;\r\n\t\t\t\t\t\tif(change < decrement){\r\n\t\t\t\t\t\t\tbreak; // scrollHeight didn't shrink\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewScrollHeight = thisScrollHeight;\r\n\t\t\t\t\t\tdecrement <<= 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttextarea.style.height = newH + \"px\";\r\n\t\t\t\t\ttextarea.style.minHeight = origMinHeight;\r\n\t\t\t\t\ttextarea.scrollTop = origScrollTop;\r\n\t\t\t\t}\r\n\t\t\t\ttextarea.style.overflowY = textareaScrollHeight() > textarea.clientHeight ? \"auto\" : \"hidden\";\r\n\t\t\t\tif(textarea.style.overflowY == \"hidden\"){ textarea.scrollTop = 0; }\r\n\t\t\t}else{\r\n\t\t\t\t// hidden content of unknown size\r\n\t\t\t\tthis._estimateHeight();\r\n\t\t\t}\r\n\t\t\tthis.busyResizing = false;\r\n\t\t}\r\n\t});\r\n});\r\n"]}