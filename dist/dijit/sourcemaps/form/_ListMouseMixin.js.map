{"version":3,"sources":["form/_ListMouseMixin.js"],"names":["define","declare","on","touch","_ListBase","postCreate","this","inherited","arguments","domNode","dojoClick","_listConnect","_onClick","evt","target","_setSelectedAttr","_deferredClick","remove","defer","onClick","_onMouseDown","_hoveredNode","onUnhover","_isDragging","_onMouseUp","selectedNode","selected","hoveredNode","_onMouseOut","_cancelDrag","Date","getTime","_onMouseOver","onHover"],"mappings":";;;;;;;AAAAA,QACC,qBACA,UACA,aACA,eACE,SAASC,EAASC,EAAIC,EAAOC,GAK/B,OAAOH,EAAQ,6BAA8BG,GAS5CC,WAAY,WACXC,KAAKC,UAAUC,WAGfF,KAAKG,QAAQC,WAAY,EAEzBJ,KAAKK,aAAa,QAAS,YAC3BL,KAAKK,aAAa,YAAa,gBAC/BL,KAAKK,aAAa,UAAW,cAC7BL,KAAKK,aAAa,YAAa,gBAC/BL,KAAKK,aAAa,WAAY,gBAG/BC,SAAU,SAAmBC,EAAiBC,GAC7CR,KAAKS,iBAAiBD,GAAQ,GAC3BR,KAAKU,gBACPV,KAAKU,eAAeC,SAErBX,KAAKU,eAAiBV,KAAKY,MAAM,WAChCZ,KAAKU,eAAiB,KACtBV,KAAKa,QAAQL,MAIfM,aAAc,SAAmBP,EAAiBC,GAC9CR,KAAKe,eACPf,KAAKgB,UAAUhB,KAAKe,cACpBf,KAAKe,aAAe,MAErBf,KAAKiB,aAAc,EACnBjB,KAAKS,iBAAiBD,GAAQ,IAG/BU,WAAY,SAAmBX,EAAiBC,GAC/CR,KAAKiB,aAAc,EACnB,IAAIE,EAAenB,KAAKoB,SACpBC,EAAcrB,KAAKe,aACpBI,GAAgBX,GAAUW,EAC5BnB,KAAKY,MAAM,WACVZ,KAAKM,SAASC,EAAKY,KAEZE,GACRrB,KAAKY,MAAM,WACVZ,KAAKM,SAASC,EAAKc,MAKtBC,YAAa,SAAmBf,EAAiBC,GAC7CR,KAAKe,eACPf,KAAKgB,UAAUhB,KAAKe,cACpBf,KAAKe,aAAe,MAElBf,KAAKiB,cACPjB,KAAKuB,aAAc,IAAKC,MAAQC,UAAY,MAI9CC,aAAc,SAAmBnB,EAAiBC,GAC9CR,KAAKuB,eACI,IAAKC,MAAQC,UACdzB,KAAKuB,cACdvB,KAAKiB,aAAc,GAEpBjB,KAAKuB,YAAc,MAEpBvB,KAAKe,aAAeP,EACpBR,KAAK2B,QAAQnB,GACVR,KAAKiB,aACPjB,KAAKS,iBAAiBD,GAAQ","file":"../../form/_ListMouseMixin.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"./_ListBase\"\r\n], function(declare, on, touch, _ListBase){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ListMouseMixin\r\n\r\n\treturn declare(\"dijit.form._ListMouseMixin\", _ListBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin to handle mouse or touch events for a focus-less menu\r\n\t\t//\t\tAbstract methods that must be defined externally:\r\n\t\t//\r\n\t\t//\t\t- onClick: item was chosen (mousedown somewhere on the menu and mouseup somewhere on the menu)\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Add flag to use normalized click handling from dojo/touch\r\n\t\t\tthis.domNode.dojoClick = true;\r\n\r\n\t\t\tthis._listConnect(\"click\", \"_onClick\");\r\n\t\t\tthis._listConnect(\"mousedown\", \"_onMouseDown\");\r\n\t\t\tthis._listConnect(\"mouseup\", \"_onMouseUp\");\r\n\t\t\tthis._listConnect(\"mouseover\", \"_onMouseOver\");\r\n\t\t\tthis._listConnect(\"mouseout\", \"_onMouseOut\");\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tthis._setSelectedAttr(target, false);\r\n\t\t\tif(this._deferredClick){\r\n\t\t\t\tthis._deferredClick.remove();\r\n\t\t\t}\r\n\t\t\tthis._deferredClick = this.defer(function(){\r\n\t\t\t\tthis._deferredClick = null;\r\n\t\t\t\tthis.onClick(target);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onMouseDown: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tif(this._hoveredNode){\r\n\t\t\t\tthis.onUnhover(this._hoveredNode);\r\n\t\t\t\tthis._hoveredNode = null;\r\n\t\t\t}\r\n\t\t\tthis._isDragging = true;\r\n\t\t\tthis._setSelectedAttr(target, false);\r\n\t\t},\r\n\r\n\t\t_onMouseUp: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tthis._isDragging = false;\r\n\t\t\tvar selectedNode = this.selected;\r\n\t\t\tvar hoveredNode = this._hoveredNode;\r\n\t\t\tif(selectedNode && target == selectedNode){\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis._onClick(evt, selectedNode);\r\n\t\t\t\t});\r\n\t\t\t}else if(hoveredNode){ // drag to select\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis._onClick(evt, hoveredNode);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onMouseOut: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tif(this._hoveredNode){\r\n\t\t\t\tthis.onUnhover(this._hoveredNode);\r\n\t\t\t\tthis._hoveredNode = null;\r\n\t\t\t}\r\n\t\t\tif(this._isDragging){\r\n\t\t\t\tthis._cancelDrag = (new Date()).getTime() + 1000; // cancel in 1 second if no _onMouseOver fires\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onMouseOver: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tif(this._cancelDrag){\r\n\t\t\t\tvar time = (new Date()).getTime();\r\n\t\t\t\tif(time > this._cancelDrag){\r\n\t\t\t\t\tthis._isDragging = false;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cancelDrag = null;\r\n\t\t\t}\r\n\t\t\tthis._hoveredNode = target;\r\n\t\t\tthis.onHover(target);\r\n\t\t\tif(this._isDragging){\r\n\t\t\t\tthis._setSelectedAttr(target, false);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}