{"version":3,"sources":["form/_FormWidget.js"],"names":["define","declare","has","kernel","ready","_Widget","_CssStateMixin","_TemplatedMixin","_FormWidgetMixin","require","setDisabled","disabled","deprecated","this","set","setValue","value","getValue","declaredClass","get","postMixInProperties","nameAttrSetting","name","replace","inherited","arguments"],"mappings":";;;;;;;AAAAA,QACC,qBACA,aACA,oBACA,aACA,aACA,oBACA,qBACA,sBACE,SAASC,EAASC,EAAKC,EAAQC,EAAOC,EAASC,EAAgBC,EAAiBC,GAalF,OAPGN,EAAI,0BACNE,EAAM,EAAG,WAERK,SADgB,kCAKXR,EAAQ,0BAA2BI,EAASE,EAAiBD,EAAgBE,IAYnFE,YAAa,SAAqBC,GAGjCR,EAAOS,WAAW,eAAiBD,EAAW,uCAAyCA,EAAW,aAAc,GAAI,OACpHE,KAAKC,IAAI,WAAYH,IAGtBI,SAAU,SAAoBC,GAG7Bb,EAAOS,WAAW,mCAAqCI,EAAQ,qCAAuCA,EAAQ,aAAc,GAAI,OAChIH,KAAKC,IAAI,QAASE,IAGnBC,SAAU,WAIT,OADAd,EAAOS,WAAWC,KAAKK,cAAgB,wDAAyD,GAAI,OAC7FL,KAAKM,IAAI,UAGjBC,oBAAqB,WAOpBP,KAAKQ,gBAAmBR,KAAKS,OAASpB,EAAI,SAAa,SAAWW,KAAKS,KAAKC,QAAQ,KAAM,UAAY,IAAO,GAC7GV,KAAKW,UAAUC","file":"../../form/_FormWidget.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/sniff\", // has(\"dijit-legacy-requires\"), has(\"msapp\")\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/ready\",\r\n\t\"../_Widget\",\r\n\t\"../_CssStateMixin\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"./_FormWidgetMixin\"\r\n], function(declare, has, kernel, ready, _Widget, _CssStateMixin, _TemplatedMixin, _FormWidgetMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_FormWidget\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/form/_FormValueWidget\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\treturn declare(\"dijit.form._FormWidget\", [_Widget, _TemplatedMixin, _CssStateMixin, _FormWidgetMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for widgets corresponding to native HTML elements such as `<checkbox>` or `<button>`,\r\n\t\t//\t\twhich can be children of a `<form>` node or a `dijit/form/Form` widget.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tRepresents a single HTML element.\r\n\t\t//\t\tAll these widgets should have these attributes just like native HTML input elements.\r\n\t\t//\t\tYou can set them during widget construction or afterwards, via `dijit/_WidgetBase.set()`.\r\n\t\t//\r\n\t\t//\t\tThey also share some common methods.\r\n\r\n\t\tsetDisabled: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('disabled', ...) instead.\r\n\t\t\tkernel.deprecated(\"setDisabled(\" + disabled + \") is deprecated. Use set('disabled',\" + disabled + \") instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('disabled', disabled);\r\n\t\t},\r\n\r\n\t\tsetValue: function(/*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('value', ...) instead.\r\n\t\t\tkernel.deprecated(\"dijit.form._FormWidget:setValue(\" + value + \") is deprecated.  Use set('value',\" + value + \") instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('value', value);\r\n\t\t},\r\n\r\n\t\tgetValue: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use get('value') instead.\r\n\t\t\tkernel.deprecated(this.declaredClass + \"::getValue() is deprecated. Use get('value') instead.\", \"\", \"2.0\");\r\n\t\t\treturn this.get('value');\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// Setup name=foo string to be referenced from the template (but only if a name has been specified).\r\n\t\t\t// Unfortunately we can't use _setNameAttr to set the name in IE due to IE limitations, see #8484, #8660.\r\n\t\t\t// But when IE6 and IE7 are desupported, then we probably don't need this anymore, so should remove it in 2.0.\r\n\t\t\t// Also, don't do this for Windows 8 Store Apps because it causes a security exception (see #16452).\r\n\t\t\t// Regarding escaping, see heading \"Attribute values\" in\r\n\t\t\t// http://www.w3.org/TR/REC-html40/appendix/notes.html#h-B.3.2\r\n\t\t\tthis.nameAttrSetting = (this.name && !has(\"msapp\")) ? ('name=\"' + this.name.replace(/\"/g, \"&quot;\") + '\"') : '';\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n"]}