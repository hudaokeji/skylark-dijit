{"version":3,"sources":["form/ComboBoxMixin.js"],"names":["define","declare","Deferred","kernel","lang","QueryResults","_AutoCompleterMixin","_ComboBoxMenu","_HasDropDown","template","dropDownClass","hasDownArrow","templateString","baseClass","cssStateNodes","_buttonNode","_setHasDownArrowAttr","val","this","_set","style","display","_showResultList","displayMessage","inherited","arguments","_setStoreAttr","store","get","mixin","_oldAPI","id","deferred","fetchItemByIdentity","identity","onItem","object","resolve","onError","error","reject","promise","query","options","fetchHandle","abort","total","fetch","onBegin","count","onComplete","results","postMixInProperties","params","clazz","declaredClass","getValue","item","attr","deprecated","getLabel","name","args","require","hitch","ObjectStore","objectStore","buildRendering","focusNode","setAttribute","autoComplete"],"mappings":";;;;;;;AAAAA,QACC,qBACA,gBACA,oBACA,kBACA,+BACA,wBACA,kBACA,kBACA,0CACE,SAASC,EAASC,EAAUC,EAAQC,EAAMC,EAAcC,EAAqBC,EAAeC,EAAcC,GAM5G,OAAOR,EAAQ,4BAA6BO,EAAcF,IAOzDI,cAAeH,EAKfI,cAAc,EAEdC,eAAgBH,EAEhBI,UAAW,6BAaXC,eACCC,YAAe,wBAGhBC,qBAAsB,SAAqBC,GAC1CC,KAAKC,KAAK,eAAgBF,GAC1BC,KAAKH,YAAYK,MAAMC,QAAUJ,EAAM,GAAK,QAG7CK,gBAAiB,WAEhBJ,KAAKK,eAAe,IACpBL,KAAKM,UAAUC,YAGhBC,cAAe,SAASC,GAEnBA,EAAMC,KACTxB,EAAKyB,MAAMF,GACVG,SAAS,EACTF,IAAK,SAASG,GAIb,IAAIC,EAAW,IAAI9B,EAUnB,OATAgB,KAAKe,qBACJC,SAAUH,EACVI,OAAQ,SAASC,GAChBJ,EAASK,QAAQD,IAElBE,QAAS,SAASC,GACjBP,EAASQ,OAAOD,MAGXP,EAASS,SAEjBC,MAAO,SAASA,EAAOC,GAItB,IAAIX,EAAW,IAAI9B,EAAS,WAAY0C,EAAYC,OAASD,EAAYC,UACzEb,EAASc,MAAQ,IAAI5C,EACrB,IAAI0C,EAAc1B,KAAK6B,MAAM3C,EAAKyB,OACjCa,MAAOA,EACPM,QAAS,SAASC,GACjBjB,EAASc,MAAMT,QAAQY,IAExBC,WAAY,SAASC,GACpBnB,EAASK,QAAQc,IAElBb,QAAS,SAASC,GACjBP,EAASQ,OAAOD,KAEfI,IACH,OAAOtC,EAAa2B,MAIvBd,KAAKC,KAAK,QAASQ,IAGpByB,oBAAqB,WAGpB,IAAIzB,EAAQT,KAAKmC,OAAO1B,OAAST,KAAKS,MAStC,GARGA,GACFT,KAAKQ,cAAcC,GAGpBT,KAAKM,UAAUC,YAIXP,KAAKmC,OAAO1B,OAAST,KAAKS,QAAUT,KAAKS,MAAMG,QAAQ,CAC1D,IAAIwB,EAAQpC,KAAKqC,cACjBnD,EAAKyB,MAAMX,KAAKS,OACf6B,SAAU,SAASC,EAAMC,GAExB,OADAvD,EAAOwD,WAAWL,EAAQ,uFAAwF,GAAI,OAC/GG,EAAKC,IAEbE,SAAU,SAASH,GAElB,OADAtD,EAAOwD,WAAWL,EAAQ,kFAAmF,GAAI,OAC1GG,EAAKI,MAEbd,MAAO,SAASe,GACf3D,EAAOwD,WAAWL,EAAQ,kDAAmD,oBAAqB,OAElGS,SADY,yBACE3D,EAAK4D,MAAM9C,KAAM,SAAS+C,GACvC,IAAIA,GAAaC,YAAahD,OAAO6B,MAAMe,WAOhDK,eAAgB,WACfjD,KAAKM,UAAUC,WAEfP,KAAKkD,UAAUC,aAAa,oBAAqBnD,KAAKoD,aAAe,OAAS","file":"../../form/ComboBoxMixin.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/Deferred\",\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"dojo/store/util/QueryResults\",\r\n\t\"./_AutoCompleterMixin\",\r\n\t\"./_ComboBoxMenu\",\r\n\t\"../_HasDropDown\",\r\n\t\"dojo/text!./templates/DropDownBox.html\"\r\n], function(declare, Deferred, kernel, lang, QueryResults, _AutoCompleterMixin, _ComboBoxMenu, _HasDropDown, template){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/ComboBoxMixin\r\n\r\n\treturn declare(\"dijit.form.ComboBoxMixin\", [_HasDropDown, _AutoCompleterMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tProvides main functionality of ComboBox widget\r\n\r\n\t\t// dropDownClass: [protected extension] Function String\r\n\t\t//\t\tDropdown widget class used to select a date/time.\r\n\t\t//\t\tSubclasses should specify this.\r\n\t\tdropDownClass: _ComboBoxMenu,\r\n\r\n\t\t// hasDownArrow: Boolean\r\n\t\t//\t\tSet this textbox to have a down arrow button, to display the drop down list.\r\n\t\t//\t\tDefaults to true.\r\n\t\thasDownArrow: true,\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitComboBox\",\r\n\r\n\t\t/*=====\r\n\t\t// store: [const] dojo/store/api/Store|dojo/data/api/Read\r\n\t\t//\t\tReference to data provider object used by this ComboBox.\r\n\t\t//\r\n\t\t//\t\tShould be dojo/store/api/Store, but dojo/data/api/Read supported\r\n\t\t//\t\tfor backwards compatibility.\r\n\t\tstore: null,\r\n\t\t=====*/\r\n\r\n\t\t// Set classes like dijitDownArrowButtonHover depending on\r\n\t\t// mouse action over button node\r\n\t\tcssStateNodes: {\r\n\t\t\t\"_buttonNode\": \"dijitDownArrowButton\"\r\n\t\t},\r\n\r\n\t\t_setHasDownArrowAttr: function(/*Boolean*/ val){\r\n\t\t\tthis._set(\"hasDownArrow\", val);\r\n\t\t\tthis._buttonNode.style.display = val ? \"\" : \"none\";\r\n\t\t},\r\n\r\n\t\t_showResultList: function(){\r\n\t\t\t// hide the tooltip\r\n\t\t\tthis.displayMessage(\"\");\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setStoreAttr: function(store){\r\n\t\t\t// For backwards-compatibility, accept dojo.data store in addition to dojo/store/api/Store.  Remove in 2.0.\r\n\t\t\tif(!store.get){\r\n\t\t\t\tlang.mixin(store, {\r\n\t\t\t\t\t_oldAPI: true,\r\n\t\t\t\t\tget: function(id){\r\n\t\t\t\t\t\t// summary:\r\n\t\t\t\t\t\t//\t\tRetrieves an object by it's identity. This will trigger a fetchItemByIdentity.\r\n\t\t\t\t\t\t//\t\tLike dojo/store/DataStore.get() except returns native item.\r\n\t\t\t\t\t\tvar deferred = new Deferred();\r\n\t\t\t\t\t\tthis.fetchItemByIdentity({\r\n\t\t\t\t\t\t\tidentity: id,\r\n\t\t\t\t\t\t\tonItem: function(object){\r\n\t\t\t\t\t\t\t\tdeferred.resolve(object);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonError: function(error){\r\n\t\t\t\t\t\t\t\tdeferred.reject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn deferred.promise;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tquery: function(query, options){\r\n\t\t\t\t\t\t// summary:\r\n\t\t\t\t\t\t//\t\tQueries the store for objects.   Like dojo/store/DataStore.query()\r\n\t\t\t\t\t\t//\t\texcept returned Deferred contains array of native items.\r\n\t\t\t\t\t\tvar deferred = new Deferred(function(){ fetchHandle.abort && fetchHandle.abort(); });\r\n\t\t\t\t\t\tdeferred.total = new Deferred();\r\n\t\t\t\t\t\tvar fetchHandle = this.fetch(lang.mixin({\r\n\t\t\t\t\t\t\tquery: query,\r\n\t\t\t\t\t\t\tonBegin: function(count){\r\n\t\t\t\t\t\t\t\tdeferred.total.resolve(count);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonComplete: function(results){\r\n\t\t\t\t\t\t\t\tdeferred.resolve(results);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonError: function(error){\r\n\t\t\t\t\t\t\t\tdeferred.reject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, options));\r\n\t\t\t\t\t\treturn QueryResults(deferred);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis._set(\"store\", store);\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// Since _setValueAttr() depends on this.store, _setStoreAttr() needs to execute first.\r\n\t\t\t// Unfortunately, without special code, it ends up executing second.\r\n\t\t\tvar store = this.params.store || this.store;\r\n\t\t\tif(store){\r\n\t\t\t\tthis._setStoreAttr(store);\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// User may try to access this.store.getValue() etc.  in a custom labelFunc() function.\r\n\t\t\t// It's not available with the new data store for handling inline <option> tags, so add it.\r\n\t\t\tif(!this.params.store && this.store && !this.store._oldAPI){\r\n\t\t\t\tvar clazz = this.declaredClass;\r\n\t\t\t\tlang.mixin(this.store, {\r\n\t\t\t\t\tgetValue: function(item, attr){\r\n\t\t\t\t\t\tkernel.deprecated(clazz + \".store.getValue(item, attr) is deprecated for builtin store.  Use item.attr directly\", \"\", \"2.0\");\r\n\t\t\t\t\t\treturn item[attr];\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetLabel: function(item){\r\n\t\t\t\t\t\tkernel.deprecated(clazz + \".store.getLabel(item) is deprecated for builtin store.  Use item.label directly\", \"\", \"2.0\");\r\n\t\t\t\t\t\treturn item.name;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfetch: function(args){\r\n\t\t\t\t\t\tkernel.deprecated(clazz + \".store.fetch() is deprecated for builtin store.\", \"Use store.query()\", \"2.0\");\r\n\t\t\t\t\t\tvar shim = [\"dojo/data/ObjectStore\"];\t// indirection so it doesn't get rolled into a build\r\n\t\t\t\t\t\trequire(shim, lang.hitch(this, function(ObjectStore){\r\n\t\t\t\t\t\t\tnew ObjectStore({objectStore: this}).fetch(args);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis.focusNode.setAttribute(\"aria-autocomplete\", this.autoComplete ? \"both\" : \"list\");\r\n\t\t}\r\n\t});\r\n});\r\n"]}