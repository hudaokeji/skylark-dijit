{"version":3,"sources":["form/SimpleTextarea.js"],"names":["define","declare","domClass","has","TextBox","baseClass","rows","cols","templateString","postMixInProperties","this","value","srcNodeRef","inherited","arguments","buildRendering","add","textbox","filter","replace","_onInput","e","maxLength","parseInt","overflow","length","textarea","selectionStart","pos","cr","substring","match","setSelectionRange","ownerDocument","selection","focus","range","createRange","moveStart","text","select"],"mappings":";;;;;;;AAAAA,QACC,qBACA,iBACA,aACA,aACE,SAASC,EAASC,EAAUC,EAAKC,GAKnC,OAAOH,EAAQ,4BAA6BG,GAY3CC,UAAW,6BAIXC,KAAM,IAINC,KAAM,KAENC,eAAgB,wHAEhBC,oBAAqB,YAGhBC,KAAKC,OAASD,KAAKE,aACtBF,KAAKC,MAAQD,KAAKE,WAAWD,OAE9BD,KAAKG,UAAUC,YAGhBC,eAAgB,WACfL,KAAKG,UAAUC,WACZX,EAAI,OAASO,KAAKH,MACpBL,EAASc,IAAIN,KAAKO,QAAS,sBAI7BC,OAAQ,SAAoBP,GAM3B,OAHGA,IACFA,EAAQA,EAAMQ,QAAQ,MAAO,KAEvBT,KAAKG,UAAUC,YAGvBM,SAAU,SAAoBC,GAE7B,GAAGX,KAAKY,UAAU,CACjB,IAAIA,EAAYC,SAASb,KAAKY,WAC1BX,EAAQD,KAAKO,QAAQN,MAAMQ,QAAQ,MAAO,IAC1CK,EAAWb,EAAMc,OAASH,EAC9B,GAAGE,EAAW,EAAE,CACf,IAAIE,EAAWhB,KAAKO,QACpB,GAAGS,EAASC,eAAe,CAC1B,IAAIC,EAAMF,EAASC,eACfE,EAAK,EACN1B,EAAI,WACN0B,GAAMnB,KAAKO,QAAQN,MAAMmB,UAAU,EAAGF,GAAKG,MAAM,YAAcN,QAEhEf,KAAKO,QAAQN,MAAQA,EAAMmB,UAAU,EAAGF,EAAMJ,EAAWK,GAAMlB,EAAMmB,UAAUF,EAAMC,GACrFH,EAASM,kBAAkBJ,EAAMJ,EAAUI,EAAMJ,QAC5C,GAAGd,KAAKuB,cAAcC,UAAU,CACrCR,EAASS,QACT,IAAIC,EAAQ1B,KAAKuB,cAAcC,UAAUG,cAEzCD,EAAME,UAAU,aAAcd,GAC9BY,EAAMG,KAAO,GAEbH,EAAMI,WAIT9B,KAAKG,UAAUC","file":"../../form/SimpleTextarea.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"opera\")\r\n\t\"./TextBox\"\r\n], function(declare, domClass, has, TextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/SimpleTextarea\r\n\r\n\treturn declare(\"dijit.form.SimpleTextarea\", TextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tA simple textarea that degrades, and responds to\r\n\t\t//\t\tminimal LayoutContainer usage, and works with dijit/form/Form.\r\n\t\t//\t\tDoesn't automatically size according to input, like Textarea.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<textarea data-dojo-type=\"dijit/form/SimpleTextarea\" name=\"foo\" value=\"bar\" rows=30 cols=40></textarea>\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\tnew SimpleTextarea({ rows:20, cols:30 }, \"foo\");\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitTextArea\",\r\n\r\n\t\t// rows: Number\r\n\t\t//\t\tThe number of rows of text.\r\n\t\trows: \"3\",\r\n\r\n\t\t// rows: Number\r\n\t\t//\t\tThe number of characters per line.\r\n\t\tcols: \"20\",\r\n\r\n\t\ttemplateString: \"<textarea ${!nameAttrSetting} data-dojo-attach-point='focusNode,containerNode,textbox' autocomplete='off'></textarea>\",\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// Copy value from srcNodeRef, unless user specified a value explicitly (or there is no srcNodeRef)\r\n\t\t\t// TODO: parser will handle this in 2.0\r\n\t\t\tif(!this.value && this.srcNodeRef){\r\n\t\t\t\tthis.value = this.srcNodeRef.value;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(has(\"ie\") && this.cols){ // attribute selectors is not supported in IE6\r\n\t\t\t\tdomClass.add(this.textbox, \"dijitTextAreaCols\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfilter: function(/*String*/ value){\r\n\t\t\t// Override TextBox.filter to deal with newlines... specifically (IIRC) this is for IE which writes newlines\r\n\t\t\t// as \\r\\n instead of just \\n\r\n\t\t\tif(value){\r\n\t\t\t\tvalue = value.replace(/\\r/g, \"\");\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onInput: function(/*Event?*/ e){\r\n\t\t\t// Override TextBox._onInput() to enforce maxLength restriction\r\n\t\t\tif(this.maxLength){\r\n\t\t\t\tvar maxLength = parseInt(this.maxLength);\r\n\t\t\t\tvar value = this.textbox.value.replace(/\\r/g, '');\r\n\t\t\t\tvar overflow = value.length - maxLength;\r\n\t\t\t\tif(overflow > 0){\r\n\t\t\t\t\tvar textarea = this.textbox;\r\n\t\t\t\t\tif(textarea.selectionStart){\r\n\t\t\t\t\t\tvar pos = textarea.selectionStart;\r\n\t\t\t\t\t\tvar cr = 0;\r\n\t\t\t\t\t\tif(has(\"opera\")){\r\n\t\t\t\t\t\t\tcr = (this.textbox.value.substring(0, pos).match(/\\r/g) || []).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.textbox.value = value.substring(0, pos - overflow - cr) + value.substring(pos - cr);\r\n\t\t\t\t\t\ttextarea.setSelectionRange(pos - overflow, pos - overflow);\r\n\t\t\t\t\t}else if(this.ownerDocument.selection){ //IE\r\n\t\t\t\t\t\ttextarea.focus();\r\n\t\t\t\t\t\tvar range = this.ownerDocument.selection.createRange();\r\n\t\t\t\t\t\t// delete overflow characters\r\n\t\t\t\t\t\trange.moveStart(\"character\", -overflow);\r\n\t\t\t\t\t\trange.text = '';\r\n\t\t\t\t\t\t// show cursor\r\n\t\t\t\t\t\trange.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n"]}