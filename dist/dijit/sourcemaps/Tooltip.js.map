{"version":3,"sources":["Tooltip.js"],"names":["define","array","declare","fx","dom","domClass","domGeometry","domStyle","lang","mouse","on","has","manager","place","_Widget","_TemplatedMixin","BackgroundIframe","template","dijit","MasterTooltip","duration","defaultDuration","templateString","postCreate","this","ownerDocumentBody","appendChild","domNode","bgIframe","fadeIn","node","onEnd","hitch","fadeOut","show","innerHTML","aroundNode","position","rtl","textDir","onMouseEnter","onMouseLeave","containerNode","status","set","align","pos","around","length","Tooltip","defaultPosition","aroundNodeCoords","aroundNodePos","corner","charAt","aroundCorner","connectorNode","style","top","y","h","offsetHeight","left","x","w","offsetWidth","play","isShowingNow","noop","_onDeck","arguments","orient","tooltipCorner","spaceAvailable","heightAvailable","widthAvailable","className","MR-ML","ML-MR","TM-BM","BM-TM","BL-TL","TL-BL","BR-TR","TR-BR","BR-BL","BL-BR","width","size","Math","min","max","setMarginBox","bb","tooltipConnectorHeight","aroundNodePlacement","bottom","_onShow","filter","hide","stop","_onHide","cssText","apply","extend","_setAutoTextDir","applyTextDir","forEach","children","child","_setTextDirAttr","_set","dir","showTooltip","map","val","after","before","_masterTT","hideTooltip","DORMANT","label","showDelay","hideDelay","connectId","selector","_setConnectIdAttr","newId","_connections","nested","handle","remove","_connectIds","isArrayLike","id","byId","ownerDocument","delegatedEvent","eventType","self","enter","_onHover","leave","addTarget","indexOf","concat","removeTarget","idx","splice","buildRendering","inherited","add","startup","ids","getContent","state","_setStateAttr","_hideTimer","_showTimer","_connectNode","onHide","defer","content","isLeftToRight","onShow","target","_onUnHover","open","close","destroy","_MasterTooltip"],"mappings":"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","file":"../Tooltip.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/fx\", // fx.fadeIn fx.fadeOut\r\n\t\"dojo/dom\", // dom.byId\r\n\t\"dojo/dom-class\", // domClass.add\r\n\t\"dojo/dom-geometry\", // domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.set, domStyle.get\r\n\t\"dojo/_base/lang\", // lang.hitch lang.isArrayLike\r\n\t\"dojo/mouse\",\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\"), has(\"trident\")\r\n\t\"./_base/manager\",\t// manager.defaultDuration\r\n\t\"./place\",\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./BackgroundIframe\",\r\n\t\"dojo/text!./templates/Tooltip.html\",\r\n\t\"./main\"\t\t// sets dijit.showTooltip etc. for back-compat\r\n], function(array, declare, fx, dom, domClass, domGeometry, domStyle, lang, mouse, on, has,\r\n\t\t\tmanager, place, _Widget, _TemplatedMixin, BackgroundIframe, template, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Tooltip\r\n\r\n\r\n\t// TODO: Tooltip should really share more positioning code with TooltipDialog, like:\r\n\t//\t\t- the orient() method\r\n\t//\t\t- the connector positioning code in show()\r\n\t//\t\t- the dijitTooltip[Dialog] class\r\n\t//\r\n\t// The problem is that Tooltip's implementation supplies it's own <iframe> and interacts directly\r\n\t// with dijit/place, rather than going through dijit/popup like TooltipDialog and other popups (ex: Menu).\r\n\r\n\tvar MasterTooltip = declare(\"dijit._MasterTooltip\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tInternal widget that holds the actual tooltip markup,\r\n\t\t//\t\twhich occurs once per page.\r\n\t\t//\t\tCalled by Tooltip widgets which are just containers to hold\r\n\t\t//\t\tthe markup\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\t// duration: Integer\r\n\t\t//\t\tMilliseconds to fade in/fade out\r\n\t\tduration: manager.defaultDuration,\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.ownerDocumentBody.appendChild(this.domNode);\r\n\r\n\t\t\tthis.bgIframe = new BackgroundIframe(this.domNode);\r\n\r\n\t\t\t// Setup fade-in and fade-out functions.\r\n\t\t\tthis.fadeIn = fx.fadeIn({ node: this.domNode, duration: this.duration, onEnd: lang.hitch(this, \"_onShow\") });\r\n\t\t\tthis.fadeOut = fx.fadeOut({ node: this.domNode, duration: this.duration, onEnd: lang.hitch(this, \"_onHide\") });\r\n\t\t},\r\n\r\n\t\tshow: function(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay tooltip w/specified contents to right of specified node\r\n\t\t\t//\t\t(To left if there's no space on the right, or if rtl == true)\r\n\t\t\t// innerHTML: String\r\n\t\t\t//\t\tContents of the tooltip\r\n\t\t\t// aroundNode: DomNode|dijit/place.__Rectangle\r\n\t\t\t//\t\tSpecifies that tooltip should be next to this node / area\r\n\t\t\t// position: String[]?\r\n\t\t\t//\t\tList of positions to try to position tooltip (ex: [\"right\", \"above\"])\r\n\t\t\t// rtl: Boolean?\r\n\t\t\t//\t\tCorresponds to `WidgetBase.dir` attribute, where false means \"ltr\" and true\r\n\t\t\t//\t\tmeans \"rtl\"; specifies GUI direction, not text direction.\r\n\t\t\t// textDir: String?\r\n\t\t\t//\t\tCorresponds to `WidgetBase.textdir` attribute; specifies direction of text.\r\n\t\t\t// onMouseEnter: Function?\r\n\t\t\t//\t\tCallback function for mouse enter on tooltip\r\n\t\t\t// onMouseLeave: Function?\r\n\t\t\t//\t\tCallback function for mouse leave on tooltip\r\n\r\n\t\t\tif(this.aroundNode && this.aroundNode === aroundNode && this.containerNode.innerHTML == innerHTML){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.fadeOut.status() == \"playing\"){\r\n\t\t\t\t// previous tooltip is being hidden; wait until the hide completes then show new one\r\n\t\t\t\tthis._onDeck=arguments;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.containerNode.innerHTML=innerHTML;\r\n\r\n\t\t\tif(textDir){\r\n\t\t\t\tthis.set(\"textDir\", textDir);\r\n\t\t\t}\r\n\r\n\t\t\tthis.containerNode.align = rtl? \"right\" : \"left\"; //fix the text alignment\r\n\r\n\t\t\tvar pos = place.around(this.domNode, aroundNode,\r\n\t\t\t\tposition && position.length ? position : Tooltip.defaultPosition, !rtl, lang.hitch(this, \"orient\"));\r\n\r\n\t\t\t// Position the tooltip connector for middle alignment.\r\n\t\t\t// This could not have been done in orient() since the tooltip wasn't positioned at that time.\r\n\t\t\tvar aroundNodeCoords = pos.aroundNodePos;\r\n\t\t\tif(pos.corner.charAt(0) == 'M' && pos.aroundCorner.charAt(0) == 'M'){\r\n\t\t\t\tthis.connectorNode.style.top = aroundNodeCoords.y + ((aroundNodeCoords.h - this.connectorNode.offsetHeight) >> 1) - pos.y + \"px\";\r\n\t\t\t\tthis.connectorNode.style.left = \"\";\r\n\t\t\t}else if(pos.corner.charAt(1) == 'M' && pos.aroundCorner.charAt(1) == 'M'){\r\n\t\t\t\tthis.connectorNode.style.left = aroundNodeCoords.x + ((aroundNodeCoords.w - this.connectorNode.offsetWidth) >> 1) - pos.x + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\t// Not *-centered, but just above/below/after/before\r\n\t\t\t\tthis.connectorNode.style.left = \"\";\r\n\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// show it\r\n\t\t\tdomStyle.set(this.domNode, \"opacity\", 0);\r\n\t\t\tthis.fadeIn.play();\r\n\t\t\tthis.isShowingNow = true;\r\n\t\t\tthis.aroundNode = aroundNode;\r\n\r\n\t\t\tthis.onMouseEnter = onMouseEnter || noop;\r\n\t\t\tthis.onMouseLeave = onMouseLeave || noop;\r\n\t\t},\r\n\r\n\t\torient: function(/*DomNode*/ node, /*String*/ aroundCorner, /*String*/ tooltipCorner, /*Object*/ spaceAvailable, /*Object*/ aroundNodeCoords){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPrivate function to set CSS for tooltip node based on which position it's in.\r\n\t\t\t//\t\tThis is called by the dijit popup code.   It will also reduce the tooltip's\r\n\t\t\t//\t\twidth to whatever width is available\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.connectorNode.style.top = \"\"; //reset to default\r\n\r\n\t\t\tvar heightAvailable = spaceAvailable.h,\r\n\t\t\t\twidthAvailable = spaceAvailable.w;\r\n\r\n\t\t\tnode.className = \"dijitTooltip \" +\r\n\t\t\t\t{\r\n\t\t\t\t\t\"MR-ML\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"ML-MR\": \"dijitTooltipLeft\",\r\n\t\t\t\t\t\"TM-BM\": \"dijitTooltipAbove\",\r\n\t\t\t\t\t\"BM-TM\": \"dijitTooltipBelow\",\r\n\t\t\t\t\t\"BL-TL\": \"dijitTooltipBelow dijitTooltipABLeft\",\r\n\t\t\t\t\t\"TL-BL\": \"dijitTooltipAbove dijitTooltipABLeft\",\r\n\t\t\t\t\t\"BR-TR\": \"dijitTooltipBelow dijitTooltipABRight\",\r\n\t\t\t\t\t\"TR-BR\": \"dijitTooltipAbove dijitTooltipABRight\",\r\n\t\t\t\t\t\"BR-BL\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"BL-BR\": \"dijitTooltipLeft\"\r\n\t\t\t\t}[aroundCorner + \"-\" + tooltipCorner];\r\n\r\n\t\t\t// reset width; it may have been set by orient() on a previous tooltip show()\r\n\t\t\tthis.domNode.style.width = \"auto\";\r\n\r\n\t\t\t// Reduce tooltip's width to the amount of width available, so that it doesn't overflow screen.\r\n\t\t\t// Note that sometimes widthAvailable is negative, but we guard against setting style.width to a\r\n\t\t\t// negative number since that causes an exception on IE.\r\n\t\t\tvar size = domGeometry.position(this.domNode);\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\t// workaround strange IE bug where setting width to offsetWidth causes words to wrap\r\n\t\t\t\tsize.w += 2;\r\n\t\t\t}\r\n\r\n\t\t\tvar width = Math.min((Math.max(widthAvailable,1)), size.w);\r\n\r\n\t\t\tdomGeometry.setMarginBox(this.domNode, {w: width});\r\n\r\n\t\t\t// Reposition the tooltip connector.\r\n\t\t\tif(tooltipCorner.charAt(0) == 'B' && aroundCorner.charAt(0) == 'B'){\r\n\t\t\t\tvar bb = domGeometry.position(node);\r\n\t\t\t\tvar tooltipConnectorHeight = this.connectorNode.offsetHeight;\r\n\t\t\t\tif(bb.h > heightAvailable){\r\n\t\t\t\t\t// The tooltip starts at the top of the page and will extend past the aroundNode\r\n\t\t\t\t\tvar aroundNodePlacement = heightAvailable - ((aroundNodeCoords.h + tooltipConnectorHeight) >> 1);\r\n\t\t\t\t\tthis.connectorNode.style.top = aroundNodePlacement + \"px\";\r\n\t\t\t\t\tthis.connectorNode.style.bottom = \"\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Align center of connector with center of aroundNode, except don't let bottom\r\n\t\t\t\t\t// of connector extend below bottom of tooltip content, or top of connector\r\n\t\t\t\t\t// extend past top of tooltip content\r\n\t\t\t\t\tthis.connectorNode.style.bottom = Math.min(\r\n\t\t\t\t\t\tMath.max(aroundNodeCoords.h/2 - tooltipConnectorHeight/2, 0),\r\n\t\t\t\t\t\tbb.h - tooltipConnectorHeight) + \"px\";\r\n\t\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// reset the tooltip back to the defaults\r\n\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t\tthis.connectorNode.style.bottom = \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.max(0, size.w - widthAvailable);\r\n\t\t},\r\n\r\n\t\t_onShow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled at end of fade-in operation\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// the arrow won't show up on a node w/an opacity filter\r\n\t\t\t\tthis.domNode.style.filter=\"\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thide: function(aroundNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the tooltip\r\n\r\n\t\t\tif(this._onDeck && this._onDeck[1] == aroundNode){\r\n\t\t\t\t// this hide request is for a show() that hasn't even started yet;\r\n\t\t\t\t// just cancel the pending show()\r\n\t\t\t\tthis._onDeck=null;\r\n\t\t\t}else if(this.aroundNode === aroundNode){\r\n\t\t\t\t// this hide request is for the currently displayed tooltip\r\n\t\t\t\tthis.fadeIn.stop();\r\n\t\t\t\tthis.isShowingNow = false;\r\n\t\t\t\tthis.aroundNode = null;\r\n\t\t\t\tthis.fadeOut.play();\r\n\t\t\t}else{\r\n\t\t\t\t// just ignore the call, it's for a tooltip that has already been erased\r\n\t\t\t}\r\n\r\n\t\t\tthis.onMouseEnter = this.onMouseLeave = noop;\r\n\t\t},\r\n\r\n\t\t_onHide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled at end of fade-out operation\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.domNode.style.cssText=\"\";\t// to position offscreen again\r\n\t\t\tthis.containerNode.innerHTML=\"\";\r\n\t\t\tif(this._onDeck){\r\n\t\t\t\t// a show request has been queued up; do it now\r\n\t\t\t\tthis.show.apply(this, this._onDeck);\r\n\t\t\t\tthis._onDeck=null;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tMasterTooltip.extend({\r\n\t\t\t_setAutoTextDir: function(/*Object*/node){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tResolve \"auto\" text direction for children nodes\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\r\n\t\t\t\tthis.applyTextDir(node);\r\n\t\t\t\tarray.forEach(node.children, function(child){ this._setAutoTextDir(child); }, this);\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(/*String*/ textDir){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSetter for textDir.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tUsers shouldn't call this function; they should be calling\r\n\t\t\t\t//\t\tset('textDir', value)\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\r\n\t\t\t\tthis._set(\"textDir\", textDir);\r\n\r\n\t\t\t\tif (textDir == \"auto\"){\r\n\t\t\t\t\tthis._setAutoTextDir(this.containerNode);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.containerNode.dir = this.textDir;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tdijit.showTooltip = function(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave){\r\n\t\t// summary:\r\n\t\t//\t\tStatic method to display tooltip w/specified contents in specified position.\r\n\t\t//\t\tSee description of dijit/Tooltip.defaultPosition for details on position parameter.\r\n\t\t//\t\tIf position is not specified then dijit/Tooltip.defaultPosition is used.\r\n\t\t// innerHTML: String\r\n\t\t//\t\tContents of the tooltip\r\n\t\t// aroundNode: place.__Rectangle\r\n\t\t//\t\tSpecifies that tooltip should be next to this node / area\r\n\t\t// position: String[]?\r\n\t\t//\t\tList of positions to try to position tooltip (ex: [\"right\", \"above\"])\r\n\t\t// rtl: Boolean?\r\n\t\t//\t\tCorresponds to `WidgetBase.dir` attribute, where false means \"ltr\" and true\r\n\t\t//\t\tmeans \"rtl\"; specifies GUI direction, not text direction.\r\n\t\t// textDir: String?\r\n\t\t//\t\tCorresponds to `WidgetBase.textdir` attribute; specifies direction of text.\r\n\t\t// onMouseEnter: Function?\r\n\t\t//\t\tCallback function for mouse over on tooltip\r\n\t\t// onMouseLeave: Function?\r\n\t\t//\t\tCallback function for mouse leave on tooltip\r\n\r\n\t\t// After/before don't work, but for back-compat convert them to the working after-centered, before-centered.\r\n\t\t// Possibly remove this in 2.0.   Alternately, get before/after to work.\r\n\t\tif(position){\r\n\t\t\tposition = array.map(position, function(val){\r\n\t\t\t\treturn {after: \"after-centered\", before: \"before-centered\"}[val] || val;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(!Tooltip._masterTT){ dijit._masterTT = Tooltip._masterTT = new MasterTooltip(); }\r\n\t\treturn Tooltip._masterTT.show(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave);\r\n\t};\r\n\r\n\tdijit.hideTooltip = function(aroundNode){\r\n\t\t// summary:\r\n\t\t//\t\tStatic method to hide the tooltip displayed via showTooltip()\r\n\t\treturn Tooltip._masterTT && Tooltip._masterTT.hide(aroundNode);\r\n\t};\r\n\r\n\t// Possible states for a tooltip, see Tooltip.state property for definitions\r\n\tvar DORMANT = \"DORMANT\",\r\n\t\tSHOW_TIMER = \"SHOW TIMER\",\r\n\t\tSHOWING = \"SHOWING\",\r\n\t\tHIDE_TIMER = \"HIDE TIMER\";\r\n\r\n\tfunction noop(){}\r\n\r\n\tvar Tooltip = declare(\"dijit.Tooltip\", _Widget, {\r\n\t\t// summary:\r\n\t\t//\t\tPops up a tooltip (a help message) when you hover over a node.\r\n\t\t//\t\tAlso provides static show() and hide() methods that can be used without instantiating a dijit/Tooltip.\r\n\r\n\t\t// label: String\r\n\t\t//\t\tHTML to display in the tooltip.\r\n\t\t//\t\tSpecified as innerHTML when creating the widget from markup.\r\n\t\tlabel: \"\",\r\n\r\n\t\t// showDelay: Integer\r\n\t\t//\t\tNumber of milliseconds to wait after hovering over/focusing on the object, before\r\n\t\t//\t\tthe tooltip is displayed.\r\n\t\tshowDelay: 400,\r\n\r\n\t\t// hideDelay: Integer\r\n\t\t//\t\tNumber of milliseconds to wait after unhovering the object, before\r\n\t\t//\t\tthe tooltip is hidden.  Note that blurring an object hides the tooltip immediately.\r\n\t\thideDelay: 400,\r\n\r\n\t\t// connectId: String|String[]|DomNode|DomNode[]\r\n\t\t//\t\tId of domNode(s) to attach the tooltip to.\r\n\t\t//\t\tWhen user hovers over specified dom node(s), the tooltip will appear.\r\n\t\tconnectId: [],\r\n\r\n\t\t// position: String[]\r\n\t\t//\t\tSee description of `dijit/Tooltip.defaultPosition` for details on position parameter.\r\n\t\tposition: [],\r\n\r\n\t\t// selector: String?\r\n\t\t//\t\tCSS expression to apply this Tooltip to descendants of connectIds, rather than to\r\n\t\t//\t\tthe nodes specified by connectIds themselves.    Useful for applying a Tooltip to\r\n\t\t//\t\ta range of rows in a table, tree, etc.   Use in conjunction with getContent() parameter.\r\n\t\t//\t\tEx: connectId: myTable, selector: \"tr\", getContent: function(node){ return ...; }\r\n\t\t//\r\n\t\t//\t\tThe application must require() an appropriate level of dojo/query to handle the selector.\r\n\t\tselector: \"\",\r\n\r\n\t\t// TODO: in 2.0 remove support for multiple connectIds.   selector gives the same effect.\r\n\t\t// So, change connectId to a \"\", remove addTarget()/removeTarget(), etc.\r\n\r\n\t\t_setConnectIdAttr: function(/*String|String[]|DomNode|DomNode[]*/ newId){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnect to specified node(s)\r\n\r\n\t\t\t// Remove connections to old nodes (if there are any)\r\n\t\t\tarray.forEach(this._connections || [], function(nested){\r\n\t\t\t\tarray.forEach(nested, function(handle){ handle.remove(); });\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Make array of id's to connect to, excluding entries for nodes that don't exist yet, see startup()\r\n\t\t\tthis._connectIds = array.filter(lang.isArrayLike(newId) ? newId : (newId ? [newId] : []),\r\n\t\t\t\t\tfunction(id){ return dom.byId(id, this.ownerDocument); }, this);\r\n\r\n\t\t\t// Make connections\r\n\t\t\tthis._connections = array.map(this._connectIds, function(id){\r\n\t\t\t\tvar node = dom.byId(id, this.ownerDocument),\r\n\t\t\t\t\tselector = this.selector,\r\n\t\t\t\t\tdelegatedEvent = selector ?\r\n\t\t\t\t\t\tfunction(eventType){ return on.selector(selector, eventType); } :\r\n\t\t\t\t\t\tfunction(eventType){ return eventType; },\r\n\t\t\t\t\tself = this;\r\n\t\t\t\treturn [\r\n\t\t\t\t\ton(node, delegatedEvent(mouse.enter), function(){\r\n\t\t\t\t\t\tself._onHover(this);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ton(node, delegatedEvent(\"focusin\"), function(){\r\n\t\t\t\t\t\tself._onHover(this);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ton(node, delegatedEvent(mouse.leave), lang.hitch(self, \"_onUnHover\")),\r\n\t\t\t\t\ton(node, delegatedEvent(\"focusout\"), lang.hitch(self, \"set\", \"state\", DORMANT))\r\n\t\t\t\t];\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._set(\"connectId\", newId);\r\n\t\t},\r\n\r\n\t\taddTarget: function(/*OomNode|String*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach tooltip to specified node if it's not already connected\r\n\r\n\t\t\t// TODO: remove in 2.0 and just use set(\"connectId\", ...) interface\r\n\r\n\t\t\tvar id = node.id || node;\r\n\t\t\tif(array.indexOf(this._connectIds, id) == -1){\r\n\t\t\t\tthis.set(\"connectId\", this._connectIds.concat(id));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveTarget: function(/*DomNode|String*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetach tooltip from specified node\r\n\r\n\t\t\t// TODO: remove in 2.0 and just use set(\"connectId\", ...) interface\r\n\r\n\t\t\tvar id = node.id || node,\t// map from DOMNode back to plain id string\r\n\t\t\t\tidx = array.indexOf(this._connectIds, id);\r\n\t\t\tif(idx >= 0){\r\n\t\t\t\t// remove id (modifies original this._connectIds but that's OK in this case)\r\n\t\t\t\tthis._connectIds.splice(idx, 1);\r\n\t\t\t\tthis.set(\"connectId\", this._connectIds);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.add(this.domNode,\"dijitTooltipData\");\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// If this tooltip was created in a template, or for some other reason the specified connectId[s]\r\n\t\t\t// didn't exist during the widget's initialization, then connect now.\r\n\t\t\tvar ids = this.connectId;\r\n\t\t\tarray.forEach(lang.isArrayLike(ids) ? ids : [ids], this.addTarget, this);\r\n\t\t},\r\n\r\n\t\tgetContent: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser overridable function that return the text to display in the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn this.label || this.domNode.innerHTML;\r\n\t\t},\r\n\r\n\t\t// state: [private readonly] String\r\n\t\t//\t\tOne of:\r\n\t\t//\r\n\t\t//\t\t- DORMANT: tooltip not SHOWING\r\n\t\t//\t\t- SHOW TIMER: tooltip not SHOWING but timer set to show it\r\n\t\t//\t\t- SHOWING: tooltip displayed\r\n\t\t//\t\t- HIDE TIMER: tooltip displayed, but timer set to hide it\r\n\t\tstate: DORMANT,\r\n\t\t_setStateAttr: function(val){\r\n\t\t\tif(this.state == val ||\r\n\t\t\t\t(val == SHOW_TIMER && this.state == SHOWING) ||\r\n\t\t\t\t(val == HIDE_TIMER && this.state == DORMANT)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._hideTimer){\r\n\t\t\t\tthis._hideTimer.remove();\r\n\t\t\t\tdelete this._hideTimer;\r\n\t\t\t}\r\n\t\t\tif(this._showTimer){\r\n\t\t\t\tthis._showTimer.remove();\r\n\t\t\t\tdelete this._showTimer;\r\n\t\t\t}\r\n\r\n\t\t\tswitch(val){\r\n\t\t\t\tcase DORMANT:\r\n\t\t\t\t\tif(this._connectNode){\r\n\t\t\t\t\t\tTooltip.hide(this._connectNode);\r\n\t\t\t\t\t\tdelete this._connectNode;\r\n\t\t\t\t\t\tthis.onHide();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SHOW_TIMER:\t // set timer to show tooltip\r\n\t\t\t\t\t// should only get here from a DORMANT state, i.e. tooltip can't be already SHOWING\r\n\t\t\t\t\tif(this.state != SHOWING){\r\n\t\t\t\t\t\tthis._showTimer = this.defer(function(){ this.set(\"state\", SHOWING); }, this.showDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SHOWING:\t\t// show tooltip and clear timers\r\n\t\t\t\t\tvar content = this.getContent(this._connectNode);\r\n\t\t\t\t\tif(!content){\r\n\t\t\t\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Show tooltip and setup callbacks for mouseenter/mouseleave of tooltip itself\r\n\t\t\t\t\tTooltip.show(content, this._connectNode, this.position, !this.isLeftToRight(), this.textDir,\r\n\t\t\t\t\t\tlang.hitch(this, \"set\", \"state\", SHOWING), lang.hitch(this, \"set\", \"state\", HIDE_TIMER));\r\n\r\n\t\t\t\t\tthis.onShow(this._connectNode, this.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase HIDE_TIMER:\t// set timer set to hide tooltip\r\n\t\t\t\t\tthis._hideTimer = this.defer(function(){ this.set(\"state\", DORMANT); }, this.hideDelay);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis._set(\"state\", val);\r\n\t\t},\r\n\r\n\t\t_onHover: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDespite the name of this method, it actually handles both hover and focus\r\n\t\t\t//\t\tevents on the target node, setting a timer to show the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this._connectNode && target != this._connectNode){\r\n\t\t\t\t// Tooltip is displaying for another node\r\n\t\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\t}\r\n\t\t\tthis._connectNode = target;\t\t// _connectNode means \"tooltip currently displayed for this node\"\r\n\r\n\t\t\tthis.set(\"state\", SHOW_TIMER);\t// no-op if show-timer already set, or if already showing\r\n\t\t},\r\n\r\n\t\t_onUnHover: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles mouseleave event on the target node, hiding the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", HIDE_TIMER);\t\t// no-op if already dormant, or if hide-timer already set\r\n\t\t},\r\n\r\n\t\t// open() and close() aren't used anymore, except from the _BidiSupport/misc/Tooltip test.\r\n\t\t// Should probably remove for 2.0, but leaving for now.\r\n\t\topen: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay the tooltip; usually not called directly.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\tthis._connectNode = target;\t\t// _connectNode means \"tooltip currently displayed for this node\"\r\n\t\t\tthis.set(\"state\", SHOWING);\r\n\t\t},\r\n\r\n\t\tclose: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the tooltip or cancel timer for show of tooltip\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t},\r\n\r\n\t\tonShow: function(/*===== target, position =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the tooltip is shown\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonHide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the tooltip is hidden\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\r\n\t\t\t// Remove connections manually since they aren't registered to be removed by _WidgetBase\r\n\t\t\tarray.forEach(this._connections || [], function(nested){\r\n\t\t\t\tarray.forEach(nested, function(handle){ handle.remove(); });\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tTooltip._MasterTooltip = MasterTooltip;\t\t// for monkey patching\r\n\tTooltip.show = dijit.showTooltip;\t\t// export function through module return value\r\n\tTooltip.hide = dijit.hideTooltip;\t\t// export function through module return value\r\n\r\n\tTooltip.defaultPosition = [\"after-centered\", \"before-centered\"];\r\n\r\n\t/*=====\r\n\tlang.mixin(Tooltip, {\r\n\t\t // defaultPosition: String[]\r\n\t\t //\t\tThis variable controls the position of tooltips, if the position is not specified to\r\n\t\t //\t\tthe Tooltip widget or *TextBox widget itself.  It's an array of strings with the values\r\n\t\t //\t\tpossible for `dijit/place.around()`.   The recommended values are:\r\n\t\t //\r\n\t\t //\t\t- before-centered: centers tooltip to the left of the anchor node/widget, or to the right\r\n\t\t //\t\t  in the case of RTL scripts like Hebrew and Arabic\r\n\t\t //\t\t- after-centered: centers tooltip to the right of the anchor node/widget, or to the left\r\n\t\t //\t\t  in the case of RTL scripts like Hebrew and Arabic\r\n\t\t //\t\t- above-centered: tooltip is centered above anchor node\r\n\t\t //\t\t- below-centered: tooltip is centered above anchor node\r\n\t\t //\r\n\t\t //\t\tThe list is positions is tried, in order, until a position is found where the tooltip fits\r\n\t\t //\t\twithin the viewport.\r\n\t\t //\r\n\t\t //\t\tBe careful setting this parameter.  A value of \"above-centered\" may work fine until the user scrolls\r\n\t\t //\t\tthe screen so that there's no room above the target node.   Nodes with drop downs, like\r\n\t\t //\t\tDropDownButton or FilteringSelect, are especially problematic, in that you need to be sure\r\n\t\t //\t\tthat the drop down and tooltip don't overlap, even when the viewport is scrolled so that there\r\n\t\t //\t\tis only room below (or above) the target node, but not both.\r\n\t });\r\n\t=====*/\r\n\treturn Tooltip;\r\n});\r\n"]}