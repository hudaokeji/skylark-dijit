{"version":3,"sources":["Declaration.js"],"names":["define","array","aspect","declare","lang","parser","query","_Widget","_TemplatedMixin","_WidgetsInTemplateMixin","_noScript","stopParser","widgetClass","defaults","mixins","buildRendering","src","this","srcNodeRef","parentNode","removeChild","methods","orphan","connects","aspects","srcType","nodeName","propList","forEach","s","evt","getAttribute","func","_functionFromScript","push","length","map","name","getObject","_skipNodeCache","templateString","className","innerHTML","replace","wc","method","after","prototype"],"mappings":";;;;;;;AAAAA,QACC,mBACA,cACA,qBACA,kBACA,cACA,aACA,YACA,oBACA,4BACA,qBACE,SAASC,EAAOC,EAAQC,EAASC,EAAMC,EAAQC,EAAOC,EAASC,EAAiBC,GAKlF,OAAON,EAAQ,oBAAqBI,GAOnCG,WAAW,EAIXC,YAAY,EAIZC,YAAa,GAKbC,SAAU,KAKVC,UAEAC,eAAgB,WACf,IAAIC,EAAMC,KAAKC,WAAWC,WAAWC,YAAYH,KAAKC,YACrDG,EAAUf,EAAM,+BAAgCU,GAAKM,SACrDC,EAAWjB,EAAM,gCAAiCU,GAAKM,SACvDE,EAAUlB,EAAM,+BAAgCU,GAAKM,SACrDG,EAAUT,EAAIU,SAEXC,EAAWV,KAAKJ,aAMpBZ,EAAM2B,QAAQP,EAAS,SAASQ,GAC/B,IAAIC,EAAMD,EAAEE,aAAa,UAAYF,EAAEE,aAAa,mBACnDC,EAAO3B,EAAO4B,oBAAoBJ,EAAG,cACnCC,EACFH,EAASG,GAAOE,EAEhBR,EAAQU,KAAKL,KAOZZ,KAAKH,OAAOqB,OACdlB,KAAKH,OAASb,EAAMmC,IAAInB,KAAKH,OAAQ,SAASuB,GAAO,OAAOjC,EAAKkC,UAAUD,KAE3EpB,KAAKH,QAAWP,EAASC,EAAiBC,GAG3CkB,EAASY,gBAAiB,EAC1BZ,EAASa,eACR,IAAIf,EAAQ,WAAWT,EAAIyB,UAAU,8BAEnCzB,EAAIe,aAAa,2BAA6Bf,EAAIe,aAAa,oBAAsB,IACvF,8BACEf,EAAIe,aAAa,2BAA6Bf,EAAIe,aAAa,oBAAsB,IACvF,MAAMf,EAAI0B,UAAUC,QAAQ,QAAQ,KAAKA,QAAQ,QAAQ,KAAK,KAAKlB,EAAQ,IAG5E,IAAImB,EAAKzC,EACRc,KAAKL,YACLK,KAAKH,OACLa,GAUD1B,EAAM2B,QAAQJ,EAAS,SAASK,GAClBA,EAAEE,aAAa,oBAA5B,IACCc,EAAShB,EAAEE,aAAa,qBAAuB,aAC/CC,EAAO3B,EAAO4B,oBAAoBJ,GACnC3B,EAAO4C,MAAMF,EAAGG,UAAWF,EAAQb,GAAM,KAK1C/B,EAAM2B,QAAQL,EAAU,SAASM,GAChC,IAAIC,EAAMD,EAAEE,aAAa,UAAYF,EAAEE,aAAa,mBACnDC,EAAO3B,EAAO4B,oBAAoBJ,GACnC3B,EAAO4C,MAAMF,EAAGG,UAAWjB,EAAKE,GAAM","file":"../Declaration.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/aspect\",\t// aspect.after\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/parser\", // parser._functionFromScript\r\n\t\"dojo/query\", // query\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_WidgetsInTemplateMixin\",\r\n\t\"dojo/NodeList-dom\"\r\n], function(array, aspect, declare, lang, parser, query, _Widget, _TemplatedMixin, _WidgetsInTemplateMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Declaration\r\n\r\n\treturn declare(\"dijit.Declaration\", _Widget, {\r\n\t\t// summary:\r\n\t\t//\t\tThe Declaration widget allows a developer to declare new widget\r\n\t\t//\t\tclasses directly from a snippet of markup.\r\n\r\n\t\t// _noScript: [private] Boolean\r\n\t\t//\t\tFlag to parser to leave alone the script tags contained inside of me\r\n\t\t_noScript: true,\r\n\r\n\t\t// stopParser: [private] Boolean\r\n\t\t//\t\tFlag to parser to not try and parse widgets declared inside of me\r\n\t\tstopParser: true,\r\n\r\n\t\t// widgetClass: [const] String\r\n\t\t//\t\tName of class being declared, ex: \"acme.myWidget\"\r\n\t\twidgetClass: \"\",\r\n\r\n\t\t// propList: [const] Object\r\n\t\t//\t\tSet of attributes for this widget along with default values, ex:\r\n\t\t//\t\t{delay: 100, title: \"hello world\"}\r\n\t\tdefaults: null,\r\n\r\n\t\t// mixins: [const] String[]\r\n\t\t//\t\tList containing the prototype for this widget, and also any mixins,\r\n\t\t//\t\tex: [\"dijit._Widget\", \"dijit._Container\"]\r\n\t\tmixins: [],\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tvar src = this.srcNodeRef.parentNode.removeChild(this.srcNodeRef),\r\n\t\t\t\tmethods = query(\"> script[type='dojo/method']\", src).orphan(),\r\n\t\t\t\tconnects = query(\"> script[type='dojo/connect']\", src).orphan(), // remove for 2.0\r\n\t\t\t\taspects = query(\"> script[type='dojo/aspect']\", src).orphan(),\r\n\t\t\t\tsrcType = src.nodeName;\r\n\r\n\t\t\tvar propList = this.defaults || {};\r\n\r\n\t\t\t// For all methods defined like <script type=\"dojo/method\" data-dojo-event=\"foo\">,\r\n\t\t\t// add that method to prototype.\r\n\t\t\t// If there's no \"event\" specified then it's code to run on instantiation,\r\n\t\t\t// so it becomes a connection to \"postscript\" (handled below).\r\n\t\t\tarray.forEach(methods, function(s){\r\n\t\t\t\tvar evt = s.getAttribute(\"event\") || s.getAttribute(\"data-dojo-event\"), // remove \"event\" for 2.0\r\n\t\t\t\t\tfunc = parser._functionFromScript(s, \"data-dojo-\");\r\n\t\t\t\tif(evt){\r\n\t\t\t\t\tpropList[evt] = func;\r\n\t\t\t\t}else{\r\n\t\t\t\t\taspects.push(s);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// map array of strings like [ \"dijit.form.Button\" ] to array of mixin objects\r\n\t\t\t// (note that array.map(this.mixins, lang.getObject) doesn't work because it passes\r\n\t\t\t// a bogus third argument to getObject(), confusing it)\r\n\t\t\tif(this.mixins.length){\r\n\t\t\t\tthis.mixins = array.map(this.mixins, function(name){ return lang.getObject(name); } );\r\n\t\t\t}else{\r\n\t\t\t\tthis.mixins = [ _Widget, _TemplatedMixin, _WidgetsInTemplateMixin ];\r\n\t\t\t}\r\n\r\n\t\t\tpropList._skipNodeCache = true;\r\n\t\t\tpropList.templateString =\r\n\t\t\t\t\"<\"+srcType+\" class='\"+src.className+\"'\" +\r\n\t\t\t\t\" data-dojo-attach-point='\"+\r\n\t\t\t\t\t(src.getAttribute(\"data-dojo-attach-point\") || src.getAttribute(\"dojoAttachPoint\") || '')+\r\n\t\t\t\t\"' data-dojo-attach-event='\"+\r\n\t\t\t\t\t(src.getAttribute(\"data-dojo-attach-event\") || src.getAttribute(\"dojoAttachEvent\") || '')+\r\n\t\t\t\t\"' >\"+src.innerHTML.replace(/\\%7B/g,\"{\").replace(/\\%7D/g,\"}\")+\"</\"+srcType+\">\";\r\n\r\n\t\t\t// create the new widget class\r\n\t\t\tvar wc = declare(\r\n\t\t\t\tthis.widgetClass,\r\n\t\t\t\tthis.mixins,\r\n\t\t\t\tpropList\r\n\t\t\t);\r\n\r\n\t\t\t// Handle <script> blocks of form:\r\n\t\t\t//\t\t<script type=\"dojo/aspect\" data-dojo-advice=\"after\" data-dojo-method=\"foo\">\r\n\t\t\t// and\r\n\t\t\t//\t\t<script type=\"dojo/method\">\r\n\t\t\t// (Note that the second one is just shorthand for a dojo/aspect to postscript)\r\n\t\t\t// Since this is a connect in the declaration, we are actually connection to the method\r\n\t\t\t// in the _prototype_.\r\n\t\t\tarray.forEach(aspects, function(s){\r\n\t\t\t\tvar advice = s.getAttribute(\"data-dojo-advice\") || \"after\",\r\n\t\t\t\t\tmethod = s.getAttribute(\"data-dojo-method\") || \"postscript\",\r\n\t\t\t\t\tfunc = parser._functionFromScript(s);\r\n\t\t\t\taspect.after(wc.prototype, method, func, true);\r\n\t\t\t});\r\n\r\n\t\t\t// Handle legacy <script type=\"dojo/connect\" data-dojo-event=\"foo\">.\r\n\t\t\t// Remove for 2.0.\r\n\t\t\tarray.forEach(connects, function(s){\r\n\t\t\t\tvar evt = s.getAttribute(\"event\") || s.getAttribute(\"data-dojo-event\"),\r\n\t\t\t\t\tfunc = parser._functionFromScript(s);\r\n\t\t\t\taspect.after(wc.prototype, evt, func, true);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n"]}