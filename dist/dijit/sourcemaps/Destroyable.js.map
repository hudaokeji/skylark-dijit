{"version":3,"sources":["Destroyable.js"],"names":["define","array","aspect","declare","destroy","preserveDom","this","_destroyed","own","cleanupMethods","forEach","arguments","handle","destroyMethodName","odh","before","hdhs","onManualDestroy","remove","hdh","then","cleanupMethod","push","after"],"mappings":";;;;;;;AAAAA,QACC,mBACA,cACA,sBACE,SAASC,EAAOC,EAAQC,GAK1B,OAAOA,EAAQ,oBAAqB,MAQnCC,QAAS,SAAqBC,GAG7BC,KAAKC,YAAa,GAGnBC,IAAK,WAUJ,IAAIC,GACH,mBACA,UACA,UA2CD,OAxCAR,EAAMS,QAAQC,UAAW,SAASC,GAKjC,IAAIC,EACAC,EAAMZ,EAAOa,OAAOT,KAAM,UAAW,SAAUD,GAClDO,EAAOC,GAAmBR,KAIvBW,KACJ,SAASC,IACRH,EAAII,SACJjB,EAAMS,QAAQM,EAAM,SAASG,GAC5BA,EAAID,WAMHN,EAAOQ,MAGTP,EAAoB,SACpBD,EAAOQ,KAAKH,EAAiBA,IAG7BhB,EAAMS,QAAQD,EAAgB,SAASY,GACF,mBAA1BT,EAAOS,KACZR,IAEHA,EAAoBQ,GAErBL,EAAKM,KAAKpB,EAAOqB,MAAMX,EAAQS,EAAeJ,GAAiB,QAIhEX,MAEIK","file":"../Destroyable.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\"\r\n], function(array, aspect, declare){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Destroyable\r\n\r\n\treturn declare(\"dijit.Destroyable\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin to track handles and release them when instance is destroyed.\r\n\t\t// description:\r\n\t\t//\t\tCall this.own(...) on list of handles (returned from dojo/aspect, dojo/on,\r\n\t\t//\t\tdojo/Stateful::watch, or any class (including widgets) with a destroyRecursive() or destroy() method.\r\n\t\t//\t\tThen call destroy() later to destroy this instance and release the resources.\r\n\r\n\t\tdestroy: function(/*Boolean*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy this class, releasing any resources registered via own().\r\n\t\t\tthis._destroyed = true;\r\n\t\t},\r\n\r\n\t\town: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTrack specified handles and remove/destroy them when this instance is destroyed, unless they were\r\n\t\t\t//\t\talready removed/destroyed manually.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe array of specified handles, so you can do for example:\r\n\t\t\t//\t|\t\tvar handle = this.own(on(...))[0];\r\n\r\n\t\t\tvar cleanupMethods = [\r\n\t\t\t\t\"destroyRecursive\",\r\n\t\t\t\t\"destroy\",\r\n\t\t\t\t\"remove\"\r\n\t\t\t];\r\n\r\n\t\t\tarray.forEach(arguments, function(handle){\r\n\t\t\t\t// When this.destroy() is called, destroy handle.  Since I'm using aspect.before(),\r\n\t\t\t\t// the handle will be destroyed before a subclass's destroy() method starts running, before it calls\r\n\t\t\t\t// this.inherited() or even if it doesn't call this.inherited() at all.  If that's an issue, make an\r\n\t\t\t\t// onDestroy() method and connect to that instead.\r\n\t\t\t\tvar destroyMethodName;\r\n\t\t\t\tvar odh = aspect.before(this, \"destroy\", function (preserveDom){\r\n\t\t\t\t\thandle[destroyMethodName](preserveDom);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Callback for when handle is manually destroyed.\r\n\t\t\t\tvar hdhs = [];\r\n\t\t\t\tfunction onManualDestroy(){\r\n\t\t\t\t\todh.remove();\r\n\t\t\t\t\tarray.forEach(hdhs, function(hdh){\r\n\t\t\t\t\t\thdh.remove();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Setup listeners for manual destroy of handle.\r\n\t\t\t\t// Also computes destroyMethodName, used in listener above.\r\n\t\t\t\tif(handle.then){\r\n\t\t\t\t\t// Special path for Promises.  Detect when Promise is resolved, rejected, or\r\n\t\t\t\t\t// canceled (nb: cancelling a Promise causes it to be rejected).\r\n\t\t\t\t\tdestroyMethodName = \"cancel\";\r\n\t\t\t\t\thandle.then(onManualDestroy, onManualDestroy);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Path for other handles.  Just use AOP to detect when handle is manually destroyed.\r\n\t\t\t\t\tarray.forEach(cleanupMethods, function(cleanupMethod){\r\n\t\t\t\t\t\tif(typeof handle[cleanupMethod] === \"function\"){\r\n\t\t\t\t\t\t\tif(!destroyMethodName){\r\n\t\t\t\t\t\t\t\t// Use first matching method name in above listener (prefer destroyRecursive() to destroy())\r\n\t\t\t\t\t\t\t\tdestroyMethodName = cleanupMethod;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\thdhs.push(aspect.after(handle, cleanupMethod, onManualDestroy, true));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn arguments;\t\t// handle\r\n\t\t}\r\n\t});\r\n});\r\n"]}