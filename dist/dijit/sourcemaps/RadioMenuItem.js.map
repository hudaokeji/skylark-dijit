{"version":3,"sources":["RadioMenuItem.js"],"names":["define","array","declare","domClass","query","CheckedMenuItem","registry","baseClass","role","checkedChar","group","_setGroupAttr","_setCheckedAttr","checked","this","inherited","arguments","_created","forEach","_getRelatedWidgets","widget","set","_onClick","evt","disabled","onChange","onClick","ary","menuItemNode","getEnclosingWidget","push"],"mappings":";;;;;;;AAAAA,QACC,mBACA,qBACA,iBACA,kBACA,oBACA,cACE,SAASC,EAAOC,EAASC,EAAUC,EAAOC,EAAiBC,GAK7D,OAAOJ,EAAQ,4BAA6BG,GAK3CE,UAAW,mCAEXC,KAAM,gBAINC,YAAa,IAIbC,MAAO,GACPC,cAAe,UAEfC,gBAAiB,SAAqBC,GAErCC,KAAKC,UAAUC,WACXF,KAAKG,UAGNJ,GAAWC,KAAKJ,OAClBT,EAAMiB,QAAQJ,KAAKK,qBAAsB,SAASC,GAC9CA,GAAUN,MAAQM,EAAOP,SAC3BO,EAAOC,IAAI,WAAW,IAErBP,OAILQ,SAAU,SAASC,GAMdT,KAAKU,UAAaV,KAAKD,UAC1BC,KAAKO,IAAI,WAAW,GACpBP,KAAKW,UAAS,IAEfX,KAAKY,QAAQH,IAGdJ,mBAAoB,WAEnB,IAAIQ,KASJ,OARAvB,EAAM,UAAYU,KAAKJ,MAAQ,UAAYI,KAAKN,KAAO,KAAKU,QAC3D,SAASU,GACR,IAAIR,EAASd,EAASuB,mBAAmBD,GACtCR,GACFO,EAAIG,KAAKV,KAILO","file":"../RadioMenuItem.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/query!css2\", // query\r\n\t\"./CheckedMenuItem\",\r\n\t\"./registry\"    // registry.getEnclosingWidget\r\n], function(array, declare, domClass, query, CheckedMenuItem, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/RadioButtonMenuItem\r\n\r\n\treturn declare(\"dijit.RadioButtonMenuItem\", CheckedMenuItem, {\r\n\t\t// summary:\r\n\t\t//\t\tA radio-button-like menu item for toggling on and off\r\n\r\n\t\t// Use both base classes so we get styles like dijitMenuItemDisabled\r\n\t\tbaseClass: \"dijitMenuItem dijitRadioMenuItem\",\r\n\r\n\t\trole: \"menuitemradio\",\r\n\r\n\t\t// checkedChar: String\r\n\t\t//\t\tCharacter (or string) used in place of radio button icon when display in high contrast mode\r\n\t\tcheckedChar: \"*\",\r\n\r\n\t\t// group: String\r\n\t\t//\t\tToggling on a RadioMenuItem in a given group toggles off the other RadioMenuItems in that group.\r\n\t\tgroup: \"\",\r\n\t\t_setGroupAttr: \"domNode\",\t// needs to be set as an attribute so dojo/query can find it\r\n\r\n\t\t_setCheckedAttr: function(/*Boolean*/ checked){\r\n\t\t\t// If I am being checked then have to deselect currently checked items\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this._created){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(checked && this.group){\r\n\t\t\t\tarray.forEach(this._getRelatedWidgets(), function(widget){\r\n\t\t\t\t\tif(widget != this && widget.checked){\r\n\t\t\t\t\t\twidget.set('checked', false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onClick: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClicking this item toggles it on.   If it's already on, then clicking does nothing.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!this.disabled && !this.checked){\r\n\t\t\t\tthis.set(\"checked\", true);\r\n\t\t\t\tthis.onChange(true);\r\n\t\t\t}\r\n\t\t\tthis.onClick(evt);\r\n\t\t},\r\n\r\n\t\t_getRelatedWidgets: function(){\r\n\t\t\t// Private function needed to help iterate over all radio menu items in a group.\r\n\t\t\tvar ary = [];\r\n\t\t\tquery(\"[group=\" + this.group + \"][role=\" + this.role + \"]\").forEach(\r\n\t\t\t\tfunction(menuItemNode){\r\n\t\t\t\t\tvar widget = registry.getEnclosingWidget(menuItemNode);\r\n\t\t\t\t\tif(widget){\r\n\t\t\t\t\t\tary.push(widget);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn ary;\r\n\t\t}\r\n\t});\r\n});\r\n"]}