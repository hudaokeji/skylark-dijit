{"version":3,"sources":["_AttachMixin.js"],"names":["define","require","array","connect","declare","lang","mouse","on","touch","_WidgetBase","a11yclick","synthEvents","delegate","mouseenter","enter","mouseleave","leave","keypress","_keypress","_AttachMixin","constructor","this","_attachPoints","_attachEvents","buildRendering","inherited","arguments","_attachTemplateNodes","domNode","_beforeFillContent","rootNode","node","nodeType","_processTemplateNode","n","p","getAttribute","_attach","searchContainerNode","firstChild","nextSibling","parentNode","baseNode","getAttrFunc","attachFunc","ret","_attachScope","attachScope","attachPoint","point","points","split","shift","isArray","push","attachEvent","event","events","trim","thisFunc","indexOf","funcNameArr","hitch","type","func","replace","toLowerCase","_detachTemplateNodes","forEach","handle","remove","destroyRendering","extend","dojoAttachEvent","dojoAttachPoint"],"mappings":";;;;;;;AAAAA,QACC,UACA,mBACA,qBACA,qBACA,kBACA,aACA,UACA,aACA,iBACE,SAASC,QAASC,EAAOC,EAASC,EAASC,EAAMC,EAAOC,EAAIC,EAAOC,GAMrE,IASIC,EATAC,EAAcN,EAAKO,SAASJ,GAC/BK,WAAcP,EAAMQ,MACpBC,WAAcT,EAAMU,MACpBC,SAAYd,EAAQe,YAQjBC,EAAef,EAAQ,qBAAsB,MAmChDgB,YAAa,WAUZC,KAAKC,iBACLD,KAAKE,kBAINC,eAAgB,WAMfH,KAAKI,UAAUC,WAIfL,KAAKM,qBAAqBN,KAAKO,SAE/BP,KAAKQ,sBAGNA,mBAAoB,aAGpBF,qBAAsB,SAASG,GAiB9B,IADA,IAAIC,EAAOD,IAEV,GAAoB,GAAjBC,EAAKC,WAAkBX,KAAKY,qBAAqBF,EAAM,SAASG,EAAEC,GAAI,OAAOD,EAAEE,aAAaD,IAC7Fd,KAAKgB,UAAYhB,KAAKiB,sBAAwBP,EAAKQ,WACpDR,EAAOA,EAAKQ,eACR,CACJ,GAAGR,GAAQD,EAAW,OACtB,MAAOC,EAAKS,aAEX,IADAT,EAAOA,EAAKU,aACDX,EAAW,OAEvBC,EAAOA,EAAKS,cAKfP,qBAAsB,SAA4BS,EAAUC,EAAaC,GAKxE,IAAIC,GAAM,EAGNC,EAAezB,KAAK0B,aAAe1B,KACtC2B,EAAcL,EAAYD,EAAU,oBAAsBC,EAAYD,EAAU,0BACjF,GAAGM,EAEF,IADA,IAAIC,EAAOC,EAASF,EAAYG,MAAM,WAC/BF,EAAQC,EAAOE,SAClB/C,EAAKgD,QAAQP,EAAaG,IAC5BH,EAAaG,GAAOK,KAAKZ,GAEzBI,EAAaG,GAASP,EAEvBG,EAAgB,iBAATI,EACP5B,KAAKC,cAAcgC,KAAKL,GAK1B,IAAIM,EAAcZ,EAAYD,EAAU,oBAAsBC,EAAYD,EAAU,0BACpF,GAAGa,EAKF,IAFA,IAAIC,EAAOC,EAASF,EAAYJ,MAAM,WAClCO,EAAOrD,EAAKqD,KACTF,EAAQC,EAAOL,SACrB,GAAGI,EAAM,CACR,IAAIG,EAAW,KACf,IAA0B,GAAvBH,EAAMI,QAAQ,KAAW,CAE3B,IAAIC,EAAcL,EAAML,MAAM,KAC9BK,EAAQE,EAAKG,EAAY,IACzBF,EAAWD,EAAKG,EAAY,SAE5BL,EAAQE,EAAKF,GAEVG,IACHA,EAAWH,GAGZnC,KAAKE,cAAc+B,KAAKV,EAAWF,EAAUc,EAAOnD,EAAKyD,MAAMhB,EAAca,KAKhF,OAAOd,GAGRR,QAAS,SAASN,EAAMgC,EAAMC,GAsB7B,OALCD,EADU,eADXA,EAAOA,EAAKE,QAAQ,MAAO,IAAIC,eAEvBxD,IAAcA,EAAYT,QAAQ,gBAElCU,EAAYoD,IAASA,EAGtBxD,EAAGwB,EAAMgC,EAAMC,IAGvBG,qBAAsB,WAKrB,IAAIrB,EAAezB,KAAK0B,aAAe1B,KACvCnB,EAAMkE,QAAQ/C,KAAKC,cAAe,SAAS2B,UACnCH,EAAaG,KAErB5B,KAAKC,iBAGLpB,EAAMkE,QAAQ/C,KAAKE,cAAe,SAAS8C,GAASA,EAAOC,WAC3DjD,KAAKE,kBAGNgD,iBAAkB,WACjBlD,KAAK8C,uBACL9C,KAAKI,UAAUC,cAajB,OALArB,EAAKmE,OAAO/D,GACXgE,gBAAiB,GACjBC,gBAAiB,KAGXvD","file":"../_AttachMixin.js","sourcesContent":["define([\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/connect\",\t// remove for 2.0\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/mouse\",\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"./_WidgetBase\"\r\n], function(require, array, connect, declare, lang, mouse, on, touch, _WidgetBase){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_AttachMixin\r\n\r\n\t// Map from string name like \"mouseenter\" to synthetic event like mouse.enter\r\n\tvar synthEvents = lang.delegate(touch, {\r\n\t\t\"mouseenter\": mouse.enter,\r\n\t\t\"mouseleave\": mouse.leave,\r\n\t\t\"keypress\": connect._keypress\t// remove for 2.0\r\n\t});\r\n\r\n\t// To be lightweight, _AttachMixin doesn't require() dijit/a11yclick.\r\n\t// If the subclass has a template using \"ondijitclick\", it must load dijit/a11yclick itself.\r\n\t// In that case, the a11yclick variable below will get set to point to that synthetic event.\r\n\tvar a11yclick;\r\n\r\n\tvar _AttachMixin = declare(\"dijit._AttachMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets to attach to dom nodes and setup events via\r\n\t\t//\t\tconvenient data-dojo-attach-point and data-dojo-attach-event DOM attributes.\r\n\t\t//\r\n\t\t//\t\tSuperclass of _TemplatedMixin, and can also be used standalone when templates are pre-rendered on the\r\n\t\t//\t\tserver.\r\n\t\t//\r\n\t\t//\t\tDoes not [yet] handle widgets like ContentPane with this.containerNode set.   It should skip\r\n\t\t//\t\tscanning for data-dojo-attach-point and data-dojo-attach-event inside this.containerNode, but it\r\n\t\t//\t\tdoesn't.\r\n\r\n/*=====\r\n\t\t// _attachPoints: [private] String[]\r\n\t\t//\t\tList of widget attribute names associated with data-dojo-attach-point=... in the\r\n\t\t//\t\ttemplate, ex: [\"containerNode\", \"labelNode\"]\r\n\t\t_attachPoints: [],\r\n\r\n\t\t// _attachEvents: [private] Handle[]\r\n\t\t//\t\tList of connections associated with data-dojo-attach-event=... in the\r\n\t\t//\t\ttemplate\r\n\t\t_attachEvents: [],\r\n\r\n\t\t// attachScope: [public] Object\r\n\t\t//\t\tObject to which attach points and events will be scoped.  Defaults\r\n\t\t//\t\tto 'this'.\r\n\t\tattachScope: undefined,\r\n\r\n\t\t// searchContainerNode: [protected] Boolean\r\n\t\t//\t\tSearch descendants of this.containerNode for data-dojo-attach-point and data-dojo-attach-event.\r\n\t\t//\t\tShould generally be left false (the default value) both for performance and to avoid failures when\r\n\t\t//\t\tthis.containerNode holds other _AttachMixin instances with their own attach points and events.\r\n \t\tsearchContainerNode: false,\r\n =====*/\r\n\r\n\t\tconstructor: function(/*===== params, srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree.\r\n\r\n\t\t\tthis._attachPoints = [];\r\n\t\t\tthis._attachEvents = [];\r\n\t\t},\r\n\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach to DOM nodes marked with special attributes.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// recurse through the node, looking for, and attaching to, our\r\n\t\t\t// attachment points and events, which should be defined on the template node.\r\n\t\t\tthis._attachTemplateNodes(this.domNode);\r\n\r\n\t\t\tthis._beforeFillContent();\t\t// hook for _WidgetsInTemplateMixin\r\n\t\t},\r\n\r\n\t\t_beforeFillContent: function(){\r\n\t\t},\r\n\r\n\t\t_attachTemplateNodes: function(rootNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIterate through the dom nodes and attach functions and nodes accordingly.\r\n\t\t\t// description:\r\n\t\t\t//\t\tMap widget properties and functions to the handlers specified in\r\n\t\t\t//\t\tthe dom node and it's descendants. This function iterates over all\r\n\t\t\t//\t\tnodes and looks for these properties:\r\n\t\t\t//\r\n\t\t\t//\t\t- dojoAttachPoint/data-dojo-attach-point\r\n\t\t\t//\t\t- dojoAttachEvent/data-dojo-attach-event\r\n\t\t\t// rootNode: DomNode\r\n\t\t\t//\t\tThe node to search for properties. All descendants will be searched.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// DFS to process all nodes except those inside of this.containerNode\r\n\t\t\tvar node = rootNode;\r\n\t\t\twhile(true){\r\n\t\t\t\tif(node.nodeType == 1 && (this._processTemplateNode(node, function(n,p){ return n.getAttribute(p); },\r\n\t\t\t\t\t\tthis._attach) || this.searchContainerNode) && node.firstChild){\r\n\t\t\t\t\tnode = node.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(node == rootNode){ return; }\r\n\t\t\t\t\twhile(!node.nextSibling){\r\n\t\t\t\t\t\tnode = node.parentNode;\r\n\t\t\t\t\t\tif(node == rootNode){ return; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode = node.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_processTemplateNode: function(/*DOMNode|Widget*/ baseNode, getAttrFunc, attachFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcess data-dojo-attach-point and data-dojo-attach-event for given node or widget.\r\n\t\t\t//\t\tReturns true if caller should process baseNode's children too.\r\n\r\n\t\t\tvar ret = true;\r\n\r\n\t\t\t// Process data-dojo-attach-point\r\n\t\t\tvar _attachScope = this.attachScope || this,\r\n\t\t\t\tattachPoint = getAttrFunc(baseNode, \"dojoAttachPoint\") || getAttrFunc(baseNode, \"data-dojo-attach-point\");\r\n\t\t\tif(attachPoint){\r\n\t\t\t\tvar point, points = attachPoint.split(/\\s*,\\s*/);\r\n\t\t\t\twhile((point = points.shift())){\r\n\t\t\t\t\tif(lang.isArray(_attachScope[point])){\r\n\t\t\t\t\t\t_attachScope[point].push(baseNode);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t_attachScope[point] = baseNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tret = (point != \"containerNode\");\r\n\t\t\t\t\tthis._attachPoints.push(point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Process data-dojo-attach-event\r\n\t\t\tvar attachEvent = getAttrFunc(baseNode, \"dojoAttachEvent\") || getAttrFunc(baseNode, \"data-dojo-attach-event\");\r\n\t\t\tif(attachEvent){\r\n\t\t\t\t// NOTE: we want to support attributes that have the form\r\n\t\t\t\t// \"domEvent: nativeEvent; ...\"\r\n\t\t\t\tvar event, events = attachEvent.split(/\\s*,\\s*/);\r\n\t\t\t\tvar trim = lang.trim;\r\n\t\t\t\twhile((event = events.shift())){\r\n\t\t\t\t\tif(event){\r\n\t\t\t\t\t\tvar thisFunc = null;\r\n\t\t\t\t\t\tif(event.indexOf(\":\") != -1){\r\n\t\t\t\t\t\t\t// oh, if only JS had tuple assignment\r\n\t\t\t\t\t\t\tvar funcNameArr = event.split(\":\");\r\n\t\t\t\t\t\t\tevent = trim(funcNameArr[0]);\r\n\t\t\t\t\t\t\tthisFunc = trim(funcNameArr[1]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tevent = trim(event);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!thisFunc){\r\n\t\t\t\t\t\t\tthisFunc = event;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._attachEvents.push(attachFunc(baseNode, event, lang.hitch(_attachScope, thisFunc)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\t_attach: function(node, type, func){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRoughly corresponding to dojo/on, this is the default function for processing a\r\n\t\t\t//\t\tdata-dojo-attach-event.  Meant to attach to DOMNodes, not to widgets.\r\n\t\t\t// node: DOMNode\r\n\t\t\t//\t\tThe node to setup a listener on.\r\n\t\t\t// type: String\r\n\t\t\t//\t\tEvent name like \"click\".\r\n\t\t\t// getAttrFunc: Function\r\n\t\t\t//\t\tFunction to get the specified property for a given DomNode/Widget.\r\n\t\t\t// attachFunc: Function?\r\n\t\t\t//\t\tAttaches an event handler from the specified node/widget to specified function.\r\n\r\n\t\t\t// Map special type names like \"mouseenter\" to synthetic events.\r\n\t\t\t// Subclasses are responsible to require() dijit/a11yclick if they want to use it.\r\n\t\t\ttype = type.replace(/^on/, \"\").toLowerCase();\r\n\t\t\tif(type == \"dijitclick\"){\r\n\t\t\t\ttype = a11yclick || (a11yclick = require(\"./a11yclick\"));\r\n\t\t\t}else{\r\n\t\t\t\ttype = synthEvents[type] || type;\r\n\t\t\t}\r\n\r\n\t\t\treturn on(node, type, func);\r\n\t\t},\r\n\r\n\t\t_detachTemplateNodes: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetach and clean up the attachments made in _attachtempalteNodes.\r\n\r\n\t\t\t// Delete all attach points to prevent IE6 memory leaks.\r\n\t\t\tvar _attachScope = this.attachScope || this;\r\n\t\t\tarray.forEach(this._attachPoints, function(point){\r\n\t\t\t\tdelete _attachScope[point];\r\n\t\t\t});\r\n\t\t\tthis._attachPoints = [];\r\n\r\n\t\t\t// And same for event handlers\r\n\t\t\tarray.forEach(this._attachEvents, function(handle){ handle.remove(); });\r\n\t\t\tthis._attachEvents = [];\r\n\t\t},\r\n\r\n\t\tdestroyRendering: function(){\r\n\t\t\tthis._detachTemplateNodes();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\t// These arguments can be specified for widgets which are used in templates.\r\n\t// Since any widget can be specified as sub widgets in template, mix it\r\n\t// into the base widget class.  (This is a hack, but it's effective.).\r\n\t// Remove for 2.0.   Also, hide from API doc parser.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ {\r\n\t\tdojoAttachEvent: \"\",\r\n\t\tdojoAttachPoint: \"\"\r\n\t});\r\n\t\r\n\treturn _AttachMixin;\r\n});\r\n"]}