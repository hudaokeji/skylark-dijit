{"version":3,"sources":["_HasDropDown.js"],"names":["define","declare","Deferred","dom","domAttr","domClass","domGeometry","domStyle","has","keys","lang","on","touch","registry","focus","popup","_FocusMixin","_buttonNode","_arrowWrapperNode","_popupStateNode","_aroundNode","dropDown","autoWidth","forceWidth","maxHeight","dropDownPosition","_stopClickEvents","_onDropDownMouseDown","e","this","disabled","readOnly","type","preventDefault","own","once","ownerDocument","release","hitch","toggleDropDown","_onDropDownMouseUp","overMenu","_opened","c","position","pageX","x","w","pageY","y","h","t","target","contains","parentNode","onItemClick","menuItem","byNode","onClick","getParent","autoFocus","hovering","_focusDropDownTimer","defer","_onDropDownClick","stopPropagation","buildRendering","inherited","arguments","focusNode","domNode","defaultPos","after","isLeftToRight","before","above","below","left","right","add","postCreate","keyboardEventNode","press","destroy","closeDropDown","_destroyed","destroyRecursive","_onKey","d","handleKey","keyCode","ESCAPE","DOWN_ARROW","ENTER","SPACE","_searchTimer","ctrlKey","altKey","metaKey","tagName","toLowerCase","_toggleOnKeyUp","_onKeyUp","_onBlur","isLoaded","loadDropDown","loadCallback","loadAndOpenDropDown","afterLoad","openDropDown","resolve","ddNode","aroundNode","self","retVal","open","parent","around","orient","onExecute","onCancel","onClose","set","remove","_set","offsetWidth","_popupWrapper","widthAdjust","resizeArgs","isFunction","resize","setMarginBox","corner","style","replace","setAttribute","id","getAttribute","close"],"mappings":"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","file":"../_HasDropDown.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/Deferred\",\r\n\t\"dojo/dom\", // dom.isDescendant\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains domClass.remove\r\n\t\"dojo/dom-geometry\", // domGeometry.marginBox domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/has\", // has(\"touch\")\r\n\t\"dojo/keys\", // keys.DOWN_ARROW keys.ENTER keys.ESCAPE\r\n\t\"dojo/_base/lang\", // lang.hitch lang.isFunction\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"./registry\", // registry.byNode()\r\n\t\"./focus\",\r\n\t\"./popup\",\r\n\t\"./_FocusMixin\"\r\n], function(declare, Deferred, dom, domAttr, domClass, domGeometry, domStyle, has, keys, lang, on, touch,\r\n\t\t\tregistry, focus, popup, _FocusMixin){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/_HasDropDown\r\n\r\n\treturn declare(\"dijit._HasDropDown\", _FocusMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets that need drop down ability.\r\n\r\n\t\t// _buttonNode: [protected] DomNode\r\n\t\t//\t\tThe button/icon/node to click to display the drop down.\r\n\t\t//\t\tCan be set via a data-dojo-attach-point assignment.\r\n\t\t//\t\tIf missing, then either focusNode or domNode (if focusNode is also missing) will be used.\r\n\t\t_buttonNode: null,\r\n\r\n\t\t// _arrowWrapperNode: [protected] DomNode\r\n\t\t//\t\tWill set CSS class dijitUpArrow, dijitDownArrow, dijitRightArrow etc. on this node depending\r\n\t\t//\t\ton where the drop down is set to be positioned.\r\n\t\t//\t\tCan be set via a data-dojo-attach-point assignment.\r\n\t\t//\t\tIf missing, then _buttonNode will be used.\r\n\t\t_arrowWrapperNode: null,\r\n\r\n\t\t// _popupStateNode: [protected] DomNode\r\n\t\t//\t\tThe node to set the aria-expanded class on.\r\n\t\t//\t\tAlso sets popupActive class but that will be removed in 2.0.\r\n\t\t//\t\tCan be set via a data-dojo-attach-point assignment.\r\n\t\t//\t\tIf missing, then focusNode or _buttonNode (if focusNode is missing) will be used.\r\n\t\t_popupStateNode: null,\r\n\r\n\t\t// _aroundNode: [protected] DomNode\r\n\t\t//\t\tThe node to display the popup around.\r\n\t\t//\t\tCan be set via a data-dojo-attach-point assignment.\r\n\t\t//\t\tIf missing, then domNode will be used.\r\n\t\t_aroundNode: null,\r\n\r\n\t\t// dropDown: [protected] Widget\r\n\t\t//\t\tThe widget to display as a popup.  This widget *must* be\r\n\t\t//\t\tdefined before the startup function is called.\r\n\t\tdropDown: null,\r\n\r\n\t\t// autoWidth: [protected] Boolean\r\n\t\t//\t\tSet to true to make the drop down at least as wide as this\r\n\t\t//\t\twidget.  Set to false if the drop down should just be its\r\n\t\t//\t\tdefault width.\r\n\t\tautoWidth: true,\r\n\r\n\t\t// forceWidth: [protected] Boolean\r\n\t\t//\t\tSet to true to make the drop down exactly as wide as this\r\n\t\t//\t\twidget.  Overrides autoWidth.\r\n\t\tforceWidth: false,\r\n\r\n\t\t// maxHeight: [protected] Integer\r\n\t\t//\t\tThe max height for our dropdown.\r\n\t\t//\t\tAny dropdown taller than this will have scrollbars.\r\n\t\t//\t\tSet to 0 for no max height, or -1 to limit height to available space in viewport\r\n\t\tmaxHeight: -1,\r\n\r\n\t\t// dropDownPosition: [const] String[]\r\n\t\t//\t\tThis variable controls the position of the drop down.\r\n\t\t//\t\tIt's an array of strings with the following values:\r\n\t\t//\r\n\t\t//\t\t- before: places drop down to the left of the target node/widget, or to the right in\r\n\t\t//\t\t  the case of RTL scripts like Hebrew and Arabic\r\n\t\t//\t\t- after: places drop down to the right of the target node/widget, or to the left in\r\n\t\t//\t\t  the case of RTL scripts like Hebrew and Arabic\r\n\t\t//\t\t- above: drop down goes above target node\r\n\t\t//\t\t- below: drop down goes below target node\r\n\t\t//\r\n\t\t//\t\tThe list is positions is tried, in order, until a position is found where the drop down fits\r\n\t\t//\t\twithin the viewport.\r\n\t\t//\r\n\t\tdropDownPosition: [\"below\", \"above\"],\r\n\r\n\t\t// _stopClickEvents: Boolean\r\n\t\t//\t\tWhen set to false, the click events will not be stopped, in\r\n\t\t//\t\tcase you want to use them in your subclass\r\n\t\t_stopClickEvents: true,\r\n\r\n\t\t_onDropDownMouseDown: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when the user mousedown/touchstart on the arrow icon.\r\n\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Prevent default to stop things like text selection, but don't stop propagation, so that:\r\n\t\t\t//\t\t1. TimeTextBox etc. can focus the <input> on mousedown\r\n\t\t\t//\t\t2. dropDownButtonActive class applied by _CssStateMixin (on button depress)\r\n\t\t\t//\t\t3. user defined onMouseDown handler fires\r\n\t\t\t//\r\n\t\t\t// Also, don't call preventDefault() on MSPointerDown event (on IE10) because that prevents the button\r\n\t\t\t// from getting focus, and then the focus manager doesn't know what's going on (#17262)\r\n\t\t\tif(e.type != \"MSPointerDown\" && e.type != \"pointerdown\"){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tthis.own(on.once(this.ownerDocument, touch.release, lang.hitch(this, \"_onDropDownMouseUp\")));\r\n\r\n\t\t\tthis.toggleDropDown();\r\n\t\t},\r\n\r\n\t\t_onDropDownMouseUp: function(/*Event?*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback on mouseup/touchend after mousedown/touchstart on the arrow icon.\r\n\t\t\t//\t\tNote that this function is called regardless of what node the event occurred on (but only after\r\n\t\t\t//\t\ta mousedown/touchstart on the arrow).\r\n\t\t\t//\r\n\t\t\t//\t\tIf the drop down is a simple menu and the cursor is over the menu, we execute it, otherwise, we focus our\r\n\t\t\t//\t\tdrop down widget.  If the event is missing, then we are not\r\n\t\t\t//\t\ta mouseup event.\r\n\t\t\t//\r\n\t\t\t//\t\tThis is useful for the common mouse movement pattern\r\n\t\t\t//\t\twith native browser `<select>` nodes:\r\n\t\t\t//\r\n\t\t\t//\t\t1. mouse down on the select node (probably on the arrow)\r\n\t\t\t//\t\t2. move mouse to a menu item while holding down the mouse button\r\n\t\t\t//\t\t3. mouse up.  this selects the menu item as though the user had clicked it.\r\n\r\n\t\t\tvar dropDown = this.dropDown, overMenu = false;\r\n\r\n\t\t\tif(e && this._opened){\r\n\t\t\t\t// This code deals with the corner-case when the drop down covers the original widget,\r\n\t\t\t\t// because it's so large.  In that case mouse-up shouldn't select a value from the menu.\r\n\t\t\t\t// Find out if our target is somewhere in our dropdown widget,\r\n\t\t\t\t// but not over our _buttonNode (the clickable node)\r\n\t\t\t\tvar c = domGeometry.position(this._buttonNode, true);\r\n\t\t\t\tif(!(e.pageX >= c.x && e.pageX <= c.x + c.w) || !(e.pageY >= c.y && e.pageY <= c.y + c.h)){\r\n\t\t\t\t\tvar t = e.target;\r\n\t\t\t\t\twhile(t && !overMenu){\r\n\t\t\t\t\t\tif(domClass.contains(t, \"dijitPopup\")){\r\n\t\t\t\t\t\t\toverMenu = true;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tt = t.parentNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(overMenu){\r\n\t\t\t\t\t\tt = e.target;\r\n\t\t\t\t\t\tif(dropDown.onItemClick){\r\n\t\t\t\t\t\t\tvar menuItem;\r\n\t\t\t\t\t\t\twhile(t && !(menuItem = registry.byNode(t))){\r\n\t\t\t\t\t\t\t\tt = t.parentNode;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(menuItem && menuItem.onClick && menuItem.getParent){\r\n\t\t\t\t\t\t\t\tmenuItem.getParent().onItemClick(menuItem, e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._opened){\r\n\t\t\t\t// Focus the dropdown widget unless it's a menu (in which case autoFocus is set to false).\r\n\t\t\t\t// Even if it's a menu, we need to focus it if this is a fake mouse event caused by the user typing\r\n\t\t\t\t// SPACE/ENTER while using JAWS.  Jaws converts the SPACE/ENTER key into mousedown/mouseup events.\r\n\t\t\t\t// If this.hovering is false then it's presumably actually a keyboard event.\r\n\t\t\t\tif(dropDown.focus && (dropDown.autoFocus !== false || (e.type == \"mouseup\" && !this.hovering))){\r\n\t\t\t\t\t// Do it on a delay so that we don't steal back focus from the dropdown.\r\n\t\t\t\t\tthis._focusDropDownTimer = this.defer(function(){\r\n\t\t\t\t\t\tdropDown.focus();\r\n\t\t\t\t\t\tdelete this._focusDropDownTimer;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// The drop down arrow icon probably can't receive focus, but widget itself should get focus.\r\n\t\t\t\t// defer() needed to make it work on IE (test DateTextBox)\r\n\t\t\t\tif(this.focus){\r\n\t\t\t\t\tthis.defer(\"focus\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDropDownClick: function(/*Event*/ e){\r\n\t\t\t// The drop down was already opened on mousedown/keydown; just need to stop the event\r\n\t\t\tif(this._stopClickEvents){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis._buttonNode = this._buttonNode || this.focusNode || this.domNode;\r\n\t\t\tthis._popupStateNode = this._popupStateNode || this.focusNode || this._buttonNode;\r\n\r\n\t\t\t// Add a class to the \"dijitDownArrowButton\" type class to _buttonNode so theme can set direction of arrow\r\n\t\t\t// based on where drop down will normally appear\r\n\t\t\tvar defaultPos = {\r\n\t\t\t\t\"after\": this.isLeftToRight() ? \"Right\" : \"Left\",\r\n\t\t\t\t\"before\": this.isLeftToRight() ? \"Left\" : \"Right\",\r\n\t\t\t\t\"above\": \"Up\",\r\n\t\t\t\t\"below\": \"Down\",\r\n\t\t\t\t\"left\": \"Left\",\r\n\t\t\t\t\"right\": \"Right\"\r\n\t\t\t}[this.dropDownPosition[0]] || this.dropDownPosition[0] || \"Down\";\r\n\t\t\tdomClass.add(this._arrowWrapperNode || this._buttonNode, \"dijit\" + defaultPos + \"ArrowButton\");\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset up nodes and connect our mouse and keyboard events\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar keyboardEventNode = this.focusNode || this.domNode;\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this._buttonNode, touch.press, lang.hitch(this, \"_onDropDownMouseDown\")),\r\n\t\t\t\ton(this._buttonNode, \"click\", lang.hitch(this, \"_onDropDownClick\")),\r\n\t\t\t\ton(keyboardEventNode, \"keydown\", lang.hitch(this, \"_onKey\")),\r\n\t\t\t\ton(keyboardEventNode, \"keyup\", lang.hitch(this, \"_onKeyUp\"))\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// If dropdown is open, close it, to avoid leaving dijit/focus in a strange state.\r\n\t\t\t// Put focus back on me to avoid the focused node getting destroyed, which flummoxes IE.\r\n\t\t\tif(this._opened){\r\n\t\t\t\tthis.closeDropDown(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\t// Destroy the drop down, unless it's already been destroyed.  This can happen because\r\n\t\t\t\t// the drop down is a direct child of <body> even though it's logically my child.\r\n\t\t\t\tif(!this.dropDown._destroyed){\r\n\t\t\t\t\tthis.dropDown.destroyRecursive();\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.dropDown;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onKey: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when the user presses a key while focused on the button node\r\n\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar d = this.dropDown, target = e.target;\r\n\t\t\tif(d && this._opened && d.handleKey){\r\n\t\t\t\tif(d.handleKey(e) === false){\r\n\t\t\t\t\t/* false return code means that the drop down handled the key */\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && this._opened && e.keyCode == keys.ESCAPE){\r\n\t\t\t\tthis.closeDropDown();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}else if(!this._opened &&\r\n\t\t\t\t(e.keyCode == keys.DOWN_ARROW ||\r\n\t\t\t\t\t// ignore unmodified SPACE if _KeyNavMixin has active searching in progress\r\n\t\t\t\t\t( (e.keyCode == keys.ENTER || (e.keyCode == keys.SPACE && (!this._searchTimer || (e.ctrlKey || e.altKey || e.metaKey)))) &&\r\n\t\t\t\t\t\t//ignore enter and space if the event is for a text input\r\n\t\t\t\t\t\t((target.tagName || \"\").toLowerCase() !== 'input' ||\r\n\t\t\t\t\t\t\t(target.type && target.type.toLowerCase() !== 'text'))))){\r\n\t\t\t\t// Toggle the drop down, but wait until keyup so that the drop down doesn't\r\n\t\t\t\t// get a stray keyup event, or in the case of key-repeat (because user held\r\n\t\t\t\t// down key for too long), stray keydown events\r\n\t\t\t\tthis._toggleOnKeyUp = true;\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onKeyUp: function(){\r\n\t\t\tif(this._toggleOnKeyUp){\r\n\t\t\t\tdelete this._toggleOnKeyUp;\r\n\t\t\t\tthis.toggleDropDown();\r\n\t\t\t\tvar d = this.dropDown;\t// drop down may not exist until toggleDropDown() call\r\n\t\t\t\tif(d && d.focus){\r\n\t\t\t\t\tthis.defer(lang.hitch(d, \"focus\"), 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled magically when focus has shifted away from this widget and it's dropdown\r\n\r\n\t\t\t// Close dropdown but don't focus my <input>.  User may have focused somewhere else (ex: clicked another\r\n\t\t\t// input), and even if they just clicked a blank area of the screen, focusing my <input> will unwantedly\r\n\t\t\t// popup the keyboard on mobile.\r\n\t\t\tthis.closeDropDown(false);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tisLoaded: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if the dropdown exists and it's data is loaded.  This can\r\n\t\t\t//\t\tbe overridden in order to force a call to loadDropDown().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tloadDropDown: function(/*Function*/ loadCallback){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the drop down if it doesn't exist, loads the data\r\n\t\t\t//\t\tif there's an href and it hasn't been loaded yet, and then calls\r\n\t\t\t//\t\tthe given callback.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// TODO: for 2.0, change API to return a Deferred, instead of calling loadCallback?\r\n\t\t\tloadCallback();\r\n\t\t},\r\n\r\n\t\tloadAndOpenDropDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the drop down if it doesn't exist, loads the data\r\n\t\t\t//\t\tif there's an href and it hasn't been loaded yet, and\r\n\t\t\t//\t\tthen opens the drop down.  This is basically a callback when the\r\n\t\t\t//\t\tuser presses the down arrow button to open the drop down.\r\n\t\t\t// returns: Deferred\r\n\t\t\t//\t\tDeferred for the drop down widget that\r\n\t\t\t//\t\tfires when drop down is created and loaded\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar d = new Deferred(),\r\n\t\t\t\tafterLoad = lang.hitch(this, function(){\r\n\t\t\t\t\tthis.openDropDown();\r\n\t\t\t\t\td.resolve(this.dropDown);\r\n\t\t\t\t});\r\n\t\t\tif(!this.isLoaded()){\r\n\t\t\t\tthis.loadDropDown(afterLoad);\r\n\t\t\t}else{\r\n\t\t\t\tafterLoad();\r\n\t\t\t}\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\ttoggleDropDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when the user presses the down arrow button or presses\r\n\t\t\t//\t\tthe down arrow key to open/close the drop down.\r\n\t\t\t//\t\tToggle the drop-down widget; if it is up, close it, if not, open it\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this._opened){\r\n\t\t\t\tthis.loadAndOpenDropDown();\r\n\t\t\t}else{\r\n\t\t\t\tthis.closeDropDown(true);\t// refocus button to avoid hiding node w/focus\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\topenDropDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOpens the dropdown for this widget.   To be called only when this.dropDown\r\n\t\t\t//\t\thas been created and is ready to display (ie, it's data is loaded).\r\n\t\t\t// returns:\r\n\t\t\t//\t\treturn value of dijit/popup.open()\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar dropDown = this.dropDown,\r\n\t\t\t\tddNode = dropDown.domNode,\r\n\t\t\t\taroundNode = this._aroundNode || this.domNode,\r\n\t\t\t\tself = this;\r\n\r\n\t\t\tvar retVal = popup.open({\r\n\t\t\t\tparent: this,\r\n\t\t\t\tpopup: dropDown,\r\n\t\t\t\taround: aroundNode,\r\n\t\t\t\torient: this.dropDownPosition,\r\n\t\t\t\tmaxHeight: this.maxHeight,\r\n\t\t\t\tonExecute: function(){\r\n\t\t\t\t\tself.closeDropDown(true);\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: function(){\r\n\t\t\t\t\tself.closeDropDown(true);\r\n\t\t\t\t},\r\n\t\t\t\tonClose: function(){\r\n\t\t\t\t\tdomAttr.set(self._popupStateNode, \"popupActive\", false);\r\n\t\t\t\t\tdomClass.remove(self._popupStateNode, \"dijitHasDropDownOpen\");\r\n\t\t\t\t\tself._set(\"_opened\", false);\t// use set() because _CssStateMixin is watching\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Set width of drop down if necessary, so that dropdown width + width of scrollbar (from popup wrapper)\r\n\t\t\t// matches width of aroundNode\r\n\t\t\tif(this.forceWidth || (this.autoWidth && aroundNode.offsetWidth > dropDown._popupWrapper.offsetWidth)){\r\n\t\t\t\tvar widthAdjust = aroundNode.offsetWidth - dropDown._popupWrapper.offsetWidth;\r\n\t\t\t\tvar resizeArgs = {\r\n\t\t\t\t\tw: dropDown.domNode.offsetWidth + widthAdjust\r\n\t\t\t\t};\r\n\t\t\t\tif(lang.isFunction(dropDown.resize)){\r\n\t\t\t\t\tdropDown.resize(resizeArgs);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomGeometry.setMarginBox(ddNode, resizeArgs);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If dropdown is right-aligned then compensate for width change by changing horizontal position\r\n\t\t\t\tif(retVal.corner[1] == \"R\"){\r\n\t\t\t\t\tdropDown._popupWrapper.style.left =\r\n\t\t\t\t\t\t(dropDown._popupWrapper.style.left.replace(\"px\", \"\") - widthAdjust) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdomAttr.set(this._popupStateNode, \"popupActive\", \"true\");\r\n\t\t\tdomClass.add(this._popupStateNode, \"dijitHasDropDownOpen\");\r\n\t\t\tthis._set(\"_opened\", true);\t// use set() because _CssStateMixin is watching\r\n\r\n\t\t\tthis._popupStateNode.setAttribute(\"aria-expanded\", \"true\");\r\n\t\t\tthis._popupStateNode.setAttribute(\"aria-owns\", dropDown.id);\r\n\r\n\t\t\t// Set aria-labelledby on dropdown if it's not already set to something more meaningful\r\n\t\t\tif(ddNode.getAttribute(\"role\") !== \"presentation\" && !ddNode.getAttribute(\"aria-labelledby\")){\r\n\t\t\t\tddNode.setAttribute(\"aria-labelledby\", this.id);\r\n\t\t\t}\r\n\r\n\t\t\treturn retVal;\r\n\t\t},\r\n\r\n\t\tcloseDropDown: function(/*Boolean*/ focus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCloses the drop down on this widget\r\n\t\t\t// focus:\r\n\t\t\t//\t\tIf true, refocuses the button widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this._focusDropDownTimer){\r\n\t\t\t\tthis._focusDropDownTimer.remove();\r\n\t\t\t\tdelete this._focusDropDownTimer;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._opened){\r\n\t\t\t\tthis._popupStateNode.setAttribute(\"aria-expanded\", \"false\");\r\n\t\t\t\tif(focus && this.focus){\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t}\r\n\t\t\t\tpopup.close(this.dropDown);\r\n\t\t\t\tthis._opened = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n});\r\n"]}