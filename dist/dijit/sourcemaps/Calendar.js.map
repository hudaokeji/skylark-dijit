{"version":3,"sources":["Calendar.js"],"names":["define","array","date","local","declare","domAttr","domClass","domConstruct","kernel","keys","lang","on","has","CalendarLite","_Widget","_CssStateMixin","_TemplatedMixin","DropDownButton","Calendar","baseClass","cssStateNodes","decrementMonth","incrementMonth","previousYearLabelNode","nextYearLabelNode","setValue","value","deprecated","this","set","_createMonthWidget","_MonthDropDownButton","id","tabIndex","onMonthSelect","hitch","dateLocaleModule","monthNode","postCreate","inherited","arguments","own","domNode","dateRowsNode","_onMonthSelect","newMonth","dateClassObj","currentFocus","setDate","setMonth","daysInMonth","dateModule","getDaysInMonth","currentDate","getDate","Math","min","_setCurrentFocusAttr","_onDayMouseOver","evt","node","contains","target","parentNode","dijitDateValue","add","_currentNode","_onDayMouseOut","relatedTarget","cls","remove","_onDayMouseDown","_onDayMouseUp","handleKey","interval","increment","newValue","keyCode","RIGHT_ARROW","LEFT_ARROW","isLeftToRight","DOWN_ARROW","UP_ARROW","PAGE_DOWN","PAGE_UP","ctrlKey","altKey","END","HOME","_onKeyDown","stopPropagation","preventDefault","onValueSelected","onChange","getClassForDate","dropDown","_MonthDropDown","_setMonthAttr","month","monthNames","getNames","containerNode","innerHTML","getMonth","months","templateString","_setMonthsAttr","forEach","idx","create","className","_cssState","_onClick","get"],"mappings":"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","file":"../Calendar.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.map\r\n\t\"dojo/date\",\r\n\t\"dojo/date/locale\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.get\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains domClass.remove domClass.toggle\r\n\t\"dojo/dom-construct\",\t// create\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"./CalendarLite\",\r\n\t\"./_Widget\",\r\n\t\"./_CssStateMixin\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./form/DropDownButton\"\r\n], function(array, date, local, declare, domAttr, domClass, domConstruct, kernel, keys, lang, on, has,\r\n\t\t\tCalendarLite, _Widget, _CssStateMixin, _TemplatedMixin, DropDownButton){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Calendar\r\n\r\n\t// _Widget for deprecated methods like setAttribute()\r\n\tvar Calendar = declare(\"dijit.Calendar\", [CalendarLite, _Widget, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA simple GUI for choosing a date in the context of a monthly calendar.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tSee CalendarLite for general description.   Calendar extends CalendarLite, adding:\r\n\t\t//\r\n\t\t//\t\t- month drop down list\r\n\t\t//\t\t- keyboard navigation\r\n\t\t//\t\t- CSS classes for hover/mousepress on date, month, and year nodes\r\n\t\t//\t\t- support of deprecated methods (will be removed in 2.0)\r\n\r\n\t\tbaseClass: \"dijitCalendar\",\r\n\r\n\t\t// Set node classes for various mouse events, see dijit._CssStateMixin for more details\r\n\t\tcssStateNodes: {\r\n\t\t\t\"decrementMonth\": \"dijitCalendarArrow\",\r\n\t\t\t\"incrementMonth\": \"dijitCalendarArrow\",\r\n\t\t\t\"previousYearLabelNode\": \"dijitCalendarPreviousYear\",\r\n\t\t\t\"nextYearLabelNode\": \"dijitCalendarNextYear\"\r\n\t\t},\r\n\r\n\t\tsetValue: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('value', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.Calendar:setValue() is deprecated.  Use set('value', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('value', value);\r\n\t\t},\r\n\r\n\t\t_createMonthWidget: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the drop down button that displays the current month and lets user pick a new one\r\n\r\n\t\t\treturn new Calendar._MonthDropDownButton({\r\n\t\t\t\tid: this.id + \"_mddb\",\r\n\t\t\t\ttabIndex: -1,\r\n\t\t\t\tonMonthSelect: lang.hitch(this, \"_onMonthSelect\"),\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\tdateLocaleModule: this.dateLocaleModule\r\n\t\t\t}, this.monthNode);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Events specific to Calendar, not used in CalendarLite\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.domNode, \"keydown\", lang.hitch(this, \"_onKeyDown\")),\r\n\t\t\t\ton(this.dateRowsNode, \"mouseover\", lang.hitch(this, \"_onDayMouseOver\")),\r\n\t\t\t\ton(this.dateRowsNode, \"mouseout\", lang.hitch(this, \"_onDayMouseOut\")),\r\n\t\t\t\ton(this.dateRowsNode, \"mousedown\", lang.hitch(this, \"_onDayMouseDown\")),\r\n\t\t\t\ton(this.dateRowsNode, \"mouseup\", lang.hitch(this, \"_onDayMouseUp\"))\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_onMonthSelect: function(/*Number*/ newMonth){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when user selects a month from the drop down list\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// move to selected month, bounding by the number of days in the month\r\n\t\t\t// (ex: jan 31 --> feb 28, not feb 31)\r\n\t\t\tvar date = new this.dateClassObj(this.currentFocus);\r\n\t\t\tdate.setDate(1);\r\n\t\t\tdate.setMonth(newMonth);\r\n\t\t\tvar daysInMonth = this.dateModule.getDaysInMonth(date);\r\n\t\t\tvar currentDate = this.currentFocus.getDate();\r\n\t\t\tdate.setDate(Math.min(currentDate, daysInMonth));\r\n\t\t\tthis._setCurrentFocusAttr(date);\r\n\t\t},\r\n\r\n\t\t_onDayMouseOver: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for mouse over events on days, sets hovered style\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// event can occur on <td> or the <span> inside the td,\r\n\t\t\t// set node to the <td>.\r\n\t\t\tvar node =\r\n\t\t\t\tdomClass.contains(evt.target, \"dijitCalendarDateLabel\") ?\r\n\t\t\t\t\tevt.target.parentNode :\r\n\t\t\t\t\tevt.target;\r\n\r\n\t\t\tif(node && (\r\n\t\t\t\t(node.dijitDateValue && !domClass.contains(node, \"dijitCalendarDisabledDate\"))\r\n\t\t\t\t\t|| node == this.previousYearLabelNode || node == this.nextYearLabelNode\r\n\t\t\t\t)){\r\n\t\t\t\tdomClass.add(node, \"dijitCalendarHoveredDate\");\r\n\t\t\t\tthis._currentNode = node;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDayMouseOut: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for mouse out events on days, clears hovered style\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!this._currentNode){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// if mouse out occurs moving from <td> to <span> inside <td>, ignore it\r\n\t\t\tif(evt.relatedTarget && evt.relatedTarget.parentNode == this._currentNode){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar cls = \"dijitCalendarHoveredDate\";\r\n\t\t\tif(domClass.contains(this._currentNode, \"dijitCalendarActiveDate\")){\r\n\t\t\t\tcls += \" dijitCalendarActiveDate\";\r\n\t\t\t}\r\n\t\t\tdomClass.remove(this._currentNode, cls);\r\n\t\t\tthis._currentNode = null;\r\n\t\t},\r\n\r\n\t\t_onDayMouseDown: function(/*Event*/ evt){\r\n\t\t\tvar node = evt.target.parentNode;\r\n\t\t\tif(node && node.dijitDateValue && !domClass.contains(node, \"dijitCalendarDisabledDate\")){\r\n\t\t\t\tdomClass.add(node, \"dijitCalendarActiveDate\");\r\n\t\t\t\tthis._currentNode = node;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDayMouseUp: function(/*Event*/ evt){\r\n\t\t\tvar node = evt.target.parentNode;\r\n\t\t\tif(node && node.dijitDateValue){\r\n\t\t\t\tdomClass.remove(node, \"dijitCalendarActiveDate\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleKey: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProvides keyboard navigation of calendar.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalled from _onKeyDown() to handle keydown on a stand alone Calendar,\r\n\t\t\t//\t\tand also from `dijit/form/_DateTimeTextBox` to pass a keydown event\r\n\t\t\t//\t\tfrom the `dijit/form/DateTextBox` to be handled in this widget\r\n\t\t\t// returns:\r\n\t\t\t//\t\tFalse if the key was recognized as a navigation key,\r\n\t\t\t//\t\tto indicate that the event was handled by Calendar and shouldn't be propagated\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar increment = -1,\r\n\t\t\t\tinterval,\r\n\t\t\t\tnewValue = this.currentFocus;\r\n\t\t\tswitch(evt.keyCode){\r\n\t\t\t\tcase keys.RIGHT_ARROW:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t//fallthrough...\r\n\t\t\t\tcase keys.LEFT_ARROW:\r\n\t\t\t\t\tinterval = \"day\";\r\n\t\t\t\t\tif(!this.isLeftToRight()){\r\n\t\t\t\t\t\tincrement *= -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t//fallthrough...\r\n\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\t\tinterval = \"week\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.PAGE_DOWN:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t//fallthrough...\r\n\t\t\t\tcase keys.PAGE_UP:\r\n\t\t\t\t\tinterval = evt.ctrlKey || evt.altKey ? \"year\" : \"month\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.END:\r\n\t\t\t\t\t// go to the next month\r\n\t\t\t\t\tnewValue = this.dateModule.add(newValue, \"month\", 1);\r\n\t\t\t\t\t// subtract a day from the result when we're done\r\n\t\t\t\t\tinterval = \"day\";\r\n\t\t\t\t//fallthrough...\r\n\t\t\t\tcase keys.HOME:\r\n\t\t\t\t\tnewValue = new this.dateClassObj(newValue);\r\n\t\t\t\t\tnewValue.setDate(1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif(interval){\r\n\t\t\t\tnewValue = this.dateModule.add(newValue, interval, increment);\r\n\t\t\t}\r\n\r\n\t\t\tthis._setCurrentFocusAttr(newValue);\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFor handling keydown events on a stand alone calendar\r\n\t\t\tif(!this.handleKey(evt)){\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonValueSelected: function(/*Date*/ /*===== date =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Notification that a date cell was selected.  It may be the same as the previous value.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFormerly used by `dijit/form/_DateTimeTextBox` (and thus `dijit/form/DateTextBox`)\r\n\t\t\t//\t\tto get notification when the user has clicked a date.  Now onExecute() (above) is used.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tonChange: function(value){\r\n\t\t\tthis.onValueSelected(value);\t// remove in 2.0\r\n\t\t},\r\n\r\n\t\tgetClassForDate: function(/*===== dateObject, locale =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to return CSS classes to associate with the date entry for the given dateObject,\r\n\t\t\t//\t\tfor example to indicate a holiday in specified locale.\r\n\t\t\t// dateObject: Date\r\n\t\t\t// locale: String?\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\t/*=====\r\n\t\t\t return \"\"; // String\r\n\t\t\t =====*/\r\n\t\t}\r\n\t});\r\n\r\n\tCalendar._MonthDropDownButton = declare(\"dijit.Calendar._MonthDropDownButton\", DropDownButton, {\r\n\t\t// summary:\r\n\t\t//\t\tDropDownButton for the current month.    Displays name of current month\r\n\t\t//\t\tand a list of month names in the drop down\r\n\r\n\t\tonMonthSelect: function(){\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.dropDown = new Calendar._MonthDropDown({\r\n\t\t\t\tid: this.id + \"_mdd\", //do not change this id because it is referenced in the template\r\n\t\t\t\tonChange: this.onMonthSelect\r\n\t\t\t});\r\n\t\t},\r\n\t\t_setMonthAttr: function(month){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the current month to display as a label\r\n\t\t\tvar monthNames = this.dateLocaleModule.getNames('months', 'wide', 'standAlone', this.lang, month);\r\n\t\t\tthis.dropDown.set(\"months\", monthNames);\r\n\r\n\t\t\t// Set name of current month and also fill in spacer element with all the month names\r\n\t\t\t// (invisible) so that the maximum width will affect layout.   But not on IE6 because then\r\n\t\t\t// the center <TH> overlaps the right <TH> (due to a browser bug).\r\n\t\t\tthis.containerNode.innerHTML =\r\n\t\t\t\t(has(\"ie\") == 6 ? \"\" : \"<div class='dijitSpacer'>\" + this.dropDown.domNode.innerHTML + \"</div>\") +\r\n\t\t\t\t\t\"<div class='dijitCalendarMonthLabel dijitCalendarCurrentMonthLabel'>\" + monthNames[month.getMonth()] + \"</div>\";\r\n\t\t}\r\n\t});\r\n\r\n\tCalendar._MonthDropDown = declare(\"dijit.Calendar._MonthDropDown\", [_Widget, _TemplatedMixin, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tThe list-of-months drop down from the MonthDropDownButton\r\n\r\n\t\t// months: String[]\r\n\t\t//\t\tList of names of months, possibly w/some undefined entries for Hebrew leap months\r\n\t\t//\t\t(ex: [\"January\", \"February\", undefined, \"April\", ...])\r\n\t\tmonths: [],\r\n\r\n\t\tbaseClass: \"dijitCalendarMonthMenu dijitMenu\",\r\n\r\n\t\ttemplateString: \"<div data-dojo-attach-event='ondijitclick:_onClick'></div>\",\r\n\r\n\t\t_setMonthsAttr: function(/*String[]*/ months){\r\n\t\t\tthis.domNode.innerHTML = \"\";\r\n\t\t\tarray.forEach(months, function(month, idx){\r\n\t\t\t\tvar div = domConstruct.create(\"div\", {\r\n\t\t\t\t\tclassName: \"dijitCalendarMonthLabel\",\r\n\t\t\t\t\tmonth: idx,\r\n\t\t\t\t\tinnerHTML: month\r\n\t\t\t\t}, this.domNode);\r\n\t\t\t\tdiv._cssState = \"dijitCalendarMonthLabel\";\t// trigger _CSSStateMixin magic; property, not attribute.\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ evt){\r\n\t\t\tthis.onChange(domAttr.get(evt.target, \"month\"));\r\n\t\t},\r\n\r\n\t\tonChange: function(/*Number*/ /*===== month =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when month is selected from drop down\r\n\t\t}\r\n\t});\r\n\r\n\treturn Calendar;\r\n});\r\n"]}