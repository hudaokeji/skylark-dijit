{"version":3,"sources":["CheckedMenuItem.js"],"names":["define","declare","domClass","MenuItem","template","baseClass","templateString","checked","_setCheckedAttr","this","domNode","setAttribute","_set","iconClass","role","checkedChar","onChange","_onClick","evt","disabled","set","onClick"],"mappings":";;;;;;;AAAAA,QACC,qBACA,iBACA,aACA,6CACA,WACE,SAASC,EAASC,EAAUC,EAAUC,GAKxC,OAAOH,EAAQ,wBAAyBE,GAKvCE,UAAW,qCAEXC,eAAgBF,EAIhBG,SAAS,EACTC,gBAAiB,SAAqBD,GACrCE,KAAKC,QAAQC,aAAa,eAAgBJ,EAAU,OAAS,SAC7DE,KAAKG,KAAK,UAAWL,IAGtBM,UAAW,GAEXC,KAAM,mBAINC,YAAa,WAEbC,SAAU,aAOVC,SAAU,SAASC,GAKdT,KAAKU,WACRV,KAAKW,IAAI,WAAYX,KAAKF,SAC1BE,KAAKO,SAASP,KAAKF,UAEpBE,KAAKY,QAAQH","file":"../CheckedMenuItem.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"./MenuItem\",\r\n\t\"dojo/text!./templates/CheckedMenuItem.html\",\r\n\t\"./hccss\"\r\n], function(declare, domClass, MenuItem, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/CheckedMenuItem\r\n\r\n\treturn declare(\"dijit.CheckedMenuItem\", MenuItem, {\r\n\t\t// summary:\r\n\t\t//\t\tA checkbox-like menu item for toggling on and off\r\n\r\n\t\t// Use both base classes so we get styles like dijitMenuItemDisabled\r\n\t\tbaseClass: \"dijitMenuItem dijitCheckedMenuItem\",\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// checked: Boolean\r\n\t\t//\t\tOur checked state\r\n\t\tchecked: false,\r\n\t\t_setCheckedAttr: function(/*Boolean*/ checked){\r\n\t\t\tthis.domNode.setAttribute(\"aria-checked\", checked ? \"true\" : \"false\");\r\n\t\t\tthis._set(\"checked\", checked);\t// triggers CSS update via _CssStateMixin\r\n\t\t},\r\n\r\n\t\ticonClass: \"\",\t// override dijitNoIcon\r\n\r\n\t\trole: \"menuitemcheckbox\",\r\n\r\n\t\t// checkedChar: String\r\n\t\t//\t\tCharacter (or string) used in place of checkbox icon when display in high contrast mode\r\n\t\tcheckedChar: \"&#10003;\",\r\n\r\n\t\tonChange: function(/*Boolean*/ /*===== checked =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser defined function to handle check/uncheck events\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_onClick: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClicking this item just toggles its state\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!this.disabled){\r\n\t\t\t\tthis.set(\"checked\", !this.checked);\r\n\t\t\t\tthis.onChange(this.checked);\r\n\t\t\t}\r\n\t\t\tthis.onClick(evt);\r\n\t\t}\r\n\t});\r\n});\r\n"]}