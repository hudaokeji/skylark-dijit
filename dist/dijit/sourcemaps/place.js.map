{"version":3,"sources":["place.js"],"names":["define","array","domGeometry","domStyle","kernel","win","Viewport","dijit","_place","node","choices","layoutNode","aroundNodeCoords","view","getEffectiveBox","ownerDocument","parentNode","String","tagName","toLowerCase","body","appendChild","best","some","choice","corner","pos","overflow","spaceAvailable","w","L","l","x","R","M","charAt","h","T","t","y","B","s","style","left","right","res","aroundCorner","oldDisplay","display","oldVis","visibility","bb","position","startXpos","Math","max","min","startYpos","startX","startY","width","height","top","side","test","get","reverse","TL","TR","BL","BR","place","at","corners","padding","map","c","around","anchor","positions","leftToRight","aroundNodePos","anchorBorder","getBorderExtents","anchorChildBorder","firstChild","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","getComputedStyle","parent","nodeType","nodeName","parentPos","pcs","bottomYCoord","rightXCoord","deprecated","push","forEach","ltr"],"mappings":"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","file":"../place.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach array.map array.some\r\n\t\"dojo/dom-geometry\", // domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"./Viewport\", // getEffectiveBox\r\n\t\"./main\"\t// dijit (defining dijit.place to match API doc)\r\n], function(array, domGeometry, domStyle, kernel, win, Viewport, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/place\r\n\r\n\r\n\tfunction _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n\t\t// summary:\r\n\t\t//\t\tGiven a list of spots to put node, put it at the first spot where it fits,\r\n\t\t//\t\tof if it doesn't fit anywhere then the place with the least overflow\r\n\t\t// choices: Array\r\n\t\t//\t\tArray of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n\t\t//\t\tAbove example says to put the top-left corner of the node at (10,20)\r\n\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n\t\t//\t\tfor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t//\t\tbased on their orientation relative to the parent.\t This adjusts the popup based on orientation.\r\n\t\t//\t\tIt also passes in the available size for the popup, which is useful for tooltips to\r\n\t\t//\t\ttell them that their width is limited to a certain amount.\t layoutNode() may return a value expressing\r\n\t\t//\t\thow much the popup had to be modified to fit into the available space.\t This is used to determine\r\n\t\t//\t\twhat the best placement is.\r\n\t\t// aroundNodeCoords: Object\r\n\t\t//\t\tSize of aroundNode, ex: {w: 200, h: 50}\r\n\r\n\t\t// get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n\t\t// viewport over document\r\n\t\tvar view = Viewport.getEffectiveBox(node.ownerDocument);\r\n\r\n\t\t// This won't work if the node is inside a <div style=\"position: relative\">,\r\n\t\t// so reattach it to <body>.\t (Otherwise, the positioning will be wrong\r\n\t\t// and also it might get cutoff.)\r\n\t\tif(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n\t\t\twin.body(node.ownerDocument).appendChild(node);\r\n\t\t}\r\n\r\n\t\tvar best = null;\r\n\t\tarray.some(choices, function(choice){\r\n\t\t\tvar corner = choice.corner;\r\n\t\t\tvar pos = choice.pos;\r\n\t\t\tvar overflow = 0;\r\n\r\n\t\t\t// calculate amount of space available given specified position of node\r\n\t\t\tvar spaceAvailable = {\r\n\t\t\t\tw: {\r\n\t\t\t\t\t'L': view.l + view.w - pos.x,\r\n\t\t\t\t\t'R': pos.x - view.l,\r\n\t\t\t\t\t'M': view.w\r\n\t\t\t\t}[corner.charAt(1)],\r\n\t\t\t\th: {\r\n\t\t\t\t\t'T': view.t + view.h - pos.y,\r\n\t\t\t\t\t'B': pos.y - view.t,\r\n\t\t\t\t\t'M': view.h\r\n\t\t\t\t}[corner.charAt(0)]\r\n\t\t\t};\r\n\r\n\t\t\t// Clear left/right position settings set earlier so they don't interfere with calculations,\r\n\t\t\t// specifically when layoutNode() (a.k.a. Tooltip.orient()) measures natural width of Tooltip\r\n\t\t\tvar s = node.style;\r\n\t\t\ts.left = s.right = \"auto\";\r\n\r\n\t\t\t// configure node to be displayed in given position relative to button\r\n\t\t\t// (need to do this in order to get an accurate size for the node, because\r\n\t\t\t// a tooltip's size changes based on position, due to triangle)\r\n\t\t\tif(layoutNode){\r\n\t\t\t\tvar res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n\t\t\t\toverflow = typeof res == \"undefined\" ? 0 : res;\r\n\t\t\t}\r\n\r\n\t\t\t// get node's size\r\n\t\t\tvar style = node.style;\r\n\t\t\tvar oldDisplay = style.display;\r\n\t\t\tvar oldVis = style.visibility;\r\n\t\t\tif(style.display == \"none\"){\r\n\t\t\t\tstyle.visibility = \"hidden\";\r\n\t\t\t\tstyle.display = \"\";\r\n\t\t\t}\r\n\t\t\tvar bb = domGeometry.position(node);\r\n\t\t\tstyle.display = oldDisplay;\r\n\t\t\tstyle.visibility = oldVis;\r\n\r\n\t\t\t// coordinates and size of node with specified corner placed at pos,\r\n\t\t\t// and clipped by viewport\r\n\t\t\tvar\r\n\t\t\t\tstartXpos = {\r\n\t\t\t\t\t'L': pos.x,\r\n\t\t\t\t\t'R': pos.x - bb.w,\r\n\t\t\t\t\t'M': Math.max(view.l, Math.min(view.l + view.w, pos.x + (bb.w >> 1)) - bb.w) // M orientation is more flexible\r\n\t\t\t\t}[corner.charAt(1)],\r\n\t\t\t\tstartYpos = {\r\n\t\t\t\t\t'T': pos.y,\r\n\t\t\t\t\t'B': pos.y - bb.h,\r\n\t\t\t\t\t'M': Math.max(view.t, Math.min(view.t + view.h, pos.y + (bb.h >> 1)) - bb.h)\r\n\t\t\t\t}[corner.charAt(0)],\r\n\t\t\t\tstartX = Math.max(view.l, startXpos),\r\n\t\t\t\tstartY = Math.max(view.t, startYpos),\r\n\t\t\t\tendX = Math.min(view.l + view.w, startXpos + bb.w),\r\n\t\t\t\tendY = Math.min(view.t + view.h, startYpos + bb.h),\r\n\t\t\t\twidth = endX - startX,\r\n\t\t\t\theight = endY - startY;\r\n\r\n\t\t\toverflow += (bb.w - width) + (bb.h - height);\r\n\r\n\t\t\tif(best == null || overflow < best.overflow){\r\n\t\t\t\tbest = {\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\taroundCorner: choice.aroundCorner,\r\n\t\t\t\t\tx: startX,\r\n\t\t\t\t\ty: startY,\r\n\t\t\t\t\tw: width,\r\n\t\t\t\t\th: height,\r\n\t\t\t\t\toverflow: overflow,\r\n\t\t\t\t\tspaceAvailable: spaceAvailable\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn !overflow;\r\n\t\t});\r\n\r\n\t\t// In case the best position is not the last one we checked, need to call\r\n\t\t// layoutNode() again.\r\n\t\tif(best.overflow && layoutNode){\r\n\t\t\tlayoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n\t\t}\r\n\r\n\t\t// And then position the node.  Do this last, after the layoutNode() above\r\n\t\t// has sized the node, due to browser quirks when the viewport is scrolled\r\n\t\t// (specifically that a Tooltip will shrink to fit as though the window was\r\n\t\t// scrolled to the left).\r\n\r\n\t\tvar top = best.y,\r\n\t\t\tside = best.x,\r\n\t\t\tbody = win.body(node.ownerDocument);\r\n\r\n\t\tif(/relative|absolute/.test(domStyle.get(body, \"position\"))){\r\n\t\t\t// compensate for margin on <body>, see #16148\r\n\t\t\ttop -= domStyle.get(body, \"marginTop\");\r\n\t\t\tside -= domStyle.get(body, \"marginLeft\");\r\n\t\t}\r\n\r\n\t\tvar s = node.style;\r\n\t\ts.top = top + \"px\";\r\n\t\ts.left = side + \"px\";\r\n\t\ts.right = \"auto\";\t// needed for FF or else tooltip goes to far left\r\n\r\n\t\treturn best;\r\n\t}\r\n\r\n\tvar reverse = {\r\n\t\t// Map from corner to kitty-corner\r\n\t\t\"TL\": \"BR\",\r\n\t\t\"TR\": \"BL\",\r\n\t\t\"BL\": \"TR\",\r\n\t\t\"BR\": \"TL\"\r\n\t};\r\n\r\n\tvar place = {\r\n\t\t// summary:\r\n\t\t//\t\tCode to place a DOMNode relative to another DOMNode.\r\n\t\t//\t\tLoad using require([\"dijit/place\"], function(place){ ... }).\r\n\r\n\t\tat: function(node, pos, corners, padding, layoutNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPositions node kitty-corner to the rectangle centered at (pos.x, pos.y) with width and height of\r\n\t\t\t//\t\tpadding.x * 2 and padding.y * 2, or zero if padding not specified.  Picks first corner in corners[]\r\n\t\t\t//\t\twhere node is fully visible, or the corner where it's most visible.\r\n\t\t\t//\r\n\t\t\t//\t\tNode is assumed to be absolutely or relatively positioned.\r\n\t\t\t// node: DOMNode\r\n\t\t\t//\t\tThe node to position\r\n\t\t\t// pos: dijit/place.__Position\r\n\t\t\t//\t\tObject like {x: 10, y: 20}\r\n\t\t\t// corners: String[]\r\n\t\t\t//\t\tArray of Strings representing order to try corners of the node in, like [\"TR\", \"BL\"].\r\n\t\t\t//\t\tPossible values are:\r\n\t\t\t//\r\n\t\t\t//\t\t- \"BL\" - bottom left\r\n\t\t\t//\t\t- \"BR\" - bottom right\r\n\t\t\t//\t\t- \"TL\" - top left\r\n\t\t\t//\t\t- \"TR\" - top right\r\n\t\t\t// padding: dijit/place.__Position?\r\n\t\t\t//\t\tOptional param to set padding, to put some buffer around the element you want to position.\r\n\t\t\t//\t\tDefaults to zero.\r\n\t\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n\t\t\t//\t\tFor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t\t//\t\tbased on their orientation relative to the parent.  This adjusts the popup based on orientation.\r\n\t\t\t// example:\r\n\t\t\t//\t\tTry to place node's top right corner at (10,20).\r\n\t\t\t//\t\tIf that makes node go (partially) off screen, then try placing\r\n\t\t\t//\t\tbottom left corner at (10,20).\r\n\t\t\t//\t|\tplace(node, {x: 10, y: 20}, [\"TR\", \"BL\"])\r\n\t\t\tvar choices = array.map(corners, function(corner){\r\n\t\t\t\tvar c = {\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\taroundCorner: reverse[corner],\t// so TooltipDialog.orient() gets aroundCorner argument set\r\n\t\t\t\t\tpos: {x: pos.x,y: pos.y}\r\n\t\t\t\t};\r\n\t\t\t\tif(padding){\r\n\t\t\t\t\tc.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n\t\t\t\t\tc.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n\t\t\t\t}\r\n\t\t\t\treturn c;\r\n\t\t\t});\r\n\r\n\t\t\treturn _place(node, choices, layoutNode);\r\n\t\t},\r\n\r\n\t\taround: function(\r\n\t\t\t/*DomNode*/\t\tnode,\r\n\t\t\t/*DomNode|dijit/place.__Rectangle*/ anchor,\r\n\t\t\t/*String[]*/\tpositions,\r\n\t\t\t/*Boolean*/\t\tleftToRight,\r\n\t\t\t/*Function?*/\tlayoutNode){\r\n\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPosition node adjacent or kitty-corner to anchor\r\n\t\t\t//\t\tsuch that it's fully visible in viewport.\r\n\t\t\t// description:\r\n\t\t\t//\t\tPlace node such that corner of node touches a corner of\r\n\t\t\t//\t\taroundNode, and that node is fully visible.\r\n\t\t\t// anchor:\r\n\t\t\t//\t\tEither a DOMNode or a rectangle (object with x, y, width, height).\r\n\t\t\t// positions:\r\n\t\t\t//\t\tOrdered list of positions to try matching up.\r\n\t\t\t//\r\n\t\t\t//\t\t- before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n\t\t\t//\t\t\tof RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n\t\t\t//\t\t\twith the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n\t\t\t//\t\t- after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n\t\t\t//\t\t\tof RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n\t\t\t//\t\t\twith the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n\t\t\t//\t\t- before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n\t\t\t//\t\t\tin the case of RTL scripts like Hebrew and Arabic\r\n\t\t\t//\t\t- after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n\t\t\t//\t\t\tin the case of RTL scripts like Hebrew and Arabic\r\n\t\t\t//\t\t- above-centered: drop down is centered above anchor node\r\n\t\t\t//\t\t- above: drop down goes above anchor node, left sides aligned\r\n\t\t\t//\t\t- above-alt: drop down goes above anchor node, right sides aligned\r\n\t\t\t//\t\t- below-centered: drop down is centered above anchor node\r\n\t\t\t//\t\t- below: drop down goes below anchor node\r\n\t\t\t//\t\t- below-alt: drop down goes below anchor node, right sides aligned\r\n\t\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n\t\t\t//\t\tFor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t\t//\t\tbased on their orientation relative to the parent.\t This adjusts the popup based on orientation.\r\n\t\t\t// leftToRight:\r\n\t\t\t//\t\tTrue if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n\t\t\t//\t\tpositions slightly.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tplaceAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n\t\t\t//\t\tThis will try to position node such that node's top-left corner is at the same position\r\n\t\t\t//\t\tas the bottom left corner of the aroundNode (ie, put node below\r\n\t\t\t//\t\taroundNode, with left edges aligned).\tIf that fails it will try to put\r\n\t\t\t//\t\tthe bottom-right corner of node where the top right corner of aroundNode is\r\n\t\t\t//\t\t(ie, put node above aroundNode, with right edges aligned)\r\n\t\t\t//\r\n\r\n\t\t\t// If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n\t\t\tvar aroundNodePos;\r\n\t\t\tif(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n\t\t\t\taroundNodePos = domGeometry.position(anchor, true);\r\n\r\n\t\t\t\t// For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n\t\t\t\t// overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n\t\t\t\t// width of either anchor or popup because in both cases the border may be on an inner node.\r\n\t\t\t\tif(/^(above|below)/.test(positions[0])){\r\n\t\t\t\t\tvar anchorBorder = domGeometry.getBorderExtents(anchor),\r\n\t\t\t\t\t\tanchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n\t\t\t\t\t\tnodeBorder =  domGeometry.getBorderExtents(node),\r\n\t\t\t\t\t\tnodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n\t\t\t\t\taroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n\t\t\t\t\taroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n\t\t\t\t\t\tMath.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\taroundNodePos = anchor;\r\n\t\t\t}\r\n\r\n\t\t\t// Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n\t\t\tif(anchor.parentNode){\r\n\t\t\t\t// ignore nodes between position:relative and position:absolute\r\n\t\t\t\tvar sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n\t\t\t\tvar parent = anchor.parentNode;\r\n\t\t\t\twhile(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n\t\t\t\t\tvar parentPos = domGeometry.position(parent, true),\r\n\t\t\t\t\t\tpcs = domStyle.getComputedStyle(parent);\r\n\t\t\t\t\tif(/relative|absolute/.test(pcs.position)){\r\n\t\t\t\t\t\tsawPosAbsolute = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n\t\t\t\t\t\tvar bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n\t\t\t\t\t\tvar rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n\t\t\t\t\t\taroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n\t\t\t\t\t\taroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n\t\t\t\t\t\taroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n\t\t\t\t\t\taroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(pcs.position == \"absolute\"){\r\n\t\t\t\t\t\tsawPosAbsolute = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparent = parent.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\r\n\t\t\tvar x = aroundNodePos.x,\r\n\t\t\t\ty = aroundNodePos.y,\r\n\t\t\t\twidth = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n\t\t\t\theight = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n\t\t\t// Convert positions arguments into choices argument for _place()\r\n\t\t\tvar choices = [];\r\n\t\t\tfunction push(aroundCorner, corner){\r\n\t\t\t\tchoices.push({\r\n\t\t\t\t\taroundCorner: aroundCorner,\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\tpos: {\r\n\t\t\t\t\t\tx: {\r\n\t\t\t\t\t\t\t'L': x,\r\n\t\t\t\t\t\t\t'R': x + width,\r\n\t\t\t\t\t\t\t'M': x + (width >> 1)\r\n\t\t\t\t\t\t}[aroundCorner.charAt(1)],\r\n\t\t\t\t\t\ty: {\r\n\t\t\t\t\t\t\t'T': y,\r\n\t\t\t\t\t\t\t'B': y + height,\r\n\t\t\t\t\t\t\t'M': y + (height >> 1)\r\n\t\t\t\t\t\t}[aroundCorner.charAt(0)]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tarray.forEach(positions, function(pos){\r\n\t\t\t\tvar ltr =  leftToRight;\r\n\t\t\t\tswitch(pos){\r\n\t\t\t\t\tcase \"above-centered\":\r\n\t\t\t\t\t\tpush(\"TM\", \"BM\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"below-centered\":\r\n\t\t\t\t\t\tpush(\"BM\", \"TM\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"after-centered\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"before-centered\":\r\n\t\t\t\t\t\tpush(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"after\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"before\":\r\n\t\t\t\t\t\tpush(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n\t\t\t\t\t\tpush(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"below-alt\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"below\":\r\n\t\t\t\t\t\t// first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n\t\t\t\t\t\tpush(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n\t\t\t\t\t\tpush(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"above-alt\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"above\":\r\n\t\t\t\t\t\t// first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n\t\t\t\t\t\tpush(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n\t\t\t\t\t\tpush(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n\t\t\t\t\t\t// Not meant to be used directly.  Remove for 2.0.\r\n\t\t\t\t\t\tpush(pos.aroundCorner, pos.corner);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar position = _place(node, choices, layoutNode, {w: width, h: height});\r\n\t\t\tposition.aroundNodePos = aroundNodePos;\r\n\r\n\t\t\treturn position;\r\n\t\t}\r\n\t};\r\n\r\n\t/*=====\r\n\tplace.__Position = {\r\n\t\t// x: Integer\r\n\t\t//\t\thorizontal coordinate in pixels, relative to document body\r\n\t\t// y: Integer\r\n\t\t//\t\tvertical coordinate in pixels, relative to document body\r\n\t};\r\n\tplace.__Rectangle = {\r\n\t\t// x: Integer\r\n\t\t//\t\thorizontal offset in pixels, relative to document body\r\n\t\t// y: Integer\r\n\t\t//\t\tvertical offset in pixels, relative to document body\r\n\t\t// w: Integer\r\n\t\t//\t\twidth in pixels.   Can also be specified as \"width\" for backwards-compatibility.\r\n\t\t// h: Integer\r\n\t\t//\t\theight in pixels.   Can also be specified as \"height\" for backwards-compatibility.\r\n\t};\r\n\t=====*/\r\n\r\n\treturn dijit.place = place;\t// setting dijit.place for back-compat, remove for 2.0\r\n});\r\n"]}