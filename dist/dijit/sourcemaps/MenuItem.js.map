{"version":3,"sources":["MenuItem.js"],"names":["define","declare","dom","domAttr","domClass","kernel","has","lang","_Widget","_TemplatedMixin","_Contained","_CssStateMixin","template","MenuItem","templateString","baseClass","label","_setLabelAttr","val","this","_set","text","shortcutKey","ndx","search","charAt","prefix","substr","suffix","domNode","setAttribute","accelKey","containerNode","innerHTML","iconClass","_setIconClassAttr","node","type","disabled","_fillContent","source","params","buildRendering","inherited","arguments","id","set","accelKeyNode","setSelectable","onClick","focus","focusNode","e","_setSelected","selected","toggle","setLabel","content","deprecated","setDisabled","_setDisabledAttr","value","_setAccelKeyAttr","style","display","textDir","applyTextDir","textDirNode"],"mappings":";;;;;;;AAAAA,QACC,qBACA,WACA,gBACA,iBACA,oBACA,aACA,kBACA,YACA,oBACA,eACA,mBACA,uCACE,SAASC,EAASC,EAAKC,EAASC,EAAUC,EAAQC,EAAKC,EACvDC,EAASC,EAAiBC,EAAYC,EAAgBC,GAKxD,IAAIC,EAAWZ,EAAQ,kBAAoBK,EAAI,aAAe,UAAY,KACxEE,EAASC,EAAiBC,EAAYC,IAMvCG,eAAgBF,EAEhBG,UAAW,gBAIXC,MAAO,GACPC,cAAe,SAASC,GACvBC,KAAKC,KAAK,QAASF,GACnB,IACIG,EADAC,EAAc,GAEdC,EAAML,EAAIM,OAAO,QACrB,GAAGD,GAAO,EAAE,CACXD,EAAcJ,EAAIO,OAAOF,EAAM,GAC/B,IAAIG,EAASR,EAAIS,OAAO,EAAGJ,GACvBK,EAASV,EAAIS,OAAOJ,EAAM,GAC9BF,EAAOK,EAASJ,EAAcM,EAC9BV,EAAMQ,EAAS,0CAA4CJ,EAAc,UAAYM,OAErFP,EAAOH,EAERC,KAAKU,QAAQC,aAAa,aAAcT,EAAO,IAAMF,KAAKY,UAC1DZ,KAAKa,cAAcC,UAAYf,EAC/BC,KAAKC,KAAK,cAAeE,IAc1BY,UAAW,cACXC,mBAAqBC,KAAM,WAAYC,KAAM,SAQ7CN,SAAU,GAKVO,UAAU,EAEVC,aAAc,SAAqBC,IAG/BA,GAAY,UAAWrB,KAAKsB,QAC9BtB,KAAKC,KAAK,QAASoB,EAAOP,YAI5BS,eAAgB,WACfvB,KAAKwB,UAAUC,WACf,IAAI5B,EAAQG,KAAK0B,GAAK,QACtB1C,EAAQ2C,IAAI3B,KAAKa,cAAe,KAAMhB,GACnCG,KAAK4B,cACP5C,EAAQ2C,IAAI3B,KAAK4B,aAAc,KAAM5B,KAAK0B,GAAK,UAEhD3C,EAAI8C,cAAc7B,KAAKU,SAAS,IAGjCoB,QAAS,aAOTC,MAAO,WAGN,IACiB,GAAb5C,EAAI,OAENa,KAAKa,cAAckB,QAEpB/B,KAAKgC,UAAUD,QACf,MAAME,MAKRC,aAAc,SAASC,GAMtBlD,EAASmD,OAAOpC,KAAKU,QAAS,wBAAyByB,IAGxDE,SAAU,SAAoBC,GAK7BpD,EAAOqD,WAAW,2EAA4E,GAAI,OAClGvC,KAAK2B,IAAI,QAASW,IAGnBE,YAAa,SAAqBrB,GAKjCjC,EAAOqD,WAAW,8EAA+E,GAAI,OACrGvC,KAAK2B,IAAI,WAAYR,IAGtBsB,iBAAkB,SAAqBC,GAKtC1C,KAAKgC,UAAUrB,aAAa,gBAAiB+B,EAAQ,OAAS,SAC9D1C,KAAKC,KAAK,WAAYyC,IAGvBC,iBAAkB,SAAoBD,GAKlC1C,KAAK4B,eACP5B,KAAK4B,aAAagB,MAAMC,QAAUH,EAAQ,GAAK,OAC/C1C,KAAK4B,aAAad,UAAY4B,EAE9B1D,EAAQ2C,IAAI3B,KAAKa,cAAe,UAAW6B,EAAQ,IAAM,MAE1D1C,KAAKC,KAAK,WAAYyC,MAexB,OAXGvD,EAAI,eACNO,EAAWZ,EAAQ,iBAAkBY,GACpCI,cAAe,SAASC,GACvBC,KAAKwB,UAAUC,WACK,SAAjBzB,KAAK8C,SACP9C,KAAK+C,aAAa/C,KAAKgD,iBAMpBtD","file":"../MenuItem.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_Contained\",\r\n\t\"./_CssStateMixin\",\r\n\t\"dojo/text!./templates/MenuItem.html\"\r\n], function(declare, dom, domAttr, domClass, kernel, has, lang,\r\n\t\t\t_Widget, _TemplatedMixin, _Contained, _CssStateMixin, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/MenuItem\r\n\r\n\tvar MenuItem = declare(\"dijit.MenuItem\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"),\r\n\t\t[_Widget, _TemplatedMixin, _Contained, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA line item in a Menu Widget\r\n\r\n\t\t// Make 3 columns\r\n\t\t// icon, label, and expand arrow (BiDi-dependent) indicating sub-menu\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitMenuItem\",\r\n\r\n\t\t// label: String\r\n\t\t//\t\tMenu text as HTML\r\n\t\tlabel: \"\",\r\n\t\t_setLabelAttr: function(val){\r\n\t\t\tthis._set(\"label\", val);\r\n\t\t\tvar shortcutKey = \"\";\r\n\t\t\tvar text;\r\n\t\t\tvar ndx = val.search(/{\\S}/);\r\n\t\t\tif(ndx >= 0){\r\n\t\t\t\tshortcutKey = val.charAt(ndx + 1);\r\n\t\t\t\tvar prefix = val.substr(0, ndx);\r\n\t\t\t\tvar suffix = val.substr(ndx + 3);\r\n\t\t\t\ttext = prefix + shortcutKey + suffix;\r\n\t\t\t\tval = prefix + '<span class=\"dijitMenuItemShortcutKey\">' + shortcutKey + '</span>' + suffix;\r\n\t\t\t}else{\r\n\t\t\t\ttext = val;\r\n\t\t\t}\r\n\t\t\tthis.domNode.setAttribute(\"aria-label\", text + \" \" + this.accelKey);\r\n\t\t\tthis.containerNode.innerHTML = val;\r\n\t\t\tthis._set('shortcutKey', shortcutKey);\r\n\t\t},\r\n\r\n\t\t/*=====\r\n\t\t// shortcutKey: [readonly] String\r\n\t\t//\t\tSingle character (underlined when the parent Menu is focused) used to navigate directly to this widget,\r\n\t\t//\t\talso known as [a mnemonic](http://en.wikipedia.org/wiki/Mnemonics_(keyboard%29).\r\n\t\t//\t\tThis is denoted in the label by surrounding the single character with {}.\r\n\t\t//\t\tFor example, if label=\"{F}ile\", then shortcutKey=\"F\".\r\n\t\tshortcutKey: \"\",\r\n\t\t=====*/\r\n\r\n\t\t// iconClass: String\r\n\t\t//\t\tClass to apply to DOMNode to make it display an icon.\r\n\t\ticonClass: \"dijitNoIcon\",\r\n\t\t_setIconClassAttr: { node: \"iconNode\", type: \"class\" },\r\n\r\n\t\t// accelKey: String\r\n\t\t//\t\tText for the accelerator (shortcut) key combination, a control, alt, etc. modified keystroke meant to\r\n\t\t//\t\texecute the menu item regardless of where the focus is on the page.\r\n\t\t//\r\n\t\t//\t\tNote that although Menu can display accelerator keys, there is no infrastructure to actually catch and\r\n\t\t//\t\texecute those accelerators.\r\n\t\taccelKey: \"\",\r\n\r\n\t\t// disabled: Boolean\r\n\t\t//\t\tIf true, the menu item is disabled.\r\n\t\t//\t\tIf false, the menu item is enabled.\r\n\t\tdisabled: false,\r\n\r\n\t\t_fillContent: function(/*DomNode*/ source){\r\n\t\t\t// If button label is specified as srcNodeRef.innerHTML rather than\r\n\t\t\t// this.params.label, handle it here.\r\n\t\t\tif(source && !(\"label\" in this.params)){\r\n\t\t\t\tthis._set('label', source.innerHTML);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar label = this.id + \"_text\";\r\n\t\t\tdomAttr.set(this.containerNode, \"id\", label); // only needed for backward compat\r\n\t\t\tif(this.accelKeyNode){\r\n\t\t\t\tdomAttr.set(this.accelKeyNode, \"id\", this.id + \"_accel\"); // only needed for backward compat\r\n\t\t\t}\r\n\t\t\tdom.setSelectable(this.domNode, false);\r\n\t\t},\r\n\r\n\t\tonClick: function(/*Event*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser defined function to handle clicks\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus on this MenuItem\r\n\t\t\ttry{\r\n\t\t\t\tif(has(\"ie\") == 8){\r\n\t\t\t\t\t// needed for IE8 which won't scroll TR tags into view on focus yet calling scrollIntoView creates flicker (#10275)\r\n\t\t\t\t\tthis.containerNode.focus();\r\n\t\t\t\t}\r\n\t\t\t\tthis.focusNode.focus();\r\n\t\t\t}catch(e){\r\n\t\t\t\t// this throws on IE (at least) in some scenarios\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setSelected: function(selected){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIndicate that this node is the currently selected one\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitMenuItemSelected\", selected);\r\n\t\t},\r\n\r\n\t\tsetLabel: function(/*String*/ content){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('label', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.MenuItem.setLabel() is deprecated.  Use set('label', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set(\"label\", content);\r\n\t\t},\r\n\r\n\t\tsetDisabled: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('disabled', bool) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.Menu.setDisabled() is deprecated.  Use set('disabled', bool) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('disabled', disabled);\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for attr('disabled', ...) to work.\r\n\t\t\t//\t\tEnable or disable this menu item.\r\n\r\n\t\t\tthis.focusNode.setAttribute('aria-disabled', value ? 'true' : 'false');\r\n\t\t\tthis._set(\"disabled\", value);\r\n\t\t},\r\n\r\n\t\t_setAccelKeyAttr: function(/*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for attr('accelKey', ...) to work.\r\n\t\t\t//\t\tSet accelKey on this menu item.\r\n\r\n\t\t\tif(this.accelKeyNode){\r\n\t\t\t\tthis.accelKeyNode.style.display = value ? \"\" : \"none\";\r\n\t\t\t\tthis.accelKeyNode.innerHTML = value;\r\n\t\t\t\t//have to use colSpan to make it work in IE\r\n\t\t\t\tdomAttr.set(this.containerNode, 'colSpan', value ? \"1\" : \"2\");\r\n\t\t\t}\r\n\t\t\tthis._set(\"accelKey\", value);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tMenuItem = declare(\"dijit.MenuItem\", MenuItem, {\r\n\t\t\t_setLabelAttr: function(val){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tif(this.textDir === \"auto\"){\r\n\t\t\t\t\tthis.applyTextDir(this.textDirNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn MenuItem;\r\n});\r\n"]}