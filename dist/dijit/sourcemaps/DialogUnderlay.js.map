{"version":3,"sources":["DialogUnderlay.js"],"names":["define","declare","lang","aspect","domAttr","domStyle","on","winUtils","_Widget","_TemplatedMixin","BackgroundIframe","Viewport","dijit","DialogUnderlay","templateString","dialogId","class","_modalConnects","_setDialogIdAttr","id","set","this","node","_set","_setClassAttr","clazz","className","postCreate","ownerDocumentBody","appendChild","domNode","own","hitch","inherited","arguments","layout","is","style","os","display","viewport","getBox","ownerDocument","top","t","left","l","width","w","height","h","show","open","bgIframe","win","get","hide","destroy","length","pop","remove","_onKeyDown","attrs","zIndex","underlay","_singleton","_destroyed","_underlay"],"mappings":";;;;;;;AAAAA,QACC,qBACA,kBACA,cACA,gBACA,iBACA,UACA,cACA,YACA,oBACA,qBACA,aACA,YACE,SAASC,EAASC,EAAMC,EAAQC,EAASC,EAAUC,EACnDC,EAAUC,EAASC,EAAiBC,EAAkBC,EAAUC,GAKlE,IAAIC,EAAiBZ,EAAQ,wBAAyBO,EAASC,IAgB9DK,eAAgB,oIAMhBC,SAAU,GAIVC,MAAS,GAITC,kBAEAC,iBAAkB,SAASC,GAC1Bf,EAAQgB,IAAIC,KAAKC,KAAM,KAAMH,EAAK,aAClCE,KAAKE,KAAK,WAAYJ,IAGvBK,cAAe,SAASC,GACvBJ,KAAKC,KAAKI,UAAY,uBAAyBD,EAC/CJ,KAAKE,KAAK,QAASE,IAGpBE,WAAY,WAEXN,KAAKO,kBAAkBC,YAAYR,KAAKS,SAExCT,KAAKU,IAAIzB,EAAGe,KAAKS,QAAS,UAAW5B,EAAK8B,MAAMX,KAAM,gBAEtDA,KAAKY,UAAUC,YAGhBC,OAAQ,WAWP,IAAIC,EAAKf,KAAKC,KAAKe,MAClBC,EAAKjB,KAAKS,QAAQO,MAKnBC,EAAGC,QAAU,OAGb,IAAIC,EAAWjC,EAASkC,OAAOpB,KAAKqB,eACpCJ,EAAGK,IAAMH,EAASI,EAAI,KACtBN,EAAGO,KAAOL,EAASM,EAAI,KACvBV,EAAGW,MAAQP,EAASQ,EAAI,KACxBZ,EAAGa,OAAST,EAASU,EAAI,KACzBZ,EAAGC,QAAU,SAGdY,KAAM,WAGL9B,KAAKS,QAAQO,MAAME,QAAU,QAC7BlB,KAAK+B,MAAO,EACZ/B,KAAKc,SACLd,KAAKgC,SAAW,IAAI3C,EAAiBW,KAAKS,SAE1C,IAAIwB,EAAM/C,EAASgD,IAAIlC,KAAKqB,eAC5BrB,KAAKJ,gBACJN,EAASL,GAAG,SAAUJ,EAAK8B,MAAMX,KAAM,WACvCf,EAAGgD,EAAK,SAAUpD,EAAK8B,MAAMX,KAAM,aAKrCmC,KAAM,WAOL,IAHAnC,KAAKgC,SAASI,iBACPpC,KAAKgC,SACZhC,KAAKS,QAAQO,MAAME,QAAU,OACvBlB,KAAKJ,eAAeyC,QAAUrC,KAAKJ,eAAe0C,MAAOC,SAC/DvC,KAAK+B,MAAO,GAGbK,QAAS,WACR,KAAMpC,KAAKJ,eAAeyC,QAAUrC,KAAKJ,eAAe0C,MAAOC,SAC/DvC,KAAKY,UAAUC,YAGhB2B,WAAY,eAuCb,OAjCAhD,EAAesC,KAAO,SAAoBW,EAAkBC,GAS3D,IAAIC,EAAWnD,EAAeoD,YAC1BD,GAAYA,EAASE,WACxBF,EAAWpD,EAAMuD,UAAYtD,EAAeoD,WAAa,IAAIpD,EAAeiD,GAEzEA,GAAQE,EAAS5C,IAAI0C,GAEzBzD,EAASe,IAAI4C,EAASlC,QAAS,SAAUiC,GACrCC,EAASZ,MACZY,EAASb,QAIXtC,EAAe2C,KAAO,WAMrB,IAAIQ,EAAWnD,EAAeoD,WAC3BD,IAAaA,EAASE,YACxBF,EAASR,QAIJ3C","file":"../DialogUnderlay.js","sourcesContent":["define([\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/aspect\", // aspect.after\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/on\",\r\n\t\"dojo/window\", // winUtils.getBox, winUtils.get\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./BackgroundIframe\",\r\n\t\"./Viewport\",\r\n\t\"./_dijit\" // for back-compat, exporting dijit._underlay (remove in 2.0)\r\n], function(declare, lang, aspect, domAttr, domStyle, on,\r\n\t\t\twinUtils, _Widget, _TemplatedMixin, BackgroundIframe, Viewport, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/DialogUnderlay\r\n\r\n\tvar DialogUnderlay = declare(\"dijit.DialogUnderlay\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA component used to block input behind a `dijit/Dialog`.\r\n\t\t//\r\n\t\t//\t\tNormally this class should not be instantiated directly, but rather shown and hidden via\r\n\t\t//\t\tDialogUnderlay.show() and DialogUnderlay.hide().  And usually the module is not accessed directly\r\n\t\t//\t\tat all, since the underlay is shown and hidden by Dialog.DialogLevelManager.\r\n\t\t//\r\n\t\t//\t\tThe underlay itself can be styled based on and id:\r\n\t\t//\t|\t#myDialog_underlay { background-color:red; }\r\n\t\t//\r\n\t\t//\t\tIn the case of `dijit.Dialog`, this id is based on the id of the Dialog,\r\n\t\t//\t\tsuffixed with _underlay.\r\n\r\n\t\t// Template has two divs; outer div is used for fade-in/fade-out, and also to hold background iframe.\r\n\t\t// Inner div has opacity specified in CSS file.\r\n\t\ttemplateString: \"<div class='dijitDialogUnderlayWrapper'><div class='dijitDialogUnderlay' tabIndex='-1' data-dojo-attach-point='node'></div></div>\",\r\n\r\n\t\t// Parameters on creation or updatable later\r\n\r\n\t\t// dialogId: String\r\n\t\t//\t\tId of the dialog.... DialogUnderlay's id is based on this id\r\n\t\tdialogId: \"\",\r\n\r\n\t\t// class: String\r\n\t\t//\t\tThis class name is used on the DialogUnderlay node, in addition to dijitDialogUnderlay\r\n\t\t\"class\": \"\",\r\n\r\n\t\t// This will get overwritten as soon as show() is call, but leave an empty array in case hide() or destroy()\r\n\t\t// is called first.   The array is shared between instances but that's OK because we never write into it.\r\n\t\t_modalConnects: [],\r\n\r\n\t\t_setDialogIdAttr: function(id){\r\n\t\t\tdomAttr.set(this.node, \"id\", id + \"_underlay\");\r\n\t\t\tthis._set(\"dialogId\", id);\r\n\t\t},\r\n\r\n\t\t_setClassAttr: function(clazz){\r\n\t\t\tthis.node.className = \"dijitDialogUnderlay \" + clazz;\r\n\t\t\tthis._set(\"class\", clazz);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// Append the underlay to the body\r\n\t\t\tthis.ownerDocumentBody.appendChild(this.domNode);\r\n\r\n\t\t\tthis.own(on(this.domNode, \"keydown\", lang.hitch(this, \"_onKeyDown\")));\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the background to the size of the viewport\r\n\t\t\t//\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets the background to the size of the viewport (rather than the size\r\n\t\t\t//\t\tof the document) since we need to cover the whole browser window, even\r\n\t\t\t//\t\tif the document is only a few lines long.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar is = this.node.style,\r\n\t\t\t\tos = this.domNode.style;\r\n\r\n\t\t\t// hide the background temporarily, so that the background itself isn't\r\n\t\t\t// causing scrollbars to appear (might happen when user shrinks browser\r\n\t\t\t// window and then we are called to resize)\r\n\t\t\tos.display = \"none\";\r\n\r\n\t\t\t// then resize and show\r\n\t\t\tvar viewport = winUtils.getBox(this.ownerDocument);\r\n\t\t\tos.top = viewport.t + \"px\";\r\n\t\t\tos.left = viewport.l + \"px\";\r\n\t\t\tis.width = viewport.w + \"px\";\r\n\t\t\tis.height = viewport.h + \"px\";\r\n\t\t\tos.display = \"block\";\r\n\t\t},\r\n\r\n\t\tshow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tShow the dialog underlay\r\n\t\t\tthis.domNode.style.display = \"block\";\r\n\t\t\tthis.open = true;\r\n\t\t\tthis.layout();\r\n\t\t\tthis.bgIframe = new BackgroundIframe(this.domNode);\r\n\r\n\t\t\tvar win = winUtils.get(this.ownerDocument);\r\n\t\t\tthis._modalConnects = [\r\n\t\t\t\tViewport.on(\"resize\", lang.hitch(this, \"layout\")),\r\n\t\t\t\ton(win, \"scroll\", lang.hitch(this, \"layout\"))\r\n\t\t\t];\r\n\r\n\t\t},\r\n\r\n\t\thide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHides the dialog underlay\r\n\r\n\t\t\tthis.bgIframe.destroy();\r\n\t\t\tdelete this.bgIframe;\r\n\t\t\tthis.domNode.style.display = \"none\";\r\n\t\t\twhile(this._modalConnects.length){ (this._modalConnects.pop()).remove(); }\r\n\t\t\tthis.open = false;\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\twhile(this._modalConnects.length){ (this._modalConnects.pop()).remove(); }\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tExtension point so Dialog can monitor keyboard events on the underlay.\r\n\t\t}\r\n\t});\r\n\r\n\tDialogUnderlay.show = function(/*Object*/ attrs, /*Number*/ zIndex){\r\n\t\t// summary:\r\n\t\t//\t\tDisplay the underlay with the given attributes set.  If the underlay is already displayed,\r\n\t\t//\t\tthen adjust it's attributes as specified.\r\n\t\t// attrs:\r\n\t\t//\t\tThe parameters to create DialogUnderlay with.\r\n\t\t// zIndex:\r\n\t\t//\t\tzIndex of the underlay\r\n\r\n\t\tvar underlay = DialogUnderlay._singleton;\r\n\t\tif(!underlay || underlay._destroyed){\r\n\t\t\tunderlay = dijit._underlay = DialogUnderlay._singleton = new DialogUnderlay(attrs);\r\n\t\t}else{\r\n\t\t\tif(attrs){ underlay.set(attrs); }\r\n\t\t}\r\n\t\tdomStyle.set(underlay.domNode, 'zIndex', zIndex);\r\n\t\tif(!underlay.open){\r\n\t\t\tunderlay.show();\r\n\t\t}\r\n\t};\r\n\r\n\tDialogUnderlay.hide = function(){\r\n\t\t// summary:\r\n\t\t//\t\tHide the underlay.\r\n\r\n\t\t// Guard code in case the underlay widget has already been destroyed\r\n\t\t// because we are being called during page unload (when all widgets are destroyed)\r\n\t\tvar underlay = DialogUnderlay._singleton;\r\n\t\tif(underlay && !underlay._destroyed){\r\n\t\t\tunderlay.hide();\r\n\t\t}\r\n\t};\r\n\r\n\treturn DialogUnderlay;\r\n});\r\n"]}