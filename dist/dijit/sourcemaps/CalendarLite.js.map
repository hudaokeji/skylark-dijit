{"version":3,"sources":["CalendarLite.js"],"names":["define","array","declare","cldrSupplemental","date","locale","stamp","dom","domClass","lang","on","has","string","_WidgetBase","_TemplatedMixin","template","CalendarLite","templateString","dowTemplateString","dateTemplateString","weekTemplateString","value","Date","datePackage","dayWidth","tabIndex","currentFocus","_setSummaryAttr","baseClass","_isValidDate","isNaN","toString","this","constructor","prototype","_getValueAttr","storedVal","_get","dateClassObj","setHours","getDate","dateModule","add","_setValueAttr","priorityChange","fromISOString","_patchDate","isDisabledDate","_set","set","_markSelectedDates","_created","onChange","get","_setText","node","text","firstChild","removeChild","appendChild","ownerDocument","createTextNode","_populateGrid","month","setDate","firstDay","getDay","daysInMonth","getDaysInMonth","daysInPreviousMonth","today","dayOffset","getFirstDayOfWeek","summary","monthNames","dateLocaleModule","getNames","gridNode","setAttribute","getMonth","_date2cell","forEach","dateCells","idx","number","i","clazz","adj","compare","removeAttribute","clazz2","getClassForDate","className","dateVal","valueOf","dijitDateValue","dateLabels","getDateLocalized","_populateControls","monthWidget","y","getFullYear","d","name","setFullYear","format","selector","goToToday","params","getObject","_createMonthWidget","_MonthWidget","id","monthNode","buildRendering","dayNames","dayCellsHtml","substitute","join","r","dateRowsHtml","inherited","arguments","setSelectable","domNode","dateObj","postCreate","_connectControls","connect","hitch","nodeProp","part","amount","dojoClick","_setCurrentFocusAttr","own","forceFocus","oldFocus","oldCell","_getNodeByDate","difference","newCell","focused","focus","_onDayClick","evt","stopPropagation","preventDefault","target","parentNode","contains","dates","mark","selected","cell","toggle","_selectedCells","partial","filter","map","n","_setMonthAttr","spacer","s","innerHTML"],"mappings":"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","file":"../CalendarLite.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/cldr/supplemental\", // cldrSupplemental.getFirstDayOfWeek\r\n\t\"dojo/date\", // date\r\n\t\"dojo/date/locale\",\r\n\t\"dojo/date/stamp\", // stamp.fromISOString\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-class\", // domClass.contains\r\n\t\"dojo/_base/lang\", // lang.getObject, lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"webkit\")\r\n\t\"dojo/string\", // string.substitute\r\n\t\"./_WidgetBase\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"dojo/text!./templates/Calendar.html\",\r\n\t\"./a11yclick\",\t// not used directly, but template has ondijitclick in it\r\n\t\"./hccss\"    // not used directly, but sets CSS class on <body>\r\n], function(array, declare, cldrSupplemental, date, locale, stamp, dom, domClass, lang, on, has, string, _WidgetBase, _TemplatedMixin, template){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/CalendarLite\r\n\r\n\tvar CalendarLite = declare(\"dijit.CalendarLite\", [_WidgetBase, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tLightweight version of Calendar widget aimed towards mobile use\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA simple GUI for choosing a date in the context of a monthly calendar.\r\n\t\t//\t\tThis widget can't be used in a form because it doesn't serialize the date to an\r\n\t\t//\t\t`<input>` field.  For a form element, use dijit/form/DateTextBox instead.\r\n\t\t//\r\n\t\t//\t\tNote that the parser takes all dates attributes passed in the\r\n\t\t//\t\t[RFC 3339 format](http://www.faqs.org/rfcs/rfc3339.html), e.g. `2005-06-30T08:05:00-07:00`\r\n\t\t//\t\tso that they are serializable and locale-independent.\r\n\t\t//\r\n\t\t//\t\tAlso note that this widget isn't keyboard accessible; use dijit.Calendar for that\r\n\t\t// example:\r\n\t\t//\t|\tvar calendar = new dijit.CalendarLite({}, dojo.byId(\"calendarNode\"));\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<div data-dojo-type=\"dijit/CalendarLite\"></div>\r\n\r\n\t\t// Template for main calendar\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Template for cell for a day of the week (ex: M)\r\n\t\tdowTemplateString: '<th class=\"dijitReset dijitCalendarDayLabelTemplate\" role=\"columnheader\" scope=\"col\"><span class=\"dijitCalendarDayLabel\">${d}</span></th>',\r\n\r\n\t\t// Templates for a single date (ex: 13), and for a row for a week (ex: 20 21 22 23 24 25 26)\r\n\t\tdateTemplateString: '<td class=\"dijitReset\" role=\"gridcell\" data-dojo-attach-point=\"dateCells\"><span class=\"dijitCalendarDateLabel\" data-dojo-attach-point=\"dateLabels\"></span></td>',\r\n\t\tweekTemplateString: '<tr class=\"dijitReset dijitCalendarWeekTemplate\" role=\"row\">${d}${d}${d}${d}${d}${d}${d}</tr>',\r\n\r\n\t\t// value: Date\r\n\t\t//\t\tThe currently selected Date, initially set to invalid date to indicate no selection.\r\n\t\tvalue: new Date(\"\"),\r\n\t\t// TODO: for 2.0 make this a string (ISO format) rather than a Date\r\n\r\n\t\t// datePackage: String\r\n\t\t//\t\tJavaScript namespace to find calendar routines.\t If unspecified, uses Gregorian calendar routines\r\n\t\t//\t\tat dojo/date and dojo/date/locale.\r\n\t\tdatePackage: \"\",\r\n\t\t//\t\tTODO: for 2.0, replace datePackage with dateModule and dateLocalModule attributes specifying MIDs,\r\n\t\t//\t\tor alternately just get rid of this completely and tell user to use module ID remapping\r\n\t\t//\t\tvia require\r\n\r\n\t\t// dayWidth: String\r\n\t\t//\t\tHow to represent the days of the week in the calendar header. See locale\r\n\t\tdayWidth: \"narrow\",\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tOrder fields are traversed when user hits the tab key\r\n\t\ttabIndex: \"0\",\r\n\r\n\t\t// currentFocus: Date\r\n\t\t//\t\tDate object containing the currently focused date, or the date which would be focused\r\n\t\t//\t\tif the calendar itself was focused.   Also indicates which year and month to display,\r\n\t\t//\t\ti.e. the current \"page\" the calendar is on.\r\n\t\tcurrentFocus: new Date(),\r\n\r\n\t\t// Put the summary to the node with role=grid\r\n\t\t_setSummaryAttr: \"gridNode\",\r\n\r\n\t\tbaseClass: \"dijitCalendar dijitCalendarLite\",\r\n\r\n\t\t_isValidDate: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRuns various tests on the value, checking that it's a valid date, rather\r\n\t\t\t//\t\tthan blank or NaN.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn value && !isNaN(value) && typeof value == \"object\" &&\r\n\t\t\t\tvalue.toString() != this.constructor.prototype.value.toString();\r\n\t\t},\r\n\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSupport get('value')\r\n\r\n\t\t\t// this.value is set to 1AM, but return midnight, local time for back-compat\r\n\t\t\tvar storedVal = this._get(\"value\");\r\n\t\t\tif(storedVal && !isNaN(storedVal)){\r\n\t\t\t\tvar value = new this.dateClassObj(storedVal);\r\n\t\t\t\tvalue.setHours(0, 0, 0, 0);\r\n\r\n\t\t\t\t// If daylight savings pushes midnight to the previous date, fix the Date\r\n\t\t\t\t// object to point at 1am so it will represent the correct day. See #9366\r\n\t\t\t\tif(value.getDate() < storedVal.getDate()){\r\n\t\t\t\t\tvalue = this.dateModule.add(value, \"hour\", 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t}else{\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Date|Number*/ value, /*Boolean*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSupport set(\"value\", ...)\r\n\t\t\t// description:\r\n\t\t\t//\t\tSet the current date and update the UI.  If the date is disabled, the value will\r\n\t\t\t//\t\tnot change, but the display will change to the corresponding month.\r\n\t\t\t// value:\r\n\t\t\t//\t\tEither a Date or the number of seconds since 1970.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(typeof value == \"string\"){\r\n\t\t\t\tvalue = stamp.fromISOString(value);\r\n\t\t\t}\r\n\t\t\tvalue = this._patchDate(value);\r\n\r\n\t\t\tif(this._isValidDate(value) && !this.isDisabledDate(value, this.lang)){\r\n\t\t\t\tthis._set(\"value\", value);\r\n\r\n\t\t\t\t// Set focus cell to the new value.   Arguably this should only happen when there isn't a current\r\n\t\t\t\t// focus point.   This will also repopulate the grid to new month/year if necessary.\r\n\t\t\t\tthis.set(\"currentFocus\", value);\r\n\r\n\t\t\t\t// Mark the selected date\r\n\t\t\t\tthis._markSelectedDates([value]);\r\n\r\n\t\t\t\tif(this._created && (priorityChange || typeof priorityChange == \"undefined\")){\r\n\t\t\t\t\tthis.onChange(this.get('value'));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// clear value, and mark all dates as unselected\r\n\t\t\t\tthis._set(\"value\", null);\r\n\t\t\t\tthis._markSelectedDates([]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_patchDate: function(/*Date|Number*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvert Number into Date, or copy Date object.   Then, round to nearest day,\r\n\t\t\t//\t\tsetting to 1am to avoid issues when DST shift occurs at midnight, see #8521, #9366)\r\n\t\t\tif(value){\r\n\t\t\t\tvalue = new this.dateClassObj(value);\r\n\t\t\t\tvalue.setHours(1, 0, 0, 0);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\r\n\t\t_setText: function(node, text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis just sets the content of node to the specified text.\r\n\t\t\t//\t\tCan't do \"node.innerHTML=text\" because of an IE bug w/tables, see #3434.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\twhile(node.firstChild){\r\n\t\t\t\tnode.removeChild(node.firstChild);\r\n\t\t\t}\r\n\t\t\tnode.appendChild(node.ownerDocument.createTextNode(text));\r\n\t\t},\r\n\r\n\t\t_populateGrid: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFills in the calendar grid with each day (1-31).\r\n\t\t\t//\t\tCall this on creation, when moving to a new month.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar month = new this.dateClassObj(this.currentFocus);\r\n\t\t\tmonth.setDate(1);\r\n\t\t\tmonth = this._patchDate(month);\t// needed if currentFocus is start or end of DST, see #17033\r\n\r\n\t\t\tvar firstDay = month.getDay(),\r\n\t\t\t\tdaysInMonth = this.dateModule.getDaysInMonth(month),\r\n\t\t\t\tdaysInPreviousMonth = this.dateModule.getDaysInMonth(this.dateModule.add(month, \"month\", -1)),\r\n\t\t\t\ttoday = new this.dateClassObj(),\r\n\t\t\t\tdayOffset = cldrSupplemental.getFirstDayOfWeek(this.lang);\r\n\t\t\tif(dayOffset > firstDay){\r\n\t\t\t\tdayOffset -= 7;\r\n\t\t\t}\r\n\r\n\t\t\t// If they didn't provide a summary, change the default summary to match with the new month\r\n\t\t\tif(!this.summary){\r\n\t\t\t\tvar monthNames = this.dateLocaleModule.getNames('months', 'wide', 'standAlone', this.lang, month)\r\n\t\t\t\tthis.gridNode.setAttribute(\"summary\", monthNames[month.getMonth()]);\r\n\t\t\t}\r\n\r\n\t\t\t// Mapping from date (as specified by number returned from Date.valueOf()) to corresponding <td>\r\n\t\t\tthis._date2cell = {};\r\n\r\n\t\t\t// Iterate through dates in the calendar and fill in date numbers and style info\r\n\t\t\tarray.forEach(this.dateCells, function(template, idx){\r\n\t\t\t\tvar i = idx + dayOffset;\r\n\t\t\t\tvar date = new this.dateClassObj(month),\r\n\t\t\t\t\tnumber, clazz = \"dijitCalendar\", adj = 0;\r\n\r\n\t\t\t\tif(i < firstDay){\r\n\t\t\t\t\tnumber = daysInPreviousMonth - firstDay + i + 1;\r\n\t\t\t\t\tadj = -1;\r\n\t\t\t\t\tclazz += \"Previous\";\r\n\t\t\t\t}else if(i >= (firstDay + daysInMonth)){\r\n\t\t\t\t\tnumber = i - firstDay - daysInMonth + 1;\r\n\t\t\t\t\tadj = 1;\r\n\t\t\t\t\tclazz += \"Next\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnumber = i - firstDay + 1;\r\n\t\t\t\t\tclazz += \"Current\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(adj){\r\n\t\t\t\t\tdate = this.dateModule.add(date, \"month\", adj);\r\n\t\t\t\t}\r\n\t\t\t\tdate.setDate(number);\r\n\r\n\t\t\t\tif(!this.dateModule.compare(date, today, \"date\")){\r\n\t\t\t\t\tclazz = \"dijitCalendarCurrentDate \" + clazz;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.isDisabledDate(date, this.lang)){\r\n\t\t\t\t\tclazz = \"dijitCalendarDisabledDate \" + clazz;\r\n\t\t\t\t\ttemplate.setAttribute(\"aria-disabled\", \"true\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tclazz = \"dijitCalendarEnabledDate \" + clazz;\r\n\t\t\t\t\ttemplate.removeAttribute(\"aria-disabled\");\r\n\t\t\t\t\ttemplate.setAttribute(\"aria-selected\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar clazz2 = this.getClassForDate(date, this.lang);\r\n\t\t\t\tif(clazz2){\r\n\t\t\t\t\tclazz = clazz2 + \" \" + clazz;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemplate.className = clazz + \"Month dijitCalendarDateTemplate\";\r\n\r\n\t\t\t\t// Each cell has an associated integer value representing it's date\r\n\t\t\t\tvar dateVal = date.valueOf();\r\n\t\t\t\tthis._date2cell[dateVal] = template;\r\n\t\t\t\ttemplate.dijitDateValue = dateVal;\r\n\r\n\t\t\t\t// Set Date string (ex: \"13\").\r\n\t\t\t\tthis._setText(this.dateLabels[idx], date.getDateLocalized ? date.getDateLocalized(this.lang) : date.getDate());\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_populateControls: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFill in localized month, and prev/current/next years\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar month = new this.dateClassObj(this.currentFocus);\r\n\t\t\tmonth.setDate(1);\r\n\r\n\t\t\t// set name of this month\r\n\t\t\tthis.monthWidget.set(\"month\", month);\r\n\r\n\t\t\tvar y = month.getFullYear() - 1;\r\n\t\t\tvar d = new this.dateClassObj();\r\n\t\t\tarray.forEach([\"previous\", \"current\", \"next\"], function(name){\r\n\t\t\t\td.setFullYear(y++);\r\n\t\t\t\tthis._setText(this[name + \"YearLabelNode\"],\r\n\t\t\t\t\tthis.dateLocaleModule.format(d, {selector: 'year', locale: this.lang}));\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tgoToToday: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets calendar's value to today's date\r\n\t\t\tthis.set('value', new this.dateClassObj());\r\n\t\t},\r\n\r\n\t\tconstructor: function(params /*===== , srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t\tthis.dateModule = params.datePackage ? lang.getObject(params.datePackage, false) : date;\r\n\t\t\tthis.dateClassObj = this.dateModule.Date || Date;\r\n\t\t\tthis.dateLocaleModule = params.datePackage ? lang.getObject(params.datePackage + \".locale\", false) : locale;\r\n\t\t},\r\n\r\n\t\t_createMonthWidget: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the drop down button that displays the current month and lets user pick a new one\r\n\r\n\t\t\treturn CalendarLite._MonthWidget({\r\n\t\t\t\tid: this.id + \"_mddb\",\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\tdateLocaleModule: this.dateLocaleModule\r\n\t\t\t}, this.monthNode);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// Markup for days of the week (referenced from template)\r\n\t\t\tvar d = this.dowTemplateString,\r\n\t\t\t\tdayNames = this.dateLocaleModule.getNames('days', this.dayWidth, 'standAlone', this.lang),\r\n\t\t\t\tdayOffset = cldrSupplemental.getFirstDayOfWeek(this.lang);\r\n\t\t\tthis.dayCellsHtml = string.substitute([d, d, d, d, d, d, d].join(\"\"), {d: \"\"}, function(){\r\n\t\t\t\treturn dayNames[dayOffset++ % 7];\r\n\t\t\t});\r\n\r\n\t\t\t// Markup for dates of the month (referenced from template), but without numbers filled in\r\n\t\t\tvar r = string.substitute(this.weekTemplateString, {d: this.dateTemplateString});\r\n\t\t\tthis.dateRowsHtml = [r, r, r, r, r, r].join(\"\");\r\n\r\n\t\t\t// Instantiate from template.\r\n\t\t\t// dateCells and dateLabels arrays filled when _Templated parses my template.\r\n\t\t\tthis.dateCells = [];\r\n\t\t\tthis.dateLabels = [];\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tdom.setSelectable(this.domNode, false);\r\n\r\n\t\t\tvar dateObj = new this.dateClassObj(this.currentFocus);\r\n\r\n\t\t\tthis.monthWidget = this._createMonthWidget();\r\n\r\n\t\t\tthis.set('currentFocus', dateObj, false);\t// draw the grid to the month specified by currentFocus\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._connectControls();\r\n\t\t},\r\n\r\n\t\t_connectControls: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet up connects for increment/decrement of months/years\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar connect = lang.hitch(this, function(nodeProp, part, amount){\r\n\t\t\t\tthis[nodeProp].dojoClick = true;\r\n\t\t\t\treturn on(this[nodeProp], \"click\", lang.hitch(this, function(){\r\n\t\t\t\t\tthis._setCurrentFocusAttr(this.dateModule.add(this.currentFocus, part, amount));\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\r\n\t\t\tthis.own(\r\n\t\t\t\tconnect(\"incrementMonth\", \"month\", 1),\r\n\t\t\t\tconnect(\"decrementMonth\", \"month\", -1),\r\n\t\t\t\tconnect(\"nextYearLabelNode\", \"year\", 1),\r\n\t\t\t\tconnect(\"previousYearLabelNode\", \"year\", -1)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_setCurrentFocusAttr: function(/*Date*/ date, /*Boolean*/ forceFocus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIf the calendar currently has focus, then focuses specified date,\r\n\t\t\t//\t\tchanging the currently displayed month/year if necessary.\r\n\t\t\t//\t\tIf the calendar doesn't have focus, updates currently\r\n\t\t\t//\t\tdisplayed month/year, and sets the cell that will get focus\r\n\t\t\t//\t\twhen Calendar is focused.\r\n\t\t\t// forceFocus:\r\n\t\t\t//\t\tIf true, will focus() the cell even if calendar itself doesn't have focus\r\n\r\n\t\t\tvar oldFocus = this.currentFocus,\r\n\t\t\t\toldCell = this._getNodeByDate(oldFocus);\r\n\t\t\tdate = this._patchDate(date);\r\n\r\n\t\t\tthis._set(\"currentFocus\", date);\r\n\r\n\t\t\t// If the focus is on a different month than the current calendar month, switch the displayed month.\r\n\t\t\t// Also will populate the grid initially, on Calendar creation.\r\n\t\t\tif(!this._date2cell || this.dateModule.difference(oldFocus, date, \"month\") != 0){\r\n\t\t\t\tthis._populateGrid();\r\n\t\t\t\tthis._populateControls();\r\n\t\t\t\tthis._markSelectedDates([this.value]);\r\n\t\t\t}\r\n\r\n\t\t\t// set tabIndex=0 on new cell, and focus it (but only if Calendar itself is focused)\r\n\t\t\tvar newCell = this._getNodeByDate(date);\r\n\t\t\tnewCell.setAttribute(\"tabIndex\", this.tabIndex);\r\n\t\t\tif(this.focused || forceFocus){\r\n\t\t\t\tnewCell.focus();\r\n\t\t\t}\r\n\r\n\t\t\t// set tabIndex=-1 on old focusable cell\r\n\t\t\tif(oldCell && oldCell != newCell){\r\n\t\t\t\tif(has(\"webkit\")){    // see #11064 about webkit bug\r\n\t\t\t\t\toldCell.setAttribute(\"tabIndex\", \"-1\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\toldCell.removeAttribute(\"tabIndex\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the calendar by focusing one of the calendar cells\r\n\t\t\tthis._setCurrentFocusAttr(this.currentFocus, true);\r\n\t\t},\r\n\r\n\t\t_onDayClick: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for day clicks, selects the date if appropriate\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tevt.stopPropagation();\r\n\t\t\tevt.preventDefault();\r\n\t\t\tfor(var node = evt.target; node && !node.dijitDateValue; node = node.parentNode){\r\n\t\t\t\t;\r\n\t\t\t}\r\n\t\t\tif(node && !domClass.contains(node, \"dijitCalendarDisabledDate\")){\r\n\t\t\t\tthis.set('value', node.dijitDateValue);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getNodeByDate: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the cell corresponding to the date, or null if the date is not within the currently\r\n\t\t\t//\t\tdisplayed month.\r\n\t\t\tvalue = this._patchDate(value);\r\n\t\t\treturn value && this._date2cell ? this._date2cell[value.valueOf()] : null;\r\n\t\t},\r\n\r\n\t\t_markSelectedDates: function(/*Date[]*/ dates){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMarks the specified cells as selected, and clears cells previously marked as selected.\r\n\t\t\t//\t\tFor CalendarLite at most one cell is selected at any point, but this allows an array\r\n\t\t\t//\t\tfor easy subclassing.\r\n\r\n\t\t\t// Function to mark a cell as selected or unselected\r\n\t\t\tfunction mark(/*Boolean*/ selected, /*DomNode*/ cell){\r\n\t\t\t\tdomClass.toggle(cell, \"dijitCalendarSelectedDate\", selected);\r\n\t\t\t\tcell.setAttribute(\"aria-selected\", selected ? \"true\" : \"false\");\r\n\t\t\t}\r\n\r\n\t\t\t// Clear previously selected cells.\r\n\t\t\tarray.forEach(this._selectedCells || [], lang.partial(mark, false));\r\n\r\n\t\t\t// Mark newly selected cells.  Ignore dates outside the currently displayed month.\r\n\t\t\tthis._selectedCells = array.filter(array.map(dates, this._getNodeByDate, this), function(n){\r\n\t\t\t\treturn n;\r\n\t\t\t});\r\n\t\t\tarray.forEach(this._selectedCells, lang.partial(mark, true));\r\n\t\t},\r\n\r\n\t\tonChange: function(/*Date*/ /*===== date =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled only when the selected date has changed\r\n\t\t},\r\n\r\n\t\tisDisabledDate: function(/*===== dateObject, locale =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to disable certain dates in the calendar e.g. `isDisabledDate=dojo.date.locale.isWeekend`\r\n\t\t\t// dateObject: Date\r\n\t\t\t// locale: String?\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\t/*=====\r\n\t\t\t return false; // Boolean\r\n\t\t\t =====*/\r\n\t\t},\r\n\r\n\t\tgetClassForDate: function(/*===== dateObject, locale =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to return CSS classes to associate with the date entry for the given dateObject,\r\n\t\t\t//\t\tfor example to indicate a holiday in specified locale.\r\n\t\t\t// dateObject: Date\r\n\t\t\t// locale: String?\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\t/*=====\r\n\t\t\t return \"\"; // String\r\n\t\t\t =====*/\r\n\t\t}\r\n\t});\r\n\r\n\tCalendarLite._MonthWidget = declare(\"dijit.CalendarLite._MonthWidget\", _WidgetBase, {\r\n\t\t// summary:\r\n\t\t//\t\tDisplays name of current month padded to the width of the month\r\n\t\t//\t\tw/the longest name, so that changing months doesn't change width.\r\n\t\t//\r\n\t\t//\t\tCreate as:\r\n\t\t// |\tnew Calendar._MonthWidget({\r\n\t\t// |\t\t\tlang: ...,\r\n\t\t// |\t\t\tdateLocaleModule: ...\r\n\t\t// |\t\t})\r\n\r\n\t\t_setMonthAttr: function(month){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the current month to display as a label\r\n\t\t\tvar monthNames = this.dateLocaleModule.getNames('months', 'wide', 'standAlone', this.lang, month),\r\n\t\t\t\tspacer =\r\n\t\t\t\t\t(has(\"ie\") == 6 ? \"\" : \"<div class='dijitSpacer'>\" +\r\n\t\t\t\t\t\tarray.map(monthNames,function(s){\r\n\t\t\t\t\t\t\treturn \"<div>\" + s + \"</div>\";\r\n\t\t\t\t\t\t}).join(\"\") + \"</div>\");\r\n\r\n\t\t\t// Set name of current month and also fill in spacer element with all the month names\r\n\t\t\t// (invisible) so that the maximum width will affect layout.   But not on IE6 because then\r\n\t\t\t// the center <TH> overlaps the right <TH> (due to a browser bug).\r\n\t\t\tthis.domNode.innerHTML =\r\n\t\t\t\tspacer +\r\n\t\t\t\t\t\"<div class='dijitCalendarMonthLabel dijitCalendarCurrentMonthLabel'>\" +\r\n\t\t\t\t\tmonthNames[month.getMonth()] + \"</div>\";\r\n\t\t}\r\n\t});\r\n\r\n\treturn CalendarLite;\r\n});\r\n"]}