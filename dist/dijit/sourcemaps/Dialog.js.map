{"version":3,"sources":["Dialog.js"],"names":["define","require","array","aspect","declare","Deferred","dom","domClass","domGeometry","domStyle","fx","i18n","keys","lang","on","ready","has","winUtils","Moveable","TimedMoveable","focus","manager","_Widget","_TemplatedMixin","_CssStateMixin","_FormMixin","_DialogMixin","DialogUnderlay","ContentPane","utils","template","resolvedDeferred","resolve","_DialogBase","templateString","baseClass","cssStateNodes","closeButtonNode","_setTitleAttr","node","type","open","duration","defaultDuration","refocus","autofocus","_firstFocusItem","_lastFocusItem","draggable","_setDraggableAttr","val","this","_set","maxRatio","closable","_setClosableAttr","style","display","postMixInProperties","_nlsResources","getLocalization","mixin","inherited","arguments","postCreate","set","domNode","position","ownerDocumentBody","appendChild","after","hitch","_modalconnects","onLoad","resize","_position","DialogLevelManager","isTop","_getFocusItems","_endDrag","nodePosition","viewport","getBox","ownerDocument","y","Math","min","max","h","x","w","_relativePosition","_setup","titleBar","_moveable","handle","add","underlayAttrs","dialogId","id","class","map","split","s","join","_onKeyDown","_size","contains","p","bb","l","floor","t","left","top","_onKey","evt","keyCode","TAB","target","stopPropagation","preventDefault","shiftKey","ESCAPE","onCancel","show","promise","_started","startup","_alreadyInitialized","_fadeOutDeferred","cancel","hide","fadeIn","win","get","push","opacity","_onShow","_fadeInDeferred","stop","beforeBegin","onEnd","play","fadeOut","then","_scrollConnected","pop","remove","dim","_checkIfSingleChild","_shrunk","_singleChild","_singleChildOriginalStyle","cssText","forEach","containerNode","actionBarNode","width","height","setMarginBox","layoutNodes","region","centerSize","contentDim","marginBox2contentBox","layoutChildren","cb","overflow","_layoutChildren","getChildren","widget","destroy","title","titleNode","innerHTML","applyTextDir","_setTextDirAttr","textDir","_created","Dialog","_DialogLevelManager","_beginZIndex","dialog","ds","length","curNode","zIndex","pd","isDescendant","e","idx","indexOf","elem","splice","_dialogStack","watch","attr","oldNode","topDialog","parentNode"],"mappings":"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","file":"../Dialog.js","sourcesContent":["define([\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.map\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/Deferred\", // Deferred\r\n\t\"dojo/dom\", // dom.isDescendant\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains\r\n\t\"dojo/dom-geometry\", // domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/_base/fx\", // fx.fadeIn fx.fadeOut\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/keys\",\r\n\t\"dojo/_base/lang\", // lang.mixin lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/ready\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"opera\") has(\"dijit-legacy-requires\")\r\n\t\"dojo/window\", // winUtils.getBox, winUtils.get\r\n\t\"dojo/dnd/Moveable\", // Moveable\r\n\t\"dojo/dnd/TimedMoveable\", // TimedMoveable\r\n\t\"./focus\",\r\n\t\"./_base/manager\", // manager.defaultDuration\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_CssStateMixin\",\r\n\t\"./form/_FormMixin\",\r\n\t\"./_DialogMixin\",\r\n\t\"./DialogUnderlay\",\r\n\t\"./layout/ContentPane\",\r\n\t\"./layout/utils\",\r\n\t\"dojo/text!./templates/Dialog.html\",\r\n\t\"./a11yclick\",\t// template uses ondijitclick\r\n\t\"dojo/i18n!./nls/common\"\r\n], function(require, array, aspect, declare, Deferred,\r\n\t\t\tdom, domClass, domGeometry, domStyle, fx, i18n, keys, lang, on, ready, has, winUtils,\r\n\t\t\tMoveable, TimedMoveable, focus, manager, _Widget, _TemplatedMixin, _CssStateMixin, _FormMixin, _DialogMixin,\r\n\t\t\tDialogUnderlay, ContentPane, utils, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Dialog\r\n\r\n\tvar resolvedDeferred = new Deferred();\r\n\tresolvedDeferred.resolve(true);\r\n\r\n\tvar _DialogBase = declare(\"dijit._DialogBase\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), [_TemplatedMixin, _FormMixin, _DialogMixin, _CssStateMixin], {\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitDialog\",\r\n\r\n\t\tcssStateNodes: {\r\n\t\t\tcloseButtonNode: \"dijitDialogCloseIcon\"\r\n\t\t},\r\n\r\n\t\t// Map widget attributes to DOMNode attributes.\r\n\t\t_setTitleAttr: { node: \"titleNode\", type: \"innerHTML\" },\r\n\r\n\t\t// open: [readonly] Boolean\r\n\t\t//\t\tTrue if Dialog is currently displayed on screen.\r\n\t\topen: false,\r\n\r\n\t\t// duration: Integer\r\n\t\t//\t\tThe time in milliseconds it takes the dialog to fade in and out\r\n\t\tduration: manager.defaultDuration,\r\n\r\n\t\t// refocus: Boolean\r\n\t\t//\t\tA Toggle to modify the default focus behavior of a Dialog, which\r\n\t\t//\t\tis to re-focus the element which had focus before being opened.\r\n\t\t//\t\tFalse will disable refocusing. Default: true\r\n\t\trefocus: true,\r\n\r\n\t\t// autofocus: Boolean\r\n\t\t//\t\tA Toggle to modify the default focus behavior of a Dialog, which\r\n\t\t//\t\tis to focus on the first dialog element after opening the dialog.\r\n\t\t//\t\tFalse will disable autofocusing. Default: true\r\n\t\tautofocus: true,\r\n\r\n\t\t// _firstFocusItem: [private readonly] DomNode\r\n\t\t//\t\tThe pointer to the first focusable node in the dialog.\r\n\t\t//\t\tSet by `dijit/_DialogMixin._getFocusItems()`.\r\n\t\t_firstFocusItem: null,\r\n\r\n\t\t// _lastFocusItem: [private readonly] DomNode\r\n\t\t//\t\tThe pointer to which node has focus prior to our dialog.\r\n\t\t//\t\tSet by `dijit/_DialogMixin._getFocusItems()`.\r\n\t\t_lastFocusItem: null,\r\n\r\n\t\t// draggable: Boolean\r\n\t\t//\t\tToggles the movable aspect of the Dialog. If true, Dialog\r\n\t\t//\t\tcan be dragged by it's title. If false it will remain centered\r\n\t\t//\t\tin the viewport.\r\n\t\tdraggable: true,\r\n\t\t_setDraggableAttr: function(/*Boolean*/ val){\r\n\t\t\t// Avoid _WidgetBase behavior of copying draggable attribute to this.domNode,\r\n\t\t\t// as that prevents text select on modern browsers (#14452)\r\n\t\t\tthis._set(\"draggable\", val);\r\n\t\t},\r\n\r\n\t\t// maxRatio: Number\r\n\t\t//\t\tMaximum size to allow the dialog to expand to, relative to viewport size\r\n\t\tmaxRatio: 0.9,\r\n\r\n\t\t// closable: Boolean\r\n\t\t//\t\tDialog show [x] icon to close itself, and ESC key will close the dialog.\r\n\t\tclosable: true,\r\n\t\t_setClosableAttr: function(val){\r\n\t\t\tthis.closeButtonNode.style.display = val ? \"\" : \"none\";\r\n\t\t\tthis._set(\"closable\", val);\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tvar _nlsResources = i18n.getLocalization(\"dijit\", \"common\");\r\n\t\t\tlang.mixin(this, _nlsResources);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tdomStyle.set(this.domNode, {\r\n\t\t\t\tdisplay: \"none\",\r\n\t\t\t\tposition: \"absolute\"\r\n\t\t\t});\r\n\t\t\tthis.ownerDocumentBody.appendChild(this.domNode);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\taspect.after(this, \"onExecute\", lang.hitch(this, \"hide\"), true);\r\n\t\t\taspect.after(this, \"onCancel\", lang.hitch(this, \"hide\"), true);\r\n\r\n\t\t\tthis._modalconnects = [];\r\n\t\t},\r\n\r\n\t\tonLoad: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when data has been loaded from an href.\r\n\t\t\t//\t\tUnlike most other callbacks, this function can be connected to (via `dojo.connect`)\r\n\t\t\t//\t\tbut should *not* be overridden.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\r\n\t\t\t// when href is specified we need to reposition the dialog after the data is loaded\r\n\t\t\t// and find the focusable elements\r\n\t\t\tthis.resize();\r\n\t\t\tthis._position();\r\n\r\n\t\t\tif(this.autofocus && DialogLevelManager.isTop(this)){\r\n\t\t\t\tthis._getFocusItems();\r\n\t\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\tthis._getFocusItems();\r\n\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t},\r\n\r\n\t\t_endDrag: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after dragging the Dialog. Saves the position of the dialog in the viewport,\r\n\t\t\t//\t\tand also adjust position to be fully within the viewport, so user doesn't lose access to handle\r\n\t\t\tvar nodePosition = domGeometry.position(this.domNode),\r\n\t\t\t\tviewport = winUtils.getBox(this.ownerDocument);\r\n\t\t\tnodePosition.y = Math.min(Math.max(nodePosition.y, 0), (viewport.h - nodePosition.h));\r\n\t\t\tnodePosition.x = Math.min(Math.max(nodePosition.x, 0), (viewport.w - nodePosition.w));\r\n\t\t\tthis._relativePosition = nodePosition;\r\n\t\t\tthis._position();\r\n\t\t},\r\n\r\n\t\t_setup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStuff we need to do before showing the Dialog for the first\r\n\t\t\t//\t\ttime (but we defer it until right beforehand, for\r\n\t\t\t//\t\tperformance reasons).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar node = this.domNode;\r\n\r\n\t\t\tif(this.titleBar && this.draggable){\r\n\t\t\t\tthis._moveable = new ((has(\"ie\") == 6) ? TimedMoveable // prevent overload, see #5285\r\n\t\t\t\t\t: Moveable)(node, { handle: this.titleBar });\r\n\t\t\t\taspect.after(this._moveable, \"onMoveStop\", lang.hitch(this, \"_endDrag\"), true);\r\n\t\t\t}else{\r\n\t\t\t\tdomClass.add(node, \"dijitDialogFixed\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.underlayAttrs = {\r\n\t\t\t\tdialogId: this.id,\r\n\t\t\t\t\"class\": array.map(this[\"class\"].split(/\\s/),function(s){\r\n\t\t\t\t\treturn s + \"_underlay\";\r\n\t\t\t\t}).join(\" \"),\r\n\t\t\t\t_onKeyDown: lang.hitch(this, \"_onKey\"),\r\n\t\t\t\townerDocument: this.ownerDocument\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t_size: function(){\r\n\t\t\t// TODO: remove for 2.0\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\r\n\t\t_position: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPosition the dialog in the viewport.  If no relative offset\r\n\t\t\t//\t\tin the viewport has been determined (by dragging, for instance),\r\n\t\t\t//\t\tcenter the dialog.  Otherwise, use the Dialog's stored relative offset,\r\n\t\t\t//\t\tadjusted by the viewport's scroll.\r\n\t\t\tif(!domClass.contains(this.ownerDocumentBody, \"dojoMove\")){    // don't do anything if called during auto-scroll\r\n\t\t\t\tvar node = this.domNode,\r\n\t\t\t\t\tviewport = winUtils.getBox(this.ownerDocument),\r\n\t\t\t\t\tp = this._relativePosition,\r\n\t\t\t\t\tbb = p ? null : domGeometry.position(node),\r\n\t\t\t\t\tl = Math.floor(viewport.l + (p ? p.x : (viewport.w - bb.w) / 2)),\r\n\t\t\t\t\tt = Math.floor(viewport.t + (p ? p.y : (viewport.h - bb.h) / 2))\r\n\t\t\t\t\t;\r\n\t\t\t\tdomStyle.set(node, {\r\n\t\t\t\t\tleft: l + \"px\",\r\n\t\t\t\t\ttop: t + \"px\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onKey: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles the keyboard events for accessibility reasons\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(evt.keyCode == keys.TAB){\r\n\t\t\t\tthis._getFocusItems();\r\n\t\t\t\tvar node = evt.target;\r\n\t\t\t\tif(this._firstFocusItem == this._lastFocusItem){\r\n\t\t\t\t\t// don't move focus anywhere, but don't allow browser to move focus off of dialog either\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t}else if(node == this._firstFocusItem && evt.shiftKey){\r\n\t\t\t\t\t// if we are shift-tabbing from first focusable item in dialog, send focus to last item\r\n\t\t\t\t\tfocus.focus(this._lastFocusItem);\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t}else if(node == this._lastFocusItem && !evt.shiftKey){\r\n\t\t\t\t\t// if we are tabbing from last focusable item in dialog, send focus to first item\r\n\t\t\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}else if(this.closable && evt.keyCode == keys.ESCAPE){\r\n\t\t\t\tthis.onCancel();\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tshow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay the dialog\r\n\t\t\t// returns: dojo/promise/Promise\r\n\t\t\t//\t\tPromise object that resolves when the display animation is complete\r\n\r\n\t\t\tif(this.open){\r\n\t\t\t\treturn resolvedDeferred.promise;\r\n\t\t\t}\r\n\r\n\t\t\tif(!this._started){\r\n\t\t\t\tthis.startup();\r\n\t\t\t}\r\n\r\n\t\t\t// first time we show the dialog, there's some initialization stuff to do\r\n\t\t\tif(!this._alreadyInitialized){\r\n\t\t\t\tthis._setup();\r\n\t\t\t\tthis._alreadyInitialized = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._fadeOutDeferred){\r\n\t\t\t\t// There's a hide() operation in progress, so cancel it, but still call DialogLevelManager.hide()\r\n\t\t\t\t// as though the hide() completed, in preparation for the DialogLevelManager.show() call below.\r\n\t\t\t\tthis._fadeOutDeferred.cancel();\r\n\t\t\t\tDialogLevelManager.hide(this);\r\n\t\t\t}\r\n\r\n\t\t\t// Recenter Dialog if user scrolls browser.  Connecting to document doesn't work on IE, need to use window.\r\n\t\t\t// Be sure that event object doesn't get passed to resize() method, because it's expecting an optional\r\n\t\t\t// {w: ..., h:...} arg.\r\n\t\t\tvar win = winUtils.get(this.ownerDocument);\r\n\t\t\tthis._modalconnects.push(on(win, \"scroll\", lang.hitch(this, \"resize\", null)));\r\n\r\n\t\t\tthis._modalconnects.push(on(this.domNode, \"keydown\", lang.hitch(this, \"_onKey\")));\r\n\r\n\t\t\tdomStyle.set(this.domNode, {\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tdisplay: \"\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._set(\"open\", true);\r\n\t\t\tthis._onShow(); // lazy load trigger\r\n\r\n\t\t\tthis.resize();\r\n\t\t\tthis._position();\r\n\r\n\t\t\t// fade-in Animation object, setup below\r\n\t\t\tvar fadeIn;\r\n\r\n\t\t\tthis._fadeInDeferred = new Deferred(lang.hitch(this, function(){\r\n\t\t\t\tfadeIn.stop();\r\n\t\t\t\tdelete this._fadeInDeferred;\r\n\t\t\t}));\r\n\r\n\t\t\t// If delay is 0, code below will delete this._fadeInDeferred instantly, so grab promise while we can.\r\n\t\t\tvar promise = this._fadeInDeferred.promise;\r\n\r\n\t\t\tfadeIn = fx.fadeIn({\r\n\t\t\t\tnode: this.domNode,\r\n\t\t\t\tduration: this.duration,\r\n\t\t\t\tbeforeBegin: lang.hitch(this, function(){\r\n\t\t\t\t\tDialogLevelManager.show(this, this.underlayAttrs);\r\n\t\t\t\t}),\r\n\t\t\t\tonEnd: lang.hitch(this, function(){\r\n\t\t\t\t\tif(this.autofocus && DialogLevelManager.isTop(this)){\r\n\t\t\t\t\t\t// find focusable items each time dialog is shown since if dialog contains a widget the\r\n\t\t\t\t\t\t// first focusable items can change\r\n\t\t\t\t\t\tthis._getFocusItems();\r\n\t\t\t\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._fadeInDeferred.resolve(true);\r\n\t\t\t\t\tdelete this._fadeInDeferred;\r\n\t\t\t\t})\r\n\t\t\t}).play();\r\n\r\n\t\t\treturn promise;\r\n\t\t},\r\n\r\n\t\thide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the dialog\r\n\t\t\t// returns: dojo/promise/Promise\r\n\t\t\t//\t\tPromise object that resolves when the display animation is complete\r\n\r\n\t\t\t// If we haven't been initialized yet then we aren't showing and we can just return.\r\n\t\t\t// Likewise if we are already hidden, or are currently fading out.\r\n\t\t\tif(!this._alreadyInitialized || !this.open){\r\n\t\t\t\treturn resolvedDeferred.promise;\r\n\t\t\t}\r\n\t\t\tif(this._fadeInDeferred){\r\n\t\t\t\tthis._fadeInDeferred.cancel();\r\n\t\t\t}\r\n\r\n\t\t\t// fade-in Animation object, setup below\r\n\t\t\tvar fadeOut;\r\n\r\n\t\t\tthis._fadeOutDeferred = new Deferred(lang.hitch(this, function(){\r\n\t\t\t\tfadeOut.stop();\r\n\t\t\t\tdelete this._fadeOutDeferred;\r\n\t\t\t}));\r\n\r\n\t\t\t// fire onHide when the promise resolves.\r\n\t\t\tthis._fadeOutDeferred.then(lang.hitch(this, 'onHide'));\r\n\r\n\t\t\t// If delay is 0, code below will delete this._fadeOutDeferred instantly, so grab promise while we can.\r\n\t\t\tvar promise = this._fadeOutDeferred.promise;\r\n\r\n\t\t\tfadeOut = fx.fadeOut({\r\n\t\t\t\tnode: this.domNode,\r\n\t\t\t\tduration: this.duration,\r\n\t\t\t\tonEnd: lang.hitch(this, function(){\r\n\t\t\t\t\tthis.domNode.style.display = \"none\";\r\n\t\t\t\t\tDialogLevelManager.hide(this);\r\n\t\t\t\t\tthis._fadeOutDeferred.resolve(true);\r\n\t\t\t\t\tdelete this._fadeOutDeferred;\r\n\t\t\t\t})\r\n\t\t\t}).play();\r\n\r\n\t\t\tif(this._scrollConnected){\r\n\t\t\t\tthis._scrollConnected = false;\r\n\t\t\t}\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this._modalconnects.pop()){\r\n\t\t\t\th.remove();\r\n\t\t\t}\r\n\r\n\t\t\tif(this._relativePosition){\r\n\t\t\t\tdelete this._relativePosition;\r\n\t\t\t}\r\n\t\t\tthis._set(\"open\", false);\r\n\r\n\t\t\treturn promise;\r\n\t\t},\r\n\r\n\t\tresize: function(dim){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled with no argument when viewport scrolled or viewport size changed.  Adjusts Dialog as\r\n\t\t\t//\t\tnecessary to keep it visible.\r\n\t\t\t//\r\n\t\t\t//\t\tCan also be called with an argument (by dojox/layout/ResizeHandle etc.) to explicitly set the\r\n\t\t\t//\t\tsize of the dialog.\r\n\t\t\t// dim: Object?\r\n\t\t\t//\t\tOptional dimension object like {w: 200, h: 300}\r\n\r\n\t\t\tif(this.domNode.style.display != \"none\"){\r\n\r\n\t\t\t\tthis._checkIfSingleChild();\r\n\r\n\t\t\t\tif(!dim){\r\n\t\t\t\t\tif(this._shrunk){\r\n\t\t\t\t\t\t// If we earlier shrunk the dialog to fit in the viewport, reset it to its natural size\r\n\t\t\t\t\t\tif(this._singleChild){\r\n\t\t\t\t\t\t\tif(typeof this._singleChildOriginalStyle != \"undefined\"){\r\n\t\t\t\t\t\t\t\tthis._singleChild.domNode.style.cssText = this._singleChildOriginalStyle;\r\n\t\t\t\t\t\t\t\tdelete this._singleChildOriginalStyle;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tarray.forEach([this.domNode, this.containerNode, this.titleBar, this.actionBarNode], function(node){\r\n\t\t\t\t\t\t\tif(node){\t// because titleBar may not be defined\r\n\t\t\t\t\t\t\t\tdomStyle.set(node, {\r\n\t\t\t\t\t\t\t\t\tposition: \"static\",\r\n\t\t\t\t\t\t\t\t\twidth: \"auto\",\r\n\t\t\t\t\t\t\t\t\theight: \"auto\"\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.domNode.style.position = \"absolute\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If necessary, shrink Dialog to fit in viewport and have some space around it\r\n\t\t\t\t\t// to indicate that it's a popup.  This will also compensate for possible scrollbars on viewport.\r\n\t\t\t\t\tvar viewport = winUtils.getBox(this.ownerDocument);\r\n\t\t\t\t\tviewport.w *= this.maxRatio;\r\n\t\t\t\t\tviewport.h *= this.maxRatio;\r\n\r\n\t\t\t\t\tvar bb = domGeometry.position(this.domNode);\r\n\t\t\t\t\tif(bb.w >= viewport.w || bb.h >= viewport.h){\r\n\t\t\t\t\t\tdim = {\r\n\t\t\t\t\t\t\tw: Math.min(bb.w, viewport.w),\r\n\t\t\t\t\t\t\th: Math.min(bb.h, viewport.h)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis._shrunk = true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._shrunk = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Code to run if user has requested an explicit size, or the shrinking code above set an implicit size\r\n\t\t\t\tif(dim){\r\n\t\t\t\t\t// Set this.domNode to specified size\r\n\t\t\t\t\tdomGeometry.setMarginBox(this.domNode, dim);\r\n\r\n\t\t\t\t\t// And then size this.containerNode\r\n\t\t\t\t\tvar layoutNodes = [];\r\n\t\t\t\t\tif(this.titleBar){\r\n\t\t\t\t\t\tlayoutNodes.push({domNode: this.titleBar, region: \"top\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.actionBarNode){\r\n\t\t\t\t\t\tlayoutNodes.push({domNode: this.actionBarNode, region: \"bottom\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar centerSize = {domNode: this.containerNode, region: \"center\"};\r\n\t\t\t\t\tlayoutNodes.push(centerSize);\r\n\r\n\t\t\t\t\tvar contentDim = utils.marginBox2contentBox(this.domNode, dim);\r\n\t\t\t\t\tutils.layoutChildren(this.domNode, contentDim, layoutNodes);\r\n\r\n\t\t\t\t\t// And then if this.containerNode has a single layout widget child, size it too.\r\n\t\t\t\t\t// Otherwise, make this.containerNode show a scrollbar if it's overflowing.\r\n\t\t\t\t\tif(this._singleChild){\r\n\t\t\t\t\t\tvar cb = utils.marginBox2contentBox(this.containerNode, centerSize);\r\n\t\t\t\t\t\t// note: if containerNode has padding singleChildSize will have l and t set,\r\n\t\t\t\t\t\t// but don't pass them to resize() or it will doubly-offset the child\r\n\t\t\t\t\t\tthis._singleChild.resize({w: cb.w, h: cb.h});\r\n\t\t\t\t\t\t// TODO: save original size for restoring it on another show()?\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.containerNode.style.overflow = \"auto\";\r\n\t\t\t\t\t\tthis._layoutChildren();\t\t// send resize() event to all child widgets\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._layoutChildren();\t\t// send resize() event to all child widgets\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!has(\"touch\") && !dim){\r\n\t\t\t\t\t// If the user has scrolled the viewport then reposition the Dialog.  But don't do it for touch\r\n\t\t\t\t\t// devices, because it will counteract when a keyboard pops up and then the browser auto-scrolls\r\n\t\t\t\t\t// the focused node into view.\r\n\t\t\t\t\tthis._position();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_layoutChildren: function(){\r\n\t\t\t// Override _ContentPaneResizeMixin._layoutChildren because even when there's just a single layout child\r\n\t\t\t// widget, sometimes we don't want to size it explicitly (i.e. to pass a dim argument to resize())\r\n\r\n\t\t\tarray.forEach(this.getChildren(), function(widget){\r\n\t\t\t\tif(widget.resize){\r\n\t\t\t\t\twidget.resize();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this._fadeInDeferred){\r\n\t\t\t\tthis._fadeInDeferred.cancel();\r\n\t\t\t}\r\n\t\t\tif(this._fadeOutDeferred){\r\n\t\t\t\tthis._fadeOutDeferred.cancel();\r\n\t\t\t}\r\n\t\t\tif(this._moveable){\r\n\t\t\t\tthis._moveable.destroy();\r\n\t\t\t}\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this._modalconnects.pop()){\r\n\t\t\t\th.remove();\r\n\t\t\t}\r\n\r\n\t\t\tDialogLevelManager.hide(this);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\t_DialogBase = declare(\"dijit._DialogBase\", _DialogBase, {\r\n\t\t\t_setTitleAttr: function(/*String*/ title){\r\n\t\t\t\tthis._set(\"title\", title);\r\n\t\t\t\tthis.titleNode.innerHTML = title;\r\n\t\t\t\tthis.applyTextDir(this.titleNode);\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(textDir){\r\n\t\t\t\tif(this._created && this.textDir != textDir){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tthis.set(\"title\", this.title);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar Dialog = declare(\"dijit.Dialog\", [ContentPane, _DialogBase], {\r\n\t\t// summary:\r\n\t\t//\t\tA modal dialog Widget.\r\n\t\t// description:\r\n\t\t//\t\tPops up a modal dialog window, blocking access to the screen\r\n\t\t//\t\tand also graying out the screen Dialog is extended from\r\n\t\t//\t\tContentPane so it supports all the same parameters (href, etc.).\r\n\t\t// example:\r\n\t\t// |\t<div data-dojo-type=\"dijit/Dialog\" data-dojo-props=\"href: 'test.html'\"></div>\r\n\t\t// example:\r\n\t\t// |\tvar foo = new Dialog({ title: \"test dialog\", content: \"test content\" });\r\n\t\t// |\tfoo.placeAt(win.body());\r\n\t\t// |\tfoo.startup();\r\n\t});\r\n\tDialog._DialogBase = _DialogBase;\t// for monkey patching and dojox/widget/DialogSimple\r\n\r\n\tvar DialogLevelManager = Dialog._DialogLevelManager = {\r\n\t\t// summary:\r\n\t\t//\t\tControls the various active \"levels\" on the page, starting with the\r\n\t\t//\t\tstuff initially visible on the page (at z-index 0), and then having an entry for\r\n\t\t//\t\teach Dialog shown.\r\n\r\n\t\t_beginZIndex: 950,\r\n\r\n\t\tshow: function(/*dijit/_WidgetBase*/ dialog, /*Object*/ underlayAttrs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall right before fade-in animation for new dialog.\r\n\t\t\t//\t\tSaves current focus, displays/adjusts underlay for new dialog,\r\n\t\t\t//\t\tand sets the z-index of the dialog itself.\r\n\t\t\t//\r\n\t\t\t//\t\tNew dialog will be displayed on top of all currently displayed dialogs.\r\n\t\t\t//\r\n\t\t\t//\t\tCaller is responsible for setting focus in new dialog after the fade-in\r\n\t\t\t//\t\tanimation completes.\r\n\r\n\t\t\t// Save current focus\r\n\t\t\tds[ds.length - 1].focus = focus.curNode;\r\n\r\n\t\t\t// Set z-index a bit above previous dialog\r\n\t\t\tvar zIndex = ds[ds.length - 1].dialog ? ds[ds.length - 1].zIndex + 2 : Dialog._DialogLevelManager._beginZIndex;\r\n\t\t\tdomStyle.set(dialog.domNode, 'zIndex', zIndex);\r\n\r\n\t\t\t// Display the underlay, or if already displayed then adjust for this new dialog\r\n\t\t\tDialogUnderlay.show(underlayAttrs, zIndex - 1);\r\n\r\n\t\t\tds.push({dialog: dialog, underlayAttrs: underlayAttrs, zIndex: zIndex});\r\n\t\t},\r\n\r\n\t\thide: function(/*dijit/_WidgetBase*/ dialog){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the specified dialog is hidden/destroyed, after the fade-out\r\n\t\t\t//\t\tanimation ends, in order to reset page focus, fix the underlay, etc.\r\n\t\t\t//\t\tIf the specified dialog isn't open then does nothing.\r\n\t\t\t//\r\n\t\t\t//\t\tCaller is responsible for either setting display:none on the dialog domNode,\r\n\t\t\t//\t\tor calling dijit/popup.hide(), or removing it from the page DOM.\r\n\r\n\t\t\tif(ds[ds.length - 1].dialog == dialog){\r\n\t\t\t\t// Removing the top (or only) dialog in the stack, return focus\r\n\t\t\t\t// to previous dialog\r\n\r\n\t\t\t\tds.pop();\r\n\r\n\t\t\t\tvar pd = ds[ds.length - 1];\t// the new active dialog (or the base page itself)\r\n\r\n\t\t\t\t// Adjust underlay\r\n\t\t\t\tif(ds.length == 1){\r\n\t\t\t\t\t// Returning to original page.  Hide the underlay.\r\n\t\t\t\t\tDialogUnderlay.hide();\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Popping back to previous dialog, adjust underlay.\r\n\t\t\t\t\tDialogUnderlay.show(pd.underlayAttrs, pd.zIndex - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Adjust focus.\r\n\t\t\t\t// TODO: regardless of setting of dialog.refocus, if the exeucte() method set focus somewhere,\r\n\t\t\t\t// don't shift focus back to button.  Note that execute() runs at the start of the fade-out but\r\n\t\t\t\t// this code runs later, at the end of the fade-out.  Menu has code like this.\r\n\t\t\t\tif(dialog.refocus){\r\n\t\t\t\t\t// If we are returning control to a previous dialog but for some reason\r\n\t\t\t\t\t// that dialog didn't have a focused field, set focus to first focusable item.\r\n\t\t\t\t\t// This situation could happen if two dialogs appeared at nearly the same time,\r\n\t\t\t\t\t// since a dialog doesn't set it's focus until the fade-in is finished.\r\n\t\t\t\t\tvar focus = pd.focus;\r\n\t\t\t\t\tif(pd.dialog && (!focus || !dom.isDescendant(focus, pd.dialog.domNode))){\r\n\t\t\t\t\t\tpd.dialog._getFocusItems();\r\n\t\t\t\t\t\tfocus = pd.dialog._firstFocusItem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(focus){\r\n\t\t\t\t\t\t// Refocus the button that spawned the Dialog.   This will fail in corner cases including\r\n\t\t\t\t\t\t// page unload on IE, because the dijit/form/Button that launched the Dialog may get destroyed\r\n\t\t\t\t\t\t// before this code runs.  (#15058)\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tfocus.focus();\r\n\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// Removing a dialog out of order (#9944, #10705).\r\n\t\t\t\t// Don't need to mess with underlay or z-index or anything.\r\n\t\t\t\tvar idx = array.indexOf(array.map(ds, function(elem){\r\n\t\t\t\t\treturn elem.dialog;\r\n\t\t\t\t}), dialog);\r\n\t\t\t\tif(idx != -1){\r\n\t\t\t\t\tds.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tisTop: function(/*dijit/_WidgetBase*/ dialog){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if specified Dialog is the top in the task\r\n\t\t\treturn ds[ds.length - 1].dialog == dialog;\r\n\t\t}\r\n\t};\r\n\r\n\t// Stack representing the various active \"levels\" on the page, starting with the\r\n\t// stuff initially visible on the page (at z-index 0), and then having an entry for\r\n\t// each Dialog shown.\r\n\t// Each element in stack has form {\r\n\t//\t\tdialog: dialogWidget,\r\n\t//\t\tfocus: returnFromGetFocus(),\r\n\t//\t\tunderlayAttrs: attributes to set on underlay (when this widget is active)\r\n\t// }\r\n\tvar ds = Dialog._dialogStack = [\r\n\t\t{dialog: null, focus: null, underlayAttrs: null}    // entry for stuff at z-index: 0\r\n\t];\r\n\r\n\t// If focus was accidentally removed from the dialog, such as if the user clicked a blank\r\n\t// area of the screen, or clicked the browser's address bar and then tabbed into the page,\r\n\t// then refocus.   Won't do anything if focus was removed because the Dialog was closed, or\r\n\t// because a new Dialog popped up on top of the old one, or when focus moves to popups\r\n\tfocus.watch(\"curNode\", function(attr, oldNode, node){\r\n \t\t// Note: if no dialogs, ds.length==1 but ds[ds.length-1].dialog is null\r\n\t\tvar topDialog = ds[ds.length - 1].dialog;\r\n\r\n\t\t// If a node was focused, and there's a Dialog currently showing, and not in the process of fading out...\r\n\t\t// Ignore focus events on other document though because it's likely an Editor inside of the Dialog.\r\n\t\tif(node && topDialog && !topDialog._fadeOutDeferred && node.ownerDocument == topDialog.ownerDocument){\r\n\t\t\t// If the node that was focused is inside the dialog or in a popup, even a context menu that isn't\r\n\t\t\t// technically a descendant of the the dialog, don't do anything.\r\n\t\t\tdo{\r\n\t\t\t\tif(node == topDialog.domNode || domClass.contains(node, \"dijitPopup\")){ return; }\r\n\t\t\t}while(node = node.parentNode);\r\n\r\n\t\t\t// Otherwise, return focus to the dialog.  Use a delay to avoid confusing dijit/focus code's\r\n\t\t\t// own tracking of focus.\r\n\t\t\ttopDialog.focus();\r\n\t\t}\r\n\t});\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/TooltipDialog\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\treturn Dialog;\r\n});\r\n"]}