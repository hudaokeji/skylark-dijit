{"version":3,"sources":["_base/focus.js"],"names":["define","array","dom","lang","topic","win","focus","selection","dijit","exports","_curFocus","_prevFocus","isCollapsed","getBookmark","global","window","SelectionManager","moveToBookmark","bookmark","getFocus","menu","openedForWindow","node","curNode","isDescendant","domNode","withGlobal","_activeStack","registerIframe","iframe","unregisterIframe","handle","remove","registerWin","targetWindow","effectiveNode","unregisterWin","collapsed","focusNode","tagName","toLowerCase","contentWindow","e","_onFocusNode","e2","watch","name","oldVal","newVal","publish","on","widget","by","mixin"],"mappings":";;;;;;;AAAAA,QACC,mBACA,WACA,kBACA,aACA,oBACA,WACA,eACA,aACE,SAASC,EAAOC,EAAKC,EAAMC,EAAOC,EAAKC,EAAOC,EAAWC,GAK3D,IAAIC,SAOHC,UAAW,KAIXC,WAAY,KAEZC,YAAa,WAGZ,OAAOJ,EAAMK,cAAcD,aAG5BC,YAAa,WAIZ,OADUR,EAAIS,QAAUC,OAASR,EAAY,IAAIA,EAAUS,iBAAiBX,EAAIS,SACrED,eAGZI,eAAgB,SAAoBC,GAOnC,OADUb,EAAIS,QAAUC,OAASR,EAAY,IAAIA,EAAUS,iBAAiBX,EAAIS,SACrEG,eAAeC,IAG3BC,SAAU,SAAqBC,EAAkBC,GAqBhD,IAAIC,GAAQhB,EAAMiB,SAAYH,GAAQlB,EAAIsB,aAAalB,EAAMiB,QAASH,EAAKK,SAAYjB,EAAMG,WAAaL,EAAMiB,QAChH,OACCD,KAAMA,EACNJ,SAAUI,GAASA,GAAQhB,EAAMiB,SAAYlB,EAAIqB,WAAWL,GAAmBhB,EAAIS,OAAQN,EAAMK,aACjGQ,gBAAiBA,IAMnBM,gBAEAC,eAAgB,SAAqBC,GASpC,OAAOvB,EAAMsB,eAAeC,IAG7BC,iBAAkB,SAAoBC,GAOrCA,GAAUA,EAAOC,UAGlBC,YAAa,SAAoBC,EAA2BC,GAgB3D,OAAO7B,EAAM2B,YAAYC,EAAcC,IAGxCC,cAAe,SAAoBL,GAMlCA,GAAUA,EAAOC,WA2EnB,OApEA1B,EAAMA,MAAQ,SAA6ByB,GAO1C,GAAIA,EAAJ,CAEA,IAAIT,EAAO,SAAUS,EAASA,EAAOT,KAAOS,EAC3Cb,EAAWa,EAAOb,SAClBG,EAAkBU,EAAOV,gBACzBgB,IAAYnB,GAAWA,EAASN,YAKjC,GAAGU,EAAK,CACP,IAAIgB,EAA2C,UAA9BhB,EAAKiB,QAAQC,cAA6BlB,EAAKmB,cAAgBnB,EAChF,GAAGgB,GAAaA,EAAUhC,MACzB,IAGCgC,EAAUhC,QACV,MAAMoC,IAERpC,EAAMqC,aAAarB,GAOpB,GAAGJ,GAAYb,EAAIqB,WAAWL,GAAmBhB,EAAIS,OAAQN,EAAMI,eAAiByB,EAAU,CAC1FhB,GACFA,EAAgBf,QAEjB,IACCD,EAAIqB,WAAWL,GAAmBhB,EAAIS,OAAQN,EAAMS,eAAgB,MAAOC,IAC3E,MAAM0B,QAQTtC,EAAMuC,MAAM,UAAW,SAASC,EAAMC,EAAQC,GAC7CxC,EAAME,UAAYsC,EAClBxC,EAAMG,WAAaoC,EAChBC,GACF5C,EAAM6C,QAAQ,YAAaD,KAG7B1C,EAAMuC,MAAM,cAAe,SAASC,EAAMC,EAAQC,GACjDxC,EAAMmB,aAAeqB,IAGtB1C,EAAM4C,GAAG,cAAe,SAASC,EAAQC,GACxChD,EAAM6C,QAAQ,aAAcE,EAAQC,KAErC9C,EAAM4C,GAAG,eAAgB,SAASC,EAAQC,GACzChD,EAAM6C,QAAQ,cAAeE,EAAQC,KAGtCjD,EAAKkD,MAAM7C,EAAOC,SAGXD","file":"../../_base/focus.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/dom\", // dom.isDescendant\r\n\t\"dojo/_base/lang\", // lang.isArray\r\n\t\"dojo/topic\", // publish\r\n\t\"dojo/_base/window\", // win.doc win.doc.selection win.global win.global.getSelection win.withGlobal\r\n\t\"../focus\",\r\n\t\"../selection\",\r\n\t\"../_dijit\"\t// for exporting symbols to dijit\r\n], function(array, dom, lang, topic, win, focus, selection, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base/focus\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated module to monitor currently focused node and stack of currently focused widgets.\r\n\t\t//\t\tNew code should access dijit/focus directly.\r\n\r\n\t\t// _curFocus: DomNode\r\n\t\t//\t\tCurrently focused item on screen\r\n\t\t_curFocus: null,\r\n\r\n\t\t// _prevFocus: DomNode\r\n\t\t//\t\tPreviously focused item on screen\r\n\t\t_prevFocus: null,\r\n\r\n\t\tisCollapsed: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if there is no text selected\r\n\t\t\treturn dijit.getBookmark().isCollapsed;\r\n\t\t},\r\n\r\n\t\tgetBookmark: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRetrieves a bookmark that can be used with moveToBookmark to return to the same range\r\n\t\t\tvar sel = win.global == window ? selection : new selection.SelectionManager(win.global);\r\n\t\t\treturn sel.getBookmark();\r\n\t\t},\r\n\r\n\t\tmoveToBookmark: function(/*Object*/ bookmark){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves current selection to a bookmark\r\n\t\t\t// bookmark:\r\n\t\t\t//\t\tThis should be a returned object from dijit.getBookmark()\r\n\r\n\t\t\tvar sel = win.global == window ? selection : new selection.SelectionManager(win.global);\r\n\t\t\treturn sel.moveToBookmark(bookmark);\r\n\t\t},\r\n\r\n\t\tgetFocus: function(/*Widget?*/ menu, /*Window?*/ openedForWindow){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled as getFocus(), this returns an Object showing the current focus\r\n\t\t\t//\t\tand selected text.\r\n\t\t\t//\r\n\t\t\t//\t\tCalled as getFocus(widget), where widget is a (widget representing) a button\r\n\t\t\t//\t\tthat was just pressed, it returns where focus was before that button\r\n\t\t\t//\t\twas pressed.   (Pressing the button may have either shifted focus to the button,\r\n\t\t\t//\t\tor removed focus altogether.)   In this case the selected text is not returned,\r\n\t\t\t//\t\tsince it can't be accurately determined.\r\n\t\t\t//\r\n\t\t\t// menu: dijit/_WidgetBase|{domNode: DomNode} structure\r\n\t\t\t//\t\tThe button that was just pressed.  If focus has disappeared or moved\r\n\t\t\t//\t\tto this button, returns the previous focus.  In this case the bookmark\r\n\t\t\t//\t\tinformation is already lost, and null is returned.\r\n\t\t\t//\r\n\t\t\t// openedForWindow:\r\n\t\t\t//\t\tiframe in which menu was opened\r\n\t\t\t//\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle to restore focus/selection, to be passed to `dijit.focus`\r\n\t\t\tvar node = !focus.curNode || (menu && dom.isDescendant(focus.curNode, menu.domNode)) ? dijit._prevFocus : focus.curNode;\r\n\t\t\treturn {\r\n\t\t\t\tnode: node,\r\n\t\t\t\tbookmark: node && (node == focus.curNode) && win.withGlobal(openedForWindow || win.global, dijit.getBookmark),\r\n\t\t\t\topenedForWindow: openedForWindow\r\n\t\t\t}; // Object\r\n\t\t},\r\n\r\n\t\t// _activeStack: dijit/_WidgetBase[]\r\n\t\t//\t\tList of currently active widgets (focused widget and it's ancestors)\r\n\t\t_activeStack: [],\r\n\r\n\t\tregisterIframe: function(/*DomNode*/ iframe){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters listeners on the specified iframe so that any click\r\n\t\t\t//\t\tor focus event on that iframe (or anything in it) is reported\r\n\t\t\t//\t\tas a focus/click event on the `<iframe>` itself.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCurrently only used by editor.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tHandle to pass to unregisterIframe()\r\n\t\t\treturn focus.registerIframe(iframe);\r\n\t\t},\r\n\r\n\t\tunregisterIframe: function(/*Object*/ handle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUnregisters listeners on the specified iframe created by registerIframe.\r\n\t\t\t//\t\tAfter calling be sure to delete or null out the handle itself.\r\n\t\t\t// handle:\r\n\t\t\t//\t\tHandle returned by registerIframe()\r\n\r\n\t\t\thandle && handle.remove();\r\n\t\t},\r\n\r\n\t\tregisterWin: function(/*Window?*/targetWindow, /*DomNode?*/ effectiveNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters listeners on the specified window (either the main\r\n\t\t\t//\t\twindow or an iframe's window) to detect when the user has clicked somewhere\r\n\t\t\t//\t\tor focused somewhere.\r\n\t\t\t// description:\r\n\t\t\t//\t\tUsers should call registerIframe() instead of this method.\r\n\t\t\t// targetWindow:\r\n\t\t\t//\t\tIf specified this is the window associated with the iframe,\r\n\t\t\t//\t\ti.e. iframe.contentWindow.\r\n\t\t\t// effectiveNode:\r\n\t\t\t//\t\tIf specified, report any focus events inside targetWindow as\r\n\t\t\t//\t\tan event on effectiveNode, rather than on evt.target.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tHandle to pass to unregisterWin()\r\n\r\n\t\t\treturn focus.registerWin(targetWindow, effectiveNode);\r\n\t\t},\r\n\r\n\t\tunregisterWin: function(/*Handle*/ handle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUnregisters listeners on the specified window (either the main\r\n\t\t\t//\t\twindow or an iframe's window) according to handle returned from registerWin().\r\n\t\t\t//\t\tAfter calling be sure to delete or null out the handle itself.\r\n\r\n\t\t\thandle && handle.remove();\r\n\t\t}\r\n\t};\r\n\r\n\t// Override focus singleton's focus function so that dijit.focus()\r\n\t// has backwards compatible behavior of restoring selection (although\r\n\t// probably no one is using that).\r\n\tfocus.focus = function(/*Object|DomNode */ handle){\r\n\t\t// summary:\r\n\t\t//\t\tSets the focused node and the selection according to argument.\r\n\t\t//\t\tTo set focus to an iframe's content, pass in the iframe itself.\r\n\t\t// handle:\r\n\t\t//\t\tobject returned by get(), or a DomNode\r\n\r\n\t\tif(!handle){ return; }\r\n\r\n\t\tvar node = \"node\" in handle ? handle.node : handle,\t\t// because handle is either DomNode or a composite object\r\n\t\t\tbookmark = handle.bookmark,\r\n\t\t\topenedForWindow = handle.openedForWindow,\r\n\t\t\tcollapsed = bookmark ? bookmark.isCollapsed : false;\r\n\r\n\t\t// Set the focus\r\n\t\t// Note that for iframe's we need to use the <iframe> to follow the parentNode chain,\r\n\t\t// but we need to set focus to iframe.contentWindow\r\n\t\tif(node){\r\n\t\t\tvar focusNode = (node.tagName.toLowerCase() == \"iframe\") ? node.contentWindow : node;\r\n\t\t\tif(focusNode && focusNode.focus){\r\n\t\t\t\ttry{\r\n\t\t\t\t\t// Gecko throws sometimes if setting focus is impossible,\r\n\t\t\t\t\t// node not displayed or something like that\r\n\t\t\t\t\tfocusNode.focus();\r\n\t\t\t\t}catch(e){/*quiet*/}\r\n\t\t\t}\r\n\t\t\tfocus._onFocusNode(node);\r\n\t\t}\r\n\r\n\t\t// set the selection\r\n\t\t// do not need to restore if current selection is not empty\r\n\t\t// (use keyboard to select a menu item) or if previous selection was collapsed\r\n\t\t// as it may cause focus shift (Esp in IE).\r\n\t\tif(bookmark && win.withGlobal(openedForWindow || win.global, dijit.isCollapsed) && !collapsed){\r\n\t\t\tif(openedForWindow){\r\n\t\t\t\topenedForWindow.focus();\r\n\t\t\t}\r\n\t\t\ttry{\r\n\t\t\t\twin.withGlobal(openedForWindow || win.global, dijit.moveToBookmark, null, [bookmark]);\r\n\t\t\t}catch(e2){\r\n\t\t\t\t/*squelch IE internal error, see http://trac.dojotoolkit.org/ticket/1984 */\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// For back compatibility, monitor changes to focused node and active widget stack,\r\n\t// publishing events and copying changes from focus manager variables into dijit (top level) variables\r\n\tfocus.watch(\"curNode\", function(name, oldVal, newVal){\r\n\t\tdijit._curFocus = newVal;\r\n\t\tdijit._prevFocus = oldVal;\r\n\t\tif(newVal){\r\n\t\t\ttopic.publish(\"focusNode\", newVal);\t// publish\r\n\t\t}\r\n\t});\r\n\tfocus.watch(\"activeStack\", function(name, oldVal, newVal){\r\n\t\tdijit._activeStack = newVal;\r\n\t});\r\n\r\n\tfocus.on(\"widget-blur\", function(widget, by){\r\n\t\ttopic.publish(\"widgetBlur\", widget, by);\t// publish\r\n\t});\r\n\tfocus.on(\"widget-focus\", function(widget, by){\r\n\t\ttopic.publish(\"widgetFocus\", widget, by);\t// publish\r\n\t});\r\n\r\n\tlang.mixin(dijit, exports);\r\n\r\n\t/*===== return exports; =====*/\r\n\treturn dijit;\t// for back compat :-(\r\n});\r\n"]}