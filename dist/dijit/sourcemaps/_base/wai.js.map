{"version":3,"sources":["_base/wai.js"],"names":["define","domAttr","lang","dijit","exports","hasWaiRole","elem","role","waiRole","this","getWaiRole","indexOf","length","trim","get","replace","setWaiRole","set","removeWaiRole","roleValue","t","removeAttribute","hasWaiState","state","hasAttribute","getAttribute","getWaiState","setWaiState","value","setAttribute","removeWaiState","mixin"],"mappings":";;;;;;;AAAAA,QACC,gBACA,kBACA,UACA,YACE,SAASC,EAASC,EAAMC,GAK1B,IAAIC,GAOHC,WAAY,SAAqBC,EAAkBC,GAOlD,IAAIC,EAAUC,KAAKC,WAAWJ,GAC9B,OAAOC,EAAQC,EAAQG,QAAQJ,IAAS,EAAMC,EAAQI,OAAS,GAGhEF,WAAY,SAAqBJ,GAM/B,OAAOJ,EAAKW,MAAMZ,EAAQa,IAAIR,EAAM,SAAW,IAAIS,QAAQ,WAAW,MAGxEC,WAAY,SAAqBV,EAAiBC,GAMjDN,EAAQgB,IAAIX,EAAM,OAAQC,IAG3BW,cAAe,SAAqBZ,EAAiBC,GAKpD,IAAIY,EAAYlB,EAAQa,IAAIR,EAAM,QAClC,GAAIa,EACJ,GAAGZ,EAAK,CACP,IAAIa,EAAIlB,EAAKW,MAAM,IAAMM,EAAY,KAAKJ,QAAQ,IAAMR,EAAO,IAAK,MACpEN,EAAQgB,IAAIX,EAAM,OAAQc,QAE1Bd,EAAKe,gBAAgB,SAIvBC,YAAa,SAAqBhB,EAAiBiB,GASlD,OAAOjB,EAAKkB,aAAelB,EAAKkB,aAAa,QAAQD,KAAWjB,EAAKmB,aAAa,QAAQF,IAG3FG,YAAa,SAAqBpB,EAAiBiB,GASlD,OAAOjB,EAAKmB,aAAa,QAAQF,IAAU,IAG5CI,YAAa,SAAqBrB,EAAiBiB,EAAkBK,GAMpEtB,EAAKuB,aAAa,QAAQN,EAAOK,IAGlCE,eAAgB,SAAqBxB,EAAiBiB,GAMrDjB,EAAKe,gBAAgB,QAAQE,KAO/B,OAHArB,EAAK6B,MAAM5B,EAAOC,GAGXD","file":"../../_base/wai.js","sourcesContent":["define([\r\n\t\"dojo/dom-attr\", // domAttr.attr\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"../main\",\t// export symbols to dijit\r\n\t\"../hccss\"\t\t\t// not using this module directly, but loading it sets CSS flag on <html>\r\n], function(domAttr, lang, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base/wai\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated methods for setting/getting wai roles and states.\r\n\t\t//\t\tNew code should call setAttribute()/getAttribute() directly.\r\n\t\t//\r\n\t\t//\t\tAlso loads hccss to apply dj_a11y class to root node if machine is in high-contrast mode.\r\n\r\n\t\thasWaiRole: function(/*Element*/ elem, /*String?*/ role){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetermines if an element has a particular role.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tTrue if elem has the specific role attribute and false if not.\r\n\t\t\t//\t\tFor backwards compatibility if role parameter not provided,\r\n\t\t\t//\t\treturns true if has a role\r\n\t\t\tvar waiRole = this.getWaiRole(elem);\r\n\t\t\treturn role ? (waiRole.indexOf(role) > -1) : (waiRole.length > 0);\r\n\t\t},\r\n\r\n\t\tgetWaiRole: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the role for an element (which should be a wai role).\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe role of elem or an empty string if elem\r\n\t\t\t//\t\tdoes not have a role.\r\n\t\t\t return lang.trim((domAttr.get(elem, \"role\") || \"\").replace(\"wairole:\",\"\"));\r\n\t\t},\r\n\r\n\t\tsetWaiRole: function(/*Element*/ elem, /*String*/ role){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the role on an element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tReplace existing role attribute with new role.\r\n\r\n\t\t\tdomAttr.set(elem, \"role\", role);\r\n\t\t},\r\n\r\n\t\tremoveWaiRole: function(/*Element*/ elem, /*String*/ role){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves the specified role from an element.\r\n\t\t\t//\t\tRemoves role attribute if no specific role provided (for backwards compat.)\r\n\r\n\t\t\tvar roleValue = domAttr.get(elem, \"role\");\r\n\t\t\tif(!roleValue){ return; }\r\n\t\t\tif(role){\r\n\t\t\t\tvar t = lang.trim((\" \" + roleValue + \" \").replace(\" \" + role + \" \", \" \"));\r\n\t\t\t\tdomAttr.set(elem, \"role\", t);\r\n\t\t\t}else{\r\n\t\t\t\telem.removeAttribute(\"role\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thasWaiState: function(/*Element*/ elem, /*String*/ state){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetermines if an element has a given state.\r\n\t\t\t// description:\r\n\t\t\t//\t\tChecks for an attribute called \"aria-\"+state.\r\n\t\t\t// returns:\r\n\t\t\t//\t\ttrue if elem has a value for the given state and\r\n\t\t\t//\t\tfalse if it does not.\r\n\r\n\t\t\treturn elem.hasAttribute ? elem.hasAttribute(\"aria-\"+state) : !!elem.getAttribute(\"aria-\"+state);\r\n\t\t},\r\n\r\n\t\tgetWaiState: function(/*Element*/ elem, /*String*/ state){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the value of a state on an element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tChecks for an attribute called \"aria-\"+state.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe value of the requested state on elem\r\n\t\t\t//\t\tor an empty string if elem has no value for state.\r\n\r\n\t\t\treturn elem.getAttribute(\"aria-\"+state) || \"\";\r\n\t\t},\r\n\r\n\t\tsetWaiState: function(/*Element*/ elem, /*String*/ state, /*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets a state on an element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets an attribute called \"aria-\"+state.\r\n\r\n\t\t\telem.setAttribute(\"aria-\"+state, value);\r\n\t\t},\r\n\r\n\t\tremoveWaiState: function(/*Element*/ elem, /*String*/ state){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves a state from an element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets an attribute called \"aria-\"+state.\r\n\r\n\t\t\telem.removeAttribute(\"aria-\"+state);\r\n\t\t}\r\n\t};\r\n\r\n\tlang.mixin(dijit, exports);\r\n\r\n\t/*===== return exports; =====*/\r\n\treturn dijit;\t// for back compat :-(\r\n});\r\n"]}