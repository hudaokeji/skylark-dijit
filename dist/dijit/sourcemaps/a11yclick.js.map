{"version":3,"sources":["a11yclick.js"],"names":["define","keys","mouse","on","touch","clickKey","e","keyCode","ENTER","SPACE","test","target","nodeName","node","parentNode","dojoClick","lastKeyDownNode","document","preventDefault","emit","cancelable","bubbles","ctrlKey","shiftKey","metaKey","altKey","_origType","type","click","listener","press","touchListener","evt","isLeft","keyListener","remove","release","move"],"mappings":";;;;;;;AAAAA,QACC,YACA,aACA,UACA,cACE,SAASC,EAAMC,EAAOC,EAAIC,GA8B5B,SAASC,EAAmBC,GAK3B,IAAIA,EAAEC,UAAYN,EAAKO,OAASF,EAAEC,UAAYN,EAAKQ,SAAW,yBAAyBC,KAAKJ,EAAEK,OAAOC,UAGpG,IAAI,IAAIC,EAAOP,EAAEK,OAAQE,EAAMA,EAAOA,EAAKC,WAC1C,GAAGD,EAAKE,UAAY,OAAO,EAK9B,IAAIC,EAEJb,EAAGc,SAAU,UAAW,SAASX,GAE7BD,EAASC,IAEXU,EAAkBV,EAAEK,OAIpBL,EAAEY,kBAEFF,EAAkB,OAIpBb,EAAGc,SAAU,QAAS,SAASX,GAE3BD,EAASC,IAAMA,EAAEK,QAAUK,IAE7BA,EAAkB,KAElBb,EAAGgB,KAAKb,EAAEK,OAAQ,SACjBS,YAAY,EACZC,SAAS,EACTC,QAAShB,EAAEgB,QACXC,SAAUjB,EAAEiB,SACZC,QAASlB,EAAEkB,QACXC,OAAQnB,EAAEmB,OACVC,UAAWpB,EAAEqB,UAQhB,IAAIC,EAAQ,SAASf,EAAMgB,GAK1B,OAFAhB,EAAKE,WAAY,EAEVZ,EAAGU,EAAM,QAASgB,IA8C1B,OA5CAD,EAAMA,MAAQA,EAEdA,EAAME,MAAS,SAASjB,EAAMgB,GAC7B,IAAIE,EAAgB5B,EAAGU,EAAMT,EAAM0B,MAAO,SAASE,IACnC,aAAZA,EAAIL,MAAwBzB,EAAM+B,OAAOD,KAI5CH,EAASG,KACNE,EAAc/B,EAAGU,EAAM,UAAW,SAASmB,GAC3CA,EAAIzB,UAAYN,EAAKO,OAASwB,EAAIzB,UAAYN,EAAKQ,OACrDoB,EAASG,KAGX,OACCG,OAAQ,WACPJ,EAAcI,SACdD,EAAYC,YAKfP,EAAMQ,QAAW,SAASvB,EAAMgB,GAC/B,IAAIE,EAAgB5B,EAAGU,EAAMT,EAAMgC,QAAS,SAASJ,IACrC,WAAZA,EAAIL,MAAsBzB,EAAM+B,OAAOD,KAI1CH,EAASG,KACNE,EAAc/B,EAAGU,EAAM,QAAS,SAASmB,GACzCA,EAAIzB,UAAYN,EAAKO,OAASwB,EAAIzB,UAAYN,EAAKQ,OACrDoB,EAASG,KAGX,OACCG,OAAQ,WACPJ,EAAcI,SACdD,EAAYC,YAKfP,EAAMS,KAAOjC,EAAMiC,KAEZT","file":"../a11yclick.js","sourcesContent":["define([\r\n\t\"dojo/keys\", // keys.ENTER keys.SPACE\r\n\t\"dojo/mouse\",\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\" // touch support for click is now there\r\n], function(keys, mouse, on, touch){\r\n\r\n\t// module:\r\n\t//\t\tdijit/a11yclick\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tCustom press, release, and click synthetic events\r\n\t\t//\t\twhich trigger on a left mouse click, touch, or space/enter keyup.\r\n\r\n\t\tclick: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLogical click operation for mouse, touch, or keyboard (space/enter key)\r\n\t\t},\r\n\t\tpress: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMousedown (left button), touchstart, or keydown (space or enter) corresponding to logical click operation.\r\n\t\t},\r\n\t\trelease: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouseup (left button), touchend, or keyup (space or enter) corresponding to logical click operation.\r\n\t\t},\r\n\t\tmove: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse cursor or a finger is dragged over the given node.\r\n\t\t}\r\n\t};\r\n\t=====*/\r\n\r\n\tfunction clickKey(/*Event*/ e){\r\n\t\t// Test if this keyboard event should be tracked as the start (if keydown) or end (if keyup) of a click event.\r\n\t\t// Only track for nodes marked to be tracked, and not for buttons or inputs,\r\n\t\t// since buttons handle keyboard click natively, and text inputs should not\r\n\t\t// prevent typing spaces or newlines.\r\n\t\tif((e.keyCode === keys.ENTER || e.keyCode === keys.SPACE) && !/input|button|textarea/i.test(e.target.nodeName)){\r\n\r\n\t\t\t// Test if a node or its ancestor has been marked with the dojoClick property to indicate special processing\r\n\t\t\tfor(var node = e.target; node; node = node.parentNode){\r\n\t\t\t\tif(node.dojoClick){ return true; }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar lastKeyDownNode;\r\n\r\n\ton(document, \"keydown\", function(e){\r\n\t\t//console.log(\"a11yclick: onkeydown, e.target = \", e.target, \", lastKeyDownNode was \", lastKeyDownNode, \", equality is \", (e.target === lastKeyDownNode));\r\n\t\tif(clickKey(e)){\r\n\t\t\t// needed on IE for when focus changes between keydown and keyup - otherwise dropdown menus do not work\r\n\t\t\tlastKeyDownNode = e.target;\r\n\r\n\t\t\t// Prevent viewport scrolling on space key in IE<9.\r\n\t\t\t// (Reproducible on test_Button.html on any of the first dijit/form/Button examples)\r\n\t\t\te.preventDefault();\r\n\t\t}else{\r\n\t\t\tlastKeyDownNode = null;\r\n\t\t}\r\n\t});\r\n\r\n\ton(document, \"keyup\", function(e){\r\n\t\t//console.log(\"a11yclick: onkeyup, e.target = \", e.target, \", lastKeyDownNode was \", lastKeyDownNode, \", equality is \", (e.target === lastKeyDownNode));\r\n\t\tif(clickKey(e) && e.target == lastKeyDownNode){\t// === breaks greasemonkey\r\n\t\t\t//need reset here or have problems in FF when focus returns to trigger element after closing popup/alert\r\n\t\t\tlastKeyDownNode = null;\r\n\r\n\t\t\ton.emit(e.target, \"click\", {\r\n\t\t\t\tcancelable: true,\r\n\t\t\t\tbubbles: true,\r\n\t\t\t\tctrlKey: e.ctrlKey,\r\n\t\t\t\tshiftKey: e.shiftKey,\r\n\t\t\t\tmetaKey: e.metaKey,\r\n\t\t\t\taltKey: e.altKey,\r\n\t\t\t\t_origType: e.type\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\t// I want to return a hash of the synthetic events, but for backwards compatibility the main return value\r\n\t// needs to be the click event.   Change for 2.0.\r\n\r\n\tvar click = function(node, listener){\r\n\t\t// Set flag on node so that keydown/keyup above emits click event.\r\n\t\t// Also enables fast click processing from dojo/touch.\r\n\t\tnode.dojoClick = true;\r\n\r\n\t\treturn on(node, \"click\", listener);\r\n\t};\r\n\tclick.click = click;\t// forward compatibility with 2.0\r\n\r\n\tclick.press =  function(node, listener){\r\n\t\tvar touchListener = on(node, touch.press, function(evt){\r\n\t\t\tif(evt.type == \"mousedown\" && !mouse.isLeft(evt)){\r\n\t\t\t\t// Ignore right click\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlistener(evt);\r\n\t\t}), keyListener = on(node, \"keydown\", function(evt){\r\n\t\t\tif(evt.keyCode === keys.ENTER || evt.keyCode === keys.SPACE){\r\n\t\t\t\tlistener(evt);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tremove: function(){\r\n\t\t\t\ttouchListener.remove();\r\n\t\t\t\tkeyListener.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tclick.release =  function(node, listener){\r\n\t\tvar touchListener = on(node, touch.release, function(evt){\r\n\t\t\tif(evt.type == \"mouseup\" && !mouse.isLeft(evt)){\r\n\t\t\t\t// Ignore right click\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlistener(evt);\r\n\t\t}), keyListener = on(node, \"keyup\", function(evt){\r\n\t\t\tif(evt.keyCode === keys.ENTER || evt.keyCode === keys.SPACE){\r\n\t\t\t\tlistener(evt);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tremove: function(){\r\n\t\t\t\ttouchListener.remove();\r\n\t\t\t\tkeyListener.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tclick.move = touch.move;\t// just for convenience\r\n\r\n\treturn click;\r\n});\r\n"]}