{"version":3,"sources":["_Templated.js"],"names":["define","_WidgetBase","_TemplatedMixin","_WidgetsInTemplateMixin","array","declare","lang","kernel","extend","waiRole","waiState","widgetsInTemplate","constructor","deprecated","this","declaredClass","_processNode","baseNode","getAttrFunc","ret","inherited","arguments","role","setAttribute","values","forEach","split","stateValue","indexOf","pair"],"mappings":";;;;;;;AAAAA,QACC,gBACA,oBACA,4BACA,mBACA,qBACA,kBACA,qBACE,SAASC,EAAaC,EAAiBC,EAAyBC,EAAOC,EAASC,EAAMC,GAcxF,OALAD,EAAKE,OAAOP,GACXQ,QAAS,GACTC,SAAS,KAGHL,EAAQ,oBAAqBH,EAAiBC,IAQpDQ,mBAAmB,EAEnBC,YAAa,WACZL,EAAOM,WAAWC,KAAKC,cAAgB,0GAA2G,GAAI,QAGvJC,aAAc,SAASC,EAAUC,GAChC,IAAIC,EAAML,KAAKM,UAAUC,WAGrBC,EAAOJ,EAAYD,EAAU,WAC9BK,GACFL,EAASM,aAAa,OAAQD,GAE/B,IAAIE,EAASN,EAAYD,EAAU,YAUnC,OATGO,GACFpB,EAAMqB,QAAQD,EAAOE,MAAM,WAAY,SAASC,GAC/C,IAA+B,GAA5BA,EAAWC,QAAQ,KAAW,CAChC,IAAIC,EAAOF,EAAWD,MAAM,KAC5BT,EAASM,aAAa,QAAQM,EAAK,GAAIA,EAAK,OAKxCV","file":"../_Templated.js","sourcesContent":["define([\r\n\t\"./_WidgetBase\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_WidgetsInTemplateMixin\",\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.extend lang.isArray\r\n\t\"dojo/_base/kernel\" // kernel.deprecated\r\n], function(_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin, array, declare, lang, kernel){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_Templated\r\n\r\n\t// These arguments can be specified for widgets which are used in templates.\r\n\t// Since any widget can be specified as sub widgets in template, mix it\r\n\t// into the base widget class.  (This is a hack, but it's effective.)\r\n\t// Remove for 2.0.   Also, hide from API doc parser.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ {\r\n\t\twaiRole: \"\",\r\n\t\twaiState:\"\"\r\n\t});\r\n\r\n\treturn declare(\"dijit._Templated\", [_TemplatedMixin, _WidgetsInTemplateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated mixin for widgets that are instantiated from a template.\r\n\t\t//\t\tWidgets should use _TemplatedMixin plus if necessary _WidgetsInTemplateMixin instead.\r\n\r\n\t\t// widgetsInTemplate: [protected] Boolean\r\n\t\t//\t\tShould we parse the template to find widgets that might be\r\n\t\t//\t\tdeclared in markup inside it?  False by default.\r\n\t\twidgetsInTemplate: false,\r\n\r\n\t\tconstructor: function(){\r\n\t\t\tkernel.deprecated(this.declaredClass + \": dijit._Templated deprecated, use dijit._TemplatedMixin and if necessary dijit._WidgetsInTemplateMixin\", \"\", \"2.0\");\r\n\t\t},\r\n\r\n\t\t_processNode: function(baseNode, getAttrFunc){\r\n\t\t\tvar ret = this.inherited(arguments);\r\n\r\n\t\t\t// Do deprecated waiRole and waiState\r\n\t\t\tvar role = getAttrFunc(baseNode, \"waiRole\");\r\n\t\t\tif(role){\r\n\t\t\t\tbaseNode.setAttribute(\"role\", role);\r\n\t\t\t}\r\n\t\t\tvar values = getAttrFunc(baseNode, \"waiState\");\r\n\t\t\tif(values){\r\n\t\t\t\tarray.forEach(values.split(/\\s*,\\s*/), function(stateValue){\r\n\t\t\t\t\tif(stateValue.indexOf('-') != -1){\r\n\t\t\t\t\t\tvar pair = stateValue.split('-');\r\n\t\t\t\t\t\tbaseNode.setAttribute(\"aria-\"+pair[0], pair[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t});\r\n});\r\n"]}