{"version":3,"sources":["_KeyNavContainer.js"],"names":["define","array","declare","domAttr","kernel","keys","lang","registry","_Container","_FocusMixin","_KeyNavMixin","connectKeyNavHandlers","prevKeyCodes","nextKeyCodes","keyCodes","this","_keyNavCodes","prev","hitch","next","forEach","code","HOME","END","startupKeyNavChildren","deprecated","startup","inherited","arguments","getChildren","addChild","widget","insertIndex","_startupChild","set","_getFirst","children","length","_getLast","focusNext","focusChild","_getNextFocusableChild","focusedChild","focusPrev","childSelector","node","byNode","getParent"],"mappings":";;;;;;;AAAAA,QACC,mBACA,qBACA,gBACA,oBACA,YACA,kBACA,aACA,eACA,gBACA,kBACE,SAASC,EAAOC,EAASC,EAASC,EAAQC,EAAMC,EAAMC,EAAUC,EAAYC,EAAaC,GAM3F,OAAOR,EAAQ,0BAA2BO,EAAaC,EAAcF,IAQpEG,sBAAuB,SAAoBC,EAAyBC,GAcnE,IAAIC,EAAYC,KAAKC,gBACjBC,EAAOX,EAAKY,MAAMH,KAAM,aACxBI,EAAOb,EAAKY,MAAMH,KAAM,aAC5Bd,EAAMmB,QAAQR,EAAc,SAASS,GACpCP,EAASO,GAAQJ,IAElBhB,EAAMmB,QAAQP,EAAc,SAASQ,GACpCP,EAASO,GAAQF,IAElBL,EAAST,EAAKiB,MAAQhB,EAAKY,MAAMH,KAAM,mBACvCD,EAAST,EAAKkB,KAAOjB,EAAKY,MAAMH,KAAM,mBAGvCS,sBAAuB,WACtBpB,EAAOqB,WAAW,gDAAiD,GAAI,QAGxEC,QAAS,WACRX,KAAKY,UAAUC,WACf3B,EAAMmB,QAAQL,KAAKc,cAAevB,EAAKY,MAAMH,KAAM,mBAGpDe,SAAU,SAA+BC,EAAiBC,GACzDjB,KAAKY,UAAUC,WACfb,KAAKkB,cAAcF,IAGpBE,cAAe,SAA+BF,GAc7CA,EAAOG,IAAI,WAAY,OAGxBC,UAAW,WAKV,IAAIC,EAAWrB,KAAKc,cACpB,OAAOO,EAASC,OAASD,EAAS,GAAK,MAGxCE,SAAU,WAKT,IAAIF,EAAWrB,KAAKc,cACpB,OAAOO,EAASC,OAASD,EAASA,EAASC,OAAS,GAAK,MAG1DE,UAAW,WAKVxB,KAAKyB,WAAWzB,KAAK0B,uBAAuB1B,KAAK2B,aAAc,KAGhEC,UAAW,WAMV5B,KAAKyB,WAAWzB,KAAK0B,uBAAuB1B,KAAK2B,cAAe,IAAI,IAGrEE,cAAe,SAAqBC,GAMnC,OADIA,EAAOtC,EAASuC,OAAOD,KACZA,EAAKE,aAAehC","file":"../_KeyNavContainer.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/keys\", // keys.END keys.HOME\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"./registry\",\r\n\t\"./_Container\",\r\n\t\"./_FocusMixin\",\r\n\t\"./_KeyNavMixin\"\r\n], function(array, declare, domAttr, kernel, keys, lang, registry, _Container, _FocusMixin, _KeyNavMixin){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/_KeyNavContainer\r\n\r\n\treturn declare(\"dijit._KeyNavContainer\", [_FocusMixin, _KeyNavMixin, _Container], {\r\n\t\t// summary:\r\n\t\t//\t\tA _Container with keyboard navigation of its children.\r\n\t\t// description:\r\n\t\t//\t\tProvides normalized keyboard and focusing code for Container widgets.\r\n\t\t//\t\tTo use this mixin, call connectKeyNavHandlers() in postCreate().\r\n\t\t//\t\tAlso, child widgets must implement a focus() method.\r\n\r\n\t\tconnectKeyNavHandlers: function(/*keys[]*/ prevKeyCodes, /*keys[]*/ nextKeyCodes){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  You can call this in postCreate() to attach the keyboard handlers to the container,\r\n\t\t\t//\t\tbut the preferred method is to override _onLeftArrow() and _onRightArrow(), or\r\n\t\t\t//\t\t_onUpArrow() and _onDownArrow(), to call focusPrev() and focusNext().\r\n\t\t\t// prevKeyCodes: keys[]\r\n\t\t\t//\t\tKey codes for navigating to the previous child.\r\n\t\t\t// nextKeyCodes: keys[]\r\n\t\t\t//\t\tKey codes for navigating to the next child.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// TODO: remove for 2.0, and make subclasses override _onLeftArrow, _onRightArrow etc. instead.\r\n\r\n\t\t\tvar keyCodes = (this._keyNavCodes = {});\r\n\t\t\tvar prev = lang.hitch(this, \"focusPrev\");\r\n\t\t\tvar next = lang.hitch(this, \"focusNext\");\r\n\t\t\tarray.forEach(prevKeyCodes, function(code){\r\n\t\t\t\tkeyCodes[code] = prev;\r\n\t\t\t});\r\n\t\t\tarray.forEach(nextKeyCodes, function(code){\r\n\t\t\t\tkeyCodes[code] = next;\r\n\t\t\t});\r\n\t\t\tkeyCodes[keys.HOME] = lang.hitch(this, \"focusFirstChild\");\r\n\t\t\tkeyCodes[keys.END] = lang.hitch(this, \"focusLastChild\");\r\n\t\t},\r\n\r\n\t\tstartupKeyNavChildren: function(){\r\n\t\t\tkernel.deprecated(\"startupKeyNavChildren() call no longer needed\", \"\", \"2.0\");\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tarray.forEach(this.getChildren(), lang.hitch(this, \"_startupChild\"));\r\n\t\t},\r\n\r\n\t\taddChild: function(/*dijit/_WidgetBase*/ widget, /*int?*/ insertIndex){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._startupChild(widget);\r\n\t\t},\r\n\r\n\t\t_startupChild: function(/*dijit/_WidgetBase*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSetup for each child widget.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets tabIndex=-1 on each child, so that the tab key will\r\n\t\t\t//\t\tleave the container rather than visiting each child.\r\n\t\t\t//\r\n\t\t\t//\t\tNote: if you add children by a different method than addChild(), then need to call this manually\r\n\t\t\t//\t\tor at least make sure the child's tabIndex is -1.\r\n\t\t\t//\r\n\t\t\t//\t\tNote: see also _LayoutWidget.setupChild(), which is also called for each child widget.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\twidget.set(\"tabIndex\", \"-1\");\r\n\t\t},\r\n\r\n\t\t_getFirst: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the first child.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\treturn children.length ? children[0] : null;\r\n\t\t},\r\n\r\n\t\t_getLast: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the last descendant.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\treturn children.length ? children[children.length - 1] : null;\r\n\t\t},\r\n\r\n\t\tfocusNext: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the next widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.focusChild(this._getNextFocusableChild(this.focusedChild, 1));\r\n\t\t},\r\n\r\n\t\tfocusPrev: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the last focusable node in the previous widget\r\n\t\t\t//\t\t(ex: go to the ComboButton icon section rather than button section)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.focusChild(this._getNextFocusableChild(this.focusedChild, -1), true);\r\n\t\t},\r\n\r\n\t\tchildSelector: function(/*DOMNode*/ node){\r\n\t\t\t// Implement _KeyNavMixin.childSelector, to identify focusable child nodes.\r\n\t\t\t// If we allowed a dojo/query dependency from this module this could more simply be a string \"> *\"\r\n\t\t\t// instead of this function.\r\n\r\n\t\t\tvar node = registry.byNode(node);\r\n\t\t\treturn node && node.getParent() == this;\r\n\t\t}\r\n\t});\r\n});\r\n"]}