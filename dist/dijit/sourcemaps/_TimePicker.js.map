{"version":3,"sources":["_TimePicker.js"],"names":["define","array","ddate","locale","stamp","declare","domClass","domConstruct","kernel","keys","lang","has","query","mouse","on","_WidgetBase","_ListMouseMixin","baseClass","pickerMin","pickerMax","clickableIncrement","visibleIncrement","value","Date","_visibleIncrement","_clickableIncrement","_totalIncrements","constraints","serialize","toISOString","buildRendering","this","inherited","arguments","containerNode","domNode","timeMenu","setValue","deprecated","set","_setValueAttr","date","_set","_showText","_setFilterStringAttr","val","isDisabledDate","_getFilteredNodes","start","maxNum","before","lastNode","nodes","i","_maxIncrement","n","_createOption","push","fromIso","fromISOString","innerHTML","_clickableIncrementDate","_visibleIncrementDate","sinceMidnight","getHours","getMinutes","getSeconds","clickableIncrementSeconds","visibleIncrementSeconds","currentFocus","getTime","_refDate","setFullYear","endDate","visibleRange","Math","ceil","forEach","appendChild","length","filterString","constructor","postMixInProperties","_setConstraintsAttr","key","index","incrementDate","setHours","selector","dateString","format","toLowerCase","indexOf","div","ownerDocument","createElement","className","idx","create","class","add","compare","selected","_selectedDiv","contains","_highlightOption","onOpen","_onOptionSelected","tgt","tdate","target","parentNode","_highlighted_option","onChange","node","highlight","toggle","handleKey","e","keyCode","DOWN_ARROW","selectNextNode","stopPropagation","preventDefault","UP_ARROW","selectPreviousNode","ENTER","TAB","_keyboardSelected","onHover","onUnhover","onSelect","onDeselect","onClick"],"mappings":"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","file":"../_TimePicker.js","sourcesContent":["define([\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/date\", // date.compare\r\n\t\"dojo/date/locale\", // locale.format\r\n\t\"dojo/date/stamp\", // stamp.fromISOString stamp.toISOString\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains domClass.toggle\r\n\t\"dojo/dom-construct\", // domConstruct.create\r\n\t\"dojo/_base/kernel\", // deprecated\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"dojo/sniff\", // has(...)\r\n\t\"dojo/query\", // query\r\n\t\"dojo/mouse\", // mouse.wheel\r\n\t\"dojo/on\",\r\n\t\"./_WidgetBase\",\r\n\t\"./form/_ListMouseMixin\"\r\n], function(array, ddate, locale, stamp, declare, domClass, domConstruct, kernel, keys, lang, has, query, mouse, on,\r\n\t\t\t_WidgetBase, _ListMouseMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_TimePicker\r\n\r\n\r\n\tvar TimePicker = declare(\"dijit._TimePicker\", [_WidgetBase, _ListMouseMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA time picker dropdown, used by dijit/form/TimeTextBox.\r\n\t\t//\t\tThis widget is not available as a standalone widget due to lack of accessibility support.\r\n\r\n\t\t// baseClass: [protected] String\r\n\t\t//\t\tThe root className to use for the various states of this widget\r\n\t\tbaseClass: \"dijitTimePicker\",\r\n\r\n\t\t// pickerMin: String\r\n\t\t//\t\tISO-8601 string representing the time of the first\r\n\t\t//\t\tvisible element in the time picker.\r\n\t\t//\t\tSet in local time, without a time zone.\r\n\t\tpickerMin: \"T00:00:00\",\r\n\r\n\t\t// pickerMax: String\r\n\t\t//\t\tISO-8601 string representing the last (possible) time\r\n\t\t//\t\tadded to the time picker.\r\n\t\t//\t\tSet in local time, without a time zone.\r\n\t\tpickerMax: \"T23:59:59\",\r\n\r\n\t\t// clickableIncrement: String\r\n\t\t//\t\tISO-8601 string representing the interval between choices in the time picker.\r\n\t\t//\t\tSet in local time, without a time zone.\r\n\t\t//\t\tExample: `T00:15:00` creates 15 minute increments\r\n\t\t//\t\tMust divide dijit/_TimePicker.visibleIncrement evenly\r\n\t\tclickableIncrement: \"T00:15:00\",\r\n\r\n\t\t// visibleIncrement: String\r\n\t\t//\t\tISO-8601 string representing the interval between \"major\" choices in the time picker.\r\n\t\t//\t\tEach theme will highlight the major choices with a larger font / different color / etc.\r\n\t\t//\t\tSet in local time, without a time zone.\r\n\t\t//\t\tExample: `T01:00:00` creates text in every 1 hour increment\r\n\t\tvisibleIncrement: \"T01:00:00\",\r\n\r\n\t\t// value: String\r\n\t\t//\t\tTime to display.\r\n\t\t//\t\tDefaults to current time.\r\n\t\t//\t\tCan be a Date object or an ISO-8601 string.\r\n\t\t//\t\tIf you specify the GMT time zone (`-01:00`),\r\n\t\t//\t\tthe time will be converted to the local time in the local time zone.\r\n\t\t//\t\tOtherwise, the time is considered to be in the local time zone.\r\n\t\t//\t\tIf you specify the date and isDate is true, the date is used.\r\n\t\t//\t\tExample: if your local time zone is `GMT -05:00`,\r\n\t\t//\t\t`T10:00:00` becomes `T10:00:00-05:00` (considered to be local time),\r\n\t\t//\t\t`T10:00:00-01:00` becomes `T06:00:00-05:00` (4 hour difference),\r\n\t\t//\t\t`T10:00:00Z` becomes `T05:00:00-05:00` (5 hour difference between Zulu and local time)\r\n\t\t//\t\t`yyyy-mm-ddThh:mm:ss` is the format to set the date and time\r\n\t\t//\t\tExample: `2007-06-01T09:00:00`\r\n\t\tvalue: new Date(),\r\n\r\n\t\t_visibleIncrement: 2,\r\n\t\t_clickableIncrement: 1,\r\n\t\t_totalIncrements: 10,\r\n\r\n\t\t// constraints: TimePicker.__Constraints\r\n\t\t//\t\tSpecifies valid range of times (start time, end time), and also used by TimeTextBox to pass other\r\n\t\t//\t\toptions to the TimePicker: pickerMin, pickerMax, clickableIncrement, and visibleIncrement.\r\n\t\tconstraints: {},\r\n\r\n\t\t/*=====\r\n\t\t serialize: function(val, options){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tUser overridable function used to convert the attr('value') result to a String\r\n\t\t\t // val: Date\r\n\t\t\t //\t\tThe current value\r\n\t\t\t // options: Object?\r\n\t\t\t // tags:\r\n\t\t\t //\t\tprotected\r\n\t\t },\r\n\t\t =====*/\r\n\t\tserialize: stamp.toISOString,\r\n\r\n\t\t/*=====\r\n\t\t // filterString: string\r\n\t\t //\t\tThe string to filter by\r\n\t\t filterString: \"\",\r\n\t\t =====*/\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.containerNode = this.domNode;\t// expected by _ListBase\r\n\t\t\tthis.timeMenu = this.domNode;\t// for back-compat\r\n\t\t},\r\n\r\n\t\tsetValue: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Used set('value') instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit._TimePicker:setValue() is deprecated.  Use set('value', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('value', value);\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Date*/ date){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', ...) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSet the value of the TimePicker.\r\n\t\t\t//\t\tRedraws the TimePicker around the new date.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis._set(\"value\", date);\r\n\t\t\tthis._showText();\r\n\t\t},\r\n\r\n\t\t_setFilterStringAttr: function(val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled by TimeTextBox to filter the values shown in my list\r\n\t\t\tthis._set(\"filterString\", val);\r\n\t\t\tthis._showText();\r\n\t\t},\r\n\r\n\t\tisDisabledDate: function(/*===== dateObject, locale =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to disable certain dates in the TimePicker e.g. `isDisabledDate=locale.isWeekend`\r\n\t\t\t// dateObject: Date\r\n\t\t\t// locale: String?\r\n\t\t\t// type:\r\n\t\t\t//\t\textension\r\n\t\t\treturn false; // Boolean\r\n\t\t},\r\n\r\n\t\t_getFilteredNodes: function(/*number*/ start, /*number*/ maxNum, /*Boolean*/ before, /*DOMNode*/ lastNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns an array of nodes with the filter applied.  At most maxNum nodes\r\n\t\t\t//\t\twill be returned - but fewer may be returned as well.  If the\r\n\t\t\t//\t\tbefore parameter is set to true, then it will return the elements\r\n\t\t\t//\t\tbefore the given index\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar nodes = [];\r\n\r\n\t\t\tfor(var i = 0 ; i < this._maxIncrement; i++){\r\n\t\t\t\tvar n = this._createOption(i);\r\n\t\t\t\tif(n){\r\n\t\t\t\t\tnodes.push(n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn nodes;\r\n\t\t},\r\n\r\n\t\t_showText: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplays the relevant choices in the drop down list\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar fromIso = stamp.fromISOString;\r\n\t\t\tthis.domNode.innerHTML = \"\";\r\n\t\t\tthis._clickableIncrementDate = fromIso(this.clickableIncrement);\r\n\t\t\tthis._visibleIncrementDate = fromIso(this.visibleIncrement);\r\n\t\t\t// get the value of the increments to find out how many divs to create\r\n\t\t\tvar\r\n\t\t\t\tsinceMidnight = function(/*Date*/ date){\r\n\t\t\t\t\treturn date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds();\r\n\t\t\t\t},\r\n\t\t\t\tclickableIncrementSeconds = sinceMidnight(this._clickableIncrementDate),\r\n\t\t\t\tvisibleIncrementSeconds = sinceMidnight(this._visibleIncrementDate),\r\n\t\t\t\t// round reference date to previous visible increment\r\n\t\t\t\ttime = (this.value || this.currentFocus).getTime();\r\n\r\n\t\t\tthis._refDate = fromIso(this.pickerMin);\r\n\t\t\tthis._refDate.setFullYear(1970, 0, 1); // match parse defaults\r\n\r\n\t\t\t// assume clickable increment is the smallest unit\r\n\t\t\tthis._clickableIncrement = 1;\r\n\t\t\t// divide the visible range by the clickable increment to get the number of divs to create\r\n\t\t\t// example: 10:00:00/00:15:00 -> display 40 divs\r\n\t\t\t// divide the visible increments by the clickable increments to get how often to display the time inline\r\n\t\t\t// example: 01:00:00/00:15:00 -> display the time every 4 divs\r\n\t\t\tthis._visibleIncrement = visibleIncrementSeconds / clickableIncrementSeconds;\r\n\r\n\t\t\t// get the number of increments (i.e. number of entries in the picker)\r\n\t\t\tvar endDate = fromIso(this.pickerMax);\r\n\t\t\tendDate.setFullYear(1970, 0, 1);\r\n\t\t\tvar visibleRange = (endDate.getTime() - this._refDate.getTime()) * 0.001;\r\n\t\t\tthis._maxIncrement = Math.ceil((visibleRange + 1) / clickableIncrementSeconds);\r\n\r\n\t\t\tvar nodes  = this._getFilteredNodes();\r\n\t\t\tarray.forEach(nodes, function(n){\r\n\t\t\t\tthis.domNode.appendChild(n);\r\n\t\t\t}, this);\r\n\r\n\t\t\t// never show empty due to a bad filter\r\n\t\t\tif(!nodes.length && this.filterString){\r\n\t\t\t\tthis.filterString = '';\r\n\t\t\t\tthis._showText();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tconstructor: function(/*===== params, srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t\tthis.constraints = {};\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setConstraintsAttr(this.constraints); // this needs to happen now (and later) due to codependency on _set*Attr calls\r\n\t\t},\r\n\r\n\t\t// For historical reasons TimeTextBox sends all the options for the _TimePicker inside of a constraints{} object\r\n\t\t_setConstraintsAttr: function(/* Object */ constraints){\r\n\t\t\t// brings in increments, etc.\r\n\t\t\tfor (var key in { clickableIncrement: 1, visibleIncrement: 1, pickerMin: 1, pickerMax: 1 }) {\r\n\t\t\t\tif (key in constraints) {\r\n\t\t\t\t\tthis[key] = constraints[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// locale needs the lang in the constraints as locale\r\n\t\t\tif(!constraints.locale){\r\n\t\t\t\tconstraints.locale = this.lang;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_createOption: function(/*Number*/ index){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a clickable time option, or returns null if the specified index doesn't match the filter\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar date = new Date(this._refDate);\r\n\t\t\tvar incrementDate = this._clickableIncrementDate;\r\n\t\t\tdate.setHours(date.getHours() + incrementDate.getHours() * index,\r\n\t\t\t\tdate.getMinutes() + incrementDate.getMinutes() * index,\r\n\t\t\t\tdate.getSeconds() + incrementDate.getSeconds() * index);\r\n\t\t\tif(this.constraints.selector == \"time\"){\r\n\t\t\t\tdate.setFullYear(1970, 0, 1); // make sure each time is for the same date\r\n\t\t\t}\r\n\t\t\tvar dateString = locale.format(date, this.constraints);\r\n\t\t\tif(this.filterString && dateString.toLowerCase().indexOf(this.filterString) !== 0){\r\n\t\t\t\t// Doesn't match the filter - return null\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar div = this.ownerDocument.createElement(\"div\");\r\n\t\t\tdiv.className = this.baseClass + \"Item\";\r\n\t\t\tdiv.date = date;\r\n\t\t\tdiv.idx = index;\r\n\t\t\tdomConstruct.create('div', {\r\n\t\t\t\t\"class\": this.baseClass + \"ItemInner\",\r\n\t\t\t\tinnerHTML: dateString\r\n\t\t\t}, div);\r\n\r\n\t\t\tif(index % this._visibleIncrement < 1 && index % this._visibleIncrement > -1){\r\n\t\t\t\tdomClass.add(div, this.baseClass + \"Marker\");\r\n\t\t\t}else if(!(index % this._clickableIncrement)){\r\n\t\t\t\tdomClass.add(div, this.baseClass + \"Tick\");\r\n\t\t\t}\r\n\r\n\t\t\tif(this.isDisabledDate(date)){\r\n\t\t\t\t// set disabled\r\n\t\t\t\tdomClass.add(div, this.baseClass + \"ItemDisabled\");\r\n\t\t\t}\r\n\t\t\tif(this.value && !ddate.compare(this.value, date, this.constraints.selector)){\r\n\t\t\t\tdiv.selected = true;\r\n\t\t\t\tdomClass.add(div, this.baseClass + \"ItemSelected\");\r\n\t\t\t\tthis._selectedDiv = div;\r\n\t\t\t\tif(domClass.contains(div, this.baseClass + \"Marker\")){\r\n\t\t\t\t\tdomClass.add(div, this.baseClass + \"MarkerSelected\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomClass.add(div, this.baseClass + \"TickSelected\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Initially highlight the current value.   User can change highlight by up/down arrow keys\r\n\t\t\t\t// or mouse movement.\r\n\t\t\t\tthis._highlightOption(div, true);\r\n\t\t\t}\r\n\t\t\treturn div;\r\n\t\t},\r\n\r\n\t\tonOpen: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Since _ListBase::_setSelectedAttr() calls scrollIntoView(), shouldn't call it until list is visible.\r\n\t\t\tthis.set(\"selected\", this._selectedDiv);\r\n\t\t},\r\n\r\n\t\t_onOptionSelected: function(/*Object*/ tgt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when user clicks an option in the drop down list\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar tdate = tgt.target.date || tgt.target.parentNode.date;\r\n\t\t\tif(!tdate || this.isDisabledDate(tdate)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._highlighted_option = null;\r\n\t\t\tthis.set('value', tdate);\r\n\t\t\tthis.onChange(tdate);\r\n\t\t},\r\n\r\n\t\tonChange: function(/*Date*/ /*===== time =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tNotification that a time was selected.  It may be the same as the previous value.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\t\t},\r\n\r\n\t\t_highlightOption: function(/*node*/ node, /*Boolean*/ highlight){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTurns on/off highlight effect on a node based on mouse out/over event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!node){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(highlight){\r\n\t\t\t\tif(this._highlighted_option){\r\n\t\t\t\t\tthis._highlightOption(this._highlighted_option, false);\r\n\t\t\t\t}\r\n\t\t\t\tthis._highlighted_option = node;\r\n\t\t\t}else if(this._highlighted_option !== node){\r\n\t\t\t\treturn;\r\n\t\t\t}else{\r\n\t\t\t\tthis._highlighted_option = null;\r\n\t\t\t}\r\n\t\t\tdomClass.toggle(node, this.baseClass + \"ItemHover\", highlight);\r\n\t\t\tif(domClass.contains(node, this.baseClass + \"Marker\")){\r\n\t\t\t\tdomClass.toggle(node, this.baseClass + \"MarkerHover\", highlight);\r\n\t\t\t}else{\r\n\t\t\t\tdomClass.toggle(node, this.baseClass + \"TickHover\", highlight);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleKey: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from `dijit/form/_DateTimeTextBox` to pass a keypress event\r\n\t\t\t//\t\tfrom the `dijit/form/TimeTextBox` to be handled in this widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(e.keyCode == keys.DOWN_ARROW){\r\n\t\t\t\tthis.selectNextNode();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}else if(e.keyCode == keys.UP_ARROW){\r\n\t\t\t\tthis.selectPreviousNode();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}else if(e.keyCode == keys.ENTER || e.keyCode === keys.TAB){\r\n\t\t\t\t// mouse hover followed by TAB is NO selection\r\n\t\t\t\tif(!this._keyboardSelected && e.keyCode === keys.TAB){\r\n\t\t\t\t\treturn true;\t// true means don't call stopEvent()\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Accept the currently-highlighted option as the value\r\n\t\t\t\tif(this._highlighted_option){\r\n\t\t\t\t\tthis._onOptionSelected({target: this._highlighted_option});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Call stopEvent() for ENTER key so that form doesn't submit,\r\n\t\t\t\t// but not for TAB, so that TAB does switch focus\r\n\t\t\t\treturn e.keyCode === keys.TAB;\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t},\r\n\r\n\t\t// Implement abstract methods for _ListBase\r\n\t\tonHover: function(/*DomNode*/ node){\r\n\t\t\tthis._highlightOption(node, true);\r\n\t\t},\r\n\r\n\t\tonUnhover: function(/*DomNode*/ node){\r\n\t\t\tthis._highlightOption(node, false);\r\n\t\t},\r\n\r\n\t\tonSelect: function(/*DomNode*/ node){\r\n\t\t\tthis._highlightOption(node, true);\r\n\t\t},\r\n\r\n\t\tonDeselect: function(/*DomNode*/ node){\r\n\t\t\tthis._highlightOption(node, false);\r\n\t\t},\r\n\r\n\t\tonClick: function(/*DomNode*/ node){\r\n\t\t\tthis._onOptionSelected({target: node});\r\n\t\t}\r\n\t});\r\n\r\n\t/*=====\r\n\t TimePicker.__Constraints = declare(locale.__FormatOptions, {\r\n\t\t // clickableIncrement: String\r\n\t\t //\t\tSee `dijit/_TimePicker.clickableIncrement`\r\n\t\t clickableIncrement: \"T00:15:00\"\r\n\t });\r\n\t =====*/\r\n\r\n\treturn TimePicker;\r\n});\r\n"]}