{"version":3,"sources":["dijit.js"],"names":[],"mappingsfile":"../dijit.js","sourcesContent":["define('dijit/a11y',[\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/dom\",\t\t\t// dom.byId\r\n\t\"dojo/dom-attr\", // domAttr.attr domAttr.has\r\n\t\"dojo/dom-style\", // domStyle.style\r\n\t\"dojo/_base/lang\", // lang.mixin()\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"extend-dojo\")\r\n\t\"./main\"\t// for exporting methods to dijit namespace\r\n], function(array, dom, domAttr, domStyle, lang, has, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/a11y\r\n\r\n\tvar undefined;\r\n\r\n\tvar a11y = {\r\n\t\t// summary:\r\n\t\t//\t\tAccessibility utility functions (keyboard, tab stops, etc.)\r\n\r\n\t\t_isElementShown: function(/*Element*/ elem){\r\n\t\t\tvar s = domStyle.get(elem);\r\n\t\t\treturn (s.visibility != \"hidden\")\r\n\t\t\t\t&& (s.visibility != \"collapsed\")\r\n\t\t\t\t&& (s.display != \"none\")\r\n\t\t\t\t&& (domAttr.get(elem, \"type\") != \"hidden\");\r\n\t\t},\r\n\r\n\t\thasDefaultTabStop: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests if element is tab-navigable even without an explicit tabIndex setting\r\n\r\n\t\t\t// No explicit tabIndex setting, need to investigate node type\r\n\t\t\tswitch(elem.nodeName.toLowerCase()){\r\n\t\t\t\tcase \"a\":\r\n\t\t\t\t\t// An <a> w/out a tabindex is only navigable if it has an href\r\n\t\t\t\t\treturn domAttr.has(elem, \"href\");\r\n\t\t\t\tcase \"area\":\r\n\t\t\t\tcase \"button\":\r\n\t\t\t\tcase \"input\":\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\tcase \"select\":\r\n\t\t\t\tcase \"textarea\":\r\n\t\t\t\t\t// These are navigable by default\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"iframe\":\r\n\t\t\t\t\t// If it's an editor <iframe> then it's tab navigable.\r\n\t\t\t\t\tvar body;\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\t// non-IE\r\n\t\t\t\t\t\tvar contentDocument = elem.contentDocument;\r\n\t\t\t\t\t\tif(\"designMode\" in contentDocument && contentDocument.designMode == \"on\"){\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbody = contentDocument.body;\r\n\t\t\t\t\t}catch(e1){\r\n\t\t\t\t\t\t// contentWindow.document isn't accessible within IE7/8\r\n\t\t\t\t\t\t// if the iframe.src points to a foreign url and this\r\n\t\t\t\t\t\t// page contains an element, that could get focus\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tbody = elem.contentWindow.document.body;\r\n\t\t\t\t\t\t}catch(e2){\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn body && (body.contentEditable == 'true' ||\r\n\t\t\t\t\t\t(body.firstChild && body.firstChild.contentEditable == 'true'));\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn elem.contentEditable == 'true';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\teffectiveTabIndex: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns effective tabIndex of an element, either a number, or undefined if element isn't focusable.\r\n\r\n\t\t\tif(domAttr.get(elem, \"disabled\")){\r\n\t\t\t\treturn undefined;\r\n\t\t\t}else if(domAttr.has(elem, \"tabIndex\")){\r\n\t\t\t\t// Explicit tab index setting\r\n\t\t\t\treturn +domAttr.get(elem, \"tabIndex\");// + to convert string --> number\r\n\t\t\t}else{\r\n\t\t\t\t// No explicit tabIndex setting, so depends on node type\r\n\t\t\t\treturn a11y.hasDefaultTabStop(elem) ? 0 : undefined;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tisTabNavigable: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests if an element is tab-navigable\r\n\r\n\t\t\treturn a11y.effectiveTabIndex(elem) >= 0;\r\n\t\t},\r\n\r\n\t\tisFocusable: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests if an element is focusable by tabbing to it, or clicking it with the mouse.\r\n\r\n\t\t\treturn a11y.effectiveTabIndex(elem) >= -1;\r\n\t\t},\r\n\r\n\t\t_getTabNavigable: function(/*DOMNode*/ root){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds descendants of the specified root node.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFinds the following descendants of the specified root node:\r\n\t\t\t//\r\n\t\t\t//\t\t- the first tab-navigable element in document order\r\n\t\t\t//\t\t  without a tabIndex or with tabIndex=\"0\"\r\n\t\t\t//\t\t- the last tab-navigable element in document order\r\n\t\t\t//\t\t  without a tabIndex or with tabIndex=\"0\"\r\n\t\t\t//\t\t- the first element in document order with the lowest\r\n\t\t\t//\t\t  positive tabIndex value\r\n\t\t\t//\t\t- the last element in document order with the highest\r\n\t\t\t//\t\t  positive tabIndex value\r\n\t\t\tvar first, last, lowest, lowestTabindex, highest, highestTabindex, radioSelected = {};\r\n\r\n\t\t\tfunction radioName(node){\r\n\t\t\t\t// If this element is part of a radio button group, return the name for that group.\r\n\t\t\t\treturn node && node.tagName.toLowerCase() == \"input\" &&\r\n\t\t\t\t\tnode.type && node.type.toLowerCase() == \"radio\" &&\r\n\t\t\t\t\tnode.name && node.name.toLowerCase();\r\n\t\t\t}\r\n\r\n\t\t\tvar shown = a11y._isElementShown, effectiveTabIndex = a11y.effectiveTabIndex;\r\n\t\t\tvar walkTree = function(/*DOMNode*/ parent){\r\n\t\t\t\tfor(var child = parent.firstChild; child; child = child.nextSibling){\r\n\t\t\t\t\t// Skip text elements, hidden elements, and also non-HTML elements (those in custom namespaces) in IE,\r\n\t\t\t\t\t// since show() invokes getAttribute(\"type\"), which crash on VML nodes in IE.\r\n\t\t\t\t\tif(child.nodeType != 1 || (has(\"ie\") <= 9 && child.scopeName !== \"HTML\") || !shown(child)){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar tabindex = effectiveTabIndex(child);\r\n\t\t\t\t\tif(tabindex >= 0){\r\n\t\t\t\t\t\tif(tabindex == 0){\r\n\t\t\t\t\t\t\tif(!first){\r\n\t\t\t\t\t\t\t\tfirst = child;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlast = child;\r\n\t\t\t\t\t\t}else if(tabindex > 0){\r\n\t\t\t\t\t\t\tif(!lowest || tabindex < lowestTabindex){\r\n\t\t\t\t\t\t\t\tlowestTabindex = tabindex;\r\n\t\t\t\t\t\t\t\tlowest = child;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!highest || tabindex >= highestTabindex){\r\n\t\t\t\t\t\t\t\thighestTabindex = tabindex;\r\n\t\t\t\t\t\t\t\thighest = child;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar rn = radioName(child);\r\n\t\t\t\t\t\tif(domAttr.get(child, \"checked\") && rn){\r\n\t\t\t\t\t\t\tradioSelected[rn] = child;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(child.nodeName.toUpperCase() != 'SELECT'){\r\n\t\t\t\t\t\twalkTree(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif(shown(root)){\r\n\t\t\t\twalkTree(root);\r\n\t\t\t}\r\n\t\t\tfunction rs(node){\r\n\t\t\t\t// substitute checked radio button for unchecked one, if there is a checked one with the same name.\r\n\t\t\t\treturn radioSelected[radioName(node)] || node;\r\n\t\t\t}\r\n\r\n\t\t\treturn { first: rs(first), last: rs(last), lowest: rs(lowest), highest: rs(highest) };\r\n\t\t},\r\n\r\n\t\tgetFirstInTabbingOrder: function(/*String|DOMNode*/ root, /*Document?*/ doc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds the descendant of the specified root node\r\n\t\t\t//\t\tthat is first in the tabbing order\r\n\t\t\tvar elems = a11y._getTabNavigable(dom.byId(root, doc));\r\n\t\t\treturn elems.lowest ? elems.lowest : elems.first; // DomNode\r\n\t\t},\r\n\r\n\t\tgetLastInTabbingOrder: function(/*String|DOMNode*/ root, /*Document?*/ doc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds the descendant of the specified root node\r\n\t\t\t//\t\tthat is last in the tabbing order\r\n\t\t\tvar elems = a11y._getTabNavigable(dom.byId(root, doc));\r\n\t\t\treturn elems.last ? elems.last : elems.highest; // DomNode\r\n\t\t}\r\n\t};\r\n\r\n\thas(\"extend-dojo\") && lang.mixin(dijit, a11y);\r\n\r\n\treturn a11y;\r\n});\r\n\ndefine('dijit/registry',[\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"./main\"\t// dijit._scopeName\r\n], function(array, win, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/registry\r\n\r\n\tvar _widgetTypeCtr = {}, hash = {};\r\n\r\n\tvar registry =  {\r\n\t\t// summary:\r\n\t\t//\t\tRegistry of existing widget on page, plus some utility methods.\r\n\r\n\t\t// length: Number\r\n\t\t//\t\tNumber of registered widgets\r\n\t\tlength: 0,\r\n\r\n\t\tadd: function(widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a widget to the registry. If a duplicate ID is detected, a error is thrown.\r\n\t\t\t// widget: dijit/_WidgetBase\r\n\t\t\t//\t\tAny dijit/_WidgetBase subclass.\r\n\t\t\tif(hash[widget.id]){\r\n\t\t\t\tthrow new Error(\"Tried to register widget with id==\" + widget.id + \" but that id is already registered\");\r\n\t\t\t}\r\n\t\t\thash[widget.id] = widget;\r\n\t\t\tthis.length++;\r\n\t\t},\r\n\r\n\t\tremove: function(/*String*/ id){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove a widget from the registry. Does not destroy the widget; simply\r\n\t\t\t//\t\tremoves the reference.\r\n\t\t\tif(hash[id]){\r\n\t\t\t\tdelete hash[id];\r\n\t\t\t\tthis.length--;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbyId: function(/*String|Widget*/ id){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFind a widget by it's id.\r\n\t\t\t//\t\tIf passed a widget then just returns the widget.\r\n\t\t\treturn typeof id == \"string\" ? hash[id] : id;\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tbyNode: function(/*DOMNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the widget corresponding to the given DOMNode\r\n\t\t\treturn hash[node.getAttribute(\"widgetId\")]; // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\ttoArray: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvert registry into a true Array\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tWork with the widget .domNodes in a real Array\r\n\t\t\t//\t\t|\tarray.map(registry.toArray(), function(w){ return w.domNode; });\r\n\r\n\t\t\tvar ar = [];\r\n\t\t\tfor(var id in hash){\r\n\t\t\t\tar.push(hash[id]);\r\n\t\t\t}\r\n\t\t\treturn ar;\t// dijit/_WidgetBase[]\r\n\t\t},\r\n\r\n\t\tgetUniqueId: function(/*String*/widgetType){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGenerates a unique id for a given widgetType\r\n\r\n\t\t\tvar id;\r\n\t\t\tdo{\r\n\t\t\t\tid = widgetType + \"_\" +\r\n\t\t\t\t\t(widgetType in _widgetTypeCtr ?\r\n\t\t\t\t\t\t++_widgetTypeCtr[widgetType] : _widgetTypeCtr[widgetType] = 0);\r\n\t\t\t}while(hash[id]);\r\n\t\t\treturn dijit._scopeName == \"dijit\" ? id : dijit._scopeName + \"_\" + id; // String\r\n\t\t},\r\n\r\n\t\tfindWidgets: function(root, skipNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSearch subtree under root returning widgets found.\r\n\t\t\t//\t\tDoesn't search for nested widgets (ie, widgets inside other widgets).\r\n\t\t\t// root: DOMNode\r\n\t\t\t//\t\tNode to search under.\r\n\t\t\t// skipNode: DOMNode\r\n\t\t\t//\t\tIf specified, don't search beneath this node (usually containerNode).\r\n\r\n\t\t\tvar outAry = [];\r\n\r\n\t\t\tfunction getChildrenHelper(root){\r\n\t\t\t\tfor(var node = root.firstChild; node; node = node.nextSibling){\r\n\t\t\t\t\tif(node.nodeType == 1){\r\n\t\t\t\t\t\tvar widgetId = node.getAttribute(\"widgetId\");\r\n\t\t\t\t\t\tif(widgetId){\r\n\t\t\t\t\t\t\tvar widget = hash[widgetId];\r\n\t\t\t\t\t\t\tif(widget){\t// may be null on page w/multiple dojo's loaded\r\n\t\t\t\t\t\t\t\toutAry.push(widget);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(node !== skipNode){\r\n\t\t\t\t\t\t\tgetChildrenHelper(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgetChildrenHelper(root);\r\n\t\t\treturn outAry;\r\n\t\t},\r\n\r\n\t\t_destroyAll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCode to destroy all widgets and do other cleanup on page unload\r\n\r\n\t\t\t// Clean up focus manager lingering references to widgets and nodes\r\n\t\t\tdijit._curFocus = null;\r\n\t\t\tdijit._prevFocus = null;\r\n\t\t\tdijit._activeStack = [];\r\n\r\n\t\t\t// Destroy all the widgets, top down\r\n\t\t\tarray.forEach(registry.findWidgets(win.body()), function(widget){\r\n\t\t\t\t// Avoid double destroy of widgets like Menu that are attached to <body>\r\n\t\t\t\t// even though they are logically children of other widgets.\r\n\t\t\t\tif(!widget._destroyed){\r\n\t\t\t\t\tif(widget.destroyRecursive){\r\n\t\t\t\t\t\twidget.destroyRecursive();\r\n\t\t\t\t\t}else if(widget.destroy){\r\n\t\t\t\t\t\twidget.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tgetEnclosingWidget: function(/*DOMNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the widget whose DOM tree contains the specified DOMNode, or null if\r\n\t\t\t//\t\tthe node is not contained within the DOM tree of any widget\r\n\t\t\twhile(node){\r\n\t\t\t\tvar id = node.nodeType == 1 && node.getAttribute(\"widgetId\");\r\n\t\t\t\tif(id){\r\n\t\t\t\t\treturn hash[id];\r\n\t\t\t\t}\r\n\t\t\t\tnode = node.parentNode;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t// In case someone needs to access hash.\r\n\t\t// Actually, this is accessed from WidgetSet back-compatibility code\r\n\t\t_hash: hash\r\n\t};\r\n\r\n\tdijit.registry = registry;\r\n\r\n\treturn registry;\r\n});\r\n\ndefine('dijit/WidgetSet',[\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/kernel\", // kernel.global\r\n\t\"./registry\"\t// to add functions to dijit.registry\r\n], function(array, declare, kernel, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/WidgetSet\r\n\r\n\tvar WidgetSet = declare(\"dijit.WidgetSet\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA set of widgets indexed by id.\r\n\t\t//\t\tDeprecated, will be removed in 2.0.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tCreate a small list of widgets:\r\n\t\t//\t\t|\trequire([\"dijit/WidgetSet\", \"dijit/registry\"],\r\n\t\t//\t\t|\t\tfunction(WidgetSet, registry){\r\n\t\t//\t\t|\t\tvar ws = new WidgetSet();\r\n\t\t//\t\t|\t\tws.add(registry.byId(\"one\"));\r\n\t\t//\t\t|\t\tws.add(registry.byId(\"two\"));\r\n\t\t//\t\t|\t\t// destroy both:\r\n\t\t//\t\t|\t\tws.forEach(function(w){ w.destroy(); });\r\n\t\t//\t\t|\t});\r\n\r\n\t\tconstructor: function(){\r\n\t\t\tthis._hash = {};\r\n\t\t\tthis.length = 0;\r\n\t\t},\r\n\r\n\t\tadd: function(/*dijit/_WidgetBase*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a widget to this list. If a duplicate ID is detected, a error is thrown.\r\n\t\t\t//\r\n\t\t\t// widget: dijit/_WidgetBase\r\n\t\t\t//\t\tAny dijit/_WidgetBase subclass.\r\n\t\t\tif(this._hash[widget.id]){\r\n\t\t\t\tthrow new Error(\"Tried to register widget with id==\" + widget.id + \" but that id is already registered\");\r\n\t\t\t}\r\n\t\t\tthis._hash[widget.id] = widget;\r\n\t\t\tthis.length++;\r\n\t\t},\r\n\r\n\t\tremove: function(/*String*/ id){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove a widget from this WidgetSet. Does not destroy the widget; simply\r\n\t\t\t//\t\tremoves the reference.\r\n\t\t\tif(this._hash[id]){\r\n\t\t\t\tdelete this._hash[id];\r\n\t\t\t\tthis.length--;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tforEach: function(/*Function*/ func, /* Object? */thisObj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall specified function for each widget in this set.\r\n\t\t\t//\r\n\t\t\t// func:\r\n\t\t\t//\t\tA callback function to run for each item. Is passed the widget, the index\r\n\t\t\t//\t\tin the iteration, and the full hash, similar to `array.forEach`.\r\n\t\t\t//\r\n\t\t\t// thisObj:\r\n\t\t\t//\t\tAn optional scope parameter\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tUsing the default `dijit.registry` instance:\r\n\t\t\t//\t\t|\trequire([\"dijit/WidgetSet\", \"dijit/registry\"],\r\n\t\t\t//\t\t|\t\tfunction(WidgetSet, registry){\r\n\t\t\t//\t\t|\t\tregistry.forEach(function(widget){\r\n\t\t\t//\t\t|\t\t\tconsole.log(widget.declaredClass);\r\n\t\t\t//\t\t|\t\t});\r\n\t\t\t//\t\t|\t});\r\n\t\t\t//\r\n\t\t\t// returns:\r\n\t\t\t//\t\tReturns self, in order to allow for further chaining.\r\n\r\n\t\t\tthisObj = thisObj || kernel.global;\r\n\t\t\tvar i = 0, id;\r\n\t\t\tfor(id in this._hash){\r\n\t\t\t\tfunc.call(thisObj, this._hash[id], i++, this._hash);\r\n\t\t\t}\r\n\t\t\treturn this;\t// dijit/WidgetSet\r\n\t\t},\r\n\r\n\t\tfilter: function(/*Function*/ filter, /* Object? */thisObj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFilter down this WidgetSet to a smaller new WidgetSet\r\n\t\t\t//\t\tWorks the same as `array.filter` and `NodeList.filter`\r\n\t\t\t//\r\n\t\t\t// filter:\r\n\t\t\t//\t\tCallback function to test truthiness. Is passed the widget\r\n\t\t\t//\t\treference and the pseudo-index in the object.\r\n\t\t\t//\r\n\t\t\t// thisObj: Object?\r\n\t\t\t//\t\tOption scope to use for the filter function.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tArbitrary: select the odd widgets in this list\r\n\t\t\t//\t\t|\t\r\n\t\t\t//\t\t|\t\t\r\n\t\t\t//\t\t|\t\r\n\t\t\t//\t\t|\trequire([\"dijit/WidgetSet\", \"dijit/registry\"],\r\n\t\t\t//\t\t|\t\tfunction(WidgetSet, registry){\r\n\t\t\t//\t\t|\t\tregistry.filter(function(w, i){\r\n\t\t\t//\t\t|\t\t\treturn i % 2 == 0;\r\n\t\t\t//\t\t|\t\t}).forEach(function(w){ /* odd ones */ });\r\n\t\t\t//\t\t|\t});\r\n\r\n\t\t\tthisObj = thisObj || kernel.global;\r\n\t\t\tvar res = new WidgetSet(), i = 0, id;\r\n\t\t\tfor(id in this._hash){\r\n\t\t\t\tvar w = this._hash[id];\r\n\t\t\t\tif(filter.call(thisObj, w, i++, this._hash)){\r\n\t\t\t\t\tres.add(w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn res; // dijit/WidgetSet\r\n\t\t},\r\n\r\n\t\tbyId: function(/*String*/ id){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFind a widget in this list by it's id.\r\n\t\t\t// example:\r\n\t\t\t//\t\tTest if an id is in a particular WidgetSet\r\n\t\t\t//\t\t|\trequire([\"dijit/WidgetSet\", \"dijit/registry\"],\r\n\t\t\t//\t\t|\t\tfunction(WidgetSet, registry){\r\n\t\t\t//\t\t|\t\tvar ws = new WidgetSet();\r\n\t\t\t//\t\t|\t\tws.add(registry.byId(\"bar\"));\r\n\t\t\t//\t\t|\t\tvar t = ws.byId(\"bar\") // returns a widget\r\n\t\t\t//\t\t|\t\tvar x = ws.byId(\"foo\"); // returns undefined\r\n\t\t\t//\t\t|\t});\r\n\r\n\t\t\treturn this._hash[id];\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tbyClass: function(/*String*/ cls){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReduce this widgetset to a new WidgetSet of a particular `declaredClass`\r\n\t\t\t//\r\n\t\t\t// cls: String\r\n\t\t\t//\t\tThe Class to scan for. Full dot-notated string.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tFind all `dijit.TitlePane`s in a page:\r\n\t\t\t//\t\t|\trequire([\"dijit/WidgetSet\", \"dijit/registry\"],\r\n\t\t\t//\t\t|\t\tfunction(WidgetSet, registry){\r\n\t\t\t//\t\t|\t\tregistry.byClass(\"dijit.TitlePane\").forEach(function(tp){ tp.close(); });\r\n\t\t\t//\t\t|\t});\r\n\r\n\t\t\tvar res = new WidgetSet(), id, widget;\r\n\t\t\tfor(id in this._hash){\r\n\t\t\t\twidget = this._hash[id];\r\n\t\t\t\tif(widget.declaredClass == cls){\r\n\t\t\t\t\tres.add(widget);\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t\t return res; // dijit/WidgetSet\r\n\t\t},\r\n\r\n\t\ttoArray: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvert this WidgetSet into a true Array\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tWork with the widget .domNodes in a real Array\r\n\t\t\t//\t\t|\trequire([\"dijit/WidgetSet\", \"dijit/registry\"],\r\n\t\t\t//\t\t|\t\tfunction(WidgetSet, registry){\r\n\t\t\t//\t\t|\t\tarray.map(registry.toArray(), function(w){ return w.domNode; });\r\n\t\t\t//\t\t|\t});\r\n\r\n\r\n\t\t\tvar ar = [];\r\n\t\t\tfor(var id in this._hash){\r\n\t\t\t\tar.push(this._hash[id]);\r\n\t\t\t}\r\n\t\t\treturn ar;\t// dijit/_WidgetBase[]\r\n\t\t},\r\n\r\n\t\tmap: function(/* Function */func, /* Object? */thisObj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a new Array from this WidgetSet, following the same rules as `array.map`\r\n\t\t\t// example:\r\n\t\t\t//\t\t|\trequire([\"dijit/WidgetSet\", \"dijit/registry\"],\r\n\t\t\t//\t\t|\t\tfunction(WidgetSet, registry){\r\n\t\t\t//\t\t|\t\tvar nodes = registry.map(function(w){ return w.domNode; });\r\n\t\t\t//\t\t|\t});\r\n\t\t\t//\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA new array of the returned values.\r\n\t\t\treturn array.map(this.toArray(), func, thisObj); // Array\r\n\t\t},\r\n\r\n\t\tevery: function(func, thisObj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA synthetic clone of `array.every` acting explicitly on this WidgetSet\r\n\t\t\t//\r\n\t\t\t// func: Function\r\n\t\t\t//\t\tA callback function run for every widget in this list. Exits loop\r\n\t\t\t//\t\twhen the first false return is encountered.\r\n\t\t\t//\r\n\t\t\t// thisObj: Object?\r\n\t\t\t//\t\tOptional scope parameter to use for the callback\r\n\r\n\t\t\tthisObj = thisObj || kernel.global;\r\n\t\t\tvar x = 0, i;\r\n\t\t\tfor(i in this._hash){\r\n\t\t\t\tif(!func.call(thisObj, this._hash[i], x++, this._hash)){\r\n\t\t\t\t\treturn false; // Boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true; // Boolean\r\n\t\t},\r\n\r\n\t\tsome: function(func, thisObj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA synthetic clone of `array.some` acting explicitly on this WidgetSet\r\n\t\t\t//\r\n\t\t\t// func: Function\r\n\t\t\t//\t\tA callback function run for every widget in this list. Exits loop\r\n\t\t\t//\t\twhen the first true return is encountered.\r\n\t\t\t//\r\n\t\t\t// thisObj: Object?\r\n\t\t\t//\t\tOptional scope parameter to use for the callback\r\n\r\n\t\t\tthisObj = thisObj || kernel.global;\r\n\t\t\tvar x = 0, i;\r\n\t\t\tfor(i in this._hash){\r\n\t\t\t\tif(func.call(thisObj, this._hash[i], x++, this._hash)){\r\n\t\t\t\t\treturn true; // Boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false; // Boolean\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t// Add in 1.x compatibility methods to dijit/registry.\r\n\t// These functions won't show up in the API doc but since they are deprecated anyway,\r\n\t// that's probably for the best.\r\n\tarray.forEach([\"forEach\", \"filter\", \"byClass\", \"map\", \"every\", \"some\"], function(func){\r\n\t\tregistry[func] = WidgetSet.prototype[func];\r\n\t});\r\n\r\n\r\n\treturn WidgetSet;\r\n});\r\n\ndefine('dijit/focus',[\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // domAttr.get dom.isDescendant\r\n\t\"dojo/dom-attr\", // domAttr.get dom.isDescendant\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\", // connect to domConstruct.empty, domConstruct.destroy\r\n\t\"dojo/Evented\",\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/domReady\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"dojo/Stateful\",\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"dojo/window\", // winUtils.get\r\n\t\"./a11y\",\t// a11y.isTabNavigable\r\n\t\"./registry\",\t// registry.byId\r\n\t\"./main\"\t\t// to set dijit.focus\r\n], function(aspect, declare, dom, domAttr, domClass, domConstruct, Evented, lang, on, domReady, has, Stateful, win, winUtils,\r\n\t\t\ta11y, registry, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/focus\r\n\r\n\t// Time of the last focusin event\r\n\tvar lastFocusin;\r\n\r\n\t// Time of the last touch/mousedown or focusin event\r\n\tvar lastTouchOrFocusin;\r\n\r\n\tvar FocusManager = declare([Stateful, Evented], {\r\n\t\t// summary:\r\n\t\t//\t\tTracks the currently focused node, and which widgets are currently \"active\".\r\n\t\t//\t\tAccess via require([\"dijit/focus\"], function(focus){ ... }).\r\n\t\t//\r\n\t\t//\t\tA widget is considered active if it or a descendant widget has focus,\r\n\t\t//\t\tor if a non-focusable node of this widget or a descendant was recently clicked.\r\n\t\t//\r\n\t\t//\t\tCall focus.watch(\"curNode\", callback) to track the current focused DOMNode,\r\n\t\t//\t\tor focus.watch(\"activeStack\", callback) to track the currently focused stack of widgets.\r\n\t\t//\r\n\t\t//\t\tCall focus.on(\"widget-blur\", func) or focus.on(\"widget-focus\", ...) to monitor when\r\n\t\t//\t\twhen widgets become active/inactive\r\n\t\t//\r\n\t\t//\t\tFinally, focus(node) will focus a node, suppressing errors if the node doesn't exist.\r\n\r\n\t\t// curNode: DomNode\r\n\t\t//\t\tCurrently focused item on screen\r\n\t\tcurNode: null,\r\n\r\n\t\t// activeStack: dijit/_WidgetBase[]\r\n\t\t//\t\tList of currently active widgets (focused widget and it's ancestors)\r\n\t\tactiveStack: [],\r\n\r\n\t\tconstructor: function(){\r\n\t\t\t// Don't leave curNode/prevNode pointing to bogus elements\r\n\t\t\tvar check = lang.hitch(this, function(node){\r\n\t\t\t\tif(dom.isDescendant(this.curNode, node)){\r\n\t\t\t\t\tthis.set(\"curNode\", null);\r\n\t\t\t\t}\r\n\t\t\t\tif(dom.isDescendant(this.prevNode, node)){\r\n\t\t\t\t\tthis.set(\"prevNode\", null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\taspect.before(domConstruct, \"empty\", check);\r\n\t\t\taspect.before(domConstruct, \"destroy\", check);\r\n\t\t},\r\n\r\n\t\tregisterIframe: function(/*DomNode*/ iframe){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters listeners on the specified iframe so that any click\r\n\t\t\t//\t\tor focus event on that iframe (or anything in it) is reported\r\n\t\t\t//\t\tas a focus/click event on the `<iframe>` itself.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCurrently only used by editor.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tHandle with remove() method to deregister.\r\n\t\t\treturn this.registerWin(iframe.contentWindow, iframe);\r\n\t\t},\r\n\r\n\t\tregisterWin: function(/*Window?*/targetWindow, /*DomNode?*/ effectiveNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters listeners on the specified window (either the main\r\n\t\t\t//\t\twindow or an iframe's window) to detect when the user has clicked somewhere\r\n\t\t\t//\t\tor focused somewhere.\r\n\t\t\t// description:\r\n\t\t\t//\t\tUsers should call registerIframe() instead of this method.\r\n\t\t\t// targetWindow:\r\n\t\t\t//\t\tIf specified this is the window associated with the iframe,\r\n\t\t\t//\t\ti.e. iframe.contentWindow.\r\n\t\t\t// effectiveNode:\r\n\t\t\t//\t\tIf specified, report any focus events inside targetWindow as\r\n\t\t\t//\t\tan event on effectiveNode, rather than on evt.target.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tHandle with remove() method to deregister.\r\n\r\n\t\t\t// TODO: make this function private in 2.0; Editor/users should call registerIframe(),\r\n\r\n\t\t\t// Listen for blur and focus events on targetWindow's document.\r\n\t\t\tvar _this = this,\r\n\t\t\t\tbody = targetWindow.document && targetWindow.document.body;\r\n\r\n\t\t\tif(body){\r\n\t\t\t\t// Listen for touches or mousedowns... could also use dojo/touch.press here.\r\n\t\t\t\tvar event = has(\"pointer-events\") ? \"pointerdown\" : has(\"MSPointer\") ? \"MSPointerDown\" :\r\n\t\t\t\t\thas(\"touch-events\") ? \"mousedown, touchstart\" : \"mousedown\";\r\n\t\t\t\tvar mdh = on(targetWindow.document, event, function(evt){\r\n\t\t\t\t\t// workaround weird IE bug where the click is on an orphaned node\r\n\t\t\t\t\t// (first time clicking a Select/DropDownButton inside a TooltipDialog).\r\n\t\t\t\t\t// actually, strangely this is happening on latest chrome too.\r\n\t\t\t\t\tif(evt && evt.target && evt.target.parentNode == null){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_this._onTouchNode(effectiveNode || evt.target, \"mouse\");\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar fih = on(body, 'focusin', function(evt){\r\n\t\t\t\t\t// When you refocus the browser window, IE gives an event with an empty srcElement\r\n\t\t\t\t\tif(!evt.target.tagName) { return; }\r\n\r\n\t\t\t\t\t// IE reports that nodes like <body> have gotten focus, even though they have tabIndex=-1,\r\n\t\t\t\t\t// ignore those events\r\n\t\t\t\t\tvar tag = evt.target.tagName.toLowerCase();\r\n\t\t\t\t\tif(tag == \"#document\" || tag == \"body\"){ return; }\r\n\r\n\t\t\t\t\tif(a11y.isFocusable(evt.target)){\r\n\t\t\t\t\t\t_this._onFocusNode(effectiveNode || evt.target);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// Previous code called _onTouchNode() for any activate event on a non-focusable node.   Can\r\n\t\t\t\t\t\t// probably just ignore such an event as it will be handled by onmousedown handler above, but\r\n\t\t\t\t\t\t// leaving the code for now.\r\n\t\t\t\t\t\t_this._onTouchNode(effectiveNode || evt.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar foh = on(body, 'focusout', function(evt){\r\n\t\t\t\t\t_this._onBlurNode(effectiveNode || evt.target);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tremove: function(){\r\n\t\t\t\t\t\tmdh.remove();\r\n\t\t\t\t\t\tfih.remove();\r\n\t\t\t\t\t\tfoh.remove();\r\n\t\t\t\t\t\tmdh = fih = foh = null;\r\n\t\t\t\t\t\tbody = null;\t// prevent memory leak (apparent circular reference via closure)\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onBlurNode: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when focus leaves a node.\r\n\t\t\t//\t\tUsually ignored, _unless_ it *isn't* followed by touching another node,\r\n\t\t\t//\t\twhich indicates that we tabbed off the last field on the page,\r\n\t\t\t//\t\tin which case every widget is marked inactive\r\n\r\n\t\t\tvar now = (new Date()).getTime();\r\n\r\n\t\t\t// IE9+ and chrome have a problem where focusout events come after the corresponding focusin event.\r\n\t\t\t// For chrome problem see https://bugs.dojotoolkit.org/ticket/17668.\r\n\t\t\t// IE problem happens when moving focus from the Editor's <iframe> to a normal DOMNode.\r\n\t\t\tif(now < lastFocusin + 100){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If the blur event isn't followed by a focus event, it means the user clicked on something unfocusable,\r\n\t\t\t// so clear focus.\r\n\t\t\tif(this._clearFocusTimer){\r\n\t\t\t\tclearTimeout(this._clearFocusTimer);\r\n\t\t\t}\r\n\t\t\tthis._clearFocusTimer = setTimeout(lang.hitch(this, function(){\r\n\t\t\t\tthis.set(\"prevNode\", this.curNode);\r\n\t\t\t\tthis.set(\"curNode\", null);\r\n\t\t\t}), 0);\r\n\r\n\t\t\t// Unset timer to zero-out widget stack; we'll reset it below if appropriate.\r\n\t\t\tif(this._clearActiveWidgetsTimer){\r\n\t\t\t\tclearTimeout(this._clearActiveWidgetsTimer);\r\n\t\t\t}\r\n\r\n\t\t\tif(now < lastTouchOrFocusin + 100){\r\n\t\t\t\t// This blur event is coming late (after the call to _onTouchNode() rather than before.\r\n\t\t\t\t// So let _onTouchNode() handle setting the widget stack.\r\n\t\t\t\t// See https://bugs.dojotoolkit.org/ticket/17668\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If the blur event isn't followed (or preceded) by a focus or touch event then mark all widgets as inactive.\r\n\t\t\tthis._clearActiveWidgetsTimer = setTimeout(lang.hitch(this, function(){\r\n\t\t\t\tdelete this._clearActiveWidgetsTimer;\r\n\t\t\t\tthis._setStack([]);\r\n\t\t\t}), 0);\r\n\t\t},\r\n\r\n\t\t_onTouchNode: function(/*DomNode*/ node, /*String*/ by){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when node is focused or touched.\r\n\t\t\t//\t\tNote that _onFocusNode() calls _onTouchNode().\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node that was touched.\r\n\t\t\t// by:\r\n\t\t\t//\t\t\"mouse\" if the focus/touch was caused by a mouse down event\r\n\r\n\t\t\t// Keep track of time of last focusin or touch event.\r\n\t\t\tlastTouchOrFocusin = (new Date()).getTime();\r\n\r\n\t\t\tif(this._clearActiveWidgetsTimer){\r\n\t\t\t\t// forget the recent blur event\r\n\t\t\t\tclearTimeout(this._clearActiveWidgetsTimer);\r\n\t\t\t\tdelete this._clearActiveWidgetsTimer;\r\n\t\t\t}\r\n\r\n\t\t\t// if the click occurred on the scrollbar of a dropdown, treat it as a click on the dropdown,\r\n\t\t\t// even though the scrollbar is technically on the popup wrapper (see #10631)\r\n\t\t\tif(domClass.contains(node, \"dijitPopup\")){\r\n\t\t\t\tnode = node.firstChild;\r\n\t\t\t}\r\n\r\n\t\t\t// compute stack of active widgets (ex: ComboButton --> Menu --> MenuItem)\r\n\t\t\tvar newStack=[];\r\n\t\t\ttry{\r\n\t\t\t\twhile(node){\r\n\t\t\t\t\tvar popupParent = domAttr.get(node, \"dijitPopupParent\");\r\n\t\t\t\t\tif(popupParent){\r\n\t\t\t\t\t\tnode=registry.byId(popupParent).domNode;\r\n\t\t\t\t\t}else if(node.tagName && node.tagName.toLowerCase() == \"body\"){\r\n\t\t\t\t\t\t// is this the root of the document or just the root of an iframe?\r\n\t\t\t\t\t\tif(node === win.body()){\r\n\t\t\t\t\t\t\t// node is the root of the main document\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// otherwise, find the iframe this node refers to (can't access it via parentNode,\r\n\t\t\t\t\t\t// need to do this trick instead). window.frameElement is supported in IE/FF/Webkit\r\n\t\t\t\t\t\tnode=winUtils.get(node.ownerDocument).frameElement;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// if this node is the root node of a widget, then add widget id to stack,\r\n\t\t\t\t\t\t// except ignore clicks on disabled widgets (actually focusing a disabled widget still works,\r\n\t\t\t\t\t\t// to support MenuItem)\r\n\t\t\t\t\t\tvar id = node.getAttribute && node.getAttribute(\"widgetId\"),\r\n\t\t\t\t\t\t\twidget = id && registry.byId(id);\r\n\t\t\t\t\t\tif(widget && !(by == \"mouse\" && widget.get(\"disabled\"))){\r\n\t\t\t\t\t\t\tnewStack.unshift(id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnode=node.parentNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}catch(e){ /* squelch */ }\r\n\r\n\t\t\tthis._setStack(newStack, by);\r\n\t\t},\r\n\r\n\t\t_onFocusNode: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when node is focused\r\n\r\n\t\t\tif(!node){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(node.nodeType == 9){\r\n\t\t\t\t// Ignore focus events on the document itself.  This is here so that\r\n\t\t\t\t// (for example) clicking the up/down arrows of a spinner\r\n\t\t\t\t// (which don't get focus) won't cause that widget to blur. (FF issue)\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of time of last focusin event.\r\n\t\t\tlastFocusin = (new Date()).getTime();\r\n\r\n\t\t\t// There was probably a blur event right before this event, but since we have a new focus,\r\n\t\t\t// forget about the blur\r\n\t\t\tif(this._clearFocusTimer){\r\n\t\t\t\tclearTimeout(this._clearFocusTimer);\r\n\t\t\t\tdelete this._clearFocusTimer;\r\n\t\t\t}\r\n\r\n\t\t\tthis._onTouchNode(node);\r\n\r\n\t\t\tif(node == this.curNode){ return; }\r\n\t\t\tthis.set(\"prevNode\", this.curNode);\r\n\t\t\tthis.set(\"curNode\", node);\r\n\t\t},\r\n\r\n\t\t_setStack: function(/*String[]*/ newStack, /*String*/ by){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe stack of active widgets has changed.  Send out appropriate events and records new stack.\r\n\t\t\t// newStack:\r\n\t\t\t//\t\tarray of widget id's, starting from the top (outermost) widget\r\n\t\t\t// by:\r\n\t\t\t//\t\t\"mouse\" if the focus/touch was caused by a mouse down event\r\n\r\n\t\t\tvar oldStack = this.activeStack, lastOldIdx = oldStack.length - 1, lastNewIdx = newStack.length - 1;\r\n\r\n\t\t\tif(newStack[lastNewIdx] == oldStack[lastOldIdx]){\r\n\t\t\t\t// no changes, return now to avoid spurious notifications about changes to activeStack\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.set(\"activeStack\", newStack);\r\n\r\n\t\t\tvar widget, i;\r\n\r\n\t\t\t// for all elements that have gone out of focus, set focused=false\r\n\t\t\tfor(i = lastOldIdx; i >= 0 && oldStack[i] != newStack[i]; i--){\r\n\t\t\t\twidget = registry.byId(oldStack[i]);\r\n\t\t\t\tif(widget){\r\n\t\t\t\t\twidget._hasBeenBlurred = true;\t\t// TODO: used by form widgets, should be moved there\r\n\t\t\t\t\twidget.set(\"focused\", false);\r\n\t\t\t\t\tif(widget._focusManager == this){\r\n\t\t\t\t\t\twidget._onBlur(by);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.emit(\"widget-blur\", widget, by);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// for all element that have come into focus, set focused=true\r\n\t\t\tfor(i++; i <= lastNewIdx; i++){\r\n\t\t\t\twidget = registry.byId(newStack[i]);\r\n\t\t\t\tif(widget){\r\n\t\t\t\t\twidget.set(\"focused\", true);\r\n\t\t\t\t\tif(widget._focusManager == this){\r\n\t\t\t\t\t\twidget._onFocus(by);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.emit(\"widget-focus\", widget, by);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocus: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the specified node, suppressing errors if they occur\r\n\t\t\tif(node){\r\n\t\t\t\ttry{ node.focus(); }catch(e){/*quiet*/}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tvar singleton = new FocusManager();\r\n\r\n\t// register top window and all the iframes it contains\r\n\tdomReady(function(){\r\n\t\tvar handle = singleton.registerWin(winUtils.get(document));\r\n\t\tif(has(\"ie\")){\r\n\t\t\ton(window, \"unload\", function(){\r\n\t\t\t\tif(handle){\t// because this gets called twice when doh.robot is running\r\n\t\t\t\t\thandle.remove();\r\n\t\t\t\t\thandle = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\t// Setup dijit.focus as a pointer to the singleton but also (for backwards compatibility)\r\n\t// as a function to set focus.   Remove for 2.0.\r\n\tdijit.focus = function(node){\r\n\t\tsingleton.focus(node);\t// indirection here allows dijit/_base/focus.js to override behavior\r\n\t};\r\n\tfor(var attr in singleton){\r\n\t\tif(!/^_/.test(attr)){\r\n\t\t\tdijit.focus[attr] = typeof singleton[attr] == \"function\" ? lang.hitch(singleton, attr) : singleton[attr];\r\n\t\t}\r\n\t}\r\n\tsingleton.watch(function(attr, oldVal, newVal){\r\n\t\tdijit.focus[attr] = newVal;\r\n\t});\r\n\r\n\treturn singleton;\r\n});\r\n\ndefine('dijit/selection',[\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/dom\", // dom.byId\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"opera\")\r\n\t\"dojo/_base/window\",\r\n\t\"dijit/focus\"\r\n], function(array, dom, lang, has, baseWindow, focus){\r\n\r\n\t// module:\r\n\t//\t\tdijit/selection\r\n\r\n\t// Note that this class is using feature detection, but doesn't use has() because sometimes on IE the outer window\r\n\t// may be running in standards mode (ie, IE9 mode) but an iframe may be in compatibility mode.   So the code path\r\n\t// used will vary based on the window.\r\n\r\n\tvar SelectionManager = function(win){\r\n\t\t// summary:\r\n\t\t//\t\tClass for monitoring / changing the selection (typically highlighted text) in a given window\r\n\t\t// win: Window\r\n\t\t//\t\tThe window to monitor/adjust the selection on.\r\n\r\n\t\tvar doc = win.document;\r\n\r\n\t\tthis.getType = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the selection type (like doc.select.type in IE).\r\n\t\t\tif(doc.getSelection){\r\n\t\t\t\t// W3C path\r\n\t\t\t\tvar stype = \"text\";\r\n\r\n\t\t\t\t// Check if the actual selection is a CONTROL (IMG, TABLE, HR, etc...).\r\n\t\t\t\tvar oSel;\r\n\t\t\t\ttry{\r\n\t\t\t\t\toSel = win.getSelection();\r\n\t\t\t\t}catch(e){ /*squelch*/ }\r\n\r\n\t\t\t\tif(oSel && oSel.rangeCount == 1){\r\n\t\t\t\t\tvar oRange = oSel.getRangeAt(0);\r\n\t\t\t\t\tif(\t(oRange.startContainer == oRange.endContainer) &&\r\n\t\t\t\t\t\t((oRange.endOffset - oRange.startOffset) == 1) &&\r\n\t\t\t\t\t\t(oRange.startContainer.nodeType != 3 /* text node*/)\r\n\t\t\t\t\t\t){\r\n\t\t\t\t\t\tstype = \"control\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn stype; //String\r\n\t\t\t}else{\r\n\t\t\t\t// IE6-8\r\n\t\t\t\treturn doc.selection.type.toLowerCase();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getSelectedText = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the text (no html tags) included in the current selection or null if no text is selected\r\n\t\t\tif(doc.getSelection){\r\n\t\t\t\t// W3C path\r\n\t\t\t\tvar selection = win.getSelection();\r\n\t\t\t\treturn selection ? selection.toString() : \"\"; //String\r\n\t\t\t}else{\r\n\t\t\t\t// IE6-8\r\n\t\t\t\tif(this.getType() == 'control'){\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn doc.selection.createRange().text;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getSelectedHtml = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the html text of the current selection or null if unavailable\r\n\t\t\tif(doc.getSelection){\r\n\t\t\t\t// W3C path\r\n\t\t\t\tvar selection = win.getSelection();\r\n\t\t\t\tif(selection && selection.rangeCount){\r\n\t\t\t\t\tvar i;\r\n\t\t\t\t\tvar html = \"\";\r\n\t\t\t\t\tfor(i = 0; i < selection.rangeCount; i++){\r\n\t\t\t\t\t\t//Handle selections spanning ranges, such as Opera\r\n\t\t\t\t\t\tvar frag = selection.getRangeAt(i).cloneContents();\r\n\t\t\t\t\t\tvar div = doc.createElement(\"div\");\r\n\t\t\t\t\t\tdiv.appendChild(frag);\r\n\t\t\t\t\t\thtml += div.innerHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn html; //String\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}else{\r\n\t\t\t\t// IE6-8\r\n\t\t\t\tif(this.getType() == 'control'){\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn doc.selection.createRange().htmlText;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getSelectedElement = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRetrieves the selected element (if any), just in the case that\r\n\t\t\t//\t\ta single element (object like and image or a table) is\r\n\t\t\t//\t\tselected.\r\n\t\t\tif(this.getType() == \"control\"){\r\n\t\t\t\tif(doc.getSelection){\r\n\t\t\t\t\t// W3C path\r\n\t\t\t\t\tvar selection = win.getSelection();\r\n\t\t\t\t\treturn selection.anchorNode.childNodes[ selection.anchorOffset ];\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// IE6-8\r\n\t\t\t\t\tvar range = doc.selection.createRange();\r\n\t\t\t\t\tif(range && range.item){\r\n\t\t\t\t\t\treturn doc.selection.createRange().item(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\tthis.getParentElement = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the parent element of the current selection\r\n\t\t\tif(this.getType() == \"control\"){\r\n\t\t\t\tvar p = this.getSelectedElement();\r\n\t\t\t\tif(p){ return p.parentNode; }\r\n\t\t\t}else{\r\n\t\t\t\tif(doc.getSelection){\r\n\t\t\t\t\tvar selection = doc.getSelection();\r\n\t\t\t\t\tif(selection){\r\n\t\t\t\t\t\tvar node = selection.anchorNode;\r\n\t\t\t\t\t\twhile(node && (node.nodeType != 1)){ // not an element\r\n\t\t\t\t\t\t\tnode = node.parentNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn node;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar r = doc.selection.createRange();\r\n\t\t\t\t\tr.collapse(true);\r\n\t\t\t\t\treturn r.parentElement();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\tthis.hasAncestorElement = function(/*String*/ tagName /* ... */){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck whether current selection has a  parent element which is\r\n\t\t\t//\t\tof type tagName (or one of the other specified tagName)\r\n\t\t\t// tagName: String\r\n\t\t\t//\t\tThe tag name to determine if it has an ancestor of.\r\n\t\t\treturn this.getAncestorElement.apply(this, arguments) != null; //Boolean\r\n\t\t};\r\n\r\n\t\tthis.getAncestorElement = function(/*String*/ tagName /* ... */){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the parent element of the current selection which is of\r\n\t\t\t//\t\ttype tagName (or one of the other specified tagName)\r\n\t\t\t// tagName: String\r\n\t\t\t//\t\tThe tag name to determine if it has an ancestor of.\r\n\t\t\tvar node = this.getSelectedElement() || this.getParentElement();\r\n\t\t\treturn this.getParentOfType(node, arguments); //DOMNode\r\n\t\t};\r\n\r\n\t\tthis.isTag = function(/*DomNode*/ node, /*String[]*/ tags){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to determine if a node is one of an array of tags.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to inspect.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tAn array of tag name strings to check to see if the node matches.\r\n\t\t\tif(node && node.tagName){\r\n\t\t\t\tvar _nlc = node.tagName.toLowerCase();\r\n\t\t\t\tfor(var i=0; i<tags.length; i++){\r\n\t\t\t\t\tvar _tlc = String(tags[i]).toLowerCase();\r\n\t\t\t\t\tif(_nlc == _tlc){\r\n\t\t\t\t\t\treturn _tlc; // String\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t};\r\n\r\n\t\tthis.getParentOfType = function(/*DomNode*/ node, /*String[]*/ tags){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to locate a parent node that matches one of a set of tags\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to inspect.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tAn array of tag name strings to check to see if the node matches.\r\n\t\t\twhile(node){\r\n\t\t\t\tif(this.isTag(node, tags).length){\r\n\t\t\t\t\treturn node; // DOMNode\r\n\t\t\t\t}\r\n\t\t\t\tnode = node.parentNode;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\tthis.collapse = function(/*Boolean*/ beginning){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to collapse (clear), the current selection\r\n\t\t\t// beginning: Boolean\r\n\t\t\t//\t\tIndicates whether to collapse the cursor to the beginning of the selection or end.\r\n\t\t\tif(doc.getSelection){\r\n\t\t\t\t// W3C path\r\n\t\t\t\tvar selection = win.getSelection();\r\n\t\t\t\tif(selection.removeAllRanges){ // Mozilla\r\n\t\t\t\t\tif(beginning){\r\n\t\t\t\t\t\tselection.collapseToStart();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tselection.collapseToEnd();\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{ // Safari\r\n\t\t\t\t\t// pulled from WebCore/ecma/kjs_window.cpp, line 2536\r\n\t\t\t\t\tselection.collapse(beginning);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// IE6-8\r\n\t\t\t\tvar range = doc.selection.createRange();\r\n\t\t\t\trange.collapse(beginning);\r\n\t\t\t\trange.select();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.remove = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to delete the currently selected content from the document.\r\n\t\t\tvar sel = doc.selection;\r\n\t\t\tif(doc.getSelection){\r\n\t\t\t\t// W3C path\r\n\t\t\t\tsel = win.getSelection();\r\n\t\t\t\tsel.deleteFromDocument();\r\n\t\t\t\treturn sel; //Selection\r\n\t\t\t}else{\r\n\t\t\t\t// IE6-8\r\n\t\t\t\tif(sel.type.toLowerCase() != \"none\"){\r\n\t\t\t\t\tsel.clear();\r\n\t\t\t\t}\r\n\t\t\t\treturn sel; //Selection\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.selectElementChildren = function(/*DomNode*/ element, /*Boolean?*/ nochangefocus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tclear previous selection and select the content of the node\r\n\t\t\t//\t\t(excluding the node itself)\r\n\t\t\t// element: DOMNode\r\n\t\t\t//\t\tThe element you wish to select the children content of.\r\n\t\t\t// nochangefocus: Boolean\r\n\t\t\t//\t\tIndicates if the focus should change or not.\r\n\r\n\t\t\tvar range;\r\n\t\t\telement = dom.byId(element);\r\n\t\t\tif(doc.getSelection){\r\n\t\t\t\t// W3C\r\n\t\t\t\tvar selection = win.getSelection();\r\n\t\t\t\tif(has(\"opera\")){\r\n\t\t\t\t\t//Opera's selectAllChildren doesn't seem to work right\r\n\t\t\t\t\t//against <body> nodes and possibly others ... so\r\n\t\t\t\t\t//we use the W3C range API\r\n\t\t\t\t\tif(selection.rangeCount){\r\n\t\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trange = doc.createRange();\r\n\t\t\t\t\t}\r\n\t\t\t\t\trange.setStart(element, 0);\r\n\t\t\t\t\trange.setEnd(element,(element.nodeType == 3) ? element.length : element.childNodes.length);\r\n\t\t\t\t\tselection.addRange(range);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tselection.selectAllChildren(element);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// IE6-8\r\n\t\t\t\trange = element.ownerDocument.body.createTextRange();\r\n\t\t\t\trange.moveToElementText(element);\r\n\t\t\t\tif(!nochangefocus){\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\trange.select(); // IE throws an exception here if the widget is hidden.  See #5439\r\n\t\t\t\t\t}catch(e){ /* squelch */}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.selectElement = function(/*DomNode*/ element, /*Boolean?*/ nochangefocus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tclear previous selection and select element (including all its children)\r\n\t\t\t// element: DOMNode\r\n\t\t\t//\t\tThe element to select.\r\n\t\t\t// nochangefocus: Boolean\r\n\t\t\t//\t\tBoolean indicating if the focus should be changed.  IE only.\r\n\t\t\tvar range;\r\n\t\t\telement = dom.byId(element);\t// TODO: remove for 2.0 or sooner, spec listed above doesn't allow for string\r\n\t\t\tif(doc.getSelection){\r\n\t\t\t\t// W3C path\r\n\t\t\t\tvar selection = doc.getSelection();\r\n\t\t\t\trange = doc.createRange();\r\n\t\t\t\tif(selection.removeAllRanges){ // Mozilla\r\n\t\t\t\t\t// FIXME: does this work on Safari?\r\n\t\t\t\t\tif(has(\"opera\")){\r\n\t\t\t\t\t\t//Opera works if you use the current range on\r\n\t\t\t\t\t\t//the selection if present.\r\n\t\t\t\t\t\tif(selection.getRangeAt(0)){\r\n\t\t\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trange.selectNode(element);\r\n\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\tselection.addRange(range);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// IE6-8\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvar tg = element.tagName ? element.tagName.toLowerCase() : \"\";\r\n\t\t\t\t\tif(tg === \"img\" || tg === \"table\"){\r\n\t\t\t\t\t\trange = baseWindow.body(doc).createControlRange();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trange = baseWindow.body(doc).createRange();\r\n\t\t\t\t\t}\r\n\t\t\t\t\trange.addElement(element);\r\n\t\t\t\t\tif(!nochangefocus){\r\n\t\t\t\t\t\trange.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tthis.selectElementChildren(element, nochangefocus);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.inSelection = function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function determines if 'node' is\r\n\t\t\t//\t\tin the current selection.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\t\t\tif(node){\r\n\t\t\t\tvar newRange;\r\n\t\t\t\tvar range;\r\n\r\n\t\t\t\tif(doc.getSelection){\r\n\t\t\t\t\t// WC3\r\n\t\t\t\t\tvar sel = win.getSelection();\r\n\t\t\t\t\tif(sel && sel.rangeCount > 0){\r\n\t\t\t\t\t\trange = sel.getRangeAt(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(range && range.compareBoundaryPoints && doc.createRange){\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tnewRange = doc.createRange();\r\n\t\t\t\t\t\t\tnewRange.setStart(node, 0);\r\n\t\t\t\t\t\t\tif(range.compareBoundaryPoints(range.START_TO_END, newRange) === 1){\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}catch(e){ /* squelch */}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// IE6-8, so we can't use the range object as the pseudo\r\n\t\t\t\t\t// range doesn't implement the boundary checking, we have to\r\n\t\t\t\t\t// use IE specific crud.\r\n\t\t\t\t\trange = doc.selection.createRange();\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tnewRange = node.ownerDocument.body.createTextRange();\r\n\t\t\t\t\t\tnewRange.moveToElementText(node);\r\n\t\t\t\t\t}catch(e2){/* squelch */}\r\n\t\t\t\t\tif(range && newRange){\r\n\t\t\t\t\t\t// We can finally compare similar to W3C\r\n\t\t\t\t\t\tif(range.compareEndPoints(\"EndToStart\", newRange) === 1){\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false; // Boolean\r\n\t\t};\r\n\r\n\t\tthis.getBookmark = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRetrieves a bookmark that can be used with moveToBookmark to reselect the currently selected range.\r\n\r\n\t\t\t// TODO: merge additional code from Editor._getBookmark into this method\r\n\r\n\t\t\tvar bm, rg, tg, sel = doc.selection, cf = focus.curNode;\r\n\r\n\t\t\tif(doc.getSelection){\r\n\t\t\t\t// W3C Range API for selections.\r\n\t\t\t\tsel = win.getSelection();\r\n\t\t\t\tif(sel){\r\n\t\t\t\t\tif(sel.isCollapsed){\r\n\t\t\t\t\t\ttg = cf? cf.tagName : \"\";\r\n\t\t\t\t\t\tif(tg){\r\n\t\t\t\t\t\t\t// Create a fake rangelike item to restore selections.\r\n\t\t\t\t\t\t\ttg = tg.toLowerCase();\r\n\t\t\t\t\t\t\tif(tg == \"textarea\" ||\r\n\t\t\t\t\t\t\t\t(tg == \"input\" && (!cf.type || cf.type.toLowerCase() == \"text\"))){\r\n\t\t\t\t\t\t\t\tsel = {\r\n\t\t\t\t\t\t\t\t\tstart: cf.selectionStart,\r\n\t\t\t\t\t\t\t\t\tend: cf.selectionEnd,\r\n\t\t\t\t\t\t\t\t\tnode: cf,\r\n\t\t\t\t\t\t\t\t\tpRange: true\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\treturn {isCollapsed: (sel.end <= sel.start), mark: sel}; //Object.\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbm = {isCollapsed:true};\r\n\t\t\t\t\t\tif(sel.rangeCount){\r\n\t\t\t\t\t\t\tbm.mark = sel.getRangeAt(0).cloneRange();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trg = sel.getRangeAt(0);\r\n\t\t\t\t\t\tbm = {isCollapsed: false, mark: rg.cloneRange()};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else if(sel){\r\n\t\t\t\t// If the current focus was a input of some sort and no selection, don't bother saving\r\n\t\t\t\t// a native bookmark.  This is because it causes issues with dialog/page selection restore.\r\n\t\t\t\t// So, we need to create pseudo bookmarks to work with.\r\n\t\t\t\ttg = cf ? cf.tagName : \"\";\r\n\t\t\t\ttg = tg.toLowerCase();\r\n\t\t\t\tif(cf && tg && (tg == \"button\" || tg == \"textarea\" || tg == \"input\")){\r\n\t\t\t\t\tif(sel.type && sel.type.toLowerCase() == \"none\"){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tisCollapsed: true,\r\n\t\t\t\t\t\t\tmark: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trg = sel.createRange();\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tisCollapsed: rg.text && rg.text.length?false:true,\r\n\t\t\t\t\t\t\tmark: {\r\n\t\t\t\t\t\t\t\trange: rg,\r\n\t\t\t\t\t\t\t\tpRange: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbm = {};\r\n\r\n\t\t\t\t//'IE' way for selections.\r\n\t\t\t\ttry{\r\n\t\t\t\t\t// createRange() throws exception when dojo in iframe\r\n\t\t\t\t\t// and nothing selected, see #9632\r\n\t\t\t\t\trg = sel.createRange();\r\n\t\t\t\t\tbm.isCollapsed = !(sel.type == 'Text' ? rg.htmlText.length : rg.length);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tbm.isCollapsed = true;\r\n\t\t\t\t\treturn bm;\r\n\t\t\t\t}\r\n\t\t\t\tif(sel.type.toUpperCase() == 'CONTROL'){\r\n\t\t\t\t\tif(rg.length){\r\n\t\t\t\t\t\tbm.mark=[];\r\n\t\t\t\t\t\tvar i=0,len=rg.length;\r\n\t\t\t\t\t\twhile(i<len){\r\n\t\t\t\t\t\t\tbm.mark.push(rg.item(i++));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbm.isCollapsed = true;\r\n\t\t\t\t\t\tbm.mark = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbm.mark = rg.getBookmark();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"No idea how to store the current selection for this browser!\");\r\n\t\t\t}\r\n\t\t\treturn bm; // Object\r\n\t\t};\r\n\r\n\t\tthis.moveToBookmark = function(/*Object*/ bookmark){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves current selection to a bookmark.\r\n\t\t\t// bookmark:\r\n\t\t\t//\t\tThis should be a returned object from getBookmark().\r\n\r\n\t\t\t// TODO: merge additional code from Editor._moveToBookmark into this method\r\n\r\n\t\t\tvar mark = bookmark.mark;\r\n\t\t\tif(mark){\r\n\t\t\t\tif(doc.getSelection){\r\n\t\t\t\t\t// W3C Range API (FF, WebKit, Opera, etc)\r\n\t\t\t\t\tvar sel = win.getSelection();\r\n\t\t\t\t\tif(sel && sel.removeAllRanges){\r\n\t\t\t\t\t\tif(mark.pRange){\r\n\t\t\t\t\t\t\tvar n = mark.node;\r\n\t\t\t\t\t\t\tn.selectionStart = mark.start;\r\n\t\t\t\t\t\t\tn.selectionEnd = mark.end;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\t\t\t\tsel.addRange(mark);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"No idea how to restore selection for this browser!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(doc.selection && mark){\r\n\t\t\t\t\t//'IE' way.\r\n\t\t\t\t\tvar rg;\r\n\t\t\t\t\tif(mark.pRange){\r\n\t\t\t\t\t\trg = mark.range;\r\n\t\t\t\t\t}else if(lang.isArray(mark)){\r\n\t\t\t\t\t\trg = doc.body.createControlRange();\r\n\t\t\t\t\t\t//rg.addElement does not have call/apply method, so can not call it directly\r\n\t\t\t\t\t\t//rg is not available in \"range.addElement(item)\", so can't use that either\r\n\t\t\t\t\t\tarray.forEach(mark, function(n){\r\n\t\t\t\t\t\t\trg.addElement(n);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trg = doc.body.createTextRange();\r\n\t\t\t\t\t\trg.moveToBookmark(mark);\r\n\t\t\t\t\t}\r\n\t\t\t\t\trg.select();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.isCollapsed = function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if there is no text selected\r\n\t\t\treturn this.getBookmark().isCollapsed;\r\n\t\t};\r\n\t};\r\n\r\n\t// singleton on the main window\r\n\tvar selection = new SelectionManager(window);\r\n\r\n\t// hook for editor to use class\r\n\tselection.SelectionManager = SelectionManager;\r\n\r\n\treturn selection;\r\n});\r\n\ndefine('dijit/_base/focus',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/dom\", // dom.isDescendant\r\n\t\"dojo/_base/lang\", // lang.isArray\r\n\t\"dojo/topic\", // publish\r\n\t\"dojo/_base/window\", // win.doc win.doc.selection win.global win.global.getSelection win.withGlobal\r\n\t\"../focus\",\r\n\t\"../selection\",\r\n\t\"../main\"\t// for exporting symbols to dijit\r\n], function(array, dom, lang, topic, win, focus, selection, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base/focus\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated module to monitor currently focused node and stack of currently focused widgets.\r\n\t\t//\t\tNew code should access dijit/focus directly.\r\n\r\n\t\t// _curFocus: DomNode\r\n\t\t//\t\tCurrently focused item on screen\r\n\t\t_curFocus: null,\r\n\r\n\t\t// _prevFocus: DomNode\r\n\t\t//\t\tPreviously focused item on screen\r\n\t\t_prevFocus: null,\r\n\r\n\t\tisCollapsed: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if there is no text selected\r\n\t\t\treturn dijit.getBookmark().isCollapsed;\r\n\t\t},\r\n\r\n\t\tgetBookmark: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRetrieves a bookmark that can be used with moveToBookmark to return to the same range\r\n\t\t\tvar sel = win.global == window ? selection : new selection.SelectionManager(win.global);\r\n\t\t\treturn sel.getBookmark();\r\n\t\t},\r\n\r\n\t\tmoveToBookmark: function(/*Object*/ bookmark){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves current selection to a bookmark\r\n\t\t\t// bookmark:\r\n\t\t\t//\t\tThis should be a returned object from dijit.getBookmark()\r\n\r\n\t\t\tvar sel = win.global == window ? selection : new selection.SelectionManager(win.global);\r\n\t\t\treturn sel.moveToBookmark(bookmark);\r\n\t\t},\r\n\r\n\t\tgetFocus: function(/*Widget?*/ menu, /*Window?*/ openedForWindow){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled as getFocus(), this returns an Object showing the current focus\r\n\t\t\t//\t\tand selected text.\r\n\t\t\t//\r\n\t\t\t//\t\tCalled as getFocus(widget), where widget is a (widget representing) a button\r\n\t\t\t//\t\tthat was just pressed, it returns where focus was before that button\r\n\t\t\t//\t\twas pressed.   (Pressing the button may have either shifted focus to the button,\r\n\t\t\t//\t\tor removed focus altogether.)   In this case the selected text is not returned,\r\n\t\t\t//\t\tsince it can't be accurately determined.\r\n\t\t\t//\r\n\t\t\t// menu: dijit/_WidgetBase|{domNode: DomNode} structure\r\n\t\t\t//\t\tThe button that was just pressed.  If focus has disappeared or moved\r\n\t\t\t//\t\tto this button, returns the previous focus.  In this case the bookmark\r\n\t\t\t//\t\tinformation is already lost, and null is returned.\r\n\t\t\t//\r\n\t\t\t// openedForWindow:\r\n\t\t\t//\t\tiframe in which menu was opened\r\n\t\t\t//\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle to restore focus/selection, to be passed to `dijit.focus`\r\n\t\t\tvar node = !focus.curNode || (menu && dom.isDescendant(focus.curNode, menu.domNode)) ? dijit._prevFocus : focus.curNode;\r\n\t\t\treturn {\r\n\t\t\t\tnode: node,\r\n\t\t\t\tbookmark: node && (node == focus.curNode) && win.withGlobal(openedForWindow || win.global, dijit.getBookmark),\r\n\t\t\t\topenedForWindow: openedForWindow\r\n\t\t\t}; // Object\r\n\t\t},\r\n\r\n\t\t// _activeStack: dijit/_WidgetBase[]\r\n\t\t//\t\tList of currently active widgets (focused widget and it's ancestors)\r\n\t\t_activeStack: [],\r\n\r\n\t\tregisterIframe: function(/*DomNode*/ iframe){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters listeners on the specified iframe so that any click\r\n\t\t\t//\t\tor focus event on that iframe (or anything in it) is reported\r\n\t\t\t//\t\tas a focus/click event on the `<iframe>` itself.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCurrently only used by editor.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tHandle to pass to unregisterIframe()\r\n\t\t\treturn focus.registerIframe(iframe);\r\n\t\t},\r\n\r\n\t\tunregisterIframe: function(/*Object*/ handle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUnregisters listeners on the specified iframe created by registerIframe.\r\n\t\t\t//\t\tAfter calling be sure to delete or null out the handle itself.\r\n\t\t\t// handle:\r\n\t\t\t//\t\tHandle returned by registerIframe()\r\n\r\n\t\t\thandle && handle.remove();\r\n\t\t},\r\n\r\n\t\tregisterWin: function(/*Window?*/targetWindow, /*DomNode?*/ effectiveNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters listeners on the specified window (either the main\r\n\t\t\t//\t\twindow or an iframe's window) to detect when the user has clicked somewhere\r\n\t\t\t//\t\tor focused somewhere.\r\n\t\t\t// description:\r\n\t\t\t//\t\tUsers should call registerIframe() instead of this method.\r\n\t\t\t// targetWindow:\r\n\t\t\t//\t\tIf specified this is the window associated with the iframe,\r\n\t\t\t//\t\ti.e. iframe.contentWindow.\r\n\t\t\t// effectiveNode:\r\n\t\t\t//\t\tIf specified, report any focus events inside targetWindow as\r\n\t\t\t//\t\tan event on effectiveNode, rather than on evt.target.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tHandle to pass to unregisterWin()\r\n\r\n\t\t\treturn focus.registerWin(targetWindow, effectiveNode);\r\n\t\t},\r\n\r\n\t\tunregisterWin: function(/*Handle*/ handle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUnregisters listeners on the specified window (either the main\r\n\t\t\t//\t\twindow or an iframe's window) according to handle returned from registerWin().\r\n\t\t\t//\t\tAfter calling be sure to delete or null out the handle itself.\r\n\r\n\t\t\thandle && handle.remove();\r\n\t\t}\r\n\t};\r\n\r\n\t// Override focus singleton's focus function so that dijit.focus()\r\n\t// has backwards compatible behavior of restoring selection (although\r\n\t// probably no one is using that).\r\n\tfocus.focus = function(/*Object|DomNode */ handle){\r\n\t\t// summary:\r\n\t\t//\t\tSets the focused node and the selection according to argument.\r\n\t\t//\t\tTo set focus to an iframe's content, pass in the iframe itself.\r\n\t\t// handle:\r\n\t\t//\t\tobject returned by get(), or a DomNode\r\n\r\n\t\tif(!handle){ return; }\r\n\r\n\t\tvar node = \"node\" in handle ? handle.node : handle,\t\t// because handle is either DomNode or a composite object\r\n\t\t\tbookmark = handle.bookmark,\r\n\t\t\topenedForWindow = handle.openedForWindow,\r\n\t\t\tcollapsed = bookmark ? bookmark.isCollapsed : false;\r\n\r\n\t\t// Set the focus\r\n\t\t// Note that for iframe's we need to use the <iframe> to follow the parentNode chain,\r\n\t\t// but we need to set focus to iframe.contentWindow\r\n\t\tif(node){\r\n\t\t\tvar focusNode = (node.tagName.toLowerCase() == \"iframe\") ? node.contentWindow : node;\r\n\t\t\tif(focusNode && focusNode.focus){\r\n\t\t\t\ttry{\r\n\t\t\t\t\t// Gecko throws sometimes if setting focus is impossible,\r\n\t\t\t\t\t// node not displayed or something like that\r\n\t\t\t\t\tfocusNode.focus();\r\n\t\t\t\t}catch(e){/*quiet*/}\r\n\t\t\t}\r\n\t\t\tfocus._onFocusNode(node);\r\n\t\t}\r\n\r\n\t\t// set the selection\r\n\t\t// do not need to restore if current selection is not empty\r\n\t\t// (use keyboard to select a menu item) or if previous selection was collapsed\r\n\t\t// as it may cause focus shift (Esp in IE).\r\n\t\tif(bookmark && win.withGlobal(openedForWindow || win.global, dijit.isCollapsed) && !collapsed){\r\n\t\t\tif(openedForWindow){\r\n\t\t\t\topenedForWindow.focus();\r\n\t\t\t}\r\n\t\t\ttry{\r\n\t\t\t\twin.withGlobal(openedForWindow || win.global, dijit.moveToBookmark, null, [bookmark]);\r\n\t\t\t}catch(e2){\r\n\t\t\t\t/*squelch IE internal error, see http://trac.dojotoolkit.org/ticket/1984 */\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// For back compatibility, monitor changes to focused node and active widget stack,\r\n\t// publishing events and copying changes from focus manager variables into dijit (top level) variables\r\n\tfocus.watch(\"curNode\", function(name, oldVal, newVal){\r\n\t\tdijit._curFocus = newVal;\r\n\t\tdijit._prevFocus = oldVal;\r\n\t\tif(newVal){\r\n\t\t\ttopic.publish(\"focusNode\", newVal);\t// publish\r\n\t\t}\r\n\t});\r\n\tfocus.watch(\"activeStack\", function(name, oldVal, newVal){\r\n\t\tdijit._activeStack = newVal;\r\n\t});\r\n\r\n\tfocus.on(\"widget-blur\", function(widget, by){\r\n\t\ttopic.publish(\"widgetBlur\", widget, by);\t// publish\r\n\t});\r\n\tfocus.on(\"widget-focus\", function(widget, by){\r\n\t\ttopic.publish(\"widgetFocus\", widget, by);\t// publish\r\n\t});\r\n\r\n\tlang.mixin(dijit, exports);\r\n\r\n\t/*===== return exports; =====*/\r\n\treturn dijit;\t// for back compat :-(\r\n});\r\n\ndefine('dijit/_base/manager',[\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/config\", // defaultDuration\r\n\t\"dojo/_base/lang\",\r\n\t\"../registry\",\r\n\t\"../main\"\t// for setting exports to dijit namespace\r\n], function(array, config, lang, registry, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base/manager\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated.  Shim to methods on registry, plus a few other declarations.\r\n\t\t//\t\tNew code should access dijit/registry directly when possible.\r\n\t};\r\n\r\n\tarray.forEach([\"byId\", \"getUniqueId\", \"findWidgets\", \"_destroyAll\", \"byNode\", \"getEnclosingWidget\"], function(name){\r\n\t\texports[name] = registry[name];\r\n\t});\r\n\r\n\t lang.mixin(exports, {\r\n\t\t // defaultDuration: Integer\r\n\t\t //\t\tThe default fx.animation speed (in ms) to use for all Dijit\r\n\t\t //\t\ttransitional fx.animations, unless otherwise specified\r\n\t\t //\t\ton a per-instance basis. Defaults to 200, overrided by\r\n\t\t //\t\t`djConfig.defaultDuration`\r\n\t\t defaultDuration: config[\"defaultDuration\"] || 200\r\n\t });\r\n\r\n\tlang.mixin(dijit, exports);\r\n\r\n\t/*===== return exports; =====*/\r\n\treturn dijit;\t// for back compat :-(\r\n});\r\n\ndefine('dijit/Viewport',[\r\n\t\"dojo/Evented\",\r\n\t\"dojo/on\",\r\n\t\"dojo/domReady\",\r\n\t\"dojo/sniff\",\t// has(\"ie\"), has(\"ios\")\r\n\t\"dojo/window\" // getBox()\r\n], function(Evented, on, domReady, has, winUtils){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Viewport\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tUtility singleton to watch for viewport resizes, avoiding duplicate notifications\r\n\t\t//\t\twhich can lead to infinite loops.\r\n\t\t// description:\r\n\t\t//\t\tUsage: Viewport.on(\"resize\", myCallback).\r\n\t\t//\r\n\t\t//\t\tmyCallback() is called without arguments in case it's _WidgetBase.resize(),\r\n\t\t//\t\twhich would interpret the argument as the size to make the widget.\r\n\t};\r\n\t=====*/\r\n\r\n\tvar Viewport = new Evented();\r\n\r\n\tvar focusedNode;\r\n\r\n\tdomReady(function(){\r\n\t\tvar oldBox = winUtils.getBox();\r\n\t\tViewport._rlh = on(window, \"resize\", function(){\r\n\t\t\tvar newBox = winUtils.getBox();\r\n\t\t\tif(oldBox.h == newBox.h && oldBox.w == newBox.w){ return; }\r\n\t\t\toldBox = newBox;\r\n\t\t\tViewport.emit(\"resize\");\r\n\t\t});\r\n\r\n\t\t// Also catch zoom changes on IE8, since they don't naturally generate resize events\r\n\t\tif(has(\"ie\") == 8){\r\n\t\t\tvar deviceXDPI = screen.deviceXDPI;\r\n\t\t\tsetInterval(function(){\r\n\t\t\t\tif(screen.deviceXDPI != deviceXDPI){\r\n\t\t\t\t\tdeviceXDPI = screen.deviceXDPI;\r\n\t\t\t\t\tViewport.emit(\"resize\");\r\n\t\t\t\t}\r\n\t\t\t}, 500);\r\n\t\t}\r\n\r\n\t\t// On iOS, keep track of the focused node so we can guess when the keyboard is/isn't being displayed.\r\n\t\tif(has(\"ios\")){\r\n\t\t\ton(document, \"focusin\", function(evt){\r\n\t\t\t\tfocusedNode = evt.target;\r\n\t\t\t});\r\n\t\t\ton(document, \"focusout\", function(evt){\r\n\t\t\t\tfocusedNode = null;\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tViewport.getEffectiveBox = function(/*Document*/ doc){\r\n\t\t// summary:\r\n\t\t//\t\tGet the size of the viewport, or on mobile devices, the part of the viewport not obscured by the\r\n\t\t//\t\tvirtual keyboard.\r\n\r\n\t\tvar box = winUtils.getBox(doc);\r\n\r\n\t\t// Account for iOS virtual keyboard, if it's being shown.  Unfortunately no direct way to check or measure.\r\n\t\tvar tag = focusedNode && focusedNode.tagName && focusedNode.tagName.toLowerCase();\r\n\t\tif(has(\"ios\") && focusedNode && !focusedNode.readOnly && (tag == \"textarea\" || (tag == \"input\" &&\r\n\t\t\t/^(color|email|number|password|search|tel|text|url)$/.test(focusedNode.type)))){\r\n\r\n\t\t\t// Box represents the size of the viewport.  Some of the viewport is likely covered by the keyboard.\r\n\t\t\t// Estimate height of visible viewport assuming viewport goes to bottom of screen, but is covered by keyboard.\r\n\t\t\tbox.h *= (orientation == 0 || orientation == 180 ? 0.66 : 0.40);\r\n\r\n\t\t\t// Above measurement will be inaccurate if viewport was scrolled up so far that it ends before the bottom\r\n\t\t\t// of the screen.   In this case, keyboard isn't covering as much of the viewport as we thought.\r\n\t\t\t// We know the visible size is at least the distance from the top of the viewport to the focused node.\r\n\t\t\tvar rect = focusedNode.getBoundingClientRect();\r\n\t\t\tbox.h = Math.max(box.h, rect.top + rect.height);\r\n\t\t}\r\n\r\n\t\treturn box;\r\n\t};\r\n\r\n\treturn Viewport;\r\n});\r\n\ndefine('dijit/place',[\r\n\t\"dojo/_base/array\", // array.forEach array.map array.some\r\n\t\"dojo/dom-geometry\", // domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"./Viewport\", // getEffectiveBox\r\n\t\"./main\"\t// dijit (defining dijit.place to match API doc)\r\n], function(array, domGeometry, domStyle, kernel, win, Viewport, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/place\r\n\r\n\r\n\tfunction _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n\t\t// summary:\r\n\t\t//\t\tGiven a list of spots to put node, put it at the first spot where it fits,\r\n\t\t//\t\tof if it doesn't fit anywhere then the place with the least overflow\r\n\t\t// choices: Array\r\n\t\t//\t\tArray of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n\t\t//\t\tAbove example says to put the top-left corner of the node at (10,20)\r\n\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n\t\t//\t\tfor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t//\t\tbased on their orientation relative to the parent.\t This adjusts the popup based on orientation.\r\n\t\t//\t\tIt also passes in the available size for the popup, which is useful for tooltips to\r\n\t\t//\t\ttell them that their width is limited to a certain amount.\t layoutNode() may return a value expressing\r\n\t\t//\t\thow much the popup had to be modified to fit into the available space.\t This is used to determine\r\n\t\t//\t\twhat the best placement is.\r\n\t\t// aroundNodeCoords: Object\r\n\t\t//\t\tSize of aroundNode, ex: {w: 200, h: 50}\r\n\r\n\t\t// get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n\t\t// viewport over document\r\n\t\tvar view = Viewport.getEffectiveBox(node.ownerDocument);\r\n\r\n\t\t// This won't work if the node is inside a <div style=\"position: relative\">,\r\n\t\t// so reattach it to <body>.\t (Otherwise, the positioning will be wrong\r\n\t\t// and also it might get cutoff.)\r\n\t\tif(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n\t\t\twin.body(node.ownerDocument).appendChild(node);\r\n\t\t}\r\n\r\n\t\tvar best = null;\r\n\t\tarray.some(choices, function(choice){\r\n\t\t\tvar corner = choice.corner;\r\n\t\t\tvar pos = choice.pos;\r\n\t\t\tvar overflow = 0;\r\n\r\n\t\t\t// calculate amount of space available given specified position of node\r\n\t\t\tvar spaceAvailable = {\r\n\t\t\t\tw: {\r\n\t\t\t\t\t'L': view.l + view.w - pos.x,\r\n\t\t\t\t\t'R': pos.x - view.l,\r\n\t\t\t\t\t'M': view.w\r\n\t\t\t\t}[corner.charAt(1)],\r\n\t\t\t\th: {\r\n\t\t\t\t\t'T': view.t + view.h - pos.y,\r\n\t\t\t\t\t'B': pos.y - view.t,\r\n\t\t\t\t\t'M': view.h\r\n\t\t\t\t}[corner.charAt(0)]\r\n\t\t\t};\r\n\r\n\t\t\t// Clear left/right position settings set earlier so they don't interfere with calculations,\r\n\t\t\t// specifically when layoutNode() (a.k.a. Tooltip.orient()) measures natural width of Tooltip\r\n\t\t\tvar s = node.style;\r\n\t\t\ts.left = s.right = \"auto\";\r\n\r\n\t\t\t// configure node to be displayed in given position relative to button\r\n\t\t\t// (need to do this in order to get an accurate size for the node, because\r\n\t\t\t// a tooltip's size changes based on position, due to triangle)\r\n\t\t\tif(layoutNode){\r\n\t\t\t\tvar res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n\t\t\t\toverflow = typeof res == \"undefined\" ? 0 : res;\r\n\t\t\t}\r\n\r\n\t\t\t// get node's size\r\n\t\t\tvar style = node.style;\r\n\t\t\tvar oldDisplay = style.display;\r\n\t\t\tvar oldVis = style.visibility;\r\n\t\t\tif(style.display == \"none\"){\r\n\t\t\t\tstyle.visibility = \"hidden\";\r\n\t\t\t\tstyle.display = \"\";\r\n\t\t\t}\r\n\t\t\tvar bb = domGeometry.position(node);\r\n\t\t\tstyle.display = oldDisplay;\r\n\t\t\tstyle.visibility = oldVis;\r\n\r\n\t\t\t// coordinates and size of node with specified corner placed at pos,\r\n\t\t\t// and clipped by viewport\r\n\t\t\tvar\r\n\t\t\t\tstartXpos = {\r\n\t\t\t\t\t'L': pos.x,\r\n\t\t\t\t\t'R': pos.x - bb.w,\r\n\t\t\t\t\t'M': Math.max(view.l, Math.min(view.l + view.w, pos.x + (bb.w >> 1)) - bb.w) // M orientation is more flexible\r\n\t\t\t\t}[corner.charAt(1)],\r\n\t\t\t\tstartYpos = {\r\n\t\t\t\t\t'T': pos.y,\r\n\t\t\t\t\t'B': pos.y - bb.h,\r\n\t\t\t\t\t'M': Math.max(view.t, Math.min(view.t + view.h, pos.y + (bb.h >> 1)) - bb.h)\r\n\t\t\t\t}[corner.charAt(0)],\r\n\t\t\t\tstartX = Math.max(view.l, startXpos),\r\n\t\t\t\tstartY = Math.max(view.t, startYpos),\r\n\t\t\t\tendX = Math.min(view.l + view.w, startXpos + bb.w),\r\n\t\t\t\tendY = Math.min(view.t + view.h, startYpos + bb.h),\r\n\t\t\t\twidth = endX - startX,\r\n\t\t\t\theight = endY - startY;\r\n\r\n\t\t\toverflow += (bb.w - width) + (bb.h - height);\r\n\r\n\t\t\tif(best == null || overflow < best.overflow){\r\n\t\t\t\tbest = {\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\taroundCorner: choice.aroundCorner,\r\n\t\t\t\t\tx: startX,\r\n\t\t\t\t\ty: startY,\r\n\t\t\t\t\tw: width,\r\n\t\t\t\t\th: height,\r\n\t\t\t\t\toverflow: overflow,\r\n\t\t\t\t\tspaceAvailable: spaceAvailable\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn !overflow;\r\n\t\t});\r\n\r\n\t\t// In case the best position is not the last one we checked, need to call\r\n\t\t// layoutNode() again.\r\n\t\tif(best.overflow && layoutNode){\r\n\t\t\tlayoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n\t\t}\r\n\r\n\t\t// And then position the node.  Do this last, after the layoutNode() above\r\n\t\t// has sized the node, due to browser quirks when the viewport is scrolled\r\n\t\t// (specifically that a Tooltip will shrink to fit as though the window was\r\n\t\t// scrolled to the left).\r\n\r\n\t\tvar top = best.y,\r\n\t\t\tside = best.x,\r\n\t\t\tbody = win.body(node.ownerDocument);\r\n\r\n\t\tif(/relative|absolute/.test(domStyle.get(body, \"position\"))){\r\n\t\t\t// compensate for margin on <body>, see #16148\r\n\t\t\ttop -= domStyle.get(body, \"marginTop\");\r\n\t\t\tside -= domStyle.get(body, \"marginLeft\");\r\n\t\t}\r\n\r\n\t\tvar s = node.style;\r\n\t\ts.top = top + \"px\";\r\n\t\ts.left = side + \"px\";\r\n\t\ts.right = \"auto\";\t// needed for FF or else tooltip goes to far left\r\n\r\n\t\treturn best;\r\n\t}\r\n\r\n\tvar reverse = {\r\n\t\t// Map from corner to kitty-corner\r\n\t\t\"TL\": \"BR\",\r\n\t\t\"TR\": \"BL\",\r\n\t\t\"BL\": \"TR\",\r\n\t\t\"BR\": \"TL\"\r\n\t};\r\n\r\n\tvar place = {\r\n\t\t// summary:\r\n\t\t//\t\tCode to place a DOMNode relative to another DOMNode.\r\n\t\t//\t\tLoad using require([\"dijit/place\"], function(place){ ... }).\r\n\r\n\t\tat: function(node, pos, corners, padding, layoutNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPositions node kitty-corner to the rectangle centered at (pos.x, pos.y) with width and height of\r\n\t\t\t//\t\tpadding.x * 2 and padding.y * 2, or zero if padding not specified.  Picks first corner in corners[]\r\n\t\t\t//\t\twhere node is fully visible, or the corner where it's most visible.\r\n\t\t\t//\r\n\t\t\t//\t\tNode is assumed to be absolutely or relatively positioned.\r\n\t\t\t// node: DOMNode\r\n\t\t\t//\t\tThe node to position\r\n\t\t\t// pos: dijit/place.__Position\r\n\t\t\t//\t\tObject like {x: 10, y: 20}\r\n\t\t\t// corners: String[]\r\n\t\t\t//\t\tArray of Strings representing order to try corners of the node in, like [\"TR\", \"BL\"].\r\n\t\t\t//\t\tPossible values are:\r\n\t\t\t//\r\n\t\t\t//\t\t- \"BL\" - bottom left\r\n\t\t\t//\t\t- \"BR\" - bottom right\r\n\t\t\t//\t\t- \"TL\" - top left\r\n\t\t\t//\t\t- \"TR\" - top right\r\n\t\t\t// padding: dijit/place.__Position?\r\n\t\t\t//\t\tOptional param to set padding, to put some buffer around the element you want to position.\r\n\t\t\t//\t\tDefaults to zero.\r\n\t\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n\t\t\t//\t\tFor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t\t//\t\tbased on their orientation relative to the parent.  This adjusts the popup based on orientation.\r\n\t\t\t// example:\r\n\t\t\t//\t\tTry to place node's top right corner at (10,20).\r\n\t\t\t//\t\tIf that makes node go (partially) off screen, then try placing\r\n\t\t\t//\t\tbottom left corner at (10,20).\r\n\t\t\t//\t|\tplace(node, {x: 10, y: 20}, [\"TR\", \"BL\"])\r\n\t\t\tvar choices = array.map(corners, function(corner){\r\n\t\t\t\tvar c = {\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\taroundCorner: reverse[corner],\t// so TooltipDialog.orient() gets aroundCorner argument set\r\n\t\t\t\t\tpos: {x: pos.x,y: pos.y}\r\n\t\t\t\t};\r\n\t\t\t\tif(padding){\r\n\t\t\t\t\tc.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n\t\t\t\t\tc.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n\t\t\t\t}\r\n\t\t\t\treturn c;\r\n\t\t\t});\r\n\r\n\t\t\treturn _place(node, choices, layoutNode);\r\n\t\t},\r\n\r\n\t\taround: function(\r\n\t\t\t/*DomNode*/\t\tnode,\r\n\t\t\t/*DomNode|dijit/place.__Rectangle*/ anchor,\r\n\t\t\t/*String[]*/\tpositions,\r\n\t\t\t/*Boolean*/\t\tleftToRight,\r\n\t\t\t/*Function?*/\tlayoutNode){\r\n\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPosition node adjacent or kitty-corner to anchor\r\n\t\t\t//\t\tsuch that it's fully visible in viewport.\r\n\t\t\t// description:\r\n\t\t\t//\t\tPlace node such that corner of node touches a corner of\r\n\t\t\t//\t\taroundNode, and that node is fully visible.\r\n\t\t\t// anchor:\r\n\t\t\t//\t\tEither a DOMNode or a rectangle (object with x, y, width, height).\r\n\t\t\t// positions:\r\n\t\t\t//\t\tOrdered list of positions to try matching up.\r\n\t\t\t//\r\n\t\t\t//\t\t- before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n\t\t\t//\t\t\tof RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n\t\t\t//\t\t\twith the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n\t\t\t//\t\t- after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n\t\t\t//\t\t\tof RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n\t\t\t//\t\t\twith the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n\t\t\t//\t\t- before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n\t\t\t//\t\t\tin the case of RTL scripts like Hebrew and Arabic\r\n\t\t\t//\t\t- after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n\t\t\t//\t\t\tin the case of RTL scripts like Hebrew and Arabic\r\n\t\t\t//\t\t- above-centered: drop down is centered above anchor node\r\n\t\t\t//\t\t- above: drop down goes above anchor node, left sides aligned\r\n\t\t\t//\t\t- above-alt: drop down goes above anchor node, right sides aligned\r\n\t\t\t//\t\t- below-centered: drop down is centered above anchor node\r\n\t\t\t//\t\t- below: drop down goes below anchor node\r\n\t\t\t//\t\t- below-alt: drop down goes below anchor node, right sides aligned\r\n\t\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n\t\t\t//\t\tFor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t\t//\t\tbased on their orientation relative to the parent.\t This adjusts the popup based on orientation.\r\n\t\t\t// leftToRight:\r\n\t\t\t//\t\tTrue if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n\t\t\t//\t\tpositions slightly.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tplaceAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n\t\t\t//\t\tThis will try to position node such that node's top-left corner is at the same position\r\n\t\t\t//\t\tas the bottom left corner of the aroundNode (ie, put node below\r\n\t\t\t//\t\taroundNode, with left edges aligned).\tIf that fails it will try to put\r\n\t\t\t//\t\tthe bottom-right corner of node where the top right corner of aroundNode is\r\n\t\t\t//\t\t(ie, put node above aroundNode, with right edges aligned)\r\n\t\t\t//\r\n\r\n\t\t\t// If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n\t\t\tvar aroundNodePos;\r\n\t\t\tif(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n\t\t\t\taroundNodePos = domGeometry.position(anchor, true);\r\n\r\n\t\t\t\t// For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n\t\t\t\t// overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n\t\t\t\t// width of either anchor or popup because in both cases the border may be on an inner node.\r\n\t\t\t\tif(/^(above|below)/.test(positions[0])){\r\n\t\t\t\t\tvar anchorBorder = domGeometry.getBorderExtents(anchor),\r\n\t\t\t\t\t\tanchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n\t\t\t\t\t\tnodeBorder =  domGeometry.getBorderExtents(node),\r\n\t\t\t\t\t\tnodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n\t\t\t\t\taroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n\t\t\t\t\taroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n\t\t\t\t\t\tMath.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\taroundNodePos = anchor;\r\n\t\t\t}\r\n\r\n\t\t\t// Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n\t\t\tif(anchor.parentNode){\r\n\t\t\t\t// ignore nodes between position:relative and position:absolute\r\n\t\t\t\tvar sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n\t\t\t\tvar parent = anchor.parentNode;\r\n\t\t\t\twhile(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n\t\t\t\t\tvar parentPos = domGeometry.position(parent, true),\r\n\t\t\t\t\t\tpcs = domStyle.getComputedStyle(parent);\r\n\t\t\t\t\tif(/relative|absolute/.test(pcs.position)){\r\n\t\t\t\t\t\tsawPosAbsolute = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n\t\t\t\t\t\tvar bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n\t\t\t\t\t\tvar rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n\t\t\t\t\t\taroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n\t\t\t\t\t\taroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n\t\t\t\t\t\taroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n\t\t\t\t\t\taroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(pcs.position == \"absolute\"){\r\n\t\t\t\t\t\tsawPosAbsolute = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparent = parent.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\r\n\t\t\tvar x = aroundNodePos.x,\r\n\t\t\t\ty = aroundNodePos.y,\r\n\t\t\t\twidth = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n\t\t\t\theight = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n\t\t\t// Convert positions arguments into choices argument for _place()\r\n\t\t\tvar choices = [];\r\n\t\t\tfunction push(aroundCorner, corner){\r\n\t\t\t\tchoices.push({\r\n\t\t\t\t\taroundCorner: aroundCorner,\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\tpos: {\r\n\t\t\t\t\t\tx: {\r\n\t\t\t\t\t\t\t'L': x,\r\n\t\t\t\t\t\t\t'R': x + width,\r\n\t\t\t\t\t\t\t'M': x + (width >> 1)\r\n\t\t\t\t\t\t}[aroundCorner.charAt(1)],\r\n\t\t\t\t\t\ty: {\r\n\t\t\t\t\t\t\t'T': y,\r\n\t\t\t\t\t\t\t'B': y + height,\r\n\t\t\t\t\t\t\t'M': y + (height >> 1)\r\n\t\t\t\t\t\t}[aroundCorner.charAt(0)]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tarray.forEach(positions, function(pos){\r\n\t\t\t\tvar ltr =  leftToRight;\r\n\t\t\t\tswitch(pos){\r\n\t\t\t\t\tcase \"above-centered\":\r\n\t\t\t\t\t\tpush(\"TM\", \"BM\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"below-centered\":\r\n\t\t\t\t\t\tpush(\"BM\", \"TM\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"after-centered\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"before-centered\":\r\n\t\t\t\t\t\tpush(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"after\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"before\":\r\n\t\t\t\t\t\tpush(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n\t\t\t\t\t\tpush(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"below-alt\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"below\":\r\n\t\t\t\t\t\t// first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n\t\t\t\t\t\tpush(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n\t\t\t\t\t\tpush(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"above-alt\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"above\":\r\n\t\t\t\t\t\t// first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n\t\t\t\t\t\tpush(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n\t\t\t\t\t\tpush(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n\t\t\t\t\t\t// Not meant to be used directly.  Remove for 2.0.\r\n\t\t\t\t\t\tpush(pos.aroundCorner, pos.corner);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar position = _place(node, choices, layoutNode, {w: width, h: height});\r\n\t\t\tposition.aroundNodePos = aroundNodePos;\r\n\r\n\t\t\treturn position;\r\n\t\t}\r\n\t};\r\n\r\n\t/*=====\r\n\tplace.__Position = {\r\n\t\t// x: Integer\r\n\t\t//\t\thorizontal coordinate in pixels, relative to document body\r\n\t\t// y: Integer\r\n\t\t//\t\tvertical coordinate in pixels, relative to document body\r\n\t};\r\n\tplace.__Rectangle = {\r\n\t\t// x: Integer\r\n\t\t//\t\thorizontal offset in pixels, relative to document body\r\n\t\t// y: Integer\r\n\t\t//\t\tvertical offset in pixels, relative to document body\r\n\t\t// w: Integer\r\n\t\t//\t\twidth in pixels.   Can also be specified as \"width\" for backwards-compatibility.\r\n\t\t// h: Integer\r\n\t\t//\t\theight in pixels.   Can also be specified as \"height\" for backwards-compatibility.\r\n\t};\r\n\t=====*/\r\n\r\n\treturn dijit.place = place;\t// setting dijit.place for back-compat, remove for 2.0\r\n});\r\n\ndefine('dijit/_base/place',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/lang\", // lang.isArray, lang.mixin\r\n\t\"dojo/window\", // windowUtils.getBox\r\n\t\"../place\",\r\n\t\"../main\"\t// export to dijit namespace\r\n], function(array, lang, windowUtils, place, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base/place\r\n\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated back compatibility module, new code should use dijit/place directly instead of using this module.\r\n\t};\r\n\r\n\texports.getViewport = function(){\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated method to return the dimensions and scroll position of the viewable area of a browser window.\r\n\t\t//\t\tNew code should use windowUtils.getBox()\r\n\r\n\t\treturn windowUtils.getBox();\r\n\t};\r\n\r\n\texports.placeOnScreen = place.at;\r\n\r\n\texports.placeOnScreenAroundElement = function(node, aroundNode, aroundCorners, layoutNode){\r\n\t\t// summary:\r\n\t\t//\t\tLike dijit.placeOnScreenAroundNode(), except it accepts an arbitrary object\r\n\t\t//\t\tfor the \"around\" argument and finds a proper processor to place a node.\r\n\t\t//\t\tDeprecated, new code should use dijit/place.around() instead.\r\n\r\n\t\t// Convert old style {\"BL\": \"TL\", \"BR\": \"TR\"} type argument\r\n\t\t// to style needed by dijit.place code:\r\n\t\t//\t\t[\r\n\t\t//\t\t\t{aroundCorner: \"BL\", corner: \"TL\" },\r\n\t\t//\t\t\t{aroundCorner: \"BR\", corner: \"TR\" }\r\n\t\t//\t\t]\r\n\t\tvar positions;\r\n\t\tif(lang.isArray(aroundCorners)){\r\n\t\t\tpositions = aroundCorners;\r\n\t\t}else{\r\n\t\t\tpositions = [];\r\n\t\t\tfor(var key in aroundCorners){\r\n\t\t\t\tpositions.push({aroundCorner: key, corner: aroundCorners[key]});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn place.around(node, aroundNode, positions, true, layoutNode);\r\n\t};\r\n\r\n\texports.placeOnScreenAroundNode = exports.placeOnScreenAroundElement;\r\n\t/*=====\r\n\texports.placeOnScreenAroundNode = function(node, aroundNode, aroundCorners, layoutNode){\r\n\t\t// summary:\r\n\t\t//\t\tPosition node adjacent or kitty-corner to aroundNode\r\n\t\t//\t\tsuch that it's fully visible in viewport.\r\n\t\t//\t\tDeprecated, new code should use dijit/place.around() instead.\r\n\t};\r\n\t=====*/\r\n\r\n\texports.placeOnScreenAroundRectangle = exports.placeOnScreenAroundElement;\r\n\t/*=====\r\n\texports.placeOnScreenAroundRectangle = function(node, aroundRect, aroundCorners, layoutNode){\r\n\t\t// summary:\r\n\t\t//\t\tLike dijit.placeOnScreenAroundNode(), except that the \"around\"\r\n\t\t//\t\tparameter is an arbitrary rectangle on the screen (x, y, width, height)\r\n\t\t//\t\tinstead of a dom node.\r\n\t\t//\t\tDeprecated, new code should use dijit/place.around() instead.\r\n\t};\r\n\t=====*/\r\n\r\n\texports.getPopupAroundAlignment = function(/*Array*/ position, /*Boolean*/ leftToRight){\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated method, unneeded when using dijit/place directly.\r\n\t\t//\t\tTransforms the passed array of preferred positions into a format suitable for\r\n\t\t//\t\tpassing as the aroundCorners argument to dijit/place.placeOnScreenAroundElement.\r\n\t\t// position: String[]\r\n\t\t//\t\tThis variable controls the position of the drop down.\r\n\t\t//\t\tIt's an array of strings with the following values:\r\n\t\t//\r\n\t\t//\t\t- before: places drop down to the left of the target node/widget, or to the right in\r\n\t\t//\t\t  the case of RTL scripts like Hebrew and Arabic\r\n\t\t//\t\t- after: places drop down to the right of the target node/widget, or to the left in\r\n\t\t//\t\t  the case of RTL scripts like Hebrew and Arabic\r\n\t\t//\t\t- above: drop down goes above target node\r\n\t\t//\t\t- below: drop down goes below target node\r\n\t\t//\r\n\t\t//\t\tThe list is positions is tried, in order, until a position is found where the drop down fits\r\n\t\t//\t\twithin the viewport.\r\n\t\t// leftToRight: Boolean\r\n\t\t//\t\tWhether the popup will be displaying in leftToRight mode.\r\n\r\n\t\tvar align = {};\r\n\t\tarray.forEach(position, function(pos){\r\n\t\t\tvar ltr = leftToRight;\r\n\t\t\tswitch(pos){\r\n\t\t\t\tcase \"after\":\r\n\t\t\t\t\talign[leftToRight ? \"BR\" : \"BL\"] = leftToRight ? \"BL\" : \"BR\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\talign[leftToRight ? \"BL\" : \"BR\"] = leftToRight ? \"BR\" : \"BL\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"below-alt\":\r\n\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t// fall through\r\n\t\t\t\tcase \"below\":\r\n\t\t\t\t\t// first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n\t\t\t\t\talign[ltr ? \"BL\" : \"BR\"] = ltr ? \"TL\" : \"TR\";\r\n\t\t\t\t\talign[ltr ? \"BR\" : \"BL\"] = ltr ? \"TR\" : \"TL\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"above-alt\":\r\n\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t// fall through\r\n\t\t\t\tcase \"above\":\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n\t\t\t\t\talign[ltr ? \"TL\" : \"TR\"] = ltr ? \"BL\" : \"BR\";\r\n\t\t\t\t\talign[ltr ? \"TR\" : \"TL\"] = ltr ? \"BR\" : \"BL\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn align;\r\n\t};\r\n\r\n\tlang.mixin(dijit, exports);\r\n\r\n\t/*===== return exports; =====*/\r\n\treturn dijit;\t// for back compat :-(\r\n});\r\n\ndefine('dijit/BackgroundIframe',[\r\n\t\"require\",\t\t\t// require.toUrl\r\n\t\"./main\",\t// to export dijit.BackgroundIframe\r\n\t\"dojo/_base/config\",\r\n\t\"dojo/dom-construct\", // domConstruct.create\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/_base/lang\", // lang.extend lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\" // has(\"ie\"), has(\"trident\"), has(\"quirks\")\r\n], function(require, dijit, config, domConstruct, domStyle, lang, on, has){\r\n\r\n\t// module:\r\n\t//\t\tdijit/BackgroundIFrame\r\n\r\n\t// Flag for whether to create background iframe behind popups like Menus and Dialog.\r\n\t// A background iframe is useful to prevent problems with popups appearing behind applets/pdf files,\r\n\t// and is also useful on older versions of IE (IE6 and IE7) to prevent the \"bleed through select\" problem.\r\n\t// By default, it's enabled for IE6-10, excluding Windows Phone 8,\r\n\t// and it's also enabled for IE11 on Windows 7 and Windows 2008 Server.\r\n\t// TODO: For 2.0, make this false by default.  Also, possibly move definition to has.js so that this module can be\r\n\t// conditionally required via  dojo/has!bgIfame?dijit/BackgroundIframe\r\n\thas.add(\"config-bgIframe\",\r\n\t\t(has(\"ie\") && !/IEMobile\\/10\\.0/.test(navigator.userAgent)) || // No iframe on WP8, to match 1.9 behavior\r\n\t\t(has(\"trident\") && /Windows NT 6.[01]/.test(navigator.userAgent)));\r\n\r\n\tvar _frames = new function(){\r\n\t\t// summary:\r\n\t\t//\t\tcache of iframes\r\n\r\n\t\tvar queue = [];\r\n\r\n\t\tthis.pop = function(){\r\n\t\t\tvar iframe;\r\n\t\t\tif(queue.length){\r\n\t\t\t\tiframe = queue.pop();\r\n\t\t\t\tiframe.style.display=\"\";\r\n\t\t\t}else{\r\n\t\t\t\t// transparency needed for DialogUnderlay and for tooltips on IE (to see screen near connector)\r\n\t\t\t\tif(has(\"ie\") < 9){\r\n\t\t\t\t\tvar burl = config[\"dojoBlankHtmlUrl\"] || require.toUrl(\"dojo/resources/blank.html\") || \"javascript:\\\"\\\"\";\r\n\t\t\t\t\tvar html=\"<iframe src='\" + burl + \"' role='presentation'\"\r\n\t\t\t\t\t\t+ \" style='position: absolute; left: 0px; top: 0px;\"\r\n\t\t\t\t\t\t+ \"z-index: -1; filter:Alpha(Opacity=\\\"0\\\");'>\";\r\n\t\t\t\t\tiframe = document.createElement(html);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tiframe = domConstruct.create(\"iframe\");\r\n\t\t\t\t\tiframe.src = 'javascript:\"\"';\r\n\t\t\t\t\tiframe.className = \"dijitBackgroundIframe\";\r\n\t\t\t\t\tiframe.setAttribute(\"role\", \"presentation\");\r\n\t\t\t\t\tdomStyle.set(iframe, \"opacity\", 0.1);\r\n\t\t\t\t}\r\n\t\t\t\tiframe.tabIndex = -1; // Magic to prevent iframe from getting focus on tab keypress - as style didn't work.\r\n\t\t\t}\r\n\t\t\treturn iframe;\r\n\t\t};\r\n\r\n\t\tthis.push = function(iframe){\r\n\t\t\tiframe.style.display=\"none\";\r\n\t\t\tqueue.push(iframe);\r\n\t\t}\r\n\t}();\r\n\r\n\r\n\tdijit.BackgroundIframe = function(/*DomNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tFor IE/FF z-index shenanigans. id attribute is required.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tnew dijit.BackgroundIframe(node).\r\n\t\t//\r\n\t\t//\t\tMakes a background iframe as a child of node, that fills\r\n\t\t//\t\tarea (and position) of node\r\n\r\n\t\tif(!node.id){ throw new Error(\"no id\"); }\r\n\t\tif(has(\"config-bgIframe\")){\r\n\t\t\tvar iframe = (this.iframe = _frames.pop());\r\n\t\t\tnode.appendChild(iframe);\r\n\t\t\tif(has(\"ie\")<7 || has(\"quirks\")){\r\n\t\t\t\tthis.resize(node);\r\n\t\t\t\tthis._conn = on(node, 'resize', lang.hitch(this, \"resize\", node));\r\n\t\t\t}else{\r\n\t\t\t\tdomStyle.set(iframe, {\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: '100%'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tlang.extend(dijit.BackgroundIframe, {\r\n\t\tresize: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the iframe so it's the same size as node.\r\n\t\t\t//\t\tNeeded on IE6 and IE/quirks because height:100% doesn't work right.\r\n\t\t\tif(this.iframe){\r\n\t\t\t\tdomStyle.set(this.iframe, {\r\n\t\t\t\t\twidth: node.offsetWidth + 'px',\r\n\t\t\t\t\theight: node.offsetHeight + 'px'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdestroy the iframe\r\n\t\t\tif(this._conn){\r\n\t\t\t\tthis._conn.remove();\r\n\t\t\t\tthis._conn = null;\r\n\t\t\t}\r\n\t\t\tif(this.iframe){\r\n\t\t\t\tthis.iframe.parentNode.removeChild(this.iframe);\r\n\t\t\t\t_frames.push(this.iframe);\r\n\t\t\t\tdelete this.iframe;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn dijit.BackgroundIframe;\r\n});\r\n\ndefine('dijit/popup',[\r\n\t\"dojo/_base/array\", // array.forEach array.some\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.isDescendant\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-construct\", // domConstruct.create domConstruct.destroy\r\n\t\"dojo/dom-geometry\", // domGeometry.isBodyLtr\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/has\", // has(\"config-bgIframe\")\r\n\t\"dojo/keys\",\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"./place\",\r\n\t\"./BackgroundIframe\",\r\n\t\"./Viewport\",\r\n\t\"./main\"    // dijit (defining dijit.popup to match API doc)\r\n], function(array, aspect, declare, dom, domAttr, domConstruct, domGeometry, domStyle, has, keys, lang, on,\r\n\t\t\tplace, BackgroundIframe, Viewport, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/popup\r\n\r\n\t/*=====\r\n\t var __OpenArgs = {\r\n\t\t // popup: Widget\r\n\t\t //\t\twidget to display\r\n\t\t // parent: Widget\r\n\t\t //\t\tthe button etc. that is displaying this popup\r\n\t\t // around: DomNode\r\n\t\t //\t\tDOM node (typically a button); place popup relative to this node.  (Specify this *or* \"x\" and \"y\" parameters.)\r\n\t\t // x: Integer\r\n\t\t //\t\tAbsolute horizontal position (in pixels) to place node at.  (Specify this *or* \"around\" parameter.)\r\n\t\t // y: Integer\r\n\t\t //\t\tAbsolute vertical position (in pixels) to place node at.  (Specify this *or* \"around\" parameter.)\r\n\t\t // orient: Object|String\r\n\t\t //\t\tWhen the around parameter is specified, orient should be a list of positions to try, ex:\r\n\t\t //\t|\t[ \"below\", \"above\" ]\r\n\t\t //\t\tFor backwards compatibility it can also be an (ordered) hash of tuples of the form\r\n\t\t //\t\t(around-node-corner, popup-node-corner), ex:\r\n\t\t //\t|\t{ \"BL\": \"TL\", \"TL\": \"BL\" }\r\n\t\t //\t\twhere BL means \"bottom left\" and \"TL\" means \"top left\", etc.\r\n\t\t //\r\n\t\t //\t\tdijit/popup.open() tries to position the popup according to each specified position, in order,\r\n\t\t //\t\tuntil the popup appears fully within the viewport.\r\n\t\t //\r\n\t\t //\t\tThe default value is [\"below\", \"above\"]\r\n\t\t //\r\n\t\t //\t\tWhen an (x,y) position is specified rather than an around node, orient is either\r\n\t\t //\t\t\"R\" or \"L\".  R (for right) means that it tries to put the popup to the right of the mouse,\r\n\t\t //\t\tspecifically positioning the popup's top-right corner at the mouse position, and if that doesn't\r\n\t\t //\t\tfit in the viewport, then it tries, in order, the bottom-right corner, the top left corner,\r\n\t\t //\t\tand the top-right corner.\r\n\t\t // onCancel: Function\r\n\t\t //\t\tcallback when user has canceled the popup by:\r\n\t\t //\r\n\t\t //\t\t1. hitting ESC or\r\n\t\t //\t\t2. by using the popup widget's proprietary cancel mechanism (like a cancel button in a dialog);\r\n\t\t //\t\t   i.e. whenever popupWidget.onCancel() is called, args.onCancel is called\r\n\t\t // onClose: Function\r\n\t\t //\t\tcallback whenever this popup is closed\r\n\t\t // onExecute: Function\r\n\t\t //\t\tcallback when user \"executed\" on the popup/sub-popup by selecting a menu choice, etc. (top menu only)\r\n\t\t // padding: place.__Position\r\n\t\t //\t\tadding a buffer around the opening position. This is only useful when around is not set.\r\n\t\t // maxHeight: Integer\r\n\t\t //\t\tThe max height for the popup.  Any popup taller than this will have scrollbars.\r\n\t\t //\t\tSet to Infinity for no max height.  Default is to limit height to available space in viewport,\r\n\t\t //\t\tabove or below the aroundNode or specified x/y position.\r\n\t };\r\n\t =====*/\r\n\r\n\tfunction destroyWrapper(){\r\n\t\t// summary:\r\n\t\t//\t\tFunction to destroy wrapper when popup widget is destroyed.\r\n\t\t//\t\tLeft in this scope to avoid memory leak on IE8 on refresh page, see #15206.\r\n\t\tif(this._popupWrapper){\r\n\t\t\tdomConstruct.destroy(this._popupWrapper);\r\n\t\t\tdelete this._popupWrapper;\r\n\t\t}\r\n\t}\r\n\r\n\tvar PopupManager = declare(null, {\r\n\t\t// summary:\r\n\t\t//\t\tUsed to show drop downs (ex: the select list of a ComboBox)\r\n\t\t//\t\tor popups (ex: right-click context menus).\r\n\r\n\t\t// _stack: dijit/_WidgetBase[]\r\n\t\t//\t\tStack of currently popped up widgets.\r\n\t\t//\t\t(someone opened _stack[0], and then it opened _stack[1], etc.)\r\n\t\t_stack: [],\r\n\r\n\t\t// _beginZIndex: Number\r\n\t\t//\t\tZ-index of the first popup.   (If first popup opens other\r\n\t\t//\t\tpopups they get a higher z-index.)\r\n\t\t_beginZIndex: 1000,\r\n\r\n\t\t_idGen: 1,\r\n\r\n\t\t_repositionAll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIf screen has been scrolled, reposition all the popups in the stack.\r\n\t\t\t//\t\tThen set timer to check again later.\r\n\r\n\t\t\tif(this._firstAroundNode){\t// guard for when clearTimeout() on IE doesn't work\r\n\t\t\t\tvar oldPos = this._firstAroundPosition,\r\n\t\t\t\t\tnewPos = domGeometry.position(this._firstAroundNode, true),\r\n\t\t\t\t\tdx = newPos.x - oldPos.x,\r\n\t\t\t\t\tdy = newPos.y - oldPos.y;\r\n\r\n\t\t\t\tif(dx || dy){\r\n\t\t\t\t\tthis._firstAroundPosition = newPos;\r\n\t\t\t\t\tfor(var i = 0; i < this._stack.length; i++){\r\n\t\t\t\t\t\tvar style = this._stack[i].wrapper.style;\r\n\t\t\t\t\t\tstyle.top = (parseFloat(style.top) + dy) + \"px\";\r\n\t\t\t\t\t\tif(style.right == \"auto\"){\r\n\t\t\t\t\t\t\tstyle.left = (parseFloat(style.left) + dx) + \"px\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tstyle.right = (parseFloat(style.right) - dx) + \"px\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._aroundMoveListener = setTimeout(lang.hitch(this, \"_repositionAll\"), dx || dy ? 10 : 50);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_createWrapper: function(/*Widget*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitialization for widgets that will be used as popups.\r\n\t\t\t//\t\tPuts widget inside a wrapper DIV (if not already in one),\r\n\t\t\t//\t\tand returns pointer to that wrapper DIV.\r\n\r\n\t\t\tvar wrapper = widget._popupWrapper,\r\n\t\t\t\tnode = widget.domNode;\r\n\r\n\t\t\tif(!wrapper){\r\n\t\t\t\t// Create wrapper <div> for when this widget [in the future] will be used as a popup.\r\n\t\t\t\t// This is done early because of IE bugs where creating/moving DOM nodes causes focus\r\n\t\t\t\t// to go wonky, see tests/robot/Toolbar.html to reproduce\r\n\t\t\t\twrapper = domConstruct.create(\"div\", {\r\n\t\t\t\t\t\"class\": \"dijitPopup\",\r\n\t\t\t\t\tstyle: { display: \"none\"},\r\n\t\t\t\t\trole: \"region\",\r\n\t\t\t\t\t\"aria-label\": widget[\"aria-label\"] || widget.label || widget.name || widget.id\r\n\t\t\t\t}, widget.ownerDocumentBody);\r\n\t\t\t\twrapper.appendChild(node);\r\n\r\n\t\t\t\tvar s = node.style;\r\n\t\t\t\ts.display = \"\";\r\n\t\t\t\ts.visibility = \"\";\r\n\t\t\t\ts.position = \"\";\r\n\t\t\t\ts.top = \"0px\";\r\n\r\n\t\t\t\twidget._popupWrapper = wrapper;\r\n\t\t\t\taspect.after(widget, \"destroy\", destroyWrapper, true);\r\n\r\n\t\t\t\t// Workaround iOS problem where clicking a Menu can focus an <input> (or click a button) behind it.\r\n\t\t\t\t// Need to be careful though that you can still focus <input>'s and click <button>'s in a TooltipDialog.\r\n\t\t\t\t// Also, be careful not to break (native) scrolling of dropdown like ComboBox's options list.\r\n\t\t\t\tif(\"ontouchend\" in document) {\r\n\t\t\t\t\ton(wrapper, \"touchend\", function (evt){\r\n\t\t\t\t\t\tif(!/^(input|button|textarea)$/i.test(evt.target.tagName)) {\r\n\t\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn wrapper;\r\n\t\t},\r\n\r\n\t\tmoveOffScreen: function(/*Widget*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves the popup widget off-screen.\r\n\t\t\t//\t\tDo not use this method to hide popups when not in use, because\r\n\t\t\t//\t\tthat will create an accessibility issue: the offscreen popup is\r\n\t\t\t//\t\tstill in the tabbing order.\r\n\r\n\t\t\t// Create wrapper if not already there\r\n\t\t\tvar wrapper = this._createWrapper(widget);\r\n\r\n\t\t\t// Besides setting visibility:hidden, move it out of the viewport, see #5776, #10111, #13604\r\n\t\t\tvar ltr = domGeometry.isBodyLtr(widget.ownerDocument),\r\n\t\t\t\tstyle = {\r\n\t\t\t\t\tvisibility: \"hidden\",\r\n\t\t\t\t\ttop: \"-9999px\",\r\n\t\t\t\t\tdisplay: \"\"\r\n\t\t\t\t};\r\n\t\t\tstyle[ltr ? \"left\" : \"right\"] = \"-9999px\";\r\n\t\t\tstyle[ltr ? \"right\" : \"left\"] = \"auto\";\r\n\t\t\tdomStyle.set(wrapper, style);\r\n\r\n\t\t\treturn wrapper;\r\n\t\t},\r\n\r\n\t\thide: function(/*Widget*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide this popup widget (until it is ready to be shown).\r\n\t\t\t//\t\tInitialization for widgets that will be used as popups\r\n\t\t\t//\r\n\t\t\t//\t\tAlso puts widget inside a wrapper DIV (if not already in one)\r\n\t\t\t//\r\n\t\t\t//\t\tIf popup widget needs to layout it should\r\n\t\t\t//\t\tdo so when it is made visible, and popup._onShow() is called.\r\n\r\n\t\t\t// Create wrapper if not already there\r\n\t\t\tvar wrapper = this._createWrapper(widget);\r\n\r\n\t\t\tdomStyle.set(wrapper, {\r\n\t\t\t\tdisplay: \"none\",\r\n\t\t\t\theight: \"auto\",\t\t// Open may have limited the height to fit in the viewport\r\n\t\t\t\toverflow: \"visible\",\r\n\t\t\t\tborder: \"\"\t\t\t// Open() may have moved border from popup to wrapper.\r\n\t\t\t});\r\n\r\n\t\t\t// Open() may have moved border from popup to wrapper.  Move it back.\r\n\t\t\tvar node = widget.domNode;\r\n\t\t\tif(\"_originalStyle\" in node){\r\n\t\t\t\tnode.style.cssText = node._originalStyle;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetTopPopup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCompute the closest ancestor popup that's *not* a child of another popup.\r\n\t\t\t//\t\tEx: For a TooltipDialog with a button that spawns a tree of menus, find the popup of the button.\r\n\t\t\tvar stack = this._stack;\r\n\t\t\tfor(var pi = stack.length - 1; pi > 0 && stack[pi].parent === stack[pi - 1].widget; pi--){\r\n\t\t\t\t/* do nothing, just trying to get right value for pi */\r\n\t\t\t}\r\n\t\t\treturn stack[pi];\r\n\t\t},\r\n\r\n\t\topen: function(/*__OpenArgs*/ args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPopup the widget at the specified position\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\topening at the mouse position\r\n\t\t\t//\t\t|\t\tpopup.open({popup: menuWidget, x: evt.pageX, y: evt.pageY});\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\topening the widget as a dropdown\r\n\t\t\t//\t\t|\t\tpopup.open({parent: this, popup: menuWidget, around: this.domNode, onClose: function(){...}});\r\n\t\t\t//\r\n\t\t\t//\t\tNote that whatever widget called dijit/popup.open() should also listen to its own _onBlur callback\r\n\t\t\t//\t\t(fired from _base/focus.js) to know that focus has moved somewhere else and thus the popup should be closed.\r\n\r\n\t\t\tvar stack = this._stack,\r\n\t\t\t\twidget = args.popup,\r\n\t\t\t\tnode = widget.domNode,\r\n\t\t\t\torient = args.orient || [\"below\", \"below-alt\", \"above\", \"above-alt\"],\r\n\t\t\t\tltr = args.parent ? args.parent.isLeftToRight() : domGeometry.isBodyLtr(widget.ownerDocument),\r\n\t\t\t\taround = args.around,\r\n\t\t\t\tid = (args.around && args.around.id) ? (args.around.id + \"_dropdown\") : (\"popup_\" + this._idGen++);\r\n\r\n\t\t\t// If we are opening a new popup that isn't a child of a currently opened popup, then\r\n\t\t\t// close currently opened popup(s).   This should happen automatically when the old popups\r\n\t\t\t// gets the _onBlur() event, except that the _onBlur() event isn't reliable on IE, see [22198].\r\n\t\t\twhile(stack.length && (!args.parent || !dom.isDescendant(args.parent.domNode, stack[stack.length - 1].widget.domNode))){\r\n\t\t\t\tthis.close(stack[stack.length - 1].widget);\r\n\t\t\t}\r\n\r\n\t\t\t// Get pointer to popup wrapper, and create wrapper if it doesn't exist.  Remove display:none (but keep\r\n\t\t\t// off screen) so we can do sizing calculations.\r\n\t\t\tvar wrapper = this.moveOffScreen(widget);\r\n\r\n\t\t\tif(widget.startup && !widget._started){\r\n\t\t\t\twidget.startup(); // this has to be done after being added to the DOM\r\n\t\t\t}\r\n\r\n\t\t\t// Limit height to space available in viewport either above or below aroundNode (whichever side has more\r\n\t\t\t// room), adding scrollbar if necessary. Can't add scrollbar to widget because it may be a <table> (ex:\r\n\t\t\t// dijit/Menu), so add to wrapper, and then move popup's border to wrapper so scroll bar inside border.\r\n\t\t\tvar maxHeight, popupSize = domGeometry.position(node);\r\n\t\t\tif(\"maxHeight\" in args && args.maxHeight != -1){\r\n\t\t\t\tmaxHeight = args.maxHeight || Infinity;\t// map 0 --> infinity for back-compat of _HasDropDown.maxHeight\r\n\t\t\t}else{\r\n\t\t\t\tvar viewport = Viewport.getEffectiveBox(this.ownerDocument),\r\n\t\t\t\t\taroundPos = around ? domGeometry.position(around, false) : {y: args.y - (args.padding||0), h: (args.padding||0) * 2};\r\n\t\t\t\tmaxHeight = Math.floor(Math.max(aroundPos.y, viewport.h - (aroundPos.y + aroundPos.h)));\r\n\t\t\t}\r\n\t\t\tif(popupSize.h > maxHeight){\r\n\t\t\t\t// Get style of popup's border.  Unfortunately domStyle.get(node, \"border\") doesn't work on FF or IE,\r\n\t\t\t\t// and domStyle.get(node, \"borderColor\") etc. doesn't work on FF, so need to use fully qualified names.\r\n\t\t\t\tvar cs = domStyle.getComputedStyle(node),\r\n\t\t\t\t\tborderStyle = cs.borderLeftWidth + \" \" + cs.borderLeftStyle + \" \" + cs.borderLeftColor;\r\n\t\t\t\tdomStyle.set(wrapper, {\r\n\t\t\t\t\toverflowY: \"scroll\",\r\n\t\t\t\t\theight: maxHeight + \"px\",\r\n\t\t\t\t\tborder: borderStyle\t// so scrollbar is inside border\r\n\t\t\t\t});\r\n\t\t\t\tnode._originalStyle = node.style.cssText;\r\n\t\t\t\tnode.style.border = \"none\";\r\n\t\t\t}\r\n\r\n\t\t\tdomAttr.set(wrapper, {\r\n\t\t\t\tid: id,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tzIndex: this._beginZIndex + stack.length\r\n\t\t\t\t},\r\n\t\t\t\t\"class\": \"dijitPopup \" + (widget.baseClass || widget[\"class\"] || \"\").split(\" \")[0] + \"Popup\",\r\n\t\t\t\tdijitPopupParent: args.parent ? args.parent.id : \"\"\r\n\t\t\t});\r\n\r\n\t\t\tif(stack.length == 0 && around){\r\n\t\t\t\t// First element on stack. Save position of aroundNode and setup listener for changes to that position.\r\n\t\t\t\tthis._firstAroundNode = around;\r\n\t\t\t\tthis._firstAroundPosition = domGeometry.position(around, true);\r\n\t\t\t\tthis._aroundMoveListener = setTimeout(lang.hitch(this, \"_repositionAll\"), 50);\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"config-bgIframe\") && !widget.bgIframe){\r\n\t\t\t\t// setting widget.bgIframe triggers cleanup in _WidgetBase.destroyRendering()\r\n\t\t\t\twidget.bgIframe = new BackgroundIframe(wrapper);\r\n\t\t\t}\r\n\r\n\t\t\t// position the wrapper node and make it visible\r\n\t\t\tvar layoutFunc = widget.orient ? lang.hitch(widget, \"orient\") : null,\r\n\t\t\t\tbest = around ?\r\n\t\t\t\t\tplace.around(wrapper, around, orient, ltr, layoutFunc) :\r\n\t\t\t\t\tplace.at(wrapper, args, orient == 'R' ? ['TR', 'BR', 'TL', 'BL'] : ['TL', 'BL', 'TR', 'BR'], args.padding,\r\n\t\t\t\t\t\tlayoutFunc);\r\n\r\n\t\t\twrapper.style.visibility = \"visible\";\r\n\t\t\tnode.style.visibility = \"visible\";\t// counteract effects from _HasDropDown\r\n\r\n\t\t\tvar handlers = [];\r\n\r\n\t\t\t// provide default escape and tab key handling\r\n\t\t\t// (this will work for any widget, not just menu)\r\n\t\t\thandlers.push(on(wrapper, \"keydown\", lang.hitch(this, function(evt){\r\n\t\t\t\tif(evt.keyCode == keys.ESCAPE && args.onCancel){\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\targs.onCancel();\r\n\t\t\t\t}else if(evt.keyCode == keys.TAB){\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tvar topPopup = this.getTopPopup();\r\n\t\t\t\t\tif(topPopup && topPopup.onCancel){\r\n\t\t\t\t\t\ttopPopup.onCancel();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})));\r\n\r\n\t\t\t// watch for cancel/execute events on the popup and notify the caller\r\n\t\t\t// (for a menu, \"execute\" means clicking an item)\r\n\t\t\tif(widget.onCancel && args.onCancel){\r\n\t\t\t\thandlers.push(widget.on(\"cancel\", args.onCancel));\r\n\t\t\t}\r\n\r\n\t\t\thandlers.push(widget.on(widget.onExecute ? \"execute\" : \"change\", lang.hitch(this, function(){\r\n\t\t\t\tvar topPopup = this.getTopPopup();\r\n\t\t\t\tif(topPopup && topPopup.onExecute){\r\n\t\t\t\t\ttopPopup.onExecute();\r\n\t\t\t\t}\r\n\t\t\t})));\r\n\r\n\t\t\tstack.push({\r\n\t\t\t\twidget: widget,\r\n\t\t\t\twrapper: wrapper,\r\n\t\t\t\tparent: args.parent,\r\n\t\t\t\tonExecute: args.onExecute,\r\n\t\t\t\tonCancel: args.onCancel,\r\n\t\t\t\tonClose: args.onClose,\r\n\t\t\t\thandlers: handlers\r\n\t\t\t});\r\n\r\n\t\t\tif(widget.onOpen){\r\n\t\t\t\t// TODO: in 2.0 standardize onShow() (used by StackContainer) and onOpen() (used here)\r\n\t\t\t\twidget.onOpen(best);\r\n\t\t\t}\r\n\r\n\t\t\treturn best;\r\n\t\t},\r\n\r\n\t\tclose: function(/*Widget?*/ popup){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClose specified popup and any popups that it parented.\r\n\t\t\t//\t\tIf no popup is specified, closes all popups.\r\n\r\n\t\t\tvar stack = this._stack;\r\n\r\n\t\t\t// Basically work backwards from the top of the stack closing popups\r\n\t\t\t// until we hit the specified popup, but IIRC there was some issue where closing\r\n\t\t\t// a popup would cause others to close too.  Thus if we are trying to close B in [A,B,C]\r\n\t\t\t// closing C might close B indirectly and then the while() condition will run where stack==[A]...\r\n\t\t\t// so the while condition is constructed defensively.\r\n\t\t\twhile((popup && array.some(stack, function(elem){\r\n\t\t\t\treturn elem.widget == popup;\r\n\t\t\t})) ||\r\n\t\t\t\t(!popup && stack.length)){\r\n\t\t\t\tvar top = stack.pop(),\r\n\t\t\t\t\twidget = top.widget,\r\n\t\t\t\t\tonClose = top.onClose;\r\n\r\n\t\t\t\tif (widget.bgIframe) {\r\n\t\t\t\t\t// push the iframe back onto the stack.\r\n\t\t\t\t\twidget.bgIframe.destroy();\r\n\t\t\t\t\tdelete widget.bgIframe;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(widget.onClose){\r\n\t\t\t\t\t// TODO: in 2.0 standardize onHide() (used by StackContainer) and onClose() (used here).\r\n\t\t\t\t\t// Actually, StackContainer also calls onClose(), but to mean that the pane is being deleted\r\n\t\t\t\t\t// (i.e. that the TabContainer's tab's [x] icon was clicked)\r\n\t\t\t\t\twidget.onClose();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar h;\r\n\t\t\t\twhile(h = top.handlers.pop()){\r\n\t\t\t\t\th.remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Hide the widget and it's wrapper unless it has already been destroyed in above onClose() etc.\r\n\t\t\t\tif(widget && widget.domNode){\r\n\t\t\t\t\tthis.hide(widget);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(onClose){\r\n\t\t\t\t\tonClose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(stack.length == 0 && this._aroundMoveListener){\r\n\t\t\t\tclearTimeout(this._aroundMoveListener);\r\n\t\t\t\tthis._firstAroundNode = this._firstAroundPosition = this._aroundMoveListener = null;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn (dijit.popup = new PopupManager());\r\n});\r\n\ndefine('dijit/_base/popup',[\r\n\t\"dojo/dom-class\", // domClass.contains\r\n\t\"dojo/_base/window\",\r\n\t\"../popup\",\r\n\t\"../BackgroundIframe\"\t// just loading for back-compat, in case client code is referencing it\r\n], function(domClass, win, popup){\r\n\r\n// module:\r\n//\t\tdijit/_base/popup\r\n\r\n/*=====\r\nreturn {\r\n\t// summary:\r\n\t//\t\tDeprecated.   Old module for popups, new code should use dijit/popup directly.\r\n};\r\n=====*/\r\n\r\n\r\n// Hack support for old API passing in node instead of a widget (to various methods)\r\nvar origCreateWrapper = popup._createWrapper;\r\npopup._createWrapper = function(widget){\r\n\tif(!widget.declaredClass){\r\n\t\t// make fake widget to pass to new API\r\n\t\twidget = {\r\n\t\t\t_popupWrapper: (widget.parentNode && domClass.contains(widget.parentNode, \"dijitPopup\")) ?\r\n\t\t\t\twidget.parentNode : null,\r\n\t\t\tdomNode: widget,\r\n\t\t\tdestroy: function(){},\r\n\t\t\townerDocument: widget.ownerDocument,\r\n\t\t\townerDocumentBody: win.body(widget.ownerDocument)\r\n\t\t};\r\n\t}\r\n\treturn origCreateWrapper.call(this, widget);\r\n};\r\n\r\n// Support old format of orient parameter\r\nvar origOpen = popup.open;\r\npopup.open = function(/*__OpenArgs*/ args){\r\n\t// Convert old hash structure (ex: {\"BL\": \"TL\", ...}) of orient to format compatible w/new popup.open() API.\r\n\t// Don't do conversion for:\r\n\t//\t\t- null parameter (that means to use the default positioning)\r\n\t//\t\t- \"R\" or \"L\" strings used to indicate positioning for context menus (when there is no around node)\r\n\t//\t\t- new format, ex: [\"below\", \"above\"]\r\n\t//\t\t- return value from deprecated dijit.getPopupAroundAlignment() method,\r\n\t//\t\t\tex: [\"below\", \"above\"]\r\n\tif(args.orient && typeof args.orient != \"string\" && !(\"length\" in args.orient)){\r\n\t\tvar ary = [];\r\n\t\tfor(var key in args.orient){\r\n\t\t\tary.push({aroundCorner: key, corner: args.orient[key]});\r\n\t\t}\r\n\t\targs.orient = ary;\r\n\t}\r\n\r\n\treturn origOpen.call(this, args);\r\n};\r\n\r\nreturn popup;\r\n});\r\n\ndefine('dijit/_base/scroll',[\r\n\t\"dojo/window\", // windowUtils.scrollIntoView\r\n\t\"../main\"\t// export symbol to dijit\r\n], function(windowUtils, dijit){\r\n\t// module:\r\n\t//\t\tdijit/_base/scroll\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tBack compatibility module, new code should use windowUtils directly instead of using this module.\r\n\t};\r\n\t=====*/\r\n\r\n\tdijit.scrollIntoView = function(/*DomNode*/ node, /*Object?*/ pos){\r\n\t\t// summary:\r\n\t\t//\t\tScroll the passed node into view, if it is not already.\r\n\t\t//\t\tDeprecated, use `windowUtils.scrollIntoView` instead.\r\n\r\n\t\twindowUtils.scrollIntoView(node, pos);\r\n\t};\r\n});\r\n\ndefine('dijit/_base/sniff',[ \"dojo/uacss\" ], function(){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base/sniff\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated, back compatibility module, new code should require dojo/uacss directly instead of this module.\r\n\t};\r\n\t=====*/\r\n});\r\n\ndefine('dijit/typematic',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/connect\", // connect._keyPress\r\n\t\"dojo/_base/lang\", // lang.mixin, lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"./main\"        // setting dijit.typematic global\r\n], function(array, connect, lang, on, has, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/typematic\r\n\r\n\tvar typematic = (dijit.typematic = {\r\n\t\t// summary:\r\n\t\t//\t\tThese functions are used to repetitively call a user specified callback\r\n\t\t//\t\tmethod when a specific key or mouse click over a specific DOM node is\r\n\t\t//\t\theld down for a specific amount of time.\r\n\t\t//\t\tOnly 1 such event is allowed to occur on the browser page at 1 time.\r\n\r\n\t\t_fireEventAndReload: function(){\r\n\t\t\tthis._timer = null;\r\n\t\t\tthis._callback(++this._count, this._node, this._evt);\r\n\r\n\t\t\t// Schedule next event, timer is at most minDelay (default 10ms) to avoid\r\n\t\t\t// browser overload (particularly avoiding starving DOH robot so it never gets to send a mouseup)\r\n\t\t\tthis._currentTimeout = Math.max(\r\n\t\t\t\tthis._currentTimeout < 0 ? this._initialDelay :\r\n\t\t\t\t\t(this._subsequentDelay > 1 ? this._subsequentDelay : Math.round(this._currentTimeout * this._subsequentDelay)),\r\n\t\t\t\tthis._minDelay);\r\n\t\t\tthis._timer = setTimeout(lang.hitch(this, \"_fireEventAndReload\"), this._currentTimeout);\r\n\t\t},\r\n\r\n\t\ttrigger: function(/*Event*/ evt, /*Object*/ _this, /*DOMNode*/ node, /*Function*/ callback, /*Object*/ obj, /*Number?*/ subsequentDelay, /*Number?*/ initialDelay, /*Number?*/ minDelay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStart a timed, repeating callback sequence.\r\n\t\t\t//\t\tIf already started, the function call is ignored.\r\n\t\t\t//\t\tThis method is not normally called by the user but can be\r\n\t\t\t//\t\twhen the normal listener code is insufficient.\r\n\t\t\t// evt:\r\n\t\t\t//\t\tkey or mouse event object to pass to the user callback\r\n\t\t\t// _this:\r\n\t\t\t//\t\tpointer to the user's widget space.\r\n\t\t\t// node:\r\n\t\t\t//\t\tthe DOM node object to pass the the callback function\r\n\t\t\t// callback:\r\n\t\t\t//\t\tfunction to call until the sequence is stopped called with 3 parameters:\r\n\t\t\t// count:\r\n\t\t\t//\t\tinteger representing number of repeated calls (0..n) with -1 indicating the iteration has stopped\r\n\t\t\t// node:\r\n\t\t\t//\t\tthe DOM node object passed in\r\n\t\t\t// evt:\r\n\t\t\t//\t\tkey or mouse event object\r\n\t\t\t// obj:\r\n\t\t\t//\t\tuser space object used to uniquely identify each typematic sequence\r\n\t\t\t// subsequentDelay:\r\n\t\t\t//\t\tif > 1, the number of milliseconds until the 3->n events occur\r\n\t\t\t//\t\tor else the fractional time multiplier for the next event's delay, default=0.9\r\n\t\t\t// initialDelay:\r\n\t\t\t//\t\tthe number of milliseconds until the 2nd event occurs, default=500ms\r\n\t\t\t// minDelay:\r\n\t\t\t//\t\tthe maximum delay in milliseconds for event to fire, default=10ms\r\n\t\t\tif(obj != this._obj){\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tthis._initialDelay = initialDelay || 500;\r\n\t\t\t\tthis._subsequentDelay = subsequentDelay || 0.90;\r\n\t\t\t\tthis._minDelay = minDelay || 10;\r\n\t\t\t\tthis._obj = obj;\r\n\t\t\t\tthis._node = node;\r\n\t\t\t\tthis._currentTimeout = -1;\r\n\t\t\t\tthis._count = -1;\r\n\t\t\t\tthis._callback = lang.hitch(_this, callback);\r\n\t\t\t\tthis._evt = { faux: true };\r\n\t\t\t\tfor(var attr in evt){\r\n\t\t\t\t\tif(attr != \"layerX\" && attr != \"layerY\"){ // prevent WebKit warnings\r\n\t\t\t\t\t\tvar v = evt[attr];\r\n\t\t\t\t\t\tif(typeof v != \"function\" && typeof v != \"undefined\"){\r\n\t\t\t\t\t\t\tthis._evt[attr] = v\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._fireEventAndReload();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstop: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStop an ongoing timed, repeating callback sequence.\r\n\t\t\tif(this._timer){\r\n\t\t\t\tclearTimeout(this._timer);\r\n\t\t\t\tthis._timer = null;\r\n\t\t\t}\r\n\t\t\tif(this._obj){\r\n\t\t\t\tthis._callback(-1, this._node, this._evt);\r\n\t\t\t\tthis._obj = null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddKeyListener: function(/*DOMNode*/ node, /*Object*/ keyObject, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStart listening for a specific typematic key.\r\n\t\t\t//\t\tSee also the trigger method for other parameters.\r\n\t\t\t// keyObject:\r\n\t\t\t//\t\tan object defining the key to listen for:\r\n\t\t\t//\r\n\t\t\t//\t\t- keyCode: the keyCode (number) to listen for, used for non-printable keys\r\n\t\t\t//\t\t- charCode: the charCode (number) to listen for, used for printable keys\r\n\t\t\t//\t\t- charOrCode: deprecated, use keyCode or charCode\r\n\t\t\t//\t\t- ctrlKey: desired ctrl key state to initiate the callback sequence:\r\n\t\t\t//\t\t\t- pressed (true)\r\n\t\t\t//\t\t\t- released (false)\r\n\t\t\t//\t\t\t- either (unspecified)\r\n\t\t\t//\t\t- altKey: same as ctrlKey but for the alt key\r\n\t\t\t//\t\t- shiftKey: same as ctrlKey but for the shift key\r\n\t\t\t// returns:\r\n\t\t\t//\t\ta connection handle\r\n\r\n\t\t\t// Setup keydown or keypress listener depending on whether keyCode or charCode was specified.\r\n\t\t\t// If charOrCode is specified use deprecated connect._keypress synthetic event (remove for 2.0)\r\n\t\t\tvar type = \"keyCode\" in keyObject ? \"keydown\" : \"charCode\" in keyObject ? \"keypress\" : connect._keypress,\r\n\t\t\t\tattr = \"keyCode\" in keyObject ? \"keyCode\" : \"charCode\" in keyObject ? \"charCode\" : \"charOrCode\";\r\n\r\n\t\t\tvar handles = [\r\n\t\t\t\ton(node, type, lang.hitch(this, function(evt){\r\n\t\t\t\t\tif(evt[attr] == keyObject[attr] &&\r\n\t\t\t\t\t\t(keyObject.ctrlKey === undefined || keyObject.ctrlKey == evt.ctrlKey) &&\r\n\t\t\t\t\t\t(keyObject.altKey === undefined || keyObject.altKey == evt.altKey) &&\r\n\t\t\t\t\t\t(keyObject.metaKey === undefined || keyObject.metaKey == (evt.metaKey || false)) && // IE doesn't even set metaKey\r\n\t\t\t\t\t\t(keyObject.shiftKey === undefined || keyObject.shiftKey == evt.shiftKey)){\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, keyObject, subsequentDelay, initialDelay, minDelay);\r\n\t\t\t\t\t}else if(typematic._obj == keyObject){\r\n\t\t\t\t\t\ttypematic.stop();\r\n\t\t\t\t\t}\r\n\t\t\t\t})),\r\n\t\t\t\ton(node, \"keyup\", lang.hitch(this, function(){\r\n\t\t\t\t\tif(typematic._obj == keyObject){\r\n\t\t\t\t\t\ttypematic.stop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t];\r\n\t\t\treturn { remove: function(){\r\n\t\t\t\tarray.forEach(handles, function(h){\r\n\t\t\t\t\th.remove();\r\n\t\t\t\t});\r\n\t\t\t} };\r\n\t\t},\r\n\r\n\t\taddMouseListener: function(/*DOMNode*/ node, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStart listening for a typematic mouse click.\r\n\t\t\t//\t\tSee the trigger method for other parameters.\r\n\t\t\t// returns:\r\n\t\t\t//\t\ta connection handle\r\n\t\t\tvar handles = [\r\n\t\t\t\ton(node, \"mousedown\", lang.hitch(this, function(evt){\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, node, subsequentDelay, initialDelay, minDelay);\r\n\t\t\t\t})),\r\n\t\t\t\ton(node, \"mouseup\", lang.hitch(this, function(evt){\r\n\t\t\t\t\tif(this._obj){\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttypematic.stop();\r\n\t\t\t\t})),\r\n\t\t\t\ton(node, \"mouseout\", lang.hitch(this, function(evt){\r\n\t\t\t\t\tif(this._obj){\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttypematic.stop();\r\n\t\t\t\t})),\r\n\t\t\t\ton(node, \"dblclick\", lang.hitch(this, function(evt){\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tif(has(\"ie\") < 9){\r\n\t\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, node, subsequentDelay, initialDelay, minDelay);\r\n\t\t\t\t\t\tsetTimeout(lang.hitch(this, typematic.stop), 50);\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t];\r\n\t\t\treturn { remove: function(){\r\n\t\t\t\tarray.forEach(handles, function(h){\r\n\t\t\t\t\th.remove();\r\n\t\t\t\t});\r\n\t\t\t} };\r\n\t\t},\r\n\r\n\t\taddListener: function(/*Node*/ mouseNode, /*Node*/ keyNode, /*Object*/ keyObject, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStart listening for a specific typematic key and mouseclick.\r\n\t\t\t//\t\tThis is a thin wrapper to addKeyListener and addMouseListener.\r\n\t\t\t//\t\tSee the addMouseListener and addKeyListener methods for other parameters.\r\n\t\t\t// mouseNode:\r\n\t\t\t//\t\tthe DOM node object to listen on for mouse events.\r\n\t\t\t// keyNode:\r\n\t\t\t//\t\tthe DOM node object to listen on for key events.\r\n\t\t\t// returns:\r\n\t\t\t//\t\ta connection handle\r\n\t\t\tvar handles = [\r\n\t\t\t\tthis.addKeyListener(keyNode, keyObject, _this, callback, subsequentDelay, initialDelay, minDelay),\r\n\t\t\t\tthis.addMouseListener(mouseNode, _this, callback, subsequentDelay, initialDelay, minDelay)\r\n\t\t\t];\r\n\t\t\treturn { remove: function(){\r\n\t\t\t\tarray.forEach(handles, function(h){\r\n\t\t\t\t\th.remove();\r\n\t\t\t\t});\r\n\t\t\t} };\r\n\t\t}\r\n\t});\r\n\r\n\treturn typematic;\r\n});\r\n\ndefine('dijit/_base/typematic',[\"../typematic\"], function(){\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated, for back-compat, just loads top level module\r\n\t};\r\n\t=====*/\r\n\r\n});\r\n\ndefine('dijit/hccss',[\"dojo/dom-class\", \"dojo/hccss\", \"dojo/domReady\", \"dojo/_base/window\"], function(domClass, has, domReady, win){\r\n\r\n\t// module:\r\n\t//\t\tdijit/hccss\r\n\r\n\t/*=====\r\n\treturn function(){\r\n\t\t// summary:\r\n\t\t//\t\tTest if computer is in high contrast mode, and sets `dijit_a11y` flag on `<body>` if it is.\r\n\t\t//\t\tDeprecated, use ``dojo/hccss`` instead.\r\n\t};\r\n\t=====*/\r\n\r\n\tdomReady(function(){\r\n\t\tif(has(\"highcontrast\")){\r\n\t\t\tdomClass.add(win.body(), \"dijit_a11y\");\r\n\t\t}\r\n\t});\r\n\r\n\treturn has;\r\n});\r\n\ndefine('dijit/_base/wai',[\r\n\t\"dojo/dom-attr\", // domAttr.attr\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"../main\",\t// export symbols to dijit\r\n\t\"../hccss\"\t\t\t// not using this module directly, but loading it sets CSS flag on <html>\r\n], function(domAttr, lang, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base/wai\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated methods for setting/getting wai roles and states.\r\n\t\t//\t\tNew code should call setAttribute()/getAttribute() directly.\r\n\t\t//\r\n\t\t//\t\tAlso loads hccss to apply dj_a11y class to root node if machine is in high-contrast mode.\r\n\r\n\t\thasWaiRole: function(/*Element*/ elem, /*String?*/ role){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetermines if an element has a particular role.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tTrue if elem has the specific role attribute and false if not.\r\n\t\t\t//\t\tFor backwards compatibility if role parameter not provided,\r\n\t\t\t//\t\treturns true if has a role\r\n\t\t\tvar waiRole = this.getWaiRole(elem);\r\n\t\t\treturn role ? (waiRole.indexOf(role) > -1) : (waiRole.length > 0);\r\n\t\t},\r\n\r\n\t\tgetWaiRole: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the role for an element (which should be a wai role).\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe role of elem or an empty string if elem\r\n\t\t\t//\t\tdoes not have a role.\r\n\t\t\t return lang.trim((domAttr.get(elem, \"role\") || \"\").replace(\"wairole:\",\"\"));\r\n\t\t},\r\n\r\n\t\tsetWaiRole: function(/*Element*/ elem, /*String*/ role){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the role on an element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tReplace existing role attribute with new role.\r\n\r\n\t\t\tdomAttr.set(elem, \"role\", role);\r\n\t\t},\r\n\r\n\t\tremoveWaiRole: function(/*Element*/ elem, /*String*/ role){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves the specified role from an element.\r\n\t\t\t//\t\tRemoves role attribute if no specific role provided (for backwards compat.)\r\n\r\n\t\t\tvar roleValue = domAttr.get(elem, \"role\");\r\n\t\t\tif(!roleValue){ return; }\r\n\t\t\tif(role){\r\n\t\t\t\tvar t = lang.trim((\" \" + roleValue + \" \").replace(\" \" + role + \" \", \" \"));\r\n\t\t\t\tdomAttr.set(elem, \"role\", t);\r\n\t\t\t}else{\r\n\t\t\t\telem.removeAttribute(\"role\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thasWaiState: function(/*Element*/ elem, /*String*/ state){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetermines if an element has a given state.\r\n\t\t\t// description:\r\n\t\t\t//\t\tChecks for an attribute called \"aria-\"+state.\r\n\t\t\t// returns:\r\n\t\t\t//\t\ttrue if elem has a value for the given state and\r\n\t\t\t//\t\tfalse if it does not.\r\n\r\n\t\t\treturn elem.hasAttribute ? elem.hasAttribute(\"aria-\"+state) : !!elem.getAttribute(\"aria-\"+state);\r\n\t\t},\r\n\r\n\t\tgetWaiState: function(/*Element*/ elem, /*String*/ state){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the value of a state on an element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tChecks for an attribute called \"aria-\"+state.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe value of the requested state on elem\r\n\t\t\t//\t\tor an empty string if elem has no value for state.\r\n\r\n\t\t\treturn elem.getAttribute(\"aria-\"+state) || \"\";\r\n\t\t},\r\n\r\n\t\tsetWaiState: function(/*Element*/ elem, /*String*/ state, /*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets a state on an element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets an attribute called \"aria-\"+state.\r\n\r\n\t\t\telem.setAttribute(\"aria-\"+state, value);\r\n\t\t},\r\n\r\n\t\tremoveWaiState: function(/*Element*/ elem, /*String*/ state){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves a state from an element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets an attribute called \"aria-\"+state.\r\n\r\n\t\t\telem.removeAttribute(\"aria-\"+state);\r\n\t\t}\r\n\t};\r\n\r\n\tlang.mixin(dijit, exports);\r\n\r\n\t/*===== return exports; =====*/\r\n\treturn dijit;\t// for back compat :-(\r\n});\r\n\ndefine('dijit/_base/window',[\r\n\t\"dojo/window\", // windowUtils.get\r\n\t\"../main\"\t// export symbol to dijit\r\n], function(windowUtils, dijit){\r\n\t// module:\r\n\t//\t\tdijit/_base/window\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tBack compatibility module, new code should use windowUtils directly instead of using this module.\r\n\t};\r\n\t=====*/\r\n\r\n\tdijit.getDocumentWindow = function(doc){\r\n\t\treturn windowUtils.get(doc);\r\n\t};\r\n});\r\n\ndefine('dijit/_base',[\r\n\t\"./main\",\r\n\t\"./a11y\",\t// used to be in dijit/_base/manager\r\n\t\"./WidgetSet\",\t// used to be in dijit/_base/manager\r\n\t\"./_base/focus\",\r\n\t\"./_base/manager\",\r\n\t\"./_base/place\",\r\n\t\"./_base/popup\",\r\n\t\"./_base/scroll\",\r\n\t\"./_base/sniff\",\r\n\t\"./_base/typematic\",\r\n\t\"./_base/wai\",\r\n\t\"./_base/window\"\r\n], function(dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tIncludes all the modules in dijit/_base\r\n\t};\r\n\t=====*/\r\n\r\n\treturn dijit._base;\r\n});\r\n\ndefine('dijit/Destroyable',[\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\"\r\n], function(array, aspect, declare){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Destroyable\r\n\r\n\treturn declare(\"dijit.Destroyable\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin to track handles and release them when instance is destroyed.\r\n\t\t// description:\r\n\t\t//\t\tCall this.own(...) on list of handles (returned from dojo/aspect, dojo/on,\r\n\t\t//\t\tdojo/Stateful::watch, or any class (including widgets) with a destroyRecursive() or destroy() method.\r\n\t\t//\t\tThen call destroy() later to destroy this instance and release the resources.\r\n\r\n\t\tdestroy: function(/*Boolean*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy this class, releasing any resources registered via own().\r\n\t\t\tthis._destroyed = true;\r\n\t\t},\r\n\r\n\t\town: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTrack specified handles and remove/destroy them when this instance is destroyed, unless they were\r\n\t\t\t//\t\talready removed/destroyed manually.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe array of specified handles, so you can do for example:\r\n\t\t\t//\t|\t\tvar handle = this.own(on(...))[0];\r\n\r\n\t\t\tvar cleanupMethods = [\r\n\t\t\t\t\"destroyRecursive\",\r\n\t\t\t\t\"destroy\",\r\n\t\t\t\t\"remove\"\r\n\t\t\t];\r\n\r\n\t\t\tarray.forEach(arguments, function(handle){\r\n\t\t\t\t// When this.destroy() is called, destroy handle.  Since I'm using aspect.before(),\r\n\t\t\t\t// the handle will be destroyed before a subclass's destroy() method starts running, before it calls\r\n\t\t\t\t// this.inherited() or even if it doesn't call this.inherited() at all.  If that's an issue, make an\r\n\t\t\t\t// onDestroy() method and connect to that instead.\r\n\t\t\t\tvar destroyMethodName;\r\n\t\t\t\tvar odh = aspect.before(this, \"destroy\", function (preserveDom){\r\n\t\t\t\t\thandle[destroyMethodName](preserveDom);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Callback for when handle is manually destroyed.\r\n\t\t\t\tvar hdhs = [];\r\n\t\t\t\tfunction onManualDestroy(){\r\n\t\t\t\t\todh.remove();\r\n\t\t\t\t\tarray.forEach(hdhs, function(hdh){\r\n\t\t\t\t\t\thdh.remove();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Setup listeners for manual destroy of handle.\r\n\t\t\t\t// Also computes destroyMethodName, used in listener above.\r\n\t\t\t\tif(handle.then){\r\n\t\t\t\t\t// Special path for Promises.  Detect when Promise is resolved, rejected, or\r\n\t\t\t\t\t// canceled (nb: cancelling a Promise causes it to be rejected).\r\n\t\t\t\t\tdestroyMethodName = \"cancel\";\r\n\t\t\t\t\thandle.then(onManualDestroy, onManualDestroy);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Path for other handles.  Just use AOP to detect when handle is manually destroyed.\r\n\t\t\t\t\tarray.forEach(cleanupMethods, function(cleanupMethod){\r\n\t\t\t\t\t\tif(typeof handle[cleanupMethod] === \"function\"){\r\n\t\t\t\t\t\t\tif(!destroyMethodName){\r\n\t\t\t\t\t\t\t\t// Use first matching method name in above listener (prefer destroyRecursive() to destroy())\r\n\t\t\t\t\t\t\t\tdestroyMethodName = cleanupMethod;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\thdhs.push(aspect.after(handle, cleanupMethod, onManualDestroy, true));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn arguments;\t\t// handle\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/_WidgetBase',[\r\n\t\"require\", // require.toUrl\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/config\", // config.blankGif\r\n\t\"dojo/_base/connect\", // connect.connect\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.byId\r\n\t\"dojo/dom-attr\", // domAttr.set domAttr.remove\r\n\t\"dojo/dom-class\", // domClass.add domClass.replace\r\n\t\"dojo/dom-construct\", // domConstruct.destroy domConstruct.place\r\n\t\"dojo/dom-geometry\", // isBodyLtr\r\n\t\"dojo/dom-style\", // domStyle.set, domStyle.get\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/kernel\",\r\n\t\"dojo/_base/lang\", // mixin(), isArray(), etc.\r\n\t\"dojo/on\",\r\n\t\"dojo/ready\",\r\n\t\"dojo/Stateful\", // Stateful\r\n\t\"dojo/topic\",\r\n\t\"dojo/_base/window\", // win.body()\r\n\t\"./Destroyable\",\r\n\t\"dojo/has!dojo-bidi?./_BidiMixin\",\r\n\t\"./registry\"    // registry.getUniqueId(), registry.findWidgets()\r\n], function(require, array, aspect, config, connect, declare,\r\n\t\t\tdom, domAttr, domClass, domConstruct, domGeometry, domStyle, has, kernel,\r\n\t\t\tlang, on, ready, Stateful, topic, win, Destroyable, _BidiMixin, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_WidgetBase\r\n\r\n\t// Flag to make dijit load modules the app didn't explicitly request, for backwards compatibility\r\n\thas.add(\"dijit-legacy-requires\", !kernel.isAsync);\r\n\r\n\t// Flag to enable support for textdir attribute\r\n\thas.add(\"dojo-bidi\", false);\r\n\r\n\r\n\t// For back-compat, remove in 2.0.\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/_base/manager\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\t// Nested hash listing attributes for each tag, all strings in lowercase.\r\n\t// ex: {\"div\": {\"style\": true, \"tabindex\" true}, \"form\": { ...\r\n\tvar tagAttrs = {};\r\n\r\n\tfunction getAttrs(obj){\r\n\t\tvar ret = {};\r\n\t\tfor(var attr in obj){\r\n\t\t\tret[attr.toLowerCase()] = true;\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tfunction nonEmptyAttrToDom(attr){\r\n\t\t// summary:\r\n\t\t//\t\tReturns a setter function that copies the attribute to this.domNode,\r\n\t\t//\t\tor removes the attribute from this.domNode, depending on whether the\r\n\t\t//\t\tvalue is defined or not.\r\n\t\treturn function(val){\r\n\t\t\tdomAttr[val ? \"set\" : \"remove\"](this.domNode, attr, val);\r\n\t\t\tthis._set(attr, val);\r\n\t\t};\r\n\t}\r\n\r\n\tfunction isEqual(a, b){\r\n\t\t//\tsummary:\r\n\t\t//\t\tFunction that determines whether two values are identical,\r\n\t\t//\t\ttaking into account that NaN is not normally equal to itself\r\n\t\t//\t\tin JS.\r\n\r\n\t\treturn a === b || (/* a is NaN */ a !== a && /* b is NaN */ b !== b);\r\n\t}\r\n\r\n\tvar _WidgetBase = declare(\"dijit._WidgetBase\", [Stateful, Destroyable], {\r\n\t\t// summary:\r\n\t\t//\t\tFuture base class for all Dijit widgets.\r\n\t\t// description:\r\n\t\t//\t\tFuture base class for all Dijit widgets.\r\n\t\t//\t\t_Widget extends this class adding support for various features needed by desktop.\r\n\t\t//\r\n\t\t//\t\tProvides stubs for widget lifecycle methods for subclasses to extend, like postMixInProperties(), buildRendering(),\r\n\t\t//\t\tpostCreate(), startup(), and destroy(), and also public API methods like set(), get(), and watch().\r\n\t\t//\r\n\t\t//\t\tWidgets can provide custom setters/getters for widget attributes, which are called automatically by set(name, value).\r\n\t\t//\t\tFor an attribute XXX, define methods _setXXXAttr() and/or _getXXXAttr().\r\n\t\t//\r\n\t\t//\t\t_setXXXAttr can also be a string/hash/array mapping from a widget attribute XXX to the widget's DOMNodes:\r\n\t\t//\r\n\t\t//\t\t- DOM node attribute\r\n\t\t// |\t\t_setFocusAttr: {node: \"focusNode\", type: \"attribute\"}\r\n\t\t// |\t\t_setFocusAttr: \"focusNode\"\t(shorthand)\r\n\t\t// |\t\t_setFocusAttr: \"\"\t\t(shorthand, maps to this.domNode)\r\n\t\t//\t\tMaps this.focus to this.focusNode.focus, or (last example) this.domNode.focus\r\n\t\t//\r\n\t\t//\t\t- DOM node innerHTML\r\n\t\t//\t|\t\t_setTitleAttr: { node: \"titleNode\", type: \"innerHTML\" }\r\n\t\t//\t\tMaps this.title to this.titleNode.innerHTML\r\n\t\t//\r\n\t\t//\t\t- DOM node innerText\r\n\t\t//\t|\t\t_setTitleAttr: { node: \"titleNode\", type: \"innerText\" }\r\n\t\t//\t\tMaps this.title to this.titleNode.innerText\r\n\t\t//\r\n\t\t//\t\t- DOM node CSS class\r\n\t\t// |\t\t_setMyClassAttr: { node: \"domNode\", type: \"class\" }\r\n\t\t//\t\tMaps this.myClass to this.domNode.className\r\n\t\t//\r\n\t\t//\t\tIf the value of _setXXXAttr is an array, then each element in the array matches one of the\r\n\t\t//\t\tformats of the above list.\r\n\t\t//\r\n\t\t//\t\tIf the custom setter is null, no action is performed other than saving the new value\r\n\t\t//\t\tin the widget (in this).\r\n\t\t//\r\n\t\t//\t\tIf no custom setter is defined for an attribute, then it will be copied\r\n\t\t//\t\tto this.focusNode (if the widget defines a focusNode), or this.domNode otherwise.\r\n\t\t//\t\tThat's only done though for attributes that match DOMNode attributes (title,\r\n\t\t//\t\talt, aria-labelledby, etc.)\r\n\r\n\t\t// id: [const] String\r\n\t\t//\t\tA unique, opaque ID string that can be assigned by users or by the\r\n\t\t//\t\tsystem. If the developer passes an ID which is known not to be\r\n\t\t//\t\tunique, the specified ID is ignored and the system-generated ID is\r\n\t\t//\t\tused instead.\r\n\t\tid: \"\",\r\n\t\t_setIdAttr: \"domNode\", // to copy to this.domNode even for auto-generated id's\r\n\r\n\t\t// lang: [const] String\r\n\t\t//\t\tRarely used.  Overrides the default Dojo locale used to render this widget,\r\n\t\t//\t\tas defined by the [HTML LANG](http://www.w3.org/TR/html401/struct/dirlang.html#adef-lang) attribute.\r\n\t\t//\t\tValue must be among the list of locales specified during by the Dojo bootstrap,\r\n\t\t//\t\tformatted according to [RFC 3066](http://www.ietf.org/rfc/rfc3066.txt) (like en-us).\r\n\t\tlang: \"\",\r\n\t\t// set on domNode even when there's a focus node.\tbut don't set lang=\"\", since that's invalid.\r\n\t\t_setLangAttr: nonEmptyAttrToDom(\"lang\"),\r\n\r\n\t\t// dir: [const] String\r\n\t\t//\t\tBi-directional support, as defined by the [HTML DIR](http://www.w3.org/TR/html401/struct/dirlang.html#adef-dir)\r\n\t\t//\t\tattribute. Either left-to-right \"ltr\" or right-to-left \"rtl\".  If undefined, widgets renders in page's\r\n\t\t//\t\tdefault direction.\r\n\t\tdir: \"\",\r\n\t\t// set on domNode even when there's a focus node.\tbut don't set dir=\"\", since that's invalid.\r\n\t\t_setDirAttr: nonEmptyAttrToDom(\"dir\"), // to set on domNode even when there's a focus node\r\n\r\n\t\t// class: String\r\n\t\t//\t\tHTML class attribute\r\n\t\t\"class\": \"\",\r\n\t\t_setClassAttr: { node: \"domNode\", type: \"class\" },\r\n\r\n\t\t// Override automatic assigning type --> focusNode, it causes exception on IE6-8.\r\n\t\t// Instead, type must be specified as ${type} in the template, as part of the original DOM.\r\n\t\t_setTypeAttr: null,\r\n\r\n\t\t// style: String||Object\r\n\t\t//\t\tHTML style attributes as cssText string or name/value hash\r\n\t\tstyle: \"\",\r\n\r\n\t\t// title: String\r\n\t\t//\t\tHTML title attribute.\r\n\t\t//\r\n\t\t//\t\tFor form widgets this specifies a tooltip to display when hovering over\r\n\t\t//\t\tthe widget (just like the native HTML title attribute).\r\n\t\t//\r\n\t\t//\t\tFor TitlePane or for when this widget is a child of a TabContainer, AccordionContainer,\r\n\t\t//\t\tetc., it's used to specify the tab label, accordion pane title, etc.  In this case it's\r\n\t\t//\t\tinterpreted as HTML.\r\n\t\ttitle: \"\",\r\n\r\n\t\t// tooltip: String\r\n\t\t//\t\tWhen this widget's title attribute is used to for a tab label, accordion pane title, etc.,\r\n\t\t//\t\tthis specifies the tooltip to appear when the mouse is hovered over that text.\r\n\t\ttooltip: \"\",\r\n\r\n\t\t// baseClass: [protected] String\r\n\t\t//\t\tRoot CSS class of the widget (ex: dijitTextBox), used to construct CSS classes to indicate\r\n\t\t//\t\twidget state.\r\n\t\tbaseClass: \"\",\r\n\r\n\t\t// srcNodeRef: [readonly] DomNode\r\n\t\t//\t\tpointer to original DOM node\r\n\t\tsrcNodeRef: null,\r\n\r\n\t\t// domNode: [readonly] DomNode\r\n\t\t//\t\tThis is our visible representation of the widget! Other DOM\r\n\t\t//\t\tNodes may by assigned to other properties, usually through the\r\n\t\t//\t\ttemplate system's data-dojo-attach-point syntax, but the domNode\r\n\t\t//\t\tproperty is the canonical \"top level\" node in widget UI.\r\n\t\tdomNode: null,\r\n\r\n\t\t// containerNode: [readonly] DomNode\r\n\t\t//\t\tDesignates where children of the source DOM node will be placed.\r\n\t\t//\t\t\"Children\" in this case refers to both DOM nodes and widgets.\r\n\t\t//\t\tFor example, for myWidget:\r\n\t\t//\r\n\t\t//\t\t|\t<div data-dojo-type=myWidget>\r\n\t\t//\t\t|\t\t<b> here's a plain DOM node\r\n\t\t//\t\t|\t\t<span data-dojo-type=subWidget>and a widget</span>\r\n\t\t//\t\t|\t\t<i> and another plain DOM node </i>\r\n\t\t//\t\t|\t</div>\r\n\t\t//\r\n\t\t//\t\tcontainerNode would point to:\r\n\t\t//\r\n\t\t//\t\t|\t\t<b> here's a plain DOM node\r\n\t\t//\t\t|\t\t<span data-dojo-type=subWidget>and a widget</span>\r\n\t\t//\t\t|\t\t<i> and another plain DOM node </i>\r\n\t\t//\r\n\t\t//\t\tIn templated widgets, \"containerNode\" is set via a\r\n\t\t//\t\tdata-dojo-attach-point assignment.\r\n\t\t//\r\n\t\t//\t\tcontainerNode must be defined for any widget that accepts innerHTML\r\n\t\t//\t\t(like ContentPane or BorderContainer or even Button), and conversely\r\n\t\t//\t\tis null for widgets that don't, like TextBox.\r\n\t\tcontainerNode: null,\r\n\r\n\t\t// ownerDocument: [const] Document?\r\n\t\t//\t\tThe document this widget belongs to.  If not specified to constructor, will default to\r\n\t\t//\t\tsrcNodeRef.ownerDocument, or if no sourceRef specified, then to the document global\r\n\t\townerDocument: null,\r\n\t\t_setOwnerDocumentAttr: function(val){\r\n\t\t\t// this setter is merely to avoid automatically trying to set this.domNode.ownerDocument\r\n\t\t\tthis._set(\"ownerDocument\", val);\r\n\t\t},\r\n\r\n\t\t/*=====\r\n\t\t// _started: [readonly] Boolean\r\n\t\t//\t\tstartup() has completed.\r\n\t\t_started: false,\r\n\t\t=====*/\r\n\r\n\t\t// attributeMap: [protected] Object\r\n\t\t//\t\tDeprecated.\tInstead of attributeMap, widget should have a _setXXXAttr attribute\r\n\t\t//\t\tfor each XXX attribute to be mapped to the DOM.\r\n\t\t//\r\n\t\t//\t\tattributeMap sets up a \"binding\" between attributes (aka properties)\r\n\t\t//\t\tof the widget and the widget's DOM.\r\n\t\t//\t\tChanges to widget attributes listed in attributeMap will be\r\n\t\t//\t\treflected into the DOM.\r\n\t\t//\r\n\t\t//\t\tFor example, calling set('title', 'hello')\r\n\t\t//\t\ton a TitlePane will automatically cause the TitlePane's DOM to update\r\n\t\t//\t\twith the new title.\r\n\t\t//\r\n\t\t//\t\tattributeMap is a hash where the key is an attribute of the widget,\r\n\t\t//\t\tand the value reflects a binding to a:\r\n\t\t//\r\n\t\t//\t\t- DOM node attribute\r\n\t\t// |\t\tfocus: {node: \"focusNode\", type: \"attribute\"}\r\n\t\t//\t\tMaps this.focus to this.focusNode.focus\r\n\t\t//\r\n\t\t//\t\t- DOM node innerHTML\r\n\t\t//\t|\t\ttitle: { node: \"titleNode\", type: \"innerHTML\" }\r\n\t\t//\t\tMaps this.title to this.titleNode.innerHTML\r\n\t\t//\r\n\t\t//\t\t- DOM node innerText\r\n\t\t//\t|\t\ttitle: { node: \"titleNode\", type: \"innerText\" }\r\n\t\t//\t\tMaps this.title to this.titleNode.innerText\r\n\t\t//\r\n\t\t//\t\t- DOM node CSS class\r\n\t\t// |\t\tmyClass: { node: \"domNode\", type: \"class\" }\r\n\t\t//\t\tMaps this.myClass to this.domNode.className\r\n\t\t//\r\n\t\t//\t\tIf the value is an array, then each element in the array matches one of the\r\n\t\t//\t\tformats of the above list.\r\n\t\t//\r\n\t\t//\t\tThere are also some shorthands for backwards compatibility:\r\n\t\t//\r\n\t\t//\t\t- string --> { node: string, type: \"attribute\" }, for example:\r\n\t\t//\r\n\t\t//\t|\t\"focusNode\" ---> { node: \"focusNode\", type: \"attribute\" }\r\n\t\t//\r\n\t\t//\t\t- \"\" --> { node: \"domNode\", type: \"attribute\" }\r\n\t\tattributeMap: {},\r\n\r\n\t\t// _blankGif: [protected] String\r\n\t\t//\t\tPath to a blank 1x1 image.\r\n\t\t//\t\tUsed by `<img>` nodes in templates that really get their image via CSS background-image.\r\n\t\t_blankGif: config.blankGif || require.toUrl(\"dojo/resources/blank.gif\"),\r\n\r\n\t\t//////////// INITIALIZATION METHODS ///////////////////////////////////////\r\n\r\n\t\t/*=====\r\n\t\tconstructor: function(params, srcNodeRef){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified:\r\n\t\t\t//\r\n\t\t\t//\t\t- use srcNodeRef.innerHTML as my contents\r\n\t\t\t//\t\t- if this is a behavioral widget then apply behavior to that srcNodeRef\r\n\t\t\t//\t\t- otherwise, replace srcNodeRef with my generated DOM tree\r\n\t\t},\r\n\t\t=====*/\r\n\r\n\t\t_introspect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCollect metadata about this widget (only once per class, not once per instance):\r\n\t\t\t//\r\n\t\t\t//\t\t\t- list of attributes with custom setters, storing in this.constructor._setterAttrs\r\n\t\t\t//\t\t\t- generate this.constructor._onMap, mapping names like \"mousedown\" to functions like onMouseDown\r\n\r\n\t\t\tvar ctor = this.constructor;\r\n\t\t\tif(!ctor._setterAttrs){\r\n\t\t\t\tvar proto = ctor.prototype,\r\n\t\t\t\t\tattrs = ctor._setterAttrs = [], // attributes with custom setters\r\n\t\t\t\t\tonMap = (ctor._onMap = {});\r\n\r\n\t\t\t\t// Items in this.attributeMap are like custom setters.  For back-compat, remove for 2.0.\r\n\t\t\t\tfor(var name in proto.attributeMap){\r\n\t\t\t\t\tattrs.push(name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Loop over widget properties, collecting properties with custom setters and filling in ctor._onMap.\r\n\t\t\t\tfor(name in proto){\r\n\t\t\t\t\tif(/^on/.test(name)){\r\n\t\t\t\t\t\tonMap[name.substring(2).toLowerCase()] = name;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(/^_set[A-Z](.*)Attr$/.test(name)){\r\n\t\t\t\t\t\tname = name.charAt(4).toLowerCase() + name.substr(5, name.length - 9);\r\n\t\t\t\t\t\tif(!proto.attributeMap || !(name in proto.attributeMap)){\r\n\t\t\t\t\t\t\tattrs.push(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Note: this isn't picking up info on properties like aria-label and role, that don't have custom setters\r\n\t\t\t\t// but that set() maps to attributes on this.domNode or this.focusNode\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostscript: function(/*Object?*/params, /*DomNode|String*/srcNodeRef){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tKicks off widget instantiation.  See create() for details.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// Note that we skip calling this.inherited(), i.e. dojo/Stateful::postscript(), because 1.x widgets don't\r\n\t\t\t// expect their custom setters to get called until after buildRendering().  Consider changing for 2.0.\r\n\r\n\t\t\tthis.create(params, srcNodeRef);\r\n\t\t},\r\n\r\n\t\tcreate: function(params, srcNodeRef){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tKick off the life-cycle of a widget\r\n\t\t\t// description:\r\n\t\t\t//\t\tCreate calls a number of widget methods (postMixInProperties, buildRendering, postCreate,\r\n\t\t\t//\t\tetc.), some of which of you'll want to override. See http://dojotoolkit.org/reference-guide/dijit/_WidgetBase.html\r\n\t\t\t//\t\tfor a discussion of the widget creation lifecycle.\r\n\t\t\t//\r\n\t\t\t//\t\tOf course, adventurous developers could override create entirely, but this should\r\n\t\t\t//\t\tonly be done as a last resort.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified:\r\n\t\t\t//\r\n\t\t\t//\t\t- use srcNodeRef.innerHTML as my contents\r\n\t\t\t//\t\t- if this is a behavioral widget then apply behavior to that srcNodeRef\r\n\t\t\t//\t\t- otherwise, replace srcNodeRef with my generated DOM tree\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// First time widget is instantiated, scan prototype to figure out info about custom setters etc.\r\n\t\t\tthis._introspect();\r\n\r\n\t\t\t// store pointer to original DOM tree\r\n\t\t\tthis.srcNodeRef = dom.byId(srcNodeRef);\r\n\r\n\t\t\t// No longer used, remove for 2.0.\r\n\t\t\tthis._connects = [];\r\n\t\t\tthis._supportingWidgets = [];\r\n\r\n\t\t\t// this is here for back-compat, remove in 2.0 (but check NodeList-instantiate.html test)\r\n\t\t\tif(this.srcNodeRef && (typeof this.srcNodeRef.id == \"string\")){\r\n\t\t\t\tthis.id = this.srcNodeRef.id;\r\n\t\t\t}\r\n\r\n\t\t\t// mix in our passed parameters\r\n\t\t\tif(params){\r\n\t\t\t\tthis.params = params;\r\n\t\t\t\tlang.mixin(this, params);\r\n\t\t\t}\r\n\t\t\tthis.postMixInProperties();\r\n\r\n\t\t\t// Generate an id for the widget if one wasn't specified, or it was specified as id: undefined.\r\n\t\t\t// Do this before buildRendering() because it might expect the id to be there.\r\n\t\t\tif(!this.id){\r\n\t\t\t\tthis.id = registry.getUniqueId(this.declaredClass.replace(/\\./g, \"_\"));\r\n\t\t\t\tif(this.params){\r\n\t\t\t\t\t// if params contains {id: undefined}, prevent _applyAttributes() from processing it\r\n\t\t\t\t\tdelete this.params.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The document and <body> node this widget is associated with\r\n\t\t\tthis.ownerDocument = this.ownerDocument || (this.srcNodeRef ? this.srcNodeRef.ownerDocument : document);\r\n\t\t\tthis.ownerDocumentBody = win.body(this.ownerDocument);\r\n\r\n\t\t\tregistry.add(this);\r\n\r\n\t\t\tthis.buildRendering();\r\n\r\n\t\t\tvar deleteSrcNodeRef;\r\n\r\n\t\t\tif(this.domNode){\r\n\t\t\t\t// Copy attributes listed in attributeMap into the [newly created] DOM for the widget.\r\n\t\t\t\t// Also calls custom setters for all attributes with custom setters.\r\n\t\t\t\tthis._applyAttributes();\r\n\r\n\t\t\t\t// If srcNodeRef was specified, then swap out original srcNode for this widget's DOM tree.\r\n\t\t\t\t// For 2.0, move this after postCreate().  postCreate() shouldn't depend on the\r\n\t\t\t\t// widget being attached to the DOM since it isn't when a widget is created programmatically like\r\n\t\t\t\t// new MyWidget({}).\tSee #11635.\r\n\t\t\t\tvar source = this.srcNodeRef;\r\n\t\t\t\tif(source && source.parentNode && this.domNode !== source){\r\n\t\t\t\t\tsource.parentNode.replaceChild(this.domNode, source);\r\n\t\t\t\t\tdeleteSrcNodeRef = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Note: for 2.0 may want to rename widgetId to dojo._scopeName + \"_widgetId\",\r\n\t\t\t\t// assuming that dojo._scopeName even exists in 2.0\r\n\t\t\t\tthis.domNode.setAttribute(\"widgetId\", this.id);\r\n\t\t\t}\r\n\t\t\tthis.postCreate();\r\n\r\n\t\t\t// If srcNodeRef has been processed and removed from the DOM (e.g. TemplatedWidget) then delete it to allow GC.\r\n\t\t\t// I think for back-compatibility it isn't deleting srcNodeRef until after postCreate() has run.\r\n\t\t\tif(deleteSrcNodeRef){\r\n\t\t\t\tdelete this.srcNodeRef;\r\n\t\t\t}\r\n\r\n\t\t\tthis._created = true;\r\n\t\t},\r\n\r\n\t\t_applyAttributes: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStep during widget creation to copy  widget attributes to the\r\n\t\t\t//\t\tDOM according to attributeMap and _setXXXAttr objects, and also to call\r\n\t\t\t//\t\tcustom _setXXXAttr() methods.\r\n\t\t\t//\r\n\t\t\t//\t\tSkips over blank/false attribute values, unless they were explicitly specified\r\n\t\t\t//\t\tas parameters to the widget, since those are the default anyway,\r\n\t\t\t//\t\tand setting tabIndex=\"\" is different than not setting tabIndex at all.\r\n\t\t\t//\r\n\t\t\t//\t\tFor backwards-compatibility reasons attributeMap overrides _setXXXAttr when\r\n\t\t\t//\t\t_setXXXAttr is a hash/string/array, but _setXXXAttr as a functions override attributeMap.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// Call this.set() for each property that was either specified as parameter to constructor,\r\n\t\t\t// or is in the list found above.\tFor correlated properties like value and displayedValue, the one\r\n\t\t\t// specified as a parameter should take precedence.\r\n\t\t\t// Particularly important for new DateTextBox({displayedValue: ...}) since DateTextBox's default value is\r\n\t\t\t// NaN and thus is not ignored like a default value of \"\".\r\n\r\n\t\t\t// Step 1: Save the current values of the widget properties that were specified as parameters to the constructor.\r\n\t\t\t// Generally this.foo == this.params.foo, except if postMixInProperties() changed the value of this.foo.\r\n\t\t\tvar params = {};\r\n\t\t\tfor(var key in this.params || {}){\r\n\t\t\t\tparams[key] = this._get(key);\r\n\t\t\t}\r\n\r\n\t\t\t// Step 2: Call set() for each property with a non-falsy value that wasn't passed as a parameter to the constructor\r\n\t\t\tarray.forEach(this.constructor._setterAttrs, function(key){\r\n\t\t\t\tif(!(key in params)){\r\n\t\t\t\t\tvar val = this._get(key);\r\n\t\t\t\t\tif(val){\r\n\t\t\t\t\t\tthis.set(key, val);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Step 3: Call set() for each property that was specified as parameter to constructor.\r\n\t\t\t// Use params hash created above to ignore side effects from step #2 above.\r\n\t\t\tfor(key in params){\r\n\t\t\t\tthis.set(key, params[key]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after the parameters to the widget have been read-in,\r\n\t\t\t//\t\tbut before the widget template is instantiated. Especially\r\n\t\t\t//\t\tuseful to set properties that are referenced in the widget\r\n\t\t\t//\t\ttemplate.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstruct the UI for this widget, setting this.domNode.\r\n\t\t\t//\t\tMost widgets will mixin `dijit._TemplatedMixin`, which implements this method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!this.domNode){\r\n\t\t\t\t// Create root node if it wasn't created by _TemplatedMixin\r\n\t\t\t\tthis.domNode = this.srcNodeRef || this.ownerDocument.createElement(\"div\");\r\n\t\t\t}\r\n\r\n\t\t\t// baseClass is a single class name or occasionally a space-separated list of names.\r\n\t\t\t// Add those classes to the DOMNode.  If RTL mode then also add with Rtl suffix.\r\n\t\t\t// TODO: make baseClass custom setter\r\n\t\t\tif(this.baseClass){\r\n\t\t\t\tvar classes = this.baseClass.split(\" \");\r\n\t\t\t\tif(!this.isLeftToRight()){\r\n\t\t\t\t\tclasses = classes.concat(array.map(classes, function(name){\r\n\t\t\t\t\t\treturn name + \"Rtl\";\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tdomClass.add(this.domNode, classes);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcessing after the DOM fragment is created\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalled after the DOM fragment has been created, but not necessarily\r\n\t\t\t//\t\tadded to the document.  Do not include any operations which rely on\r\n\t\t\t//\t\tnode dimensions or placement.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcessing after the DOM fragment is added to the document\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalled after a widget and its children have been created and added to the page,\r\n\t\t\t//\t\tand all related widgets have finished their create() cycle, up through postCreate().\r\n\t\t\t//\r\n\t\t\t//\t\tNote that startup() may be called while the widget is still hidden, for example if the widget is\r\n\t\t\t//\t\tinside a hidden dijit/Dialog or an unselected tab of a dijit/layout/TabContainer.\r\n\t\t\t//\t\tFor widgets that need to do layout, it's best to put that layout code inside resize(), and then\r\n\t\t\t//\t\textend dijit/layout/_LayoutWidget so that resize() is called when the widget is visible.\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._started = true;\r\n\t\t\tarray.forEach(this.getChildren(), function(obj){\r\n\t\t\t\tif(!obj._started && !obj._destroyed && lang.isFunction(obj.startup)){\r\n\t\t\t\t\tobj.startup();\r\n\t\t\t\t\tobj._started = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t//////////// DESTROY FUNCTIONS ////////////////////////////////\r\n\r\n\t\tdestroyRecursive: function(/*Boolean?*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy this widget and its descendants\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis is the generic \"destructor\" function that all widget users\r\n\t\t\t//\t\tshould call to cleanly discard with a widget. Once a widget is\r\n\t\t\t//\t\tdestroyed, it is removed from the manager object.\r\n\t\t\t// preserveDom:\r\n\t\t\t//\t\tIf true, this method will leave the original DOM structure\r\n\t\t\t//\t\talone of descendant Widgets. Note: This will NOT work with\r\n\t\t\t//\t\tdijit._TemplatedMixin widgets.\r\n\r\n\t\t\tthis._beingDestroyed = true;\r\n\t\t\tthis.destroyDescendants(preserveDom);\r\n\t\t\tthis.destroy(preserveDom);\r\n\t\t},\r\n\r\n\t\tdestroy: function(/*Boolean*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy this widget, but not its descendants.  Descendants means widgets inside of\r\n\t\t\t//\t\tthis.containerNode.   Will also destroy any resources (including widgets) registered via this.own().\r\n\t\t\t//\r\n\t\t\t//\t\tThis method will also destroy internal widgets such as those created from a template,\r\n\t\t\t//\t\tassuming those widgets exist inside of this.domNode but outside of this.containerNode.\r\n\t\t\t//\r\n\t\t\t//\t\tFor 2.0 it's planned that this method will also destroy descendant widgets, so apps should not\r\n\t\t\t//\t\tdepend on the current ability to destroy a widget without destroying its descendants.   Generally\r\n\t\t\t//\t\tthey should use destroyRecursive() for widgets with children.\r\n\t\t\t// preserveDom: Boolean\r\n\t\t\t//\t\tIf true, this method will leave the original DOM structure alone.\r\n\t\t\t//\t\tNote: This will not yet work with _TemplatedMixin widgets\r\n\r\n\t\t\tthis._beingDestroyed = true;\r\n\t\t\tthis.uninitialize();\r\n\r\n\t\t\tfunction destroy(w){\r\n\t\t\t\tif(w.destroyRecursive){\r\n\t\t\t\t\tw.destroyRecursive(preserveDom);\r\n\t\t\t\t}else if(w.destroy){\r\n\t\t\t\t\tw.destroy(preserveDom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Back-compat, remove for 2.0\r\n\t\t\tarray.forEach(this._connects, lang.hitch(this, \"disconnect\"));\r\n\t\t\tarray.forEach(this._supportingWidgets, destroy);\r\n\r\n\t\t\t// Destroy supporting widgets, but not child widgets under this.containerNode (for 2.0, destroy child widgets\r\n\t\t\t// here too).   if() statement is to guard against exception if destroy() called multiple times (see #15815).\r\n\t\t\tif(this.domNode){\r\n\t\t\t\tarray.forEach(registry.findWidgets(this.domNode, this.containerNode), destroy);\r\n\t\t\t}\r\n\r\n\t\t\tthis.destroyRendering(preserveDom);\r\n\t\t\tregistry.remove(this.id);\r\n\t\t\tthis._destroyed = true;\r\n\t\t},\r\n\r\n\t\tdestroyRendering: function(/*Boolean?*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroys the DOM nodes associated with this widget.\r\n\t\t\t// preserveDom:\r\n\t\t\t//\t\tIf true, this method will leave the original DOM structure alone\r\n\t\t\t//\t\tduring tear-down. Note: this will not work with _Templated\r\n\t\t\t//\t\twidgets yet.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.bgIframe){\r\n\t\t\t\tthis.bgIframe.destroy(preserveDom);\r\n\t\t\t\tdelete this.bgIframe;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.domNode){\r\n\t\t\t\tif(preserveDom){\r\n\t\t\t\t\tdomAttr.remove(this.domNode, \"widgetId\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomConstruct.destroy(this.domNode);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.domNode;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.srcNodeRef){\r\n\t\t\t\tif(!preserveDom){\r\n\t\t\t\t\tdomConstruct.destroy(this.srcNodeRef);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.srcNodeRef;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroyDescendants: function(/*Boolean?*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRecursively destroy the children of this widget and their\r\n\t\t\t//\t\tdescendants.\r\n\t\t\t// preserveDom:\r\n\t\t\t//\t\tIf true, the preserveDom attribute is passed to all descendant\r\n\t\t\t//\t\twidget's .destroy() method. Not for use with _Templated\r\n\t\t\t//\t\twidgets.\r\n\r\n\t\t\t// get all direct descendants and destroy them recursively\r\n\t\t\tarray.forEach(this.getChildren(), function(widget){\r\n\t\t\t\tif(widget.destroyRecursive){\r\n\t\t\t\t\twidget.destroyRecursive(preserveDom);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tuninitialize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated. Override destroy() instead to implement custom widget tear-down\r\n\t\t\t//\t\tbehavior.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t////////////////// GET/SET, CUSTOM SETTERS, ETC. ///////////////////\r\n\r\n\t\t_setStyleAttr: function(/*String||Object*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the style attribute of the widget according to value,\r\n\t\t\t//\t\twhich is either a hash like {height: \"5px\", width: \"3px\"}\r\n\t\t\t//\t\tor a plain string\r\n\t\t\t// description:\r\n\t\t\t//\t\tDetermines which node to set the style on based on style setting\r\n\t\t\t//\t\tin attributeMap.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar mapNode = this.domNode;\r\n\r\n\t\t\t// Note: technically we should revert any style setting made in a previous call\r\n\t\t\t// to his method, but that's difficult to keep track of.\r\n\r\n\t\t\tif(lang.isObject(value)){\r\n\t\t\t\tdomStyle.set(mapNode, value);\r\n\t\t\t}else{\r\n\t\t\t\tif(mapNode.style.cssText){\r\n\t\t\t\t\tmapNode.style.cssText += \"; \" + value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmapNode.style.cssText = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._set(\"style\", value);\r\n\t\t},\r\n\r\n\t\t_attrToDom: function(/*String*/ attr, /*String*/ value, /*Object?*/ commands){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReflect a widget attribute (title, tabIndex, duration etc.) to\r\n\t\t\t//\t\tthe widget DOM, as specified by commands parameter.\r\n\t\t\t//\t\tIf commands isn't specified then it's looked up from attributeMap.\r\n\t\t\t//\t\tNote some attributes like \"type\"\r\n\t\t\t//\t\tcannot be processed this way as they are not mutable.\r\n\t\t\t// attr:\r\n\t\t\t//\t\tName of member variable (ex: \"focusNode\" maps to this.focusNode) pointing\r\n\t\t\t//\t\tto DOMNode inside the widget, or alternately pointing to a subwidget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tcommands = arguments.length >= 3 ? commands : this.attributeMap[attr];\r\n\r\n\t\t\tarray.forEach(lang.isArray(commands) ? commands : [commands], function(command){\r\n\r\n\t\t\t\t// Get target node and what we are doing to that node\r\n\t\t\t\tvar mapNode = this[command.node || command || \"domNode\"];\t// DOM node\r\n\t\t\t\tvar type = command.type || \"attribute\";\t// class, innerHTML, innerText, or attribute\r\n\r\n\t\t\t\tswitch(type){\r\n\t\t\t\t\tcase \"attribute\":\r\n\t\t\t\t\t\tif(lang.isFunction(value)){ // functions execute in the context of the widget\r\n\t\t\t\t\t\t\tvalue = lang.hitch(this, value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Get the name of the DOM node attribute; usually it's the same\r\n\t\t\t\t\t\t// as the name of the attribute in the widget (attr), but can be overridden.\r\n\t\t\t\t\t\t// Also maps handler names to lowercase, like onSubmit --> onsubmit\r\n\t\t\t\t\t\tvar attrName = command.attribute ? command.attribute :\r\n\t\t\t\t\t\t\t(/^on[A-Z][a-zA-Z]*$/.test(attr) ? attr.toLowerCase() : attr);\r\n\r\n\t\t\t\t\t\tif(mapNode.tagName){\r\n\t\t\t\t\t\t\t// Normal case, mapping to a DOMNode.  Note that modern browsers will have a mapNode.set()\r\n\t\t\t\t\t\t\t// method, but for consistency we still call domAttr\r\n\t\t\t\t\t\t\tdomAttr.set(mapNode, attrName, value);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// mapping to a sub-widget\r\n\t\t\t\t\t\t\tmapNode.set(attrName, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"innerText\":\r\n\t\t\t\t\t\tmapNode.innerHTML = \"\";\r\n\t\t\t\t\t\tmapNode.appendChild(this.ownerDocument.createTextNode(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"innerHTML\":\r\n\t\t\t\t\t\tmapNode.innerHTML = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"class\":\r\n\t\t\t\t\t\tdomClass.replace(mapNode, value, this[attr]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tget: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet a property from a widget.\r\n\t\t\t// name:\r\n\t\t\t//\t\tThe property to get.\r\n\t\t\t// description:\r\n\t\t\t//\t\tGet a named property from a widget. The property may\r\n\t\t\t//\t\tpotentially be retrieved via a getter method. If no getter is defined, this\r\n\t\t\t//\t\tjust retrieves the object's property.\r\n\t\t\t//\r\n\t\t\t//\t\tFor example, if the widget has properties `foo` and `bar`\r\n\t\t\t//\t\tand a method named `_getFooAttr()`, calling:\r\n\t\t\t//\t\t`myWidget.get(\"foo\")` would be equivalent to calling\r\n\t\t\t//\t\t`widget._getFooAttr()` and `myWidget.get(\"bar\")`\r\n\t\t\t//\t\twould be equivalent to the expression\r\n\t\t\t//\t\t`widget.bar2`\r\n\t\t\tvar names = this._getAttrNames(name);\r\n\t\t\treturn this[names.g] ? this[names.g]() : this._get(name);\r\n\t\t},\r\n\r\n\t\tset: function(name, value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet a property on a widget\r\n\t\t\t// name:\r\n\t\t\t//\t\tThe property to set.\r\n\t\t\t// value:\r\n\t\t\t//\t\tThe value to set in the property.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets named properties on a widget which may potentially be handled by a\r\n\t\t\t//\t\tsetter in the widget.\r\n\t\t\t//\r\n\t\t\t//\t\tFor example, if the widget has properties `foo` and `bar`\r\n\t\t\t//\t\tand a method named `_setFooAttr()`, calling\r\n\t\t\t//\t\t`myWidget.set(\"foo\", \"Howdy!\")` would be equivalent to calling\r\n\t\t\t//\t\t`widget._setFooAttr(\"Howdy!\")` and `myWidget.set(\"bar\", 3)`\r\n\t\t\t//\t\twould be equivalent to the statement `widget.bar = 3;`\r\n\t\t\t//\r\n\t\t\t//\t\tset() may also be called with a hash of name/value pairs, ex:\r\n\t\t\t//\r\n\t\t\t//\t|\tmyWidget.set({\r\n\t\t\t//\t|\t\tfoo: \"Howdy\",\r\n\t\t\t//\t|\t\tbar: 3\r\n\t\t\t//\t|\t});\r\n\t\t\t//\r\n\t\t\t//\tThis is equivalent to calling `set(foo, \"Howdy\")` and `set(bar, 3)`\r\n\r\n\t\t\tif(typeof name === \"object\"){\r\n\t\t\t\tfor(var x in name){\r\n\t\t\t\t\tthis.set(x, name[x]);\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tvar names = this._getAttrNames(name),\r\n\t\t\t\tsetter = this[names.s];\r\n\t\t\tif(lang.isFunction(setter)){\r\n\t\t\t\t// use the explicit setter\r\n\t\t\t\tvar result = setter.apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t\t}else{\r\n\t\t\t\t// Mapping from widget attribute to DOMNode/subwidget attribute/value/etc.\r\n\t\t\t\t// Map according to:\r\n\t\t\t\t//\t\t1. attributeMap setting, if one exists (TODO: attributeMap deprecated, remove in 2.0)\r\n\t\t\t\t//\t\t2. _setFooAttr: {...} type attribute in the widget (if one exists)\r\n\t\t\t\t//\t\t3. apply to focusNode or domNode if standard attribute name, excluding funcs like onClick.\r\n\t\t\t\t// Checks if an attribute is a \"standard attribute\" by whether the DOMNode JS object has a similar\r\n\t\t\t\t// attribute name (ex: accept-charset attribute matches jsObject.acceptCharset).\r\n\t\t\t\t// Note also that Tree.focusNode() is a function not a DOMNode, so test for that.\r\n\t\t\t\tvar defaultNode = this.focusNode && !lang.isFunction(this.focusNode) ? \"focusNode\" : \"domNode\",\r\n\t\t\t\t\ttag = this[defaultNode] && this[defaultNode].tagName,\r\n\t\t\t\t\tattrsForTag = tag && (tagAttrs[tag] || (tagAttrs[tag] = getAttrs(this[defaultNode]))),\r\n\t\t\t\t\tmap = name in this.attributeMap ? this.attributeMap[name] :\r\n\t\t\t\t\t\tnames.s in this ? this[names.s] :\r\n\t\t\t\t\t\t\t((attrsForTag && names.l in attrsForTag && typeof value != \"function\") ||\r\n\t\t\t\t\t\t\t\t/^aria-|^data-|^role$/.test(name)) ? defaultNode : null;\r\n\t\t\t\tif(map != null){\r\n\t\t\t\t\tthis._attrToDom(name, value, map);\r\n\t\t\t\t}\r\n\t\t\t\tthis._set(name, value);\r\n\t\t\t}\r\n\t\t\treturn result || this;\r\n\t\t},\r\n\r\n\t\t_attrPairNames: {}, // shared between all widgets\r\n\t\t_getAttrNames: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function for get() and set().\r\n\t\t\t//\t\tCaches attribute name values so we don't do the string ops every time.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar apn = this._attrPairNames;\r\n\t\t\tif(apn[name]){\r\n\t\t\t\treturn apn[name];\r\n\t\t\t}\r\n\t\t\tvar uc = name.replace(/^[a-z]|-[a-zA-Z]/g, function(c){\r\n\t\t\t\treturn c.charAt(c.length - 1).toUpperCase();\r\n\t\t\t});\r\n\t\t\treturn (apn[name] = {\r\n\t\t\t\tn: name + \"Node\",\r\n\t\t\t\ts: \"_set\" + uc + \"Attr\", // converts dashes to camel case, ex: accept-charset --> _setAcceptCharsetAttr\r\n\t\t\t\tg: \"_get\" + uc + \"Attr\",\r\n\t\t\t\tl: uc.toLowerCase()        // lowercase name w/out dashes, ex: acceptcharset\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_set: function(/*String*/ name, /*anything*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function to set new value for specified property, and call handlers\r\n\t\t\t//\t\tregistered with watch() if the value has changed.\r\n\t\t\tvar oldValue = this[name];\r\n\t\t\tthis[name] = value;\r\n\t\t\tif(this._created && !isEqual(oldValue, value)){\r\n\t\t\t\tif(this._watchCallbacks){\r\n\t\t\t\t\tthis._watchCallbacks(name, oldValue, value);\r\n\t\t\t\t}\r\n\t\t\t\tthis.emit(\"attrmodified-\" + name, {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tprevValue: oldValue,\r\n\t\t\t\t\t\tnewValue: value\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_get: function(/*String*/ name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function to get value for specified property stored by this._set(),\r\n\t\t\t//\t\ti.e. for properties with custom setters.  Used mainly by custom getters.\r\n\t\t\t//\r\n\t\t\t//\t\tFor example, CheckBox._getValueAttr() calls this._get(\"value\").\r\n\r\n\t\t\t// future: return name in this.props ? this.props[name] : this[name];\r\n\t\t\treturn this[name];\r\n\t\t},\r\n\r\n\t\temit: function(/*String*/ type, /*Object?*/ eventObj, /*Array?*/ callbackArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed by widgets to signal that a synthetic event occurred, ex:\r\n\t\t\t//\t|\tmyWidget.emit(\"attrmodified-selectedChildWidget\", {}).\r\n\t\t\t//\r\n\t\t\t//\t\tEmits an event on this.domNode named type.toLowerCase(), based on eventObj.\r\n\t\t\t//\t\tAlso calls onType() method, if present, and returns value from that method.\r\n\t\t\t//\t\tBy default passes eventObj to callback, but will pass callbackArgs instead, if specified.\r\n\t\t\t//\t\tModifies eventObj by adding missing parameters (bubbles, cancelable, widget).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// Specify fallback values for bubbles, cancelable in case they are not set in eventObj.\r\n\t\t\t// Also set pointer to widget, although since we can't add a pointer to the widget for native events\r\n\t\t\t// (see #14729), maybe we shouldn't do it here?\r\n\t\t\teventObj = eventObj || {};\r\n\t\t\tif(eventObj.bubbles === undefined){\r\n\t\t\t\teventObj.bubbles = true;\r\n\t\t\t}\r\n\t\t\tif(eventObj.cancelable === undefined){\r\n\t\t\t\teventObj.cancelable = true;\r\n\t\t\t}\r\n\t\t\tif(!eventObj.detail){\r\n\t\t\t\teventObj.detail = {};\r\n\t\t\t}\r\n\t\t\teventObj.detail.widget = this;\r\n\r\n\t\t\tvar ret, callback = this[\"on\" + type];\r\n\t\t\tif(callback){\r\n\t\t\t\tret = callback.apply(this, callbackArgs ? callbackArgs : [eventObj]);\r\n\t\t\t}\r\n\r\n\t\t\t// Emit event, but avoid spurious emit()'s as parent sets properties on child during startup/destroy\r\n\t\t\tif(this._started && !this._beingDestroyed){\r\n\t\t\t\ton.emit(this.domNode, type.toLowerCase(), eventObj);\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\ton: function(/*String|Function*/ type, /*Function*/ func){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall specified function when event occurs, ex: myWidget.on(\"click\", function(){ ... }).\r\n\t\t\t// type:\r\n\t\t\t//\t\tName of event (ex: \"click\") or extension event like touch.press.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCall specified function when event `type` occurs, ex: `myWidget.on(\"click\", function(){ ... })`.\r\n\t\t\t//\t\tNote that the function is not run in any particular scope, so if (for example) you want it to run in the\r\n\t\t\t//\t\twidget's scope you must do `myWidget.on(\"click\", lang.hitch(myWidget, func))`.\r\n\r\n\t\t\t// For backwards compatibility, if there's an onType() method in the widget then connect to that.\r\n\t\t\t// Remove in 2.0.\r\n\t\t\tvar widgetMethod = this._onMap(type);\r\n\t\t\tif(widgetMethod){\r\n\t\t\t\treturn aspect.after(this, widgetMethod, func, true);\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, just listen for the event on this.domNode.\r\n\t\t\treturn this.own(on(this.domNode, type, func))[0];\r\n\t\t},\r\n\r\n\t\t_onMap: function(/*String|Function*/ type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMaps on() type parameter (ex: \"mousemove\") to method name (ex: \"onMouseMove\").\r\n\t\t\t//\t\tIf type is a synthetic event like touch.press then returns undefined.\r\n\t\t\tvar ctor = this.constructor, map = ctor._onMap;\r\n\t\t\tif(!map){\r\n\t\t\t\tmap = (ctor._onMap = {});\r\n\t\t\t\tfor(var attr in ctor.prototype){\r\n\t\t\t\t\tif(/^on/.test(attr)){\r\n\t\t\t\t\t\tmap[attr.replace(/^on/, \"\").toLowerCase()] = attr;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn map[typeof type == \"string\" && type.toLowerCase()];\t// String\r\n\t\t},\r\n\r\n\t\ttoString: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a string that represents the widget.\r\n\t\t\t// description:\r\n\t\t\t//\t\tWhen a widget is cast to a string, this method will be used to generate the\r\n\t\t\t//\t\toutput. Currently, it does not implement any sort of reversible\r\n\t\t\t//\t\tserialization.\r\n\t\t\treturn '[Widget ' + this.declaredClass + ', ' + (this.id || 'NO ID') + ']'; // String\r\n\t\t},\r\n\r\n\t\tgetChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns all direct children of this widget, i.e. all widgets underneath this.containerNode whose parent\r\n\t\t\t//\t\tis this widget.   Note that it does not return all descendants, but rather just direct children.\r\n\t\t\t//\t\tAnalogous to [Node.childNodes](https://developer.mozilla.org/en-US/docs/DOM/Node.childNodes),\r\n\t\t\t//\t\texcept containing widgets rather than DOMNodes.\r\n\t\t\t//\r\n\t\t\t//\t\tThe result intentionally excludes internally created widgets (a.k.a. supporting widgets)\r\n\t\t\t//\t\toutside of this.containerNode.\r\n\t\t\t//\r\n\t\t\t//\t\tNote that the array returned is a simple array.  Application code should not assume\r\n\t\t\t//\t\texistence of methods like forEach().\r\n\r\n\t\t\treturn this.containerNode ? registry.findWidgets(this.containerNode) : []; // dijit/_WidgetBase[]\r\n\t\t},\r\n\r\n\t\tgetParent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the parent widget of this widget.\r\n\r\n\t\t\treturn registry.getEnclosingWidget(this.domNode.parentNode);\r\n\t\t},\r\n\r\n\t\tconnect: function(/*Object|null*/ obj, /*String|Function*/ event, /*String|Function*/ method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0, use this.own(on(...)) or this.own(aspect.after(...)) instead.\r\n\t\t\t//\r\n\t\t\t//\t\tConnects specified obj/event to specified method of this object\r\n\t\t\t//\t\tand registers for disconnect() on widget destroy.\r\n\t\t\t//\r\n\t\t\t//\t\tProvide widget-specific analog to dojo.connect, except with the\r\n\t\t\t//\t\timplicit use of this widget as the target object.\r\n\t\t\t//\t\tEvents connected with `this.connect` are disconnected upon\r\n\t\t\t//\t\tdestruction.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle that can be passed to `disconnect` in order to disconnect before\r\n\t\t\t//\t\tthe widget is destroyed.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar btn = new Button();\r\n\t\t\t//\t|\t// when foo.bar() is called, call the listener we're going to\r\n\t\t\t//\t|\t// provide in the scope of btn\r\n\t\t\t//\t|\tbtn.connect(foo, \"bar\", function(){\r\n\t\t\t//\t|\t\tconsole.debug(this.toString());\r\n\t\t\t//\t|\t});\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\treturn this.own(connect.connect(obj, event, this, method))[0];\t// handle\r\n\t\t},\r\n\r\n\t\tdisconnect: function(handle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0, use handle.remove() instead.\r\n\t\t\t//\r\n\t\t\t//\t\tDisconnects handle created by `connect`.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\thandle.remove();\r\n\t\t},\r\n\r\n\t\tsubscribe: function(t, method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0, use this.own(topic.subscribe()) instead.\r\n\t\t\t//\r\n\t\t\t//\t\tSubscribes to the specified topic and calls the specified method\r\n\t\t\t//\t\tof this object and registers for unsubscribe() on widget destroy.\r\n\t\t\t//\r\n\t\t\t//\t\tProvide widget-specific analog to dojo.subscribe, except with the\r\n\t\t\t//\t\timplicit use of this widget as the target object.\r\n\t\t\t// t: String\r\n\t\t\t//\t\tThe topic\r\n\t\t\t// method: Function\r\n\t\t\t//\t\tThe callback\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar btn = new Button();\r\n\t\t\t//\t|\t// when /my/topic is published, this button changes its label to\r\n\t\t\t//\t|\t// be the parameter of the topic.\r\n\t\t\t//\t|\tbtn.subscribe(\"/my/topic\", function(v){\r\n\t\t\t//\t|\t\tthis.set(\"label\", v);\r\n\t\t\t//\t|\t});\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this.own(topic.subscribe(t, lang.hitch(this, method)))[0];\t// handle\r\n\t\t},\r\n\r\n\t\tunsubscribe: function(/*Object*/ handle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0, use handle.remove() instead.\r\n\t\t\t//\r\n\t\t\t//\t\tUnsubscribes handle created by this.subscribe.\r\n\t\t\t//\t\tAlso removes handle from this widget's list of subscriptions\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\thandle.remove();\r\n\t\t},\r\n\r\n\t\tisLeftToRight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn this widget's explicit or implicit orientation (true for LTR, false for RTL)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this.dir ? (this.dir.toLowerCase() == \"ltr\") : domGeometry.isBodyLtr(this.ownerDocument); //Boolean\r\n\t\t},\r\n\r\n\t\tisFocusable: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if this widget can currently be focused\r\n\t\t\t//\t\tand false if not\r\n\t\t\treturn this.focus && (domStyle.get(this.domNode, \"display\") != \"none\");\r\n\t\t},\r\n\r\n\t\tplaceAt: function(/*String|DomNode|DocumentFragment|dijit/_WidgetBase*/ reference, /*String|Int?*/ position){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPlace this widget somewhere in the DOM based\r\n\t\t\t//\t\ton standard domConstruct.place() conventions.\r\n\t\t\t// description:\r\n\t\t\t//\t\tA convenience function provided in all _Widgets, providing a simple\r\n\t\t\t//\t\tshorthand mechanism to put an existing (or newly created) Widget\r\n\t\t\t//\t\tsomewhere in the dom, and allow chaining.\r\n\t\t\t// reference:\r\n\t\t\t//\t\tWidget, DOMNode, DocumentFragment, or id of widget or DOMNode\r\n\t\t\t// position:\r\n\t\t\t//\t\tIf reference is a widget (or id of widget), and that widget has an \".addChild\" method,\r\n\t\t\t//\t\tit will be called passing this widget instance into that method, supplying the optional\r\n\t\t\t//\t\tposition index passed.  In this case position (if specified) should be an integer.\r\n\t\t\t//\r\n\t\t\t//\t\tIf reference is a DOMNode (or id matching a DOMNode but not a widget),\r\n\t\t\t//\t\tthe position argument can be a numeric index or a string\r\n\t\t\t//\t\t\"first\", \"last\", \"before\", or \"after\", same as dojo/dom-construct::place().\r\n\t\t\t// returns: dijit/_WidgetBase\r\n\t\t\t//\t\tProvides a useful return of the newly created dijit._Widget instance so you\r\n\t\t\t//\t\tcan \"chain\" this function by instantiating, placing, then saving the return value\r\n\t\t\t//\t\tto a variable.\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// create a Button with no srcNodeRef, and place it in the body:\r\n\t\t\t//\t|\tvar button = new Button({ label:\"click\" }).placeAt(win.body());\r\n\t\t\t//\t|\t// now, 'button' is still the widget reference to the newly created button\r\n\t\t\t//\t|\tbutton.on(\"click\", function(e){ console.log('click'); }));\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// create a button out of a node with id=\"src\" and append it to id=\"wrapper\":\r\n\t\t\t//\t|\tvar button = new Button({},\"src\").placeAt(\"wrapper\");\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// place a new button as the first element of some div\r\n\t\t\t//\t|\tvar button = new Button({ label:\"click\" }).placeAt(\"wrapper\",\"first\");\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// create a contentpane and add it to a TabContainer\r\n\t\t\t//\t|\tvar tc = dijit.byId(\"myTabs\");\r\n\t\t\t//\t|\tnew ContentPane({ href:\"foo.html\", title:\"Wow!\" }).placeAt(tc)\r\n\r\n\t\t\tvar refWidget = !reference.tagName && registry.byId(reference);\r\n\t\t\tif(refWidget && refWidget.addChild && (!position || typeof position === \"number\")){\r\n\t\t\t\t// Adding this to refWidget and can use refWidget.addChild() to handle everything.\r\n\t\t\t\trefWidget.addChild(this, position);\r\n\t\t\t}else{\r\n\t\t\t\t// \"reference\" is a plain DOMNode, or we can't use refWidget.addChild().   Use domConstruct.place() and\r\n\t\t\t\t// target refWidget.containerNode for nested placement (position==number, \"first\", \"last\", \"only\"), and\r\n\t\t\t\t// refWidget.domNode otherwise (\"after\"/\"before\"/\"replace\").  (But not supported officially, see #14946.)\r\n\t\t\t\tvar ref = refWidget && (\"domNode\" in refWidget) ?\r\n\t\t\t\t\t(refWidget.containerNode && !/after|before|replace/.test(position || \"\") ?\r\n\t\t\t\t\t\trefWidget.containerNode : refWidget.domNode) : dom.byId(reference, this.ownerDocument);\r\n\t\t\t\tdomConstruct.place(this.domNode, ref, position);\r\n\r\n\t\t\t\t// Start this iff it has a parent widget that's already started.\r\n\t\t\t\t// TODO: for 2.0 maybe it should also start the widget when this.getParent() returns null??\r\n\t\t\t\tif(!this._started && (this.getParent() || {})._started){\r\n\t\t\t\t\tthis.startup();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tdefer: function(fcn, delay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWrapper to setTimeout to avoid deferred functions executing\r\n\t\t\t//\t\tafter the originating widget has been destroyed.\r\n\t\t\t//\t\tReturns an object handle with a remove method (that returns null) (replaces clearTimeout).\r\n\t\t\t// fcn: Function\r\n\t\t\t//\t\tFunction reference.\r\n\t\t\t// delay: Number?\r\n\t\t\t//\t\tDelay, defaults to 0.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar timer = setTimeout(lang.hitch(this,\r\n\t\t\t\tfunction(){\r\n\t\t\t\t\tif(!timer){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttimer = null;\r\n\t\t\t\t\tif(!this._destroyed){\r\n\t\t\t\t\t\tlang.hitch(this, fcn)();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tdelay || 0\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\tremove: function(){\r\n\t\t\t\t\tif(timer){\r\n\t\t\t\t\t\tclearTimeout(timer);\r\n\t\t\t\t\t\ttimer = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null; // so this works well: handle = handle.remove();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\t_WidgetBase.extend(_BidiMixin);\r\n\t}\r\n\r\n\treturn _WidgetBase;\r\n});\r\n\ndefine('dijit/a11yclick',[\r\n\t\"dojo/keys\", // keys.ENTER keys.SPACE\r\n\t\"dojo/mouse\",\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\" // touch support for click is now there\r\n], function(keys, mouse, on, touch){\r\n\r\n\t// module:\r\n\t//\t\tdijit/a11yclick\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tCustom press, release, and click synthetic events\r\n\t\t//\t\twhich trigger on a left mouse click, touch, or space/enter keyup.\r\n\r\n\t\tclick: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLogical click operation for mouse, touch, or keyboard (space/enter key)\r\n\t\t},\r\n\t\tpress: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMousedown (left button), touchstart, or keydown (space or enter) corresponding to logical click operation.\r\n\t\t},\r\n\t\trelease: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouseup (left button), touchend, or keyup (space or enter) corresponding to logical click operation.\r\n\t\t},\r\n\t\tmove: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse cursor or a finger is dragged over the given node.\r\n\t\t}\r\n\t};\r\n\t=====*/\r\n\r\n\tfunction clickKey(/*Event*/ e){\r\n\t\t// Test if this keyboard event should be tracked as the start (if keydown) or end (if keyup) of a click event.\r\n\t\t// Only track for nodes marked to be tracked, and not for buttons or inputs,\r\n\t\t// since buttons handle keyboard click natively, and text inputs should not\r\n\t\t// prevent typing spaces or newlines.\r\n\t\tif((e.keyCode === keys.ENTER || e.keyCode === keys.SPACE) && !/input|button|textarea/i.test(e.target.nodeName)){\r\n\r\n\t\t\t// Test if a node or its ancestor has been marked with the dojoClick property to indicate special processing\r\n\t\t\tfor(var node = e.target; node; node = node.parentNode){\r\n\t\t\t\tif(node.dojoClick){ return true; }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar lastKeyDownNode;\r\n\r\n\ton(document, \"keydown\", function(e){\r\n\t\t//console.log(\"a11yclick: onkeydown, e.target = \", e.target, \", lastKeyDownNode was \", lastKeyDownNode, \", equality is \", (e.target === lastKeyDownNode));\r\n\t\tif(clickKey(e)){\r\n\t\t\t// needed on IE for when focus changes between keydown and keyup - otherwise dropdown menus do not work\r\n\t\t\tlastKeyDownNode = e.target;\r\n\r\n\t\t\t// Prevent viewport scrolling on space key in IE<9.\r\n\t\t\t// (Reproducible on test_Button.html on any of the first dijit/form/Button examples)\r\n\t\t\te.preventDefault();\r\n\t\t}else{\r\n\t\t\tlastKeyDownNode = null;\r\n\t\t}\r\n\t});\r\n\r\n\ton(document, \"keyup\", function(e){\r\n\t\t//console.log(\"a11yclick: onkeyup, e.target = \", e.target, \", lastKeyDownNode was \", lastKeyDownNode, \", equality is \", (e.target === lastKeyDownNode));\r\n\t\tif(clickKey(e) && e.target == lastKeyDownNode){\t// === breaks greasemonkey\r\n\t\t\t//need reset here or have problems in FF when focus returns to trigger element after closing popup/alert\r\n\t\t\tlastKeyDownNode = null;\r\n\r\n\t\t\ton.emit(e.target, \"click\", {\r\n\t\t\t\tcancelable: true,\r\n\t\t\t\tbubbles: true,\r\n\t\t\t\tctrlKey: e.ctrlKey,\r\n\t\t\t\tshiftKey: e.shiftKey,\r\n\t\t\t\tmetaKey: e.metaKey,\r\n\t\t\t\taltKey: e.altKey,\r\n\t\t\t\t_origType: e.type\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\t// I want to return a hash of the synthetic events, but for backwards compatibility the main return value\r\n\t// needs to be the click event.   Change for 2.0.\r\n\r\n\tvar click = function(node, listener){\r\n\t\t// Set flag on node so that keydown/keyup above emits click event.\r\n\t\t// Also enables fast click processing from dojo/touch.\r\n\t\tnode.dojoClick = true;\r\n\r\n\t\treturn on(node, \"click\", listener);\r\n\t};\r\n\tclick.click = click;\t// forward compatibility with 2.0\r\n\r\n\tclick.press =  function(node, listener){\r\n\t\tvar touchListener = on(node, touch.press, function(evt){\r\n\t\t\tif(evt.type == \"mousedown\" && !mouse.isLeft(evt)){\r\n\t\t\t\t// Ignore right click\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlistener(evt);\r\n\t\t}), keyListener = on(node, \"keydown\", function(evt){\r\n\t\t\tif(evt.keyCode === keys.ENTER || evt.keyCode === keys.SPACE){\r\n\t\t\t\tlistener(evt);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tremove: function(){\r\n\t\t\t\ttouchListener.remove();\r\n\t\t\t\tkeyListener.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tclick.release =  function(node, listener){\r\n\t\tvar touchListener = on(node, touch.release, function(evt){\r\n\t\t\tif(evt.type == \"mouseup\" && !mouse.isLeft(evt)){\r\n\t\t\t\t// Ignore right click\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlistener(evt);\r\n\t\t}), keyListener = on(node, \"keyup\", function(evt){\r\n\t\t\tif(evt.keyCode === keys.ENTER || evt.keyCode === keys.SPACE){\r\n\t\t\t\tlistener(evt);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tremove: function(){\r\n\t\t\t\ttouchListener.remove();\r\n\t\t\t\tkeyListener.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tclick.move = touch.move;\t// just for convenience\r\n\r\n\treturn click;\r\n});\r\n\ndefine('dijit/_OnDijitClickMixin',[\r\n\t\"dojo/on\",\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/keys\", // keys.ENTER keys.SPACE\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/has\", // has(\"dom-addeventlistener\")\r\n\t\"./a11yclick\"\r\n], function(on, array, keys, declare, has, a11yclick){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_OnDijitClickMixin\r\n\r\n\tvar ret = declare(\"dijit._OnDijitClickMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated.   New code should access the dijit/a11yclick event directly, ex:\r\n\t\t//\t\t|\tthis.own(on(node, a11yclick, function(){ ... }));\r\n\t\t//\r\n\t\t//\t\tMixing in this class will make _WidgetBase.connect(node, \"ondijitclick\", ...) work.\r\n\t\t//\t\tIt also used to be necessary to make templates with ondijitclick work, but now you can just require\r\n\t\t//\t\tdijit/a11yclick.\r\n\r\n\t\tconnect: function(obj, event, method){\r\n\t\t\t// override _WidgetBase.connect() to make this.connect(node, \"ondijitclick\", ...) work\r\n\t\t\treturn this.inherited(arguments, [obj, event == \"ondijitclick\" ? a11yclick : event, method]);\r\n\t\t}\r\n\t});\r\n\r\n\tret.a11yclick = a11yclick;\t// back compat\r\n\r\n\treturn ret;\r\n});\r\n\ndefine('dijit/_FocusMixin',[\r\n\t\"./focus\",\r\n\t\"./_WidgetBase\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\" // lang.extend\r\n], function(focus, _WidgetBase, declare, lang){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_FocusMixin\r\n\r\n\t// We don't know where _FocusMixin will occur in the inheritance chain, but we need the _onFocus()/_onBlur() below\r\n\t// to be last in the inheritance chain, so mixin to _WidgetBase.\r\n\tlang.extend(_WidgetBase, {\r\n\t\t// focused: [readonly] Boolean\r\n\t\t//\t\tThis widget or a widget it contains has focus, or is \"active\" because\r\n\t\t//\t\tit was recently clicked.\r\n\t\tfocused: false,\r\n\r\n\t\tonFocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the widget becomes \"active\" because\r\n\t\t\t//\t\tit or a widget inside of it either has focus, or has recently\r\n\t\t\t//\t\tbeen clicked.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the widget stops being \"active\" because\r\n\t\t\t//\t\tfocus moved to something outside of it, or the user\r\n\t\t\t//\t\tclicked somewhere outside of it, or the widget was\r\n\t\t\t//\t\thidden.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_onFocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is where widgets do processing for when they are active,\r\n\t\t\t//\t\tsuch as changing CSS classes.  See onFocus() for more details.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.onFocus();\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is where widgets do processing for when they stop being active,\r\n\t\t\t//\t\tsuch as changing CSS classes.  See onBlur() for more details.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.onBlur();\r\n\t\t}\r\n\t});\r\n\r\n\treturn declare(\"dijit._FocusMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin to widget to provide _onFocus() and _onBlur() methods that\r\n\t\t//\t\tfire when a widget or its descendants get/lose focus\r\n\r\n\t\t// flag that I want _onFocus()/_onBlur() notifications from focus manager\r\n\t\t_focusManager: focus\r\n\t});\r\n\r\n});\r\n\ndefine('dijit/_Widget',[\r\n\t\"dojo/aspect\",\t// aspect.around\r\n\t\"dojo/_base/config\",\t// config.isDebug\r\n\t\"dojo/_base/connect\",\t// connect.connect\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/query\",\r\n\t\"dojo/ready\",\r\n\t\"./registry\",\t// registry.byNode\r\n\t\"./_WidgetBase\",\r\n\t\"./_OnDijitClickMixin\",\r\n\t\"./_FocusMixin\",\r\n\t\"dojo/uacss\",\t\t// browser sniffing (included for back-compat; subclasses may be using)\r\n\t\"./hccss\"\t\t// high contrast mode sniffing (included to set CSS classes on <body>, module ret value unused)\r\n], function(aspect, config, connect, declare, has, kernel, lang, query, ready,\r\n\t\t\tregistry, _WidgetBase, _OnDijitClickMixin, _FocusMixin){\r\n\r\n\r\n// module:\r\n//\t\tdijit/_Widget\r\n\r\n\r\nfunction connectToDomNode(){\r\n\t// summary:\r\n\t//\t\tIf user connects to a widget method === this function, then they will\r\n\t//\t\tinstead actually be connecting the equivalent event on this.domNode\r\n}\r\n\r\n// Trap dojo.connect() calls to connectToDomNode methods, and redirect to _Widget.on()\r\nfunction aroundAdvice(originalConnect){\r\n\treturn function(obj, event, scope, method){\r\n\t\tif(obj && typeof event == \"string\" && obj[event] == connectToDomNode){\r\n\t\t\treturn obj.on(event.substring(2).toLowerCase(), lang.hitch(scope, method));\r\n\t\t}\r\n\t\treturn originalConnect.apply(connect, arguments);\r\n\t};\r\n}\r\naspect.around(connect, \"connect\", aroundAdvice);\r\nif(kernel.connect){\r\n\taspect.around(kernel, \"connect\", aroundAdvice);\r\n}\r\n\r\nvar _Widget = declare(\"dijit._Widget\", [_WidgetBase, _OnDijitClickMixin, _FocusMixin], {\r\n\t// summary:\r\n\t//\t\tOld base class for widgets.   New widgets should extend `dijit/_WidgetBase` instead\r\n\t// description:\r\n\t//\t\tOld Base class for Dijit widgets.\r\n\t//\r\n\t//\t\tExtends _WidgetBase, adding support for:\r\n\t//\r\n\t//\t\t- declaratively/programatically specifying widget initialization parameters like\r\n\t//\t\t\tonMouseMove=\"foo\" that call foo when this.domNode gets a mousemove event\r\n\t//\t\t- ondijitclick:\r\n\t//\t\t\tSupport new data-dojo-attach-event=\"ondijitclick: ...\" that is triggered by a mouse click or a SPACE/ENTER keypress\r\n\t//\t\t- focus related functions:\r\n\t//\t\t\tIn particular, the onFocus()/onBlur() callbacks.   Driven internally by\r\n\t//\t\t\tdijit/_base/focus.js.\r\n\t//\t\t- deprecated methods\r\n\t//\t\t- onShow(), onHide(), onClose()\r\n\t//\r\n\t//\t\tAlso, by loading code in dijit/_base, turns on:\r\n\t//\r\n\t//\t\t- browser sniffing (putting browser class like `dj_ie` on `<html>` node)\r\n\t//\t\t- high contrast mode sniffing (add `dijit_a11y` class to `<body>` if machine is in high contrast mode)\r\n\r\n\r\n\t////////////////// DEFERRED CONNECTS ///////////////////\r\n\r\n\tonClick: connectToDomNode,\r\n\t/*=====\r\n\tonClick: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of mouse click events.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonDblClick: connectToDomNode,\r\n\t/*=====\r\n\tonDblClick: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of mouse double click events.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonKeyDown: connectToDomNode,\r\n\t/*=====\r\n\tonKeyDown: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of keys being pressed down.\r\n\t\t// event:\r\n\t\t//\t\tkey Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonKeyPress: connectToDomNode,\r\n\t/*=====\r\n\tonKeyPress: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of printable keys being typed.\r\n\t\t// event:\r\n\t\t//\t\tkey Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonKeyUp: connectToDomNode,\r\n\t/*=====\r\n\tonKeyUp: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of keys being released.\r\n\t\t// event:\r\n\t\t//\t\tkey Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseDown: connectToDomNode,\r\n\t/*=====\r\n\tonMouseDown: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse button is pressed down.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseMove: connectToDomNode,\r\n\t/*=====\r\n\tonMouseMove: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves over nodes contained within this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseOut: connectToDomNode,\r\n\t/*=====\r\n\tonMouseOut: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves off of nodes contained within this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseOver: connectToDomNode,\r\n\t/*=====\r\n\tonMouseOver: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves onto nodes contained within this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseLeave: connectToDomNode,\r\n\t/*=====\r\n\tonMouseLeave: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves off of this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseEnter: connectToDomNode,\r\n\t/*=====\r\n\tonMouseEnter: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves onto this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseUp: connectToDomNode,\r\n\t/*=====\r\n\tonMouseUp: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse button is released.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\r\n\tconstructor: function(params /*===== ,srcNodeRef =====*/){\r\n\t\t// summary:\r\n\t\t//\t\tCreate the widget.\r\n\t\t// params: Object|null\r\n\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t// srcNodeRef: DOMNode|String?\r\n\t\t//\t\tIf a srcNodeRef (DOM node) is specified:\r\n\t\t//\r\n\t\t//\t\t- use srcNodeRef.innerHTML as my contents\r\n\t\t//\t\t- if this is a behavioral widget then apply behavior to that srcNodeRef\r\n\t\t//\t\t- otherwise, replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t// extract parameters like onMouseMove that should connect directly to this.domNode\r\n\t\tthis._toConnect = {};\r\n\t\tfor(var name in params){\r\n\t\t\tif(this[name] === connectToDomNode){\r\n\t\t\t\tthis._toConnect[name.replace(/^on/, \"\").toLowerCase()] = params[name];\r\n\t\t\t\tdelete params[name];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\t// perform connection from this.domNode to user specified handlers (ex: onMouseMove)\r\n\t\tfor(var name in this._toConnect){\r\n\t\t\tthis.on(name, this._toConnect[name]);\r\n\t\t}\r\n\t\tdelete this._toConnect;\r\n\t},\r\n\r\n\ton: function(/*String|Function*/ type, /*Function*/ func){\r\n\t\tif(this[this._onMap(type)] === connectToDomNode){\r\n\t\t\t// Use connect.connect() rather than on() to get handling for \"onmouseenter\" on non-IE,\r\n\t\t\t// normalization of onkeypress/onkeydown to behave like firefox, etc.\r\n\t\t\t// Also, need to specify context as \"this\" rather than the default context of the DOMNode\r\n\t\t\t// Remove in 2.0.\r\n\t\t\treturn connect.connect(this.domNode, type.toLowerCase(), this, func);\r\n\t\t}\r\n\t\treturn this.inherited(arguments);\r\n\t},\r\n\r\n\t_setFocusedAttr: function(val){\r\n\t\t// Remove this method in 2.0 (or sooner), just here to set _focused == focused, for back compat\r\n\t\t// (but since it's a private variable we aren't required to keep supporting it).\r\n\t\tthis._focused = val;\r\n\t\tthis._set(\"focused\", val);\r\n\t},\r\n\r\n\t////////////////// DEPRECATED METHODS ///////////////////\r\n\r\n\tsetAttribute: function(/*String*/ attr, /*anything*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated.  Use set() instead.\r\n\t\t// tags:\r\n\t\t//\t\tdeprecated\r\n\t\tkernel.deprecated(this.declaredClass+\"::setAttribute(attr, value) is deprecated. Use set() instead.\", \"\", \"2.0\");\r\n\t\tthis.set(attr, value);\r\n\t},\r\n\r\n\tattr: function(/*String|Object*/name, /*Object?*/value){\r\n\t\t// summary:\r\n\t\t//\t\tThis method is deprecated, use get() or set() directly.\r\n\t\t// name:\r\n\t\t//\t\tThe property to get or set. If an object is passed here and not\r\n\t\t//\t\ta string, its keys are used as names of attributes to be set\r\n\t\t//\t\tand the value of the object as values to set in the widget.\r\n\t\t// value:\r\n\t\t//\t\tOptional. If provided, attr() operates as a setter. If omitted,\r\n\t\t//\t\tthe current value of the named property is returned.\r\n\t\t// tags:\r\n\t\t//\t\tdeprecated\r\n\r\n\t\tvar args = arguments.length;\r\n\t\tif(args >= 2 || typeof name === \"object\"){ // setter\r\n\t\t\treturn this.set.apply(this, arguments);\r\n\t\t}else{ // getter\r\n\t\t\treturn this.get(name);\r\n\t\t}\r\n\t},\r\n\r\n\tgetDescendants: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns all the widgets contained by this, i.e., all widgets underneath this.containerNode.\r\n\t\t//\t\tThis method should generally be avoided as it returns widgets declared in templates, which are\r\n\t\t//\t\tsupposed to be internal/hidden, but it's left here for back-compat reasons.\r\n\r\n\t\tkernel.deprecated(this.declaredClass+\"::getDescendants() is deprecated. Use getChildren() instead.\", \"\", \"2.0\");\r\n\t\treturn this.containerNode ? query('[widgetId]', this.containerNode).map(registry.byNode) : []; // dijit/_WidgetBase[]\r\n\t},\r\n\r\n\t////////////////// MISCELLANEOUS METHODS ///////////////////\r\n\r\n\t_onShow: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal method called when this widget is made visible.\r\n\t\t//\t\tSee `onShow` for details.\r\n\t\tthis.onShow();\r\n\t},\r\n\r\n\tonShow: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when this widget becomes the selected pane in a\r\n\t\t//\t\t`dijit/layout/TabContainer`, `dijit/layout/StackContainer`,\r\n\t\t//\t\t`dijit/layout/AccordionContainer`, etc.\r\n\t\t//\r\n\t\t//\t\tAlso called to indicate display of a `dijit.Dialog`, `dijit.TooltipDialog`, or `dijit.TitlePane`.\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\r\n\tonHide: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when another widget becomes the selected pane in a\r\n\t\t//\t\t`dijit/layout/TabContainer`, `dijit/layout/StackContainer`,\r\n\t\t//\t\t`dijit/layout/AccordionContainer`, etc.\r\n\t\t//\r\n\t\t//\t\tAlso called to indicate hide of a `dijit.Dialog`, `dijit.TooltipDialog`, or `dijit.TitlePane`.\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\r\n\tonClose: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when this widget is being displayed as a popup (ex: a Calendar popped\r\n\t\t//\t\tup from a DateTextBox), and it is hidden.\r\n\t\t//\t\tThis is called from the dijit.popup code, and should not be called directly.\r\n\t\t//\r\n\t\t//\t\tAlso used as a parameter for children of `dijit/layout/StackContainer` or subclasses.\r\n\t\t//\t\tCallback if a user tries to close the child.   Child will be closed if this function returns true.\r\n\t\t// tags:\r\n\t\t//\t\textension\r\n\r\n\t\treturn true;\t\t// Boolean\r\n\t}\r\n});\r\n\r\n// For back-compat, remove in 2.0.\r\nif(has(\"dijit-legacy-requires\")){\r\n\tready(0, function(){\r\n\t\tvar requires = [\"dijit/_base\"];\r\n\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t});\r\n}\r\nreturn _Widget;\r\n});\r\n\ndefine('dijit/_AttachMixin',[\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/connect\",\t// remove for 2.0\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/mouse\",\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"./_WidgetBase\"\r\n], function(require, array, connect, declare, lang, mouse, on, touch, _WidgetBase){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_AttachMixin\r\n\r\n\t// Map from string name like \"mouseenter\" to synthetic event like mouse.enter\r\n\tvar synthEvents = lang.delegate(touch, {\r\n\t\t\"mouseenter\": mouse.enter,\r\n\t\t\"mouseleave\": mouse.leave,\r\n\t\t\"keypress\": connect._keypress\t// remove for 2.0\r\n\t});\r\n\r\n\t// To be lightweight, _AttachMixin doesn't require() dijit/a11yclick.\r\n\t// If the subclass has a template using \"ondijitclick\", it must load dijit/a11yclick itself.\r\n\t// In that case, the a11yclick variable below will get set to point to that synthetic event.\r\n\tvar a11yclick;\r\n\r\n\tvar _AttachMixin = declare(\"dijit._AttachMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets to attach to dom nodes and setup events via\r\n\t\t//\t\tconvenient data-dojo-attach-point and data-dojo-attach-event DOM attributes.\r\n\t\t//\r\n\t\t//\t\tSuperclass of _TemplatedMixin, and can also be used standalone when templates are pre-rendered on the\r\n\t\t//\t\tserver.\r\n\t\t//\r\n\t\t//\t\tDoes not [yet] handle widgets like ContentPane with this.containerNode set.   It should skip\r\n\t\t//\t\tscanning for data-dojo-attach-point and data-dojo-attach-event inside this.containerNode, but it\r\n\t\t//\t\tdoesn't.\r\n\r\n/*=====\r\n\t\t// _attachPoints: [private] String[]\r\n\t\t//\t\tList of widget attribute names associated with data-dojo-attach-point=... in the\r\n\t\t//\t\ttemplate, ex: [\"containerNode\", \"labelNode\"]\r\n\t\t_attachPoints: [],\r\n\r\n\t\t// _attachEvents: [private] Handle[]\r\n\t\t//\t\tList of connections associated with data-dojo-attach-event=... in the\r\n\t\t//\t\ttemplate\r\n\t\t_attachEvents: [],\r\n\r\n\t\t// attachScope: [public] Object\r\n\t\t//\t\tObject to which attach points and events will be scoped.  Defaults\r\n\t\t//\t\tto 'this'.\r\n\t\tattachScope: undefined,\r\n\r\n\t\t// searchContainerNode: [protected] Boolean\r\n\t\t//\t\tSearch descendants of this.containerNode for data-dojo-attach-point and data-dojo-attach-event.\r\n\t\t//\t\tShould generally be left false (the default value) both for performance and to avoid failures when\r\n\t\t//\t\tthis.containerNode holds other _AttachMixin instances with their own attach points and events.\r\n \t\tsearchContainerNode: false,\r\n =====*/\r\n\r\n\t\tconstructor: function(/*===== params, srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree.\r\n\r\n\t\t\tthis._attachPoints = [];\r\n\t\t\tthis._attachEvents = [];\r\n\t\t},\r\n\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach to DOM nodes marked with special attributes.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// recurse through the node, looking for, and attaching to, our\r\n\t\t\t// attachment points and events, which should be defined on the template node.\r\n\t\t\tthis._attachTemplateNodes(this.domNode);\r\n\r\n\t\t\tthis._beforeFillContent();\t\t// hook for _WidgetsInTemplateMixin\r\n\t\t},\r\n\r\n\t\t_beforeFillContent: function(){\r\n\t\t},\r\n\r\n\t\t_attachTemplateNodes: function(rootNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIterate through the dom nodes and attach functions and nodes accordingly.\r\n\t\t\t// description:\r\n\t\t\t//\t\tMap widget properties and functions to the handlers specified in\r\n\t\t\t//\t\tthe dom node and it's descendants. This function iterates over all\r\n\t\t\t//\t\tnodes and looks for these properties:\r\n\t\t\t//\r\n\t\t\t//\t\t- dojoAttachPoint/data-dojo-attach-point\r\n\t\t\t//\t\t- dojoAttachEvent/data-dojo-attach-event\r\n\t\t\t// rootNode: DomNode\r\n\t\t\t//\t\tThe node to search for properties. All descendants will be searched.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// DFS to process all nodes except those inside of this.containerNode\r\n\t\t\tvar node = rootNode;\r\n\t\t\twhile(true){\r\n\t\t\t\tif(node.nodeType == 1 && (this._processTemplateNode(node, function(n,p){ return n.getAttribute(p); },\r\n\t\t\t\t\t\tthis._attach) || this.searchContainerNode) && node.firstChild){\r\n\t\t\t\t\tnode = node.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(node == rootNode){ return; }\r\n\t\t\t\t\twhile(!node.nextSibling){\r\n\t\t\t\t\t\tnode = node.parentNode;\r\n\t\t\t\t\t\tif(node == rootNode){ return; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode = node.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_processTemplateNode: function(/*DOMNode|Widget*/ baseNode, getAttrFunc, attachFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcess data-dojo-attach-point and data-dojo-attach-event for given node or widget.\r\n\t\t\t//\t\tReturns true if caller should process baseNode's children too.\r\n\r\n\t\t\tvar ret = true;\r\n\r\n\t\t\t// Process data-dojo-attach-point\r\n\t\t\tvar _attachScope = this.attachScope || this,\r\n\t\t\t\tattachPoint = getAttrFunc(baseNode, \"dojoAttachPoint\") || getAttrFunc(baseNode, \"data-dojo-attach-point\");\r\n\t\t\tif(attachPoint){\r\n\t\t\t\tvar point, points = attachPoint.split(/\\s*,\\s*/);\r\n\t\t\t\twhile((point = points.shift())){\r\n\t\t\t\t\tif(lang.isArray(_attachScope[point])){\r\n\t\t\t\t\t\t_attachScope[point].push(baseNode);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t_attachScope[point] = baseNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tret = (point != \"containerNode\");\r\n\t\t\t\t\tthis._attachPoints.push(point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Process data-dojo-attach-event\r\n\t\t\tvar attachEvent = getAttrFunc(baseNode, \"dojoAttachEvent\") || getAttrFunc(baseNode, \"data-dojo-attach-event\");\r\n\t\t\tif(attachEvent){\r\n\t\t\t\t// NOTE: we want to support attributes that have the form\r\n\t\t\t\t// \"domEvent: nativeEvent; ...\"\r\n\t\t\t\tvar event, events = attachEvent.split(/\\s*,\\s*/);\r\n\t\t\t\tvar trim = lang.trim;\r\n\t\t\t\twhile((event = events.shift())){\r\n\t\t\t\t\tif(event){\r\n\t\t\t\t\t\tvar thisFunc = null;\r\n\t\t\t\t\t\tif(event.indexOf(\":\") != -1){\r\n\t\t\t\t\t\t\t// oh, if only JS had tuple assignment\r\n\t\t\t\t\t\t\tvar funcNameArr = event.split(\":\");\r\n\t\t\t\t\t\t\tevent = trim(funcNameArr[0]);\r\n\t\t\t\t\t\t\tthisFunc = trim(funcNameArr[1]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tevent = trim(event);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!thisFunc){\r\n\t\t\t\t\t\t\tthisFunc = event;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._attachEvents.push(attachFunc(baseNode, event, lang.hitch(_attachScope, thisFunc)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\t_attach: function(node, type, func){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRoughly corresponding to dojo/on, this is the default function for processing a\r\n\t\t\t//\t\tdata-dojo-attach-event.  Meant to attach to DOMNodes, not to widgets.\r\n\t\t\t// node: DOMNode\r\n\t\t\t//\t\tThe node to setup a listener on.\r\n\t\t\t// type: String\r\n\t\t\t//\t\tEvent name like \"click\".\r\n\t\t\t// getAttrFunc: Function\r\n\t\t\t//\t\tFunction to get the specified property for a given DomNode/Widget.\r\n\t\t\t// attachFunc: Function?\r\n\t\t\t//\t\tAttaches an event handler from the specified node/widget to specified function.\r\n\r\n\t\t\t// Map special type names like \"mouseenter\" to synthetic events.\r\n\t\t\t// Subclasses are responsible to require() dijit/a11yclick if they want to use it.\r\n\t\t\ttype = type.replace(/^on/, \"\").toLowerCase();\r\n\t\t\tif(type == \"dijitclick\"){\r\n\t\t\t\ttype = a11yclick || (a11yclick = require(\"./a11yclick\"));\r\n\t\t\t}else{\r\n\t\t\t\ttype = synthEvents[type] || type;\r\n\t\t\t}\r\n\r\n\t\t\treturn on(node, type, func);\r\n\t\t},\r\n\r\n\t\t_detachTemplateNodes: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetach and clean up the attachments made in _attachtempalteNodes.\r\n\r\n\t\t\t// Delete all attach points to prevent IE6 memory leaks.\r\n\t\t\tvar _attachScope = this.attachScope || this;\r\n\t\t\tarray.forEach(this._attachPoints, function(point){\r\n\t\t\t\tdelete _attachScope[point];\r\n\t\t\t});\r\n\t\t\tthis._attachPoints = [];\r\n\r\n\t\t\t// And same for event handlers\r\n\t\t\tarray.forEach(this._attachEvents, function(handle){ handle.remove(); });\r\n\t\t\tthis._attachEvents = [];\r\n\t\t},\r\n\r\n\t\tdestroyRendering: function(){\r\n\t\t\tthis._detachTemplateNodes();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\t// These arguments can be specified for widgets which are used in templates.\r\n\t// Since any widget can be specified as sub widgets in template, mix it\r\n\t// into the base widget class.  (This is a hack, but it's effective.).\r\n\t// Remove for 2.0.   Also, hide from API doc parser.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ {\r\n\t\tdojoAttachEvent: \"\",\r\n\t\tdojoAttachPoint: \"\"\r\n\t});\r\n\t\r\n\treturn _AttachMixin;\r\n});\r\n\ndefine('dijit/_TemplatedMixin',[\r\n\t\"dojo/cache\",\t// dojo.cache\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.destroy, domConstruct.toDom\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"dojo/string\", // string.substitute string.trim\r\n\t\"./_AttachMixin\"\r\n], function(cache, declare, domConstruct, lang, on, has, string, _AttachMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_TemplatedMixin\r\n\r\n\tvar _TemplatedMixin = declare(\"dijit._TemplatedMixin\", _AttachMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets that are instantiated from a template\r\n\r\n\t\t// templateString: [protected] String\r\n\t\t//\t\tA string that represents the widget template.\r\n\t\t//\t\tUse in conjunction with dojo.cache() to load from a file.\r\n\t\ttemplateString: null,\r\n\r\n\t\t// templatePath: [protected deprecated] String\r\n\t\t//\t\tPath to template (HTML file) for this widget relative to dojo.baseUrl.\r\n\t\t//\t\tDeprecated: use templateString with require([... \"dojo/text!...\"], ...) instead\r\n\t\ttemplatePath: null,\r\n\r\n\t\t// skipNodeCache: [protected] Boolean\r\n\t\t//\t\tIf using a cached widget template nodes poses issues for a\r\n\t\t//\t\tparticular widget class, it can set this property to ensure\r\n\t\t//\t\tthat its template is always re-built from a string\r\n\t\t_skipNodeCache: false,\r\n\r\n/*=====\r\n\t\t// _rendered: Boolean\r\n\t\t//\t\tNot normally use, but this flag can be set by the app if the server has already rendered the template,\r\n\t\t//\t\ti.e. already inlining the template for the widget into the main page.   Reduces _TemplatedMixin to\r\n\t\t//\t\tjust function like _AttachMixin.\r\n\t\t_rendered: false,\r\n=====*/\r\n\r\n\t\t// Set _AttachMixin.searchContainerNode to true for back-compat for widgets that have data-dojo-attach-point's\r\n\t\t// and events inside this.containerNode.   Remove for 2.0.\r\n\t\tsearchContainerNode: true,\r\n\r\n\t\t_stringRepl: function(tmpl){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDoes substitution of ${foo} type properties in template string\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar className = this.declaredClass, _this = this;\r\n\t\t\t// Cache contains a string because we need to do property replacement\r\n\t\t\t// do the property replacement\r\n\t\t\treturn string.substitute(tmpl, this, function(value, key){\r\n\t\t\t\tif(key.charAt(0) == '!'){ value = lang.getObject(key.substr(1), false, _this); }\r\n\t\t\t\tif(typeof value == \"undefined\"){ throw new Error(className+\" template:\"+key); } // a debugging aide\r\n\t\t\t\tif(value == null){ return \"\"; }\r\n\r\n\t\t\t\t// Substitution keys beginning with ! will skip the transform step,\r\n\t\t\t\t// in case a user wishes to insert unescaped markup, e.g. ${!foo}\r\n\t\t\t\treturn key.charAt(0) == \"!\" ? value : this._escapeValue(\"\" + value);\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_escapeValue: function(/*String*/ val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEscape a value to be inserted into the template, either into an attribute value\r\n\t\t\t//\t\t(ex: foo=\"${bar}\") or as inner text of an element (ex: <span>${foo}</span>)\r\n\r\n\t\t\t// Safer substitution, see heading \"Attribute values\" in\r\n\t\t\t// http://www.w3.org/TR/REC-html40/appendix/notes.html#h-B.3.2\r\n\t\t\t// and also https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet#RULE_.231_-_HTML_Escape_Before_Inserting_Untrusted_Data_into_HTML_Element_Content\r\n\t\t\treturn val.replace(/[\"'<>&]/g, function(val){\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"&\": \"&amp;\",\r\n\t\t\t\t\t\"<\": \"&lt;\",\r\n\t\t\t\t\t\">\": \"&gt;\",\r\n\t\t\t\t\t\"\\\"\": \"&quot;\",\r\n\t\t\t\t\t\"'\": \"&#x27;\"\r\n\t\t\t\t}[val];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstruct the UI for this widget from a template, setting this.domNode.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!this._rendered){\r\n\t\t\t\tif(!this.templateString){\r\n\t\t\t\t\tthis.templateString = cache(this.templatePath, {sanitize: true});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Lookup cached version of template, and download to cache if it\r\n\t\t\t\t// isn't there already.  Returns either a DomNode or a string, depending on\r\n\t\t\t\t// whether or not the template contains ${foo} replacement parameters.\r\n\t\t\t\tvar cached = _TemplatedMixin.getCachedTemplate(this.templateString, this._skipNodeCache, this.ownerDocument);\r\n\r\n\t\t\t\tvar node;\r\n\t\t\t\tif(lang.isString(cached)){\r\n\t\t\t\t\tnode = domConstruct.toDom(this._stringRepl(cached), this.ownerDocument);\r\n\t\t\t\t\tif(node.nodeType != 1){\r\n\t\t\t\t\t\t// Flag common problems such as templates with multiple top level nodes (nodeType == 11)\r\n\t\t\t\t\t\tthrow new Error(\"Invalid template: \" + cached);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// if it's a node, all we have to do is clone it\r\n\t\t\t\t\tnode = cached.cloneNode(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.domNode = node;\r\n\t\t\t}\r\n\r\n\t\t\t// Call down to _WidgetBase.buildRendering() to get base classes assigned\r\n\t\t\t// TODO: change the baseClass assignment to _setBaseClassAttr\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(!this._rendered){\r\n\t\t\t\tthis._fillContent(this.srcNodeRef);\r\n\t\t\t}\r\n\r\n\t\t\tthis._rendered = true;\r\n\t\t},\r\n\r\n\t\t_fillContent: function(/*DomNode*/ source){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRelocate source contents to templated container node.\r\n\t\t\t//\t\tthis.containerNode must be able to receive children, or exceptions will be thrown.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar dest = this.containerNode;\r\n\t\t\tif(source && dest){\r\n\t\t\t\twhile(source.hasChildNodes()){\r\n\t\t\t\t\tdest.appendChild(source.firstChild);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t// key is templateString; object is either string or DOM tree\r\n\t_TemplatedMixin._templateCache = {};\r\n\r\n\t_TemplatedMixin.getCachedTemplate = function(templateString, alwaysUseString, doc){\r\n\t\t// summary:\r\n\t\t//\t\tStatic method to get a template based on the templatePath or\r\n\t\t//\t\ttemplateString key\r\n\t\t// templateString: String\r\n\t\t//\t\tThe template\r\n\t\t// alwaysUseString: Boolean\r\n\t\t//\t\tDon't cache the DOM tree for this template, even if it doesn't have any variables\r\n\t\t// doc: Document?\r\n\t\t//\t\tThe target document.   Defaults to document global if unspecified.\r\n\t\t// returns: Mixed\r\n\t\t//\t\tEither string (if there are ${} variables that need to be replaced) or just\r\n\t\t//\t\ta DOM tree (if the node can be cloned directly)\r\n\r\n\t\t// is it already cached?\r\n\t\tvar tmplts = _TemplatedMixin._templateCache;\r\n\t\tvar key = templateString;\r\n\t\tvar cached = tmplts[key];\r\n\t\tif(cached){\r\n\t\t\ttry{\r\n\t\t\t\t// if the cached value is an innerHTML string (no ownerDocument) or a DOM tree created within the\r\n\t\t\t\t// current document, then use the current cached value\r\n\t\t\t\tif(!cached.ownerDocument || cached.ownerDocument == (doc || document)){\r\n\t\t\t\t\t// string or node of the same document\r\n\t\t\t\t\treturn cached;\r\n\t\t\t\t}\r\n\t\t\t}catch(e){ /* squelch */ } // IE can throw an exception if cached.ownerDocument was reloaded\r\n\t\t\tdomConstruct.destroy(cached);\r\n\t\t}\r\n\r\n\t\ttemplateString = string.trim(templateString);\r\n\r\n\t\tif(alwaysUseString || templateString.match(/\\$\\{([^\\}]+)\\}/g)){\r\n\t\t\t// there are variables in the template so all we can do is cache the string\r\n\t\t\treturn (tmplts[key] = templateString); //String\r\n\t\t}else{\r\n\t\t\t// there are no variables in the template so we can cache the DOM tree\r\n\t\t\tvar node = domConstruct.toDom(templateString, doc);\r\n\t\t\tif(node.nodeType != 1){\r\n\t\t\t\tthrow new Error(\"Invalid template: \" + templateString);\r\n\t\t\t}\r\n\t\t\treturn (tmplts[key] = node); //Node\r\n\t\t}\r\n\t};\r\n\r\n\tif(has(\"ie\")){\r\n\t\ton(window, \"unload\", function(){\r\n\t\t\tvar cache = _TemplatedMixin._templateCache;\r\n\t\t\tfor(var key in cache){\r\n\t\t\t\tvar value = cache[key];\r\n\t\t\t\tif(typeof value == \"object\"){ // value is either a string or a DOM node template\r\n\t\t\t\t\tdomConstruct.destroy(value);\r\n\t\t\t\t}\r\n\t\t\t\tdelete cache[key];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn _TemplatedMixin;\r\n});\r\n\ndefine('dijit/_Container',[\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.place\r\n\t\"dojo/_base/kernel\" // kernel.deprecated\r\n], function(array, declare, domConstruct, kernel){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_Container\r\n\r\n\treturn declare(\"dijit._Container\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets that contain HTML and/or a set of widget children.\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.containerNode){\r\n\t\t\t\t// All widgets with descendants must set containerNode.\r\n\t\t\t\t// NB: this code doesn't quite work right because for TabContainer it runs before\r\n\t\t\t\t// _TemplatedMixin::buildRendering(), and thus\r\n\t\t\t\t// sets this.containerNode to this.domNode, later to be overridden by the assignment in the template.\r\n\t\t\t\tthis.containerNode = this.domNode;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddChild: function(/*dijit/_WidgetBase*/ widget, /*int?*/ insertIndex){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMakes the given widget a child of this widget.\r\n\t\t\t// description:\r\n\t\t\t//\t\tInserts specified child widget's dom node as a child of this widget's\r\n\t\t\t//\t\tcontainer node, and possibly does other processing (such as layout).\r\n\r\n\t\t\t// I want to just call domConstruct.place(widget.domNode, this.containerNode, insertIndex), but the counting\r\n\t\t\t// is thrown off by text nodes and comment nodes that show up when constructed by markup.\r\n\t\t\t// In the future consider stripping those nodes on construction, either in the parser or this widget code.\r\n\t\t\tvar refNode = this.containerNode;\r\n\t\t\tif(insertIndex > 0){\r\n\t\t\t\t// Old-school way to get nth child; dojo.query would be easier but _Container was weened from dojo.query\r\n\t\t\t\t// in #10087 to minimize download size.   Not sure if that's still and issue with new smaller dojo/query.\r\n\t\t\t\trefNode = refNode.firstChild;\r\n\t\t\t\twhile(insertIndex > 0){\r\n\t\t\t\t\tif(refNode.nodeType == 1){ insertIndex--; }\r\n\t\t\t\t\trefNode = refNode.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t\tif(refNode){\r\n\t\t\t\t\tinsertIndex = \"before\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// to support addChild(child, n-1) where there are n children (should add child at end)\r\n\t\t\t\t\trefNode = this.containerNode;\r\n\t\t\t\t\tinsertIndex = \"last\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdomConstruct.place(widget.domNode, refNode, insertIndex);\r\n\r\n\t\t\t// If I've been started but the child widget hasn't been started,\r\n\t\t\t// start it now.  Make sure to do this after widget has been\r\n\t\t\t// inserted into the DOM tree, so it can see that it's being controlled by me,\r\n\t\t\t// so it doesn't try to size itself.\r\n\t\t\tif(this._started && !widget._started){\r\n\t\t\t\twidget.startup();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/*Widget|int*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves the passed widget instance from this widget but does\r\n\t\t\t//\t\tnot destroy it.  You can also pass in an integer indicating\r\n\t\t\t//\t\tthe index within the container to remove (ie, removeChild(5) removes the sixth widget).\r\n\r\n\t\t\tif(typeof widget == \"number\"){\r\n\t\t\t\twidget = this.getChildren()[widget];\r\n\t\t\t}\r\n\r\n\t\t\tif(widget){\r\n\t\t\t\tvar node = widget.domNode;\r\n\t\t\t\tif(node && node.parentNode){\r\n\t\t\t\t\tnode.parentNode.removeChild(node); // detach but don't destroy\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thasChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if widget has child widgets, i.e. if this.containerNode contains widgets.\r\n\t\t\treturn this.getChildren().length > 0;\t// Boolean\r\n\t\t},\r\n\r\n\t\t_getSiblingOfChild: function(/*dijit/_WidgetBase*/ child, /*int*/ dir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the next or previous widget sibling of child\r\n\t\t\t// dir:\r\n\t\t\t//\t\tif 1, get the next sibling\r\n\t\t\t//\t\tif -1, get the previous sibling\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tkernel.deprecated(this.declaredClass+\"::_getSiblingOfChild() is deprecated. Use _KeyNavMixin::_getNext() instead.\", \"\", \"2.0\");\r\n\t\t\tvar children = this.getChildren(),\r\n\t\t\t\tidx = array.indexOf(children, child);\t// int\r\n\t\t\treturn children[idx + dir];\r\n\t\t},\r\n\r\n\t\tgetIndexOfChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the index of the child in this container or -1 if not found\r\n\t\t\treturn array.indexOf(this.getChildren(), child);\t// int\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/_Contained',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./registry\"\t// registry.getEnclosingWidget(), registry.byNode()\r\n], function(declare, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_Contained\r\n\r\n\treturn declare(\"dijit._Contained\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets that are children of a container widget\r\n\t\t// example:\r\n\t\t//\t|\t// make a basic custom widget that knows about its parents\r\n\t\t//\t|\tdeclare(\"my.customClass\",[dijit._WidgetBase, dijit._Contained],{});\r\n\r\n\t\t_getSibling: function(/*String*/ which){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns next or previous sibling\r\n\t\t\t// which:\r\n\t\t\t//\t\tEither \"next\" or \"previous\"\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar node = this.domNode;\r\n\t\t\tdo{\r\n\t\t\t\tnode = node[which+\"Sibling\"];\r\n\t\t\t}while(node && node.nodeType != 1);\r\n\t\t\treturn node && registry.byNode(node);\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tgetPreviousSibling: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns null if this is the first child of the parent,\r\n\t\t\t//\t\totherwise returns the next element sibling to the \"left\".\r\n\r\n\t\t\treturn this._getSibling(\"previous\"); // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tgetNextSibling: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns null if this is the last child of the parent,\r\n\t\t\t//\t\totherwise returns the next element sibling to the \"right\".\r\n\r\n\t\t\treturn this._getSibling(\"next\"); // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tgetIndexInParent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the index of this widget within its container parent.\r\n\t\t\t//\t\tIt returns -1 if the parent does not exist, or if the parent\r\n\t\t\t//\t\tis not a dijit/_Container\r\n\r\n\t\t\tvar p = this.getParent();\r\n\t\t\tif(!p || !p.getIndexOfChild){\r\n\t\t\t\treturn -1; // int\r\n\t\t\t}\r\n\t\t\treturn p.getIndexOfChild(this); // int\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/layout/_LayoutWidget',[\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"../_Widget\",\r\n\t\"../_Container\",\r\n\t\"../_Contained\",\r\n\t\"../Viewport\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove\r\n\t\"dojo/dom-geometry\", // domGeometry.marginBox\r\n\t\"dojo/dom-style\" // domStyle.getComputedStyle\r\n], function(lang, _Widget, _Container, _Contained, Viewport,\r\n\tdeclare, domClass, domGeometry, domStyle){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/_LayoutWidget\r\n\r\n\r\n\treturn declare(\"dijit.layout._LayoutWidget\", [_Widget, _Container, _Contained], {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for a _Container widget which is responsible for laying out its children.\r\n\t\t//\t\tWidgets which mixin this code must define layout() to manage placement and sizing of the children.\r\n\r\n\t\t// baseClass: [protected extension] String\r\n\t\t//\t\tThis class name is applied to the widget's domNode\r\n\t\t//\t\tand also may be used to generate names for sub nodes,\r\n\t\t//\t\tfor example dijitTabContainer-content.\r\n\t\tbaseClass: \"dijitLayoutContainer\",\r\n\r\n\t\t// isLayoutContainer: [protected] Boolean\r\n\t\t//\t\tIndicates that this widget is going to call resize() on its\r\n\t\t//\t\tchildren widgets, setting their size, when they become visible.\r\n\t\tisLayoutContainer: true,\r\n\r\n\t\t// Cancel _WidgetBase's _setTitleAttr because we don't want the title property (used to specify\r\n\t\t// tab labels) to be set as an attribute on this.domNode... otherwise a tooltip shows up over the\r\n\t\t// entire widget.\r\n\t\t_setTitleAttr: null,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.add(this.domNode, \"dijitContainer\");\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after all the widgets have been instantiated and their\r\n\t\t\t//\t\tdom nodes have been inserted somewhere under <body>.\r\n\t\t\t//\r\n\t\t\t//\t\tWidgets should override this method to do any initialization\r\n\t\t\t//\t\tdependent on other widgets existing, and then call\r\n\t\t\t//\t\tthis superclass method to finish things off.\r\n\t\t\t//\r\n\t\t\t//\t\tstartup() in subclasses shouldn't do anything\r\n\t\t\t//\t\tsize related because the size of the widget hasn't been set yet.\r\n\r\n\t\t\tif(this._started){ return; }\r\n\r\n\t\t\t// Need to call inherited first - so that child widgets get started\r\n\t\t\t// up correctly\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// If I am a not being controlled by a parent layout widget...\r\n\t\t\tvar parent = this.getParent && this.getParent();\r\n\t\t\tif(!(parent && parent.isLayoutContainer)){\r\n\t\t\t\t// Do recursive sizing and layout of all my descendants\r\n\t\t\t\t// (passing in no argument to resize means that it has to glean the size itself)\r\n\t\t\t\tthis.resize();\r\n\r\n\t\t\t\t// Since my parent isn't a layout container, and my style *may be* width=height=100%\r\n\t\t\t\t// or something similar (either set directly or via a CSS class),\r\n\t\t\t\t// monitor when viewport size changes so that I can re-layout.\r\n\t\t\t\tthis.own(Viewport.on(\"resize\", lang.hitch(this, \"resize\")));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresize: function(changeSize, resultSize){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall this to resize a widget, or after its size has changed.\r\n\t\t\t// description:\r\n\t\t\t//\t\t####Change size mode:\r\n\t\t\t//\r\n\t\t\t//\t\tWhen changeSize is specified, changes the marginBox of this widget\r\n\t\t\t//\t\tand forces it to re-layout its contents accordingly.\r\n\t\t\t//\t\tchangeSize may specify height, width, or both.\r\n\t\t\t//\r\n\t\t\t//\t\tIf resultSize is specified it indicates the size the widget will\r\n\t\t\t//\t\tbecome after changeSize has been applied.\r\n\t\t\t//\r\n\t\t\t//\t\t####Notification mode:\r\n\t\t\t//\r\n\t\t\t//\t\tWhen changeSize is null, indicates that the caller has already changed\r\n\t\t\t//\t\tthe size of the widget, or perhaps it changed because the browser\r\n\t\t\t//\t\twindow was resized.  Tells widget to re-layout its contents accordingly.\r\n\t\t\t//\r\n\t\t\t//\t\tIf resultSize is also specified it indicates the size the widget has\r\n\t\t\t//\t\tbecome.\r\n\t\t\t//\r\n\t\t\t//\t\tIn either mode, this method also:\r\n\t\t\t//\r\n\t\t\t//\t\t1. Sets this._borderBox and this._contentBox to the new size of\r\n\t\t\t//\t\t\tthe widget.  Queries the current domNode size if necessary.\r\n\t\t\t//\t\t2. Calls layout() to resize contents (and maybe adjust child widgets).\r\n\t\t\t// changeSize: Object?\r\n\t\t\t//\t\tSets the widget to this margin-box size and position.\r\n\t\t\t//\t\tMay include any/all of the following properties:\r\n\t\t\t//\t|\t{w: int, h: int, l: int, t: int}\r\n\t\t\t// resultSize: Object?\r\n\t\t\t//\t\tThe margin-box size of this widget after applying changeSize (if\r\n\t\t\t//\t\tchangeSize is specified).  If caller knows this size and\r\n\t\t\t//\t\tpasses it in, we don't need to query the browser to get the size.\r\n\t\t\t//\t|\t{w: int, h: int}\r\n\r\n\t\t\tvar node = this.domNode;\r\n\r\n\t\t\t// set margin box size, unless it wasn't specified, in which case use current size\r\n\t\t\tif(changeSize){\r\n\t\t\t\tdomGeometry.setMarginBox(node, changeSize);\r\n\t\t\t}\r\n\r\n\t\t\t// If either height or width wasn't specified by the user, then query node for it.\r\n\t\t\t// But note that setting the margin box and then immediately querying dimensions may return\r\n\t\t\t// inaccurate results, so try not to depend on it.\r\n\t\t\tvar mb = resultSize || {};\r\n\t\t\tlang.mixin(mb, changeSize || {});\t// changeSize overrides resultSize\r\n\t\t\tif( !(\"h\" in mb) || !(\"w\" in mb) ){\r\n\t\t\t\tmb = lang.mixin(domGeometry.getMarginBox(node), mb);\t// just use domGeometry.marginBox() to fill in missing values\r\n\t\t\t}\r\n\r\n\t\t\t// Compute and save the size of my border box and content box\r\n\t\t\t// (w/out calling domGeometry.getContentBox() since that may fail if size was recently set)\r\n\t\t\tvar cs = domStyle.getComputedStyle(node);\r\n\t\t\tvar me = domGeometry.getMarginExtents(node, cs);\r\n\t\t\tvar be = domGeometry.getBorderExtents(node, cs);\r\n\t\t\tvar bb = (this._borderBox = {\r\n\t\t\t\tw: mb.w - (me.w + be.w),\r\n\t\t\t\th: mb.h - (me.h + be.h)\r\n\t\t\t});\r\n\t\t\tvar pe = domGeometry.getPadExtents(node, cs);\r\n\t\t\tthis._contentBox = {\r\n\t\t\t\tl: domStyle.toPixelValue(node, cs.paddingLeft),\r\n\t\t\t\tt: domStyle.toPixelValue(node, cs.paddingTop),\r\n\t\t\t\tw: bb.w - pe.w,\r\n\t\t\t\th: bb.h - pe.h\r\n\t\t\t};\r\n\r\n\t\t\t// Callback for widget to adjust size of its children\r\n\t\t\tthis.layout();\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWidgets override this method to size and position their contents/children.\r\n\t\t\t//\t\tWhen this is called this._contentBox is guaranteed to be set (see resize()).\r\n\t\t\t//\r\n\t\t\t//\t\tThis is called after startup(), and also when the widget's size has been\r\n\t\t\t//\t\tchanged.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t},\r\n\r\n\t\t_setupChild: function(/*dijit/_WidgetBase*/child){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCommon setup for initial children and children which are added after startup\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\r\n\t\t\tvar cls = this.baseClass + \"-child \"\r\n\t\t\t\t+ (child.baseClass ? this.baseClass + \"-\" + child.baseClass : \"\");\r\n\t\t\tdomClass.add(child.domNode, cls);\r\n\t\t},\r\n\r\n\t\taddChild: function(/*dijit/_WidgetBase*/ child, /*Integer?*/ insertIndex){\r\n\t\t\t// Overrides _Container.addChild() to call _setupChild()\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this._started){\r\n\t\t\t\tthis._setupChild(child);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// Overrides _Container.removeChild() to remove class added by _setupChild()\r\n\t\t\tvar cls = this.baseClass + \"-child\"\r\n\t\t\t\t\t+ (child.baseClass ?\r\n\t\t\t\t\t\t\" \" + this.baseClass + \"-\" + child.baseClass : \"\");\r\n\t\t\tdomClass.remove(child.domNode, cls);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/_CssStateMixin',[\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.isDescendant()\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/domReady\",\r\n\t\"dojo/touch\",\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"./a11yclick\",\r\n\t\"./registry\"\r\n], function(array, declare, dom, domClass, has, lang, on, domReady, touch, win, a11yclick, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_CssStateMixin\r\n\r\n\tvar CssStateMixin = declare(\"dijit._CssStateMixin\", [], {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets to set CSS classes on the widget DOM nodes depending on hover/mouse press/focus\r\n\t\t//\t\tstate changes, and also higher-level state changes such becoming disabled or selected.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tBy mixing this class into your widget, and setting the this.baseClass attribute, it will automatically\r\n\t\t//\t\tmaintain CSS classes on the widget root node (this.domNode) depending on hover,\r\n\t\t//\t\tactive, focus, etc. state.   Ex: with a baseClass of dijitButton, it will apply the classes\r\n\t\t//\t\tdijitButtonHovered and dijitButtonActive, as the user moves the mouse over the widget and clicks it.\r\n\t\t//\r\n\t\t//\t\tIt also sets CSS like dijitButtonDisabled based on widget semantic state.\r\n\t\t//\r\n\t\t//\t\tBy setting the cssStateNodes attribute, a widget can also track events on subnodes (like buttons\r\n\t\t//\t\twithin the widget).\r\n\r\n\t\t/*=====\r\n\t\t // cssStateNodes: [protected] Object\r\n\t\t //\t\tSubclasses may define a cssStateNodes property that lists sub-nodes within the widget that\r\n\t\t //\t\tneed CSS classes applied on mouse hover/press and focus.\r\n\t\t //\r\n\t\t //\t\tEach entry in this optional hash is a an attach-point name (like \"upArrowButton\") mapped to a CSS class name\r\n\t\t //\t\t(like \"dijitUpArrowButton\"). Example:\r\n\t\t //\t|\t\t{\r\n\t\t //\t|\t\t\t\"upArrowButton\": \"dijitUpArrowButton\",\r\n\t\t //\t|\t\t\t\"downArrowButton\": \"dijitDownArrowButton\"\r\n\t\t //\t|\t\t}\r\n\t\t //\t\tThe above will set the CSS class dijitUpArrowButton to the this.upArrowButton DOMNode when it\r\n\t\t //\t\tis hovered, etc.\r\n\t\t cssStateNodes: {},\r\n\t\t =====*/\r\n\r\n\t\t// hovering: [readonly] Boolean\r\n\t\t//\t\tTrue if cursor is over this widget\r\n\t\thovering: false,\r\n\r\n\t\t// active: [readonly] Boolean\r\n\t\t//\t\tTrue if mouse was pressed while over this widget, and hasn't been released yet\r\n\t\tactive: false,\r\n\r\n\t\t_applyAttributes: function(){\r\n\t\t\t// This code would typically be in postCreate(), but putting in _applyAttributes() for\r\n\t\t\t// performance: so the class changes happen before DOM is inserted into the document.\r\n\t\t\t// Change back to postCreate() in 2.0.  See #11635.\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Monitoring changes to disabled, readonly, etc. state, and update CSS class of root node\r\n\t\t\tarray.forEach([\"disabled\", \"readOnly\", \"checked\", \"selected\", \"focused\", \"state\", \"hovering\", \"active\", \"_opened\"], function(attr){\r\n\t\t\t\tthis.watch(attr, lang.hitch(this, \"_setStateClass\"));\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Track hover and active mouse events on widget root node, plus possibly on subnodes\r\n\t\t\tfor(var ap in this.cssStateNodes || {}){\r\n\t\t\t\tthis._trackMouseState(this[ap], this.cssStateNodes[ap]);\r\n\t\t\t}\r\n\t\t\tthis._trackMouseState(this.domNode, this.baseClass);\r\n\r\n\t\t\t// Set state initially; there's probably no hover/active/focus state but widget might be\r\n\t\t\t// disabled/readonly/checked/selected so we want to set CSS classes for those conditions.\r\n\t\t\tthis._setStateClass();\r\n\t\t},\r\n\r\n\t\t_cssMouseEvent: function(/*Event*/ event){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for CSS event on this.domNode. Sets hovering and active properties depending on mouse state,\r\n\t\t\t//\t\twhich triggers _setStateClass() to set appropriate CSS classes for this.domNode.\r\n\r\n\t\t\tif(!this.disabled){\r\n\t\t\t\tswitch(event.type){\r\n\t\t\t\t\tcase \"mouseover\":\r\n\t\t\t\t\tcase \"MSPointerOver\":\r\n\t\t\t\t\tcase \"pointerover\":\r\n\t\t\t\t\t\tthis._set(\"hovering\", true);\r\n\t\t\t\t\t\tthis._set(\"active\", this._mouseDown);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"mouseout\":\r\n\t\t\t\t\tcase \"MSPointerOut\":\r\n\t\t\t\t\tcase \"pointerout\":\r\n\t\t\t\t\t\tthis._set(\"hovering\", false);\r\n\t\t\t\t\t\tthis._set(\"active\", false);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"mousedown\":\r\n\t\t\t\t\tcase \"touchstart\":\r\n\t\t\t\t\tcase \"MSPointerDown\":\r\n\t\t\t\t\tcase \"pointerdown\":\r\n\t\t\t\t\tcase \"keydown\":\r\n\t\t\t\t\t\tthis._set(\"active\", true);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"mouseup\":\r\n\t\t\t\t\tcase \"dojotouchend\":\r\n\t\t\t\t\tcase \"MSPointerUp\":\r\n\t\t\t\t\tcase \"pointerup\":\r\n\t\t\t\t\tcase \"keyup\":\r\n\t\t\t\t\t\tthis._set(\"active\", false);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setStateClass: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate the visual state of the widget by setting the css classes on this.domNode\r\n\t\t\t//\t\t(or this.stateNode if defined) by combining this.baseClass with\r\n\t\t\t//\t\tvarious suffixes that represent the current widget state(s).\r\n\t\t\t//\r\n\t\t\t// description:\r\n\t\t\t//\t\tIn the case where a widget has multiple\r\n\t\t\t//\t\tstates, it sets the class based on all possible\r\n\t\t\t//\t\tcombinations.  For example, an invalid form widget that is being hovered\r\n\t\t\t//\t\twill be \"dijitInput dijitInputInvalid dijitInputHover dijitInputInvalidHover\".\r\n\t\t\t//\r\n\t\t\t//\t\tThe widget may have one or more of the following states, determined\r\n\t\t\t//\t\tby this.state, this.checked, this.valid, and this.selected:\r\n\t\t\t//\r\n\t\t\t//\t\t- Error - ValidationTextBox sets this.state to \"Error\" if the current input value is invalid\r\n\t\t\t//\t\t- Incomplete - ValidationTextBox sets this.state to \"Incomplete\" if the current input value is not finished yet\r\n\t\t\t//\t\t- Checked - ex: a checkmark or a ToggleButton in a checked state, will have this.checked==true\r\n\t\t\t//\t\t- Selected - ex: currently selected tab will have this.selected==true\r\n\t\t\t//\r\n\t\t\t//\t\tIn addition, it may have one or more of the following states,\r\n\t\t\t//\t\tbased on this.disabled and flags set in _onMouse (this.active, this.hovering) and from focus manager (this.focused):\r\n\t\t\t//\r\n\t\t\t//\t\t- Disabled\t- if the widget is disabled\r\n\t\t\t//\t\t- Active\t\t- if the mouse (or space/enter key?) is being pressed down\r\n\t\t\t//\t\t- Focused\t\t- if the widget has focus\r\n\t\t\t//\t\t- Hover\t\t- if the mouse is over the widget\r\n\r\n\t\t\t// Compute new set of classes\r\n\t\t\tvar newStateClasses = this.baseClass.split(\" \");\r\n\r\n\t\t\tfunction multiply(modifier){\r\n\t\t\t\tnewStateClasses = newStateClasses.concat(array.map(newStateClasses, function(c){\r\n\t\t\t\t\treturn c + modifier;\r\n\t\t\t\t}), \"dijit\" + modifier);\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.isLeftToRight()){\r\n\t\t\t\t// For RTL mode we need to set an addition class like dijitTextBoxRtl.\r\n\t\t\t\tmultiply(\"Rtl\");\r\n\t\t\t}\r\n\r\n\t\t\tvar checkedState = this.checked == \"mixed\" ? \"Mixed\" : (this.checked ? \"Checked\" : \"\");\r\n\t\t\tif(this.checked){\r\n\t\t\t\tmultiply(checkedState);\r\n\t\t\t}\r\n\t\t\tif(this.state){\r\n\t\t\t\tmultiply(this.state);\r\n\t\t\t}\r\n\t\t\tif(this.selected){\r\n\t\t\t\tmultiply(\"Selected\");\r\n\t\t\t}\r\n\t\t\tif(this._opened){\r\n\t\t\t\tmultiply(\"Opened\");\r\n\t\t\t}\r\n\r\n\t\t\tif(this.disabled){\r\n\t\t\t\tmultiply(\"Disabled\");\r\n\t\t\t}else if(this.readOnly){\r\n\t\t\t\tmultiply(\"ReadOnly\");\r\n\t\t\t}else{\r\n\t\t\t\tif(this.active){\r\n\t\t\t\t\tmultiply(\"Active\");\r\n\t\t\t\t}else if(this.hovering){\r\n\t\t\t\t\tmultiply(\"Hover\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.focused){\r\n\t\t\t\tmultiply(\"Focused\");\r\n\t\t\t}\r\n\r\n\t\t\t// Remove old state classes and add new ones.\r\n\t\t\t// For performance concerns we only write into domNode.className once.\r\n\t\t\tvar tn = this.stateNode || this.domNode,\r\n\t\t\t\tclassHash = {};\t// set of all classes (state and otherwise) for node\r\n\r\n\t\t\tarray.forEach(tn.className.split(\" \"), function(c){\r\n\t\t\t\tclassHash[c] = true;\r\n\t\t\t});\r\n\r\n\t\t\tif(\"_stateClasses\" in this){\r\n\t\t\t\tarray.forEach(this._stateClasses, function(c){\r\n\t\t\t\t\tdelete classHash[c];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tarray.forEach(newStateClasses, function(c){\r\n\t\t\t\tclassHash[c] = true;\r\n\t\t\t});\r\n\r\n\t\t\tvar newClasses = [];\r\n\t\t\tfor(var c in classHash){\r\n\t\t\t\tnewClasses.push(c);\r\n\t\t\t}\r\n\t\t\ttn.className = newClasses.join(\" \");\r\n\r\n\t\t\tthis._stateClasses = newStateClasses;\r\n\t\t},\r\n\r\n\t\t_subnodeCssMouseEvent: function(node, clazz, evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for hover/active mouse event on widget's subnode\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfunction hover(isHovering){\r\n\t\t\t\tdomClass.toggle(node, clazz + \"Hover\", isHovering);\r\n\t\t\t}\r\n\r\n\t\t\tfunction active(isActive){\r\n\t\t\t\tdomClass.toggle(node, clazz + \"Active\", isActive);\r\n\t\t\t}\r\n\r\n\t\t\tfunction focused(isFocused){\r\n\t\t\t\tdomClass.toggle(node, clazz + \"Focused\", isFocused);\r\n\t\t\t}\r\n\r\n\t\t\tswitch(evt.type){\r\n\t\t\t\tcase \"mouseover\":\r\n\t\t\t\tcase \"MSPointerOver\":\r\n\t\t\t\tcase \"pointerover\":\r\n\t\t\t\t\thover(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"mouseout\":\r\n\t\t\t\tcase \"MSPointerOut\":\r\n\t\t\t\tcase \"pointerout\":\r\n\t\t\t\t\thover(false);\r\n\t\t\t\t\tactive(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"mousedown\":\r\n\t\t\t\tcase \"touchstart\":\r\n\t\t\t\tcase \"MSPointerDown\":\r\n\t\t\t\tcase \"pointerdown\":\r\n\t\t\t\tcase \"keydown\":\r\n\t\t\t\t\tactive(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"mouseup\":\r\n\t\t\t\tcase \"MSPointerUp\":\r\n\t\t\t\tcase \"pointerup\":\r\n\t\t\t\tcase \"dojotouchend\":\r\n\t\t\t\tcase \"keyup\":\r\n\t\t\t\t\tactive(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"focus\":\r\n\t\t\t\tcase \"focusin\":\r\n\t\t\t\t\tfocused(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"blur\":\r\n\t\t\t\tcase \"focusout\":\r\n\t\t\t\t\tfocused(false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_trackMouseState: function(/*DomNode*/ node, /*String*/ clazz){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTrack mouse/focus events on specified node and set CSS class on that node to indicate\r\n\t\t\t//\t\tcurrent state.   Usually not called directly, but via cssStateNodes attribute.\r\n\t\t\t// description:\r\n\t\t\t//\t\tGiven class=foo, will set the following CSS class on the node\r\n\t\t\t//\r\n\t\t\t//\t\t- fooActive: if the user is currently pressing down the mouse button while over the node\r\n\t\t\t//\t\t- fooHover: if the user is hovering the mouse over the node, but not pressing down a button\r\n\t\t\t//\t\t- fooFocus: if the node is focused\r\n\t\t\t//\r\n\t\t\t//\t\tNote that it won't set any classes if the widget is disabled.\r\n\t\t\t// node: DomNode\r\n\t\t\t//\t\tShould be a sub-node of the widget, not the top node (this.domNode), since the top node\r\n\t\t\t//\t\tis handled specially and automatically just by mixing in this class.\r\n\t\t\t// clazz: String\r\n\t\t\t//\t\tCSS class name (ex: dijitSliderUpArrow)\r\n\r\n\t\t\t// Flag for listener code below to call this._cssMouseEvent() or this._subnodeCssMouseEvent()\r\n\t\t\t// when node is hovered/active\r\n\t\t\tnode._cssState = clazz;\r\n\t\t}\r\n\t});\r\n\r\n\tdomReady(function(){\r\n\t\t// Document level listener to catch hover etc. events on widget root nodes and subnodes.\r\n\t\t// Note that when the mouse is moved quickly, a single onmouseenter event could signal that multiple widgets\r\n\t\t// have been hovered or unhovered (try test_Accordion.html)\r\n\r\n\t\tfunction pointerHandler(evt, target, relatedTarget){\r\n\t\t\t// Handler for mouseover, mouseout, a11yclick.press and a11click.release events\r\n\r\n\t\t\t// Poor man's event propagation.  Don't propagate event to ancestors of evt.relatedTarget,\r\n\t\t\t// to avoid processing mouseout events moving from a widget's domNode to a descendant node;\r\n\t\t\t// such events shouldn't be interpreted as a mouseleave on the widget.\r\n\t\t\tif(relatedTarget && dom.isDescendant(relatedTarget, target)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor(var node = target; node && node != relatedTarget; node = node.parentNode){\r\n\t\t\t\t// Process any nodes with _cssState property.   They are generally widget root nodes,\r\n\t\t\t\t// but could also be sub-nodes within a widget\r\n\t\t\t\tif(node._cssState){\r\n\t\t\t\t\tvar widget = registry.getEnclosingWidget(node);\r\n\t\t\t\t\tif(widget){\r\n\t\t\t\t\t\tif(node == widget.domNode){\r\n\t\t\t\t\t\t\t// event on the widget's root node\r\n\t\t\t\t\t\t\twidget._cssMouseEvent(evt);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// event on widget's sub-node\r\n\t\t\t\t\t\t\twidget._subnodeCssMouseEvent(node, node._cssState, evt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar body = win.body(), activeNode;\r\n\r\n\t\t// Handle pointer related events (i.e. mouse or touch)\r\n\t\ton(body, touch.over, function(evt){\r\n\t\t\t// Using touch.over rather than mouseover mainly to ignore phantom mouse events on iOS.\r\n\t\t\tpointerHandler(evt, evt.target, evt.relatedTarget);\r\n\t\t});\r\n\t\ton(body, touch.out, function(evt){\r\n\t\t\t// Using touch.out rather than mouseout mainly to ignore phantom mouse events on iOS.\r\n\t\t\tpointerHandler(evt, evt.target, evt.relatedTarget);\r\n\t\t});\r\n\t\ton(body, a11yclick.press, function(evt){\r\n\t\t\t// Save the a11yclick.press target to reference when the a11yclick.release comes.\r\n\t\t\tactiveNode = evt.target;\r\n\t\t\tpointerHandler(evt, activeNode)\r\n\t\t});\r\n\t\ton(body, a11yclick.release, function(evt){\r\n\t\t\t// The release event could come on a separate node than the press event, if for example user slid finger.\r\n\t\t\t// Reference activeNode to reset the state of the node that got state set in the a11yclick.press handler.\r\n\t\t\tpointerHandler(evt, activeNode);\r\n\t\t\tactiveNode = null;\r\n\t\t});\r\n\r\n\t\t// Track focus events on widget sub-nodes that have been registered via _trackMouseState().\r\n\t\t// However, don't track focus events on the widget root nodes, because focus is tracked via the\r\n\t\t// focus manager (and it's not really tracking focus, but rather tracking that focus is on one of the widget's\r\n\t\t// nodes or a subwidget's node or a popup node, etc.)\r\n\t\t// Remove for 2.0 (if focus CSS needed, just use :focus pseudo-selector).\r\n\t\ton(body, \"focusin, focusout\", function(evt){\r\n\t\t\tvar node = evt.target;\r\n\t\t\tif(node._cssState && !node.getAttribute(\"widgetId\")){\r\n\t\t\t\tvar widget = registry.getEnclosingWidget(node);\r\n\t\t\t\tif(widget){\r\n\t\t\t\t\twidget._subnodeCssMouseEvent(node, node._cssState, evt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\treturn CssStateMixin;\r\n});\r\n\ndefine('dijit/form/_FormWidgetMixin',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-style\", // domStyle.get\r\n\t\"dojo/_base/lang\", // lang.hitch lang.isArray\r\n\t\"dojo/mouse\", // mouse.isLeft\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"webkit\")\r\n\t\"dojo/window\", // winUtils.scrollIntoView\r\n\t\"../a11y\"    // a11y.hasDefaultTabStop\r\n], function(array, declare, domAttr, domStyle, lang, mouse, on, has, winUtils, a11y){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_FormWidgetMixin\r\n\r\n\treturn declare(\"dijit.form._FormWidgetMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets corresponding to native HTML elements such as `<checkbox>` or `<button>`,\r\n\t\t//\t\twhich can be children of a `<form>` node or a `dijit/form/Form` widget.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tRepresents a single HTML element.\r\n\t\t//\t\tAll these widgets should have these attributes just like native HTML input elements.\r\n\t\t//\t\tYou can set them during widget construction or afterwards, via `dijit/_WidgetBase.set()`.\r\n\t\t//\r\n\t\t//\t\tThey also share some common methods.\r\n\r\n\t\t// name: [const] String\r\n\t\t//\t\tName used when submitting form; same as \"name\" attribute or plain HTML elements\r\n\t\tname: \"\",\r\n\r\n\t\t// alt: String\r\n\t\t//\t\tCorresponds to the native HTML `<input>` element's attribute.\r\n\t\talt: \"\",\r\n\r\n\t\t// value: String\r\n\t\t//\t\tCorresponds to the native HTML `<input>` element's attribute.\r\n\t\tvalue: \"\",\r\n\r\n\t\t// type: [const] String\r\n\t\t//\t\tCorresponds to the native HTML `<input>` element's attribute.\r\n\t\ttype: \"text\",\r\n\r\n\t\t// type: String\r\n\t\t//\t\tApply aria-label in markup to the widget's focusNode\r\n\t\t\"aria-label\": \"focusNode\",\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tOrder fields are traversed when user hits the tab key\r\n\t\ttabIndex: \"0\",\r\n\t\t_setTabIndexAttr: \"focusNode\", // force copy even when tabIndex default value, needed since Button is <span>\r\n\r\n\t\t// disabled: Boolean\r\n\t\t//\t\tShould this widget respond to user input?\r\n\t\t//\t\tIn markup, this is specified as \"disabled='disabled'\", or just \"disabled\".\r\n\t\tdisabled: false,\r\n\r\n\t\t// intermediateChanges: Boolean\r\n\t\t//\t\tFires onChange for each value change or only on demand\r\n\t\tintermediateChanges: false,\r\n\r\n\t\t// scrollOnFocus: Boolean\r\n\t\t//\t\tOn focus, should this widget scroll into view?\r\n\t\tscrollOnFocus: true,\r\n\r\n\t\t// Override _WidgetBase mapping id to this.domNode, needs to be on focusNode so <label> etc.\r\n\t\t// works with screen reader\r\n\t\t_setIdAttr: \"focusNode\",\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\tthis._set(\"disabled\", value);\r\n\t\t\tdomAttr.set(this.focusNode, 'disabled', value);\r\n\t\t\tif(this.valueNode){\r\n\t\t\t\tdomAttr.set(this.valueNode, 'disabled', value);\r\n\t\t\t}\r\n\t\t\tthis.focusNode.setAttribute(\"aria-disabled\", value ? \"true\" : \"false\");\r\n\r\n\t\t\tif(value){\r\n\t\t\t\t// reset these, because after the domNode is disabled, we can no longer receive\r\n\t\t\t\t// mouse related events, see #4200\r\n\t\t\t\tthis._set(\"hovering\", false);\r\n\t\t\t\tthis._set(\"active\", false);\r\n\r\n\t\t\t\t// clear tab stop(s) on this widget's focusable node(s)  (ComboBox has two focusable nodes)\r\n\t\t\t\tvar attachPointNames = \"tabIndex\" in this.attributeMap ? this.attributeMap.tabIndex :\r\n\t\t\t\t\t(\"_setTabIndexAttr\" in this) ? this._setTabIndexAttr : \"focusNode\";\r\n\t\t\t\tarray.forEach(lang.isArray(attachPointNames) ? attachPointNames : [attachPointNames], function(attachPointName){\r\n\t\t\t\t\tvar node = this[attachPointName];\r\n\t\t\t\t\t// complex code because tabIndex=-1 on a <div> doesn't work on FF\r\n\t\t\t\t\tif(has(\"webkit\") || a11y.hasDefaultTabStop(node)){    // see #11064 about webkit bug\r\n\t\t\t\t\t\tnode.setAttribute('tabIndex', \"-1\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tnode.removeAttribute('tabIndex');\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}else{\r\n\t\t\t\tif(this.tabIndex != \"\"){\r\n\t\t\t\t\tthis.set('tabIndex', this.tabIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onFocus: function(/*String*/ by){\r\n\t\t\t// If user clicks on the widget, even if the mouse is released outside of it,\r\n\t\t\t// this widget's focusNode should get focus (to mimic native browser behavior).\r\n\t\t\t// Browsers often need help to make sure the focus via mouse actually gets to the focusNode.\r\n\t\t\t// TODO: consider removing all of this for 2.0 or sooner, see #16622 etc.\r\n\t\t\tif(by == \"mouse\" && this.isFocusable()){\r\n\t\t\t\t// IE exhibits strange scrolling behavior when refocusing a node so only do it when !focused.\r\n\t\t\t\tvar focusHandle = this.own(on(this.focusNode, \"focus\", function(){\r\n\t\t\t\t\tmouseUpHandle.remove();\r\n\t\t\t\t\tfocusHandle.remove();\r\n\t\t\t\t}))[0];\r\n\t\t\t\t// Set a global event to handle mouseup, so it fires properly\r\n\t\t\t\t// even if the cursor leaves this.domNode before the mouse up event.\r\n\t\t\t\tvar event = has(\"pointer-events\") ? \"pointerup\" : has(\"MSPointer\") ? \"MSPointerUp\" :\r\n\t\t\t\t\thas(\"touch-events\") ? \"touchend, mouseup\" :\t\t// seems like overkill but see #16622, #16725\r\n\t\t\t\t\t\"mouseup\";\r\n\t\t\t\tvar mouseUpHandle = this.own(on(this.ownerDocumentBody, event, lang.hitch(this, function(evt){\r\n\t\t\t\t\tmouseUpHandle.remove();\r\n\t\t\t\t\tfocusHandle.remove();\r\n\t\t\t\t\t// if here, then the mousedown did not focus the focusNode as the default action\r\n\t\t\t\t\tif(this.focused){\r\n\t\t\t\t\t\tif(evt.type == \"touchend\"){\r\n\t\t\t\t\t\t\tthis.defer(\"focus\"); // native focus hasn't occurred yet\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.focus(); // native focus already occurred on mousedown\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})))[0];\r\n\t\t\t}\r\n\t\t\tif(this.scrollOnFocus){\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\twinUtils.scrollIntoView(this.domNode);\r\n\t\t\t\t}); // without defer, the input caret position can change on mouse click\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tisFocusable: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTells if this widget is focusable or not.  Used internally by dijit.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn !this.disabled && this.focusNode && (domStyle.get(this.domNode, \"display\") != \"none\");\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPut focus on this widget\r\n\t\t\tif(!this.disabled && this.focusNode.focus){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis.focusNode.focus();\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t}\r\n\t\t\t\t/*squelch errors from hidden nodes*/\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcompare: function(/*anything*/ val1, /*anything*/ val2){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCompare 2 values (as returned by get('value') for this widget).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(typeof val1 == \"number\" && typeof val2 == \"number\"){\r\n\t\t\t\treturn (isNaN(val1) && isNaN(val2)) ? 0 : val1 - val2;\r\n\t\t\t}else if(val1 > val2){\r\n\t\t\t\treturn 1;\r\n\t\t\t}else if(val1 < val2){\r\n\t\t\t\treturn -1;\r\n\t\t\t}else{\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonChange: function(/*===== newValue =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when this widget's value is changed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t// _onChangeActive: [private] Boolean\r\n\t\t//\t\tIndicates that changes to the value should call onChange() callback.\r\n\t\t//\t\tThis is false during widget initialization, to avoid calling onChange()\r\n\t\t//\t\twhen the initial value is set.\r\n\t\t_onChangeActive: false,\r\n\r\n\t\t_handleOnChange: function(/*anything*/ newValue, /*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the value of the widget is set.  Calls onChange() if appropriate\r\n\t\t\t// newValue:\r\n\t\t\t//\t\tthe new value\r\n\t\t\t// priorityChange:\r\n\t\t\t//\t\tFor a slider, for example, dragging the slider is priorityChange==false,\r\n\t\t\t//\t\tbut on mouse up, it's priorityChange==true.  If intermediateChanges==false,\r\n\t\t\t//\t\tonChange is only called form priorityChange=true events.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._lastValueReported == undefined && (priorityChange === null || !this._onChangeActive)){\r\n\t\t\t\t// this block executes not for a change, but during initialization,\r\n\t\t\t\t// and is used to store away the original value (or for ToggleButton, the original checked state)\r\n\t\t\t\tthis._resetValue = this._lastValueReported = newValue;\r\n\t\t\t}\r\n\t\t\tthis._pendingOnChange = this._pendingOnChange\r\n\t\t\t\t|| (typeof newValue != typeof this._lastValueReported)\r\n\t\t\t\t|| (this.compare(newValue, this._lastValueReported) != 0);\r\n\t\t\tif((this.intermediateChanges || priorityChange || priorityChange === undefined) && this._pendingOnChange){\r\n\t\t\t\tthis._lastValueReported = newValue;\r\n\t\t\t\tthis._pendingOnChange = false;\r\n\t\t\t\tif(this._onChangeActive){\r\n\t\t\t\t\tif(this._onChangeHandle){\r\n\t\t\t\t\t\tthis._onChangeHandle.remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// defer allows hidden value processing to run and\r\n\t\t\t\t\t// also the onChange handler can safely adjust focus, etc\r\n\t\t\t\t\tthis._onChangeHandle = this.defer(\r\n\t\t\t\t\t\tfunction(){\r\n\t\t\t\t\t\t\tthis._onChangeHandle = null;\r\n\t\t\t\t\t\t\tthis.onChange(newValue);\r\n\t\t\t\t\t\t}); // try to collapse multiple onChange's fired faster than can be processed\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcreate: function(){\r\n\t\t\t// Overrides _Widget.create()\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._onChangeActive = true;\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this._onChangeHandle){ // destroy called before last onChange has fired\r\n\t\t\t\tthis._onChangeHandle.remove();\r\n\t\t\t\tthis.onChange(this._lastValueReported);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_FormWidget',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/sniff\", // has(\"dijit-legacy-requires\"), has(\"msapp\")\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/ready\",\r\n\t\"../_Widget\",\r\n\t\"../_CssStateMixin\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"./_FormWidgetMixin\"\r\n], function(declare, has, kernel, ready, _Widget, _CssStateMixin, _TemplatedMixin, _FormWidgetMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_FormWidget\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/form/_FormValueWidget\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\treturn declare(\"dijit.form._FormWidget\", [_Widget, _TemplatedMixin, _CssStateMixin, _FormWidgetMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for widgets corresponding to native HTML elements such as `<checkbox>` or `<button>`,\r\n\t\t//\t\twhich can be children of a `<form>` node or a `dijit/form/Form` widget.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tRepresents a single HTML element.\r\n\t\t//\t\tAll these widgets should have these attributes just like native HTML input elements.\r\n\t\t//\t\tYou can set them during widget construction or afterwards, via `dijit/_WidgetBase.set()`.\r\n\t\t//\r\n\t\t//\t\tThey also share some common methods.\r\n\r\n\t\tsetDisabled: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('disabled', ...) instead.\r\n\t\t\tkernel.deprecated(\"setDisabled(\" + disabled + \") is deprecated. Use set('disabled',\" + disabled + \") instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('disabled', disabled);\r\n\t\t},\r\n\r\n\t\tsetValue: function(/*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('value', ...) instead.\r\n\t\t\tkernel.deprecated(\"dijit.form._FormWidget:setValue(\" + value + \") is deprecated.  Use set('value',\" + value + \") instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('value', value);\r\n\t\t},\r\n\r\n\t\tgetValue: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use get('value') instead.\r\n\t\t\tkernel.deprecated(this.declaredClass + \"::getValue() is deprecated. Use get('value') instead.\", \"\", \"2.0\");\r\n\t\t\treturn this.get('value');\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// Setup name=foo string to be referenced from the template (but only if a name has been specified).\r\n\t\t\t// Unfortunately we can't use _setNameAttr to set the name in IE due to IE limitations, see #8484, #8660.\r\n\t\t\t// But when IE6 and IE7 are desupported, then we probably don't need this anymore, so should remove it in 2.0.\r\n\t\t\t// Also, don't do this for Windows 8 Store Apps because it causes a security exception (see #16452).\r\n\t\t\t// Regarding escaping, see heading \"Attribute values\" in\r\n\t\t\t// http://www.w3.org/TR/REC-html40/appendix/notes.html#h-B.3.2\r\n\t\t\tthis.nameAttrSetting = (this.name && !has(\"msapp\")) ? ('name=\"' + this.name.replace(/\"/g, \"&quot;\") + '\"') : '';\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_FormValueMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/keys\", // keys.ESCAPE\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/on\",\r\n\t\"./_FormWidgetMixin\"\r\n], function(declare, domAttr, keys, lang, on, _FormWidgetMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_FormValueMixin\r\n\r\n\treturn declare(\"dijit.form._FormValueMixin\", _FormWidgetMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets corresponding to native HTML elements such as `<input>` or `<select>`\r\n\t\t//\t\tthat have user changeable values.\r\n\t\t// description:\r\n\t\t//\t\tEach _FormValueMixin represents a single input value, and has a (possibly hidden) `<input>` element,\r\n\t\t//\t\tto which it serializes it's input value, so that form submission (either normal submission or via FormBind?)\r\n\t\t//\t\tworks as expected.\r\n\r\n\t\t// readOnly: Boolean\r\n\t\t//\t\tShould this widget respond to user input?\r\n\t\t//\t\tIn markup, this is specified as \"readOnly\".\r\n\t\t//\t\tSimilar to disabled except readOnly form values are submitted.\r\n\t\treadOnly: false,\r\n\r\n\t\t_setReadOnlyAttr: function(/*Boolean*/ value){\r\n\t\t\tdomAttr.set(this.focusNode, 'readOnly', value);\r\n\t\t\tthis._set(\"readOnly\", value);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Update our reset value if it hasn't yet been set (because this.set()\r\n\t\t\t// is only called when there *is* a value)\r\n\t\t\tif(this._resetValue === undefined){\r\n\t\t\t\tthis._lastValueReported = this._resetValue = this.value;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*anything*/ newValue, /*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', value) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets the value of the widget.\r\n\t\t\t//\t\tIf the value has changed, then fire onChange event, unless priorityChange\r\n\t\t\t//\t\tis specified as null (or false?)\r\n\t\t\tthis._handleOnChange(newValue, priorityChange);\r\n\t\t},\r\n\r\n\t\t_handleOnChange: function(/*anything*/ newValue, /*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the value of the widget has changed.  Saves the new value in this.value,\r\n\t\t\t//\t\tand calls onChange() if appropriate.   See _FormWidget._handleOnChange() for details.\r\n\t\t\tthis._set(\"value\", newValue);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tundo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRestore the value to the last value passed to onChange\r\n\t\t\tthis._setValueAttr(this._lastValueReported, false);\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReset the widget's value to what it was at initialization time\r\n\t\t\tthis._hasBeenBlurred = false;\r\n\t\t\tthis._setValueAttr(this._resetValue, true);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_FormValueWidget',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"./_FormWidget\",\r\n\t\"./_FormValueMixin\"\r\n], function(declare, has, _FormWidget, _FormValueMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_FormValueWidget\r\n\r\n\treturn declare(\"dijit.form._FormValueWidget\", [_FormWidget, _FormValueMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for widgets corresponding to native HTML elements such as `<input>` or `<select>`\r\n\t\t//\t\tthat have user changeable values.\r\n\t\t// description:\r\n\t\t//\t\tEach _FormValueWidget represents a single input value, and has a (possibly hidden) `<input>` element,\r\n\t\t//\t\tto which it serializes it's input value, so that form submission (either normal submission or via FormBind?)\r\n\t\t//\t\tworks as expected.\r\n\r\n\t\t// Don't attempt to mixin the 'type', 'name' attributes here programatically -- they must be declared\r\n\t\t// directly in the template as read by the parser in order to function. IE is known to specifically\r\n\t\t// require the 'name' attribute at element creation time.  See #8484, #8660.\r\n\r\n\t\t_layoutHackIE7: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWork around table sizing bugs on IE7 by forcing redraw\r\n\r\n\t\t\tif(has(\"ie\") == 7){ // fix IE7 layout bug when the widget is scrolled out of sight\r\n\t\t\t\tvar domNode = this.domNode;\r\n\t\t\t\tvar parent = domNode.parentNode;\r\n\t\t\t\tvar pingNode = domNode.firstChild || domNode; // target node most unlikely to have a custom filter\r\n\t\t\t\tvar origFilter = pingNode.style.filter; // save custom filter, most likely nothing\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\twhile(parent && parent.clientHeight == 0){ // search for parents that haven't rendered yet\r\n\t\t\t\t\t(function ping(){\r\n\t\t\t\t\t\tvar disconnectHandle = _this.connect(parent, \"onscroll\",\r\n\t\t\t\t\t\t\tfunction(){\r\n\t\t\t\t\t\t\t\t_this.disconnect(disconnectHandle); // only call once\r\n\t\t\t\t\t\t\t\tpingNode.style.filter = (new Date()).getMilliseconds(); // set to anything that's unique\r\n\t\t\t\t\t\t\t\t_this.defer(function(){\r\n\t\t\t\t\t\t\t\t\tpingNode.style.filter = origFilter;\r\n\t\t\t\t\t\t\t\t}); // restore custom filter, if any\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})();\r\n\t\t\t\t\tparent = parent.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/dijit',[\r\n\t\"./main\",\r\n\t\"./_base\",\r\n\t\"dojo/parser\",\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_Container\",\r\n\t\"./layout/_LayoutWidget\",\r\n\t\"./form/_FormWidget\",\r\n\t\"./form/_FormValueWidget\"\r\n], function(dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/dijit\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tA roll-up for common dijit methods\r\n\t\t//\t\tAll the stuff in _base (these are the function that are guaranteed available without an explicit dojo.require)\r\n\t\t//\t\tAnd some other stuff that we tend to pull in all the time anyway\r\n\t};\r\n\t=====*/\r\n\r\n\treturn dijit;\r\n});\r\n\n\ndefine('dijit/_PaletteMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove\r\n\t\"dojo/dom-construct\", // domConstruct.create domConstruct.place\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/on\",\r\n\t\"./_CssStateMixin\",\r\n\t\"./a11yclick\",\r\n\t\"./focus\",\r\n\t\"./typematic\"\r\n], function(declare, domAttr, domClass, domConstruct, keys, lang, on, _CssStateMixin, a11yclick, focus, typematic){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_PaletteMixin\r\n\r\n\tvar PaletteMixin = declare(\"dijit._PaletteMixin\", _CssStateMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tA keyboard accessible palette, for picking a color/emoticon/etc.\r\n\t\t// description:\r\n\t\t//\t\tA mixin for a grid showing various entities, so the user can pick a certain entity.\r\n\r\n\t\t// defaultTimeout: Number\r\n\t\t//\t\tNumber of milliseconds before a held key or button becomes typematic\r\n\t\tdefaultTimeout: 500,\r\n\r\n\t\t// timeoutChangeRate: Number\r\n\t\t//\t\tFraction of time used to change the typematic timer between events\r\n\t\t//\t\t1.0 means that each typematic event fires at defaultTimeout intervals\r\n\t\t//\t\tLess than 1.0 means that each typematic event fires at an increasing faster rate\r\n\t\ttimeoutChangeRate: 0.90,\r\n\r\n\t\t// value: String\r\n\t\t//\t\tCurrently selected color/emoticon/etc.\r\n\t\tvalue: \"\",\r\n\r\n\t\t// _selectedCell: [private] Integer\r\n\t\t//\t\tIndex of the currently selected cell. Initially, none selected\r\n\t\t_selectedCell: -1,\r\n\r\n\t\t/*=====\r\n\t\t // _currentFocus: [private] DomNode\r\n\t\t //\t\tThe currently focused cell (if the palette itself has focus), or otherwise\r\n\t\t //\t\tthe cell to be focused when the palette itself gets focus.\r\n\t\t //\t\tDifferent from value, which represents the selected (i.e. clicked) cell.\r\n\t\t _currentFocus: null,\r\n\t\t =====*/\r\n\r\n\t\t/*=====\r\n\t\t // _xDim: [protected] Integer\r\n\t\t //\t\tThis is the number of cells horizontally across.\r\n\t\t _xDim: null,\r\n\t\t =====*/\r\n\r\n\t\t/*=====\r\n\t\t // _yDim: [protected] Integer\r\n\t\t //\t\tThis is the number of cells vertically down.\r\n\t\t _yDim: null,\r\n\t\t =====*/\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tWidget tab index.\r\n\t\ttabIndex: \"0\",\r\n\r\n\t\t// cellClass: [protected] String\r\n\t\t//\t\tCSS class applied to each cell in the palette\r\n\t\tcellClass: \"dijitPaletteCell\",\r\n\r\n\t\t// dyeClass: [protected] Constructor\r\n\t\t//\t\tConstructor for Object created for each cell of the palette.\r\n\t\t//\t\tdyeClass should implement the dijit/_PaletteMixin.__Dye interface.\r\n\t\tdyeClass: null,\r\n\r\n\t\t_dyeFactory: function(value /*===== , row, col, title =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn instance of dijit.Dye for specified cell of palette\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\t// Remove string support for 2.0\r\n\t\t\tvar dyeClassObj = typeof this.dyeClass == \"string\" ? lang.getObject(this.dyeClass) : this.dyeClass;\r\n\t\t\treturn new dyeClassObj(value);\r\n\t\t},\r\n\r\n\t\t_preparePalette: function(choices, titles){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSubclass must call _preparePalette() from postCreate(), passing in the tooltip\r\n\t\t\t//\t\tfor each cell\r\n\t\t\t// choices: String[][]\r\n\t\t\t//\t\tid's for each cell of the palette, used to create Dye JS object for each cell\r\n\t\t\t// titles: String[]\r\n\t\t\t//\t\tLocalized tooltip for each cell\r\n\r\n\t\t\tthis._cells = [];\r\n\t\t\tvar url = this._blankGif;\r\n\r\n\t\t\tthis.own(on(this.gridNode, a11yclick, lang.hitch(this, \"_onCellClick\")));\r\n\r\n\t\t\tfor(var row = 0; row < choices.length; row++){\r\n\t\t\t\tvar rowNode = domConstruct.create(\"tr\", {tabIndex: \"-1\", role: \"row\"}, this.gridNode);\r\n\t\t\t\tfor(var col = 0; col < choices[row].length; col++){\r\n\t\t\t\t\tvar value = choices[row][col];\r\n\t\t\t\t\tif(value){\r\n\t\t\t\t\t\tvar cellObject = this._dyeFactory(value, row, col, titles[value]);\r\n\r\n\t\t\t\t\t\tvar cellNode = domConstruct.create(\"td\", {\r\n\t\t\t\t\t\t\t\"class\": this.cellClass,\r\n\t\t\t\t\t\t\ttabIndex: \"-1\",\r\n\t\t\t\t\t\t\ttitle: titles[value],\r\n\t\t\t\t\t\t\trole: \"gridcell\"\r\n\t\t\t\t\t\t}, rowNode);\r\n\r\n\t\t\t\t\t\t// prepare cell inner structure\r\n\t\t\t\t\t\tcellObject.fillCell(cellNode, url);\r\n\r\n\t\t\t\t\t\tcellNode.idx = this._cells.length;\r\n\r\n\t\t\t\t\t\t// save cell info into _cells\r\n\t\t\t\t\t\tthis._cells.push({node: cellNode, dye: cellObject});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._xDim = choices[0].length;\r\n\t\t\tthis._yDim = choices.length;\r\n\r\n\t\t\t// Now set all events\r\n\t\t\t// The palette itself is navigated to with the tab key on the keyboard\r\n\t\t\t// Keyboard navigation within the Palette is with the arrow keys\r\n\t\t\t// Spacebar selects the cell.\r\n\t\t\t// For the up key the index is changed by negative the x dimension.\r\n\r\n\t\t\tvar keyIncrementMap = {\r\n\t\t\t\tUP_ARROW: -this._xDim,\r\n\t\t\t\t// The down key the index is increase by the x dimension.\r\n\t\t\t\tDOWN_ARROW: this._xDim,\r\n\t\t\t\t// Right and left move the index by 1.\r\n\t\t\t\tRIGHT_ARROW: this.isLeftToRight() ? 1 : -1,\r\n\t\t\t\tLEFT_ARROW: this.isLeftToRight() ? -1 : 1\r\n\t\t\t};\r\n\t\t\tfor(var key in keyIncrementMap){\r\n\t\t\t\tthis.own(\r\n\t\t\t\t\ttypematic.addKeyListener(\r\n\t\t\t\t\t\tthis.domNode,\r\n\t\t\t\t\t\t{keyCode: keys[key], ctrlKey: false, altKey: false, shiftKey: false},\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\tfunction(){\r\n\t\t\t\t\t\t\tvar increment = keyIncrementMap[key];\r\n\t\t\t\t\t\t\treturn function(count){\r\n\t\t\t\t\t\t\t\tthis._navigateByKey(increment, count);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}(),\r\n\t\t\t\t\t\tthis.timeoutChangeRate,\r\n\t\t\t\t\t\tthis.defaultTimeout\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Set initial navigable node.\r\n\t\t\tthis._setCurrent(this._cells[0].node);\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus this widget.  Puts focus on the most recently focused cell.\r\n\r\n\t\t\t// The cell already has tabIndex set, just need to set CSS and focus it\r\n\t\t\tfocus.focus(this._currentFocus);\r\n\t\t},\r\n\r\n\t\t_onCellClick: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for click, enter key & space key. Selects the cell.\r\n\t\t\t// evt:\r\n\t\t\t//\t\tThe event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar target = evt.target;\r\n\r\n\t\t\t// Find TD associated with click event.   For ColorPalette user likely clicked IMG inside of TD\r\n\t\t\twhile(target.tagName != \"TD\"){\r\n\t\t\t\tif(!target.parentNode || target == this.gridNode){    // probably can never happen, but just in case\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\ttarget = target.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tvar value = this._getDye(target).getValue();\r\n\r\n\t\t\t// First focus the clicked cell, and then send onChange() notification.\r\n\t\t\t// onChange() (via _setValueAttr) must be after the focus call, because\r\n\t\t\t// it may trigger a refocus to somewhere else (like the Editor content area), and that\r\n\t\t\t// second focus should win.\r\n\t\t\tthis._setCurrent(target);\r\n\t\t\tfocus.focus(target);\r\n\t\t\tthis._setValueAttr(value, true);\r\n\r\n\t\t\tevt.stopPropagation();\r\n\t\t\tevt.preventDefault();\r\n\t\t},\r\n\r\n\t\t_setCurrent: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets which node is the focused cell.\r\n\t\t\t// description:\r\n\t\t\t//\t\tAt any point in time there's exactly one\r\n\t\t\t//\t\tcell with tabIndex != -1.   If focus is inside the palette then\r\n\t\t\t//\t\tfocus is on that cell.\r\n\t\t\t//\r\n\t\t\t//\t\tAfter calling this method, arrow key handlers and mouse click handlers\r\n\t\t\t//\t\tshould focus the cell in a setTimeout().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(\"_currentFocus\" in this){\r\n\t\t\t\t// Remove tabIndex on old cell\r\n\t\t\t\tdomAttr.set(this._currentFocus, \"tabIndex\", \"-1\");\r\n\t\t\t}\r\n\r\n\t\t\t// Set tabIndex of new cell\r\n\t\t\tthis._currentFocus = node;\r\n\t\t\tif(node){\r\n\t\t\t\tdomAttr.set(node, \"tabIndex\", this.tabIndex);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(value, priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis selects a cell. It triggers the onChange event.\r\n\t\t\t// value: String\r\n\t\t\t//\t\tValue of the cell to select\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\t// priorityChange: Boolean?\r\n\t\t\t//\t\tOptional parameter used to tell the select whether or not to fire\r\n\t\t\t//\t\tonChange event.\r\n\r\n\t\t\t// clear old selected cell\r\n\t\t\tif(this._selectedCell >= 0){\r\n\t\t\t\tdomClass.remove(this._cells[this._selectedCell].node, this.cellClass + \"Selected\");\r\n\t\t\t}\r\n\t\t\tthis._selectedCell = -1;\r\n\r\n\t\t\t// search for cell matching specified value\r\n\t\t\tif(value){\r\n\t\t\t\tfor(var i = 0; i < this._cells.length; i++){\r\n\t\t\t\t\tif(value == this._cells[i].dye.getValue()){\r\n\t\t\t\t\t\tthis._selectedCell = i;\r\n\t\t\t\t\t\tdomClass.add(this._cells[i].node, this.cellClass + \"Selected\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// record new value, or null if no matching cell\r\n\t\t\tthis._set(\"value\", this._selectedCell >= 0 ? value : null);\r\n\r\n\t\t\tif(priorityChange || priorityChange === undefined){\r\n\t\t\t\tthis.onChange(value);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonChange: function(/*===== value =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when a cell is selected.\r\n\t\t\t// value: String\r\n\t\t\t//\t\tValue corresponding to cell.\r\n\t\t},\r\n\r\n\t\t_navigateByKey: function(increment, typeCount){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is the callback for typematic.\r\n\t\t\t//\t\tIt changes the focus and the highlighed cell.\r\n\t\t\t// increment:\r\n\t\t\t//\t\tHow much the key is navigated.\r\n\t\t\t// typeCount:\r\n\t\t\t//\t\tHow many times typematic has fired.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// typecount == -1 means the key is released.\r\n\t\t\tif(typeCount == -1){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar newFocusIndex = this._currentFocus.idx + increment;\r\n\t\t\tif(newFocusIndex < this._cells.length && newFocusIndex > -1){\r\n\t\t\t\tvar focusNode = this._cells[newFocusIndex].node;\r\n\t\t\t\tthis._setCurrent(focusNode);\r\n\r\n\t\t\t\t// Actually focus the node, for the benefit of screen readers.\r\n\t\t\t\t// Use defer because IE doesn't like changing focus inside of an event handler\r\n\t\t\t\tthis.defer(lang.hitch(focus, \"focus\", focusNode));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getDye: function(/*DomNode*/ cell){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet JS object for given cell DOMNode\r\n\r\n\t\t\treturn this._cells[cell.idx].dye;\r\n\t\t}\r\n\t});\r\n\r\n\t/*=====\r\n\t PaletteMixin.__Dye = declare(\"dijit.Dye\", null, {\r\n\t\t // summary:\r\n\t\t //\t\tInterface for the JS Object associated with a palette cell (i.e. DOMNode)\r\n\r\n\t\t constructor: function(alias, row, col){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tInitialize according to value or alias like \"white\"\r\n\t\t\t // alias: String\r\n\t\t },\r\n\r\n\t\t getValue: function(){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tReturn \"value\" of cell; meaning of \"value\" varies by subclass.\r\n\t\t\t // description:\r\n\t\t\t //\t\tFor example color hex value, emoticon ascii value etc, entity hex value.\r\n\t\t },\r\n\r\n\t\t fillCell: function(cell, blankGif){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tAdd cell DOMNode inner structure\r\n\t\t\t // cell: DomNode\r\n\t\t\t //\t\tThe surrounding cell\r\n\t\t\t // blankGif: String\r\n\t\t\t //\t\tURL for blank cell image\r\n\t\t }\r\n\t });\r\n\t =====*/\r\n\r\n\treturn PaletteMixin;\r\n});\r\n\n\ndefine('dojo/colors',[\"./_base/kernel\", \"./_base/lang\", \"./_base/Color\", \"./_base/array\"], function(dojo, lang, Color, ArrayUtil){\r\n\t// module:\r\n\t//\t\tdojo/colors\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tColor utilities, extending Base dojo.Color\r\n\t};\r\n\t=====*/\r\n\r\n\tvar ColorExt = {};\r\n\tlang.setObject(\"dojo.colors\", ColorExt);\r\n\r\n//TODO: this module appears to break naming conventions\r\n\r\n\t// this is a standard conversion prescribed by the CSS3 Color Module\r\n\tvar hue2rgb = function(m1, m2, h){\r\n\t\tif(h < 0){ ++h; }\r\n\t\tif(h > 1){ --h; }\r\n\t\tvar h6 = 6 * h;\r\n\t\tif(h6 < 1){ return m1 + (m2 - m1) * h6; }\r\n\t\tif(2 * h < 1){ return m2; }\r\n\t\tif(3 * h < 2){ return m1 + (m2 - m1) * (2 / 3 - h) * 6; }\r\n\t\treturn m1;\r\n\t};\r\n\t// Override base Color.fromRgb with the impl in this module\r\n\tdojo.colorFromRgb = Color.fromRgb = function(/*String*/ color, /*dojo/_base/Color?*/ obj){\r\n\t\t// summary:\r\n\t\t//\t\tget rgb(a) array from css-style color declarations\r\n\t\t// description:\r\n\t\t//\t\tthis function can handle all 4 CSS3 Color Module formats: rgb,\r\n\t\t//\t\trgba, hsl, hsla, including rgb(a) with percentage values.\r\n\t\tvar m = color.toLowerCase().match(/^(rgba?|hsla?)\\(([\\s\\.\\-,%0-9]+)\\)/);\r\n\t\tif(m){\r\n\t\t\tvar c = m[2].split(/\\s*,\\s*/), l = c.length, t = m[1], a;\r\n\t\t\tif((t == \"rgb\" && l == 3) || (t == \"rgba\" && l == 4)){\r\n\t\t\t\tvar r = c[0];\r\n\t\t\t\tif(r.charAt(r.length - 1) == \"%\"){\r\n\t\t\t\t\t// 3 rgb percentage values\r\n\t\t\t\t\ta = ArrayUtil.map(c, function(x){\r\n\t\t\t\t\t\treturn parseFloat(x) * 2.56;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(l == 4){ a[3] = c[3]; }\r\n\t\t\t\t\treturn Color.fromArray(a, obj); // dojo/_base/Color\r\n\t\t\t\t}\r\n\t\t\t\treturn Color.fromArray(c, obj); // dojo/_base/Color\r\n\t\t\t}\r\n\t\t\tif((t == \"hsl\" && l == 3) || (t == \"hsla\" && l == 4)){\r\n\t\t\t\t// normalize hsl values\r\n\t\t\t\tvar H = ((parseFloat(c[0]) % 360) + 360) % 360 / 360,\r\n\t\t\t\t\tS = parseFloat(c[1]) / 100,\r\n\t\t\t\t\tL = parseFloat(c[2]) / 100,\r\n\t\t\t\t\t// calculate rgb according to the algorithm\r\n\t\t\t\t\t// recommended by the CSS3 Color Module\r\n\t\t\t\t\tm2 = L <= 0.5 ? L * (S + 1) : L + S - L * S,\r\n\t\t\t\t\tm1 = 2 * L - m2;\r\n\t\t\t\ta = [\r\n\t\t\t\t\thue2rgb(m1, m2, H + 1 / 3) * 256,\r\n\t\t\t\t\thue2rgb(m1, m2, H) * 256,\r\n\t\t\t\t\thue2rgb(m1, m2, H - 1 / 3) * 256,\r\n\t\t\t\t\t1\r\n\t\t\t\t];\r\n\t\t\t\tif(l == 4){ a[3] = c[3]; }\r\n\t\t\t\treturn Color.fromArray(a, obj); // dojo/_base/Color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\t// dojo/_base/Color\r\n\t};\r\n\r\n\tvar confine = function(c, low, high){\r\n\t\t// summary:\r\n\t\t//\t\tsanitize a color component by making sure it is a number,\r\n\t\t//\t\tand clamping it to valid values\r\n\t\tc = Number(c);\r\n\t\treturn isNaN(c) ? high : c < low ? low : c > high ? high : c;\t// Number\r\n\t};\r\n\r\n\tColor.prototype.sanitize = function(){\r\n\t\t// summary:\r\n\t\t//\t\tmakes sure that the object has correct attributes\r\n\t\tvar t = this;\r\n\t\tt.r = Math.round(confine(t.r, 0, 255));\r\n\t\tt.g = Math.round(confine(t.g, 0, 255));\r\n\t\tt.b = Math.round(confine(t.b, 0, 255));\r\n\t\tt.a = confine(t.a, 0, 1);\r\n\t\treturn this;\t// dojo/_base/Color\r\n\t};\r\n\r\n\tColorExt.makeGrey = Color.makeGrey = function(/*Number*/ g, /*Number?*/ a){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a greyscale color with an optional alpha\r\n\t\treturn Color.fromArray([g, g, g, a]);\t// dojo/_base/Color\r\n\t};\r\n\r\n\t// mixin all CSS3 named colors not already in _base, along with SVG 1.0 variant spellings\r\n\tlang.mixin(Color.named, {\r\n\t\t\"aliceblue\":\t[240,248,255],\r\n\t\t\"antiquewhite\": [250,235,215],\r\n\t\t\"aquamarine\":\t[127,255,212],\r\n\t\t\"azure\":\t[240,255,255],\r\n\t\t\"beige\":\t[245,245,220],\r\n\t\t\"bisque\":\t[255,228,196],\r\n\t\t\"blanchedalmond\":\t[255,235,205],\r\n\t\t\"blueviolet\":\t[138,43,226],\r\n\t\t\"brown\":\t[165,42,42],\r\n\t\t\"burlywood\":\t[222,184,135],\r\n\t\t\"cadetblue\":\t[95,158,160],\r\n\t\t\"chartreuse\":\t[127,255,0],\r\n\t\t\"chocolate\":\t[210,105,30],\r\n\t\t\"coral\":\t[255,127,80],\r\n\t\t\"cornflowerblue\":\t[100,149,237],\r\n\t\t\"cornsilk\": [255,248,220],\r\n\t\t\"crimson\":\t[220,20,60],\r\n\t\t\"cyan\": [0,255,255],\r\n\t\t\"darkblue\": [0,0,139],\r\n\t\t\"darkcyan\": [0,139,139],\r\n\t\t\"darkgoldenrod\":\t[184,134,11],\r\n\t\t\"darkgray\": [169,169,169],\r\n\t\t\"darkgreen\":\t[0,100,0],\r\n\t\t\"darkgrey\": [169,169,169],\r\n\t\t\"darkkhaki\":\t[189,183,107],\r\n\t\t\"darkmagenta\":\t[139,0,139],\r\n\t\t\"darkolivegreen\":\t[85,107,47],\r\n\t\t\"darkorange\":\t[255,140,0],\r\n\t\t\"darkorchid\":\t[153,50,204],\r\n\t\t\"darkred\":\t[139,0,0],\r\n\t\t\"darksalmon\":\t[233,150,122],\r\n\t\t\"darkseagreen\": [143,188,143],\r\n\t\t\"darkslateblue\":\t[72,61,139],\r\n\t\t\"darkslategray\":\t[47,79,79],\r\n\t\t\"darkslategrey\":\t[47,79,79],\r\n\t\t\"darkturquoise\":\t[0,206,209],\r\n\t\t\"darkviolet\":\t[148,0,211],\r\n\t\t\"deeppink\": [255,20,147],\r\n\t\t\"deepskyblue\":\t[0,191,255],\r\n\t\t\"dimgray\":\t[105,105,105],\r\n\t\t\"dimgrey\":\t[105,105,105],\r\n\t\t\"dodgerblue\":\t[30,144,255],\r\n\t\t\"firebrick\":\t[178,34,34],\r\n\t\t\"floralwhite\":\t[255,250,240],\r\n\t\t\"forestgreen\":\t[34,139,34],\r\n\t\t\"gainsboro\":\t[220,220,220],\r\n\t\t\"ghostwhite\":\t[248,248,255],\r\n\t\t\"gold\": [255,215,0],\r\n\t\t\"goldenrod\":\t[218,165,32],\r\n\t\t\"greenyellow\":\t[173,255,47],\r\n\t\t\"grey\": [128,128,128],\r\n\t\t\"honeydew\": [240,255,240],\r\n\t\t\"hotpink\":\t[255,105,180],\r\n\t\t\"indianred\":\t[205,92,92],\r\n\t\t\"indigo\":\t[75,0,130],\r\n\t\t\"ivory\":\t[255,255,240],\r\n\t\t\"khaki\":\t[240,230,140],\r\n\t\t\"lavender\": [230,230,250],\r\n\t\t\"lavenderblush\":\t[255,240,245],\r\n\t\t\"lawngreen\":\t[124,252,0],\r\n\t\t\"lemonchiffon\": [255,250,205],\r\n\t\t\"lightblue\":\t[173,216,230],\r\n\t\t\"lightcoral\":\t[240,128,128],\r\n\t\t\"lightcyan\":\t[224,255,255],\r\n\t\t\"lightgoldenrodyellow\": [250,250,210],\r\n\t\t\"lightgray\":\t[211,211,211],\r\n\t\t\"lightgreen\":\t[144,238,144],\r\n\t\t\"lightgrey\":\t[211,211,211],\r\n\t\t\"lightpink\":\t[255,182,193],\r\n\t\t\"lightsalmon\":\t[255,160,122],\r\n\t\t\"lightseagreen\":\t[32,178,170],\r\n\t\t\"lightskyblue\": [135,206,250],\r\n\t\t\"lightslategray\":\t[119,136,153],\r\n\t\t\"lightslategrey\":\t[119,136,153],\r\n\t\t\"lightsteelblue\":\t[176,196,222],\r\n\t\t\"lightyellow\":\t[255,255,224],\r\n\t\t\"limegreen\":\t[50,205,50],\r\n\t\t\"linen\":\t[250,240,230],\r\n\t\t\"magenta\":\t[255,0,255],\r\n\t\t\"mediumaquamarine\": [102,205,170],\r\n\t\t\"mediumblue\":\t[0,0,205],\r\n\t\t\"mediumorchid\": [186,85,211],\r\n\t\t\"mediumpurple\": [147,112,219],\r\n\t\t\"mediumseagreen\":\t[60,179,113],\r\n\t\t\"mediumslateblue\":\t[123,104,238],\r\n\t\t\"mediumspringgreen\":\t[0,250,154],\r\n\t\t\"mediumturquoise\":\t[72,209,204],\r\n\t\t\"mediumvioletred\":\t[199,21,133],\r\n\t\t\"midnightblue\": [25,25,112],\r\n\t\t\"mintcream\":\t[245,255,250],\r\n\t\t\"mistyrose\":\t[255,228,225],\r\n\t\t\"moccasin\": [255,228,181],\r\n\t\t\"navajowhite\":\t[255,222,173],\r\n\t\t\"oldlace\":\t[253,245,230],\r\n\t\t\"olivedrab\":\t[107,142,35],\r\n\t\t\"orange\":\t[255,165,0],\r\n\t\t\"orangered\":\t[255,69,0],\r\n\t\t\"orchid\":\t[218,112,214],\r\n\t\t\"palegoldenrod\":\t[238,232,170],\r\n\t\t\"palegreen\":\t[152,251,152],\r\n\t\t\"paleturquoise\":\t[175,238,238],\r\n\t\t\"palevioletred\":\t[219,112,147],\r\n\t\t\"papayawhip\":\t[255,239,213],\r\n\t\t\"peachpuff\":\t[255,218,185],\r\n\t\t\"peru\": [205,133,63],\r\n\t\t\"pink\": [255,192,203],\r\n\t\t\"plum\": [221,160,221],\r\n\t\t\"powderblue\":\t[176,224,230],\r\n\t\t\"rosybrown\":\t[188,143,143],\r\n\t\t\"royalblue\":\t[65,105,225],\r\n\t\t\"saddlebrown\":\t[139,69,19],\r\n\t\t\"salmon\":\t[250,128,114],\r\n\t\t\"sandybrown\":\t[244,164,96],\r\n\t\t\"seagreen\": [46,139,87],\r\n\t\t\"seashell\": [255,245,238],\r\n\t\t\"sienna\":\t[160,82,45],\r\n\t\t\"skyblue\":\t[135,206,235],\r\n\t\t\"slateblue\":\t[106,90,205],\r\n\t\t\"slategray\":\t[112,128,144],\r\n\t\t\"slategrey\":\t[112,128,144],\r\n\t\t\"snow\": [255,250,250],\r\n\t\t\"springgreen\":\t[0,255,127],\r\n\t\t\"steelblue\":\t[70,130,180],\r\n\t\t\"tan\":\t[210,180,140],\r\n\t\t\"thistle\":\t[216,191,216],\r\n\t\t\"tomato\":\t[255,99,71],\r\n\t\t\"turquoise\":\t[64,224,208],\r\n\t\t\"violet\":\t[238,130,238],\r\n\t\t\"wheat\":\t[245,222,179],\r\n\t\t\"whitesmoke\":\t[245,245,245],\r\n\t\t\"yellowgreen\":\t[154,205,50]\r\n\t});\r\n\r\n\treturn Color;\t// TODO: return ColorExt, not Color\r\n});\r\n\ndefine('dijit/ColorPalette',[\r\n\t\"require\", // require.toUrl\r\n\t\"dojo/text!./templates/ColorPalette.html\",\r\n\t\"./_Widget\", // used also to load dijit/hccss for setting has(\"highcontrast\")\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_PaletteMixin\",\r\n\t\"./hccss\", // has(\"highcontrast\")\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/_base/Color\", // dojo.Color dojo.Color.named\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.place\r\n\t\"dojo/string\", // string.substitute\r\n\t\"dojo/i18n!dojo/nls/colors\", // translations\r\n\t\"dojo/colors\"    // extend dojo.Color w/names of other colors\r\n], function(require, template, _Widget, _TemplatedMixin, _PaletteMixin, has, i18n, Color,\r\n\tdeclare, domConstruct, string){\r\n\r\n\t// module:\r\n\t//\t\tdijit/ColorPalette\r\n\r\n\tvar ColorPalette = declare(\"dijit.ColorPalette\", [_Widget, _TemplatedMixin, _PaletteMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA keyboard accessible color-picking widget\r\n\t\t// description:\r\n\t\t//\t\tGrid showing various colors, so the user can pick a certain color.\r\n\t\t//\t\tCan be used standalone, or as a popup.\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\t<div data-dojo-type=\"dijit/ColorPalette\"></div>\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\tvar picker = new dijit.ColorPalette({ },srcNode);\r\n\t\t// |\tpicker.startup();\r\n\r\n\r\n\t\t// palette: [const] String\r\n\t\t//\t\tSize of grid, either \"7x10\" or \"3x4\".\r\n\t\tpalette: \"7x10\",\r\n\r\n\t\t// _palettes: [protected] Map\r\n\t\t//\t\tThis represents the value of the colors.\r\n\t\t//\t\tThe first level is a hashmap of the different palettes available.\r\n\t\t//\t\tThe next two dimensions represent the columns and rows of colors.\r\n\t\t_palettes: {\r\n\t\t\t\"7x10\": [\r\n\t\t\t\t[\"white\", \"seashell\", \"cornsilk\", \"lemonchiffon\", \"lightyellow\", \"palegreen\", \"paleturquoise\", \"lightcyan\", \"lavender\", \"plum\"],\r\n\t\t\t\t[\"lightgray\", \"pink\", \"bisque\", \"moccasin\", \"khaki\", \"lightgreen\", \"lightseagreen\", \"lightskyblue\", \"cornflowerblue\", \"violet\"],\r\n\t\t\t\t[\"silver\", \"lightcoral\", \"sandybrown\", \"orange\", \"palegoldenrod\", \"chartreuse\", \"mediumturquoise\", \"skyblue\", \"mediumslateblue\", \"orchid\"],\r\n\t\t\t\t[\"gray\", \"red\", \"orangered\", \"darkorange\", \"yellow\", \"limegreen\", \"darkseagreen\", \"royalblue\", \"slateblue\", \"mediumorchid\"],\r\n\t\t\t\t[\"dimgray\", \"crimson\", \"chocolate\", \"coral\", \"gold\", \"forestgreen\", \"seagreen\", \"blue\", \"blueviolet\", \"darkorchid\"],\r\n\t\t\t\t[\"darkslategray\", \"firebrick\", \"saddlebrown\", \"sienna\", \"olive\", \"green\", \"darkcyan\", \"mediumblue\", \"darkslateblue\", \"darkmagenta\" ],\r\n\t\t\t\t[\"black\", \"darkred\", \"maroon\", \"brown\", \"darkolivegreen\", \"darkgreen\", \"midnightblue\", \"navy\", \"indigo\", \"purple\"]\r\n\t\t\t],\r\n\r\n\t\t\t\"3x4\": [\r\n\t\t\t\t[\"white\", \"lime\", \"green\", \"blue\"],\r\n\t\t\t\t[\"silver\", \"yellow\", \"fuchsia\", \"navy\"],\r\n\t\t\t\t[\"gray\", \"red\", \"purple\", \"black\"]\r\n\t\t\t]\r\n\t\t},\r\n\r\n\t\t// templateString: String\r\n\t\t//\t\tThe template of this widget.\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitColorPalette\",\r\n\r\n\t\t_dyeFactory: function(value, row, col, title){\r\n\t\t\t// Overrides _PaletteMixin._dyeFactory().\r\n\t\t\treturn new this._dyeClass(value, row, col, title);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// Instantiate the template, which makes a skeleton into which we'll insert a bunch of\r\n\t\t\t// <img> nodes\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t//\tCreates customized constructor for dye class (color of a single cell) for\r\n\t\t\t//\tspecified palette and high-contrast vs. normal mode.   Used in _getDye().\r\n\t\t\tthis._dyeClass = declare(ColorPalette._Color, {\r\n\t\t\t\tpalette: this.palette\r\n\t\t\t});\r\n\r\n\t\t\t// Creates <img> nodes in each cell of the template.\r\n\t\t\tthis._preparePalette(\r\n\t\t\t\tthis._palettes[this.palette],\r\n\t\t\t\ti18n.getLocalization(\"dojo\", \"colors\", this.lang));\r\n\t\t}\r\n\t});\r\n\r\n\tColorPalette._Color = declare(\"dijit._Color\", Color, {\r\n\t\t// summary:\r\n\t\t//\t\tObject associated with each cell in a ColorPalette palette.\r\n\t\t//\t\tImplements dijit/Dye.\r\n\r\n\t\t// Template for each cell in normal (non-high-contrast mode).  Each cell contains a wrapper\r\n\t\t// node for showing the border (called dijitPaletteImg for back-compat), and dijitColorPaletteSwatch\r\n\t\t// for showing the color.\r\n\t\ttemplate: \"<span class='dijitInline dijitPaletteImg'>\" +\r\n\t\t\t\"<img src='${blankGif}' alt='${alt}' title='${title}' class='dijitColorPaletteSwatch' style='background-color: ${color}'/>\" +\r\n\t\t\t\"</span>\",\r\n\r\n\t\t// Template for each cell in high contrast mode.  Each cell contains an image with the whole palette,\r\n\t\t// but scrolled and clipped to show the correct color only\r\n\t\thcTemplate: \"<span class='dijitInline dijitPaletteImg' style='position: relative; overflow: hidden; height: 12px; width: 14px;'>\" +\r\n\t\t\t\"<img src='${image}' alt='${alt}' title='${title}' style='position: absolute; left: ${left}px; top: ${top}px; ${size}'/>\" +\r\n\t\t\t\"</span>\",\r\n\r\n\t\t// _imagePaths: [protected] Map\r\n\t\t//\t\tThis is stores the path to the palette images used for high-contrast mode display\r\n\t\t_imagePaths: {\r\n\t\t\t\"7x10\": require.toUrl(\"./themes/a11y/colors7x10.png\"),\r\n\t\t\t\"3x4\": require.toUrl(\"./themes/a11y/colors3x4.png\")\r\n\t\t},\r\n\r\n\t\tconstructor: function(alias, row, col, title){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstructor for ColorPalette._Color\r\n\t\t\t// alias: String\r\n\t\t\t//\t\tEnglish name of the color.\r\n\t\t\t// row: Number\r\n\t\t\t//\t\tVertical position in grid.\r\n\t\t\t// column: Number\r\n\t\t\t//\t\tHorizontal position in grid.\r\n\t\t\t// title: String\r\n\t\t\t//\t\tLocalized name of the color.\r\n\t\t\tthis._title = title;\r\n\t\t\tthis._row = row;\r\n\t\t\tthis._col = col;\r\n\t\t\tthis.setColor(Color.named[alias]);\r\n\t\t},\r\n\r\n\t\tgetValue: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tNote that although dijit._Color is initialized with a value like \"white\" getValue() always\r\n\t\t\t//\t\treturns a hex value\r\n\t\t\treturn this.toHex();\r\n\t\t},\r\n\r\n\t\tfillCell: function(/*DOMNode*/ cell, /*String*/ blankGif){\r\n\t\t\tvar html = string.substitute(has(\"highcontrast\") ? this.hcTemplate : this.template, {\r\n\t\t\t\t// substitution variables for normal mode\r\n\t\t\t\tcolor: this.toHex(),\r\n\t\t\t\tblankGif: blankGif,\r\n\t\t\t\talt: this._title,\r\n\t\t\t\ttitle: this._title,\r\n\r\n\t\t\t\t// variables used for high contrast mode\r\n\t\t\t\timage: this._imagePaths[this.palette].toString(),\r\n\t\t\t\tleft: this._col * -20 - 5,\r\n\t\t\t\ttop: this._row * -20 - 5,\r\n\t\t\t\tsize: this.palette == \"7x10\" ? \"height: 145px; width: 206px\" : \"height: 64px; width: 86px\"\r\n\t\t\t});\r\n\r\n\t\t\tdomConstruct.place(html, cell);\r\n\t\t}\r\n\t});\r\n\r\n\treturn ColorPalette;\r\n});\r\n\ndefine('dijit/_WidgetsInTemplateMixin',[\r\n\t\"dojo/_base/array\", // forEach()\r\n\t\"dojo/aspect\", // after()\r\n\t\"dojo/_base/declare\", // declare()\r\n\t\"dojo/_base/lang\",\t// hitch()\r\n\t\"dojo/parser\" // parse()\r\n], function(array, aspect, declare, lang, parser){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_WidgetsInTemplateMixin\r\n\r\n\treturn declare(\"dijit._WidgetsInTemplateMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin to supplement _TemplatedMixin when template contains widgets\r\n\r\n\t\t// _earlyTemplatedStartup: Boolean\r\n\t\t//\t\tA fallback to preserve the 1.0 - 1.3 behavior of children in\r\n\t\t//\t\ttemplates having their startup called before the parent widget\r\n\t\t//\t\tfires postCreate. Defaults to 'false', causing child widgets to\r\n\t\t//\t\thave their .startup() called immediately before a parent widget\r\n\t\t//\t\t.startup(), but always after the parent .postCreate(). Set to\r\n\t\t//\t\t'true' to re-enable to previous, arguably broken, behavior.\r\n\t\t_earlyTemplatedStartup: false,\r\n\r\n\t\t// widgetsInTemplate: [protected] Boolean\r\n\t\t//\t\tShould we parse the template to find widgets that might be\r\n\t\t//\t\tdeclared in markup inside it?  (Remove for 2.0 and assume true)\r\n\t\twidgetsInTemplate: true,\r\n\r\n\t\t// contextRequire: Function\r\n\t\t//\t\tUsed to provide a context require to the dojo/parser in order to be\r\n\t\t//\t\table to use relative MIDs (e.g. `./Widget`) in the widget's template.\r\n\t\tcontextRequire: null,\r\n\r\n\t\t_beforeFillContent: function(){\r\n\t\t\tif(this.widgetsInTemplate){\r\n\t\t\t\t// Before copying over content, instantiate widgets in template\r\n\t\t\t\tvar node = this.domNode;\r\n\r\n\t\t\t\tif(this.containerNode && !this.searchContainerNode){\r\n\t\t\t\t\t// Tell parse call below not to look for widgets inside of this.containerNode\r\n\t\t\t\t\tthis.containerNode.stopParser = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparser.parse(node, {\r\n\t\t\t\t\tnoStart: !this._earlyTemplatedStartup,\r\n\t\t\t\t\ttemplate: true,\r\n\t\t\t\t\tinherited: {dir: this.dir, lang: this.lang, textDir: this.textDir},\r\n\t\t\t\t\tpropsThis: this,\t// so data-dojo-props of widgets in the template can reference \"this\" to refer to me\r\n\t\t\t\t\tcontextRequire: this.contextRequire,\r\n\t\t\t\t\tscope: \"dojo\"\t// even in multi-version mode templates use dojoType/data-dojo-type\r\n\t\t\t\t}).then(lang.hitch(this, function(widgets){\r\n\t\t\t\t\tthis._startupWidgets = widgets;\r\n\r\n\t\t\t\t\t// _WidgetBase::destroy() will destroy any supporting widgets under this.domNode.\r\n\t\t\t\t\t// If we wanted to, we could call this.own() on anything in this._startupWidgets that was moved outside\r\n\t\t\t\t\t// of this.domNode (like Dialog, which is moved to <body>).\r\n\r\n\t\t\t\t\t// Hook up attach points and events for nodes that were converted to widgets\r\n\t\t\t\t\tfor(var i = 0; i < widgets.length; i++){\r\n\t\t\t\t\t\tthis._processTemplateNode(widgets[i], function(n,p){\r\n\t\t\t\t\t\t\t// callback to get a property of a widget\r\n\t\t\t\t\t\t\treturn n[p];\r\n\t\t\t\t\t\t}, function(widget, type, callback){\r\n\t\t\t\t\t\t\t// callback to do data-dojo-attach-event to a widget\r\n\t\t\t\t\t\t\tif(type in widget){\r\n\t\t\t\t\t\t\t\t// back-compat, remove for 2.0\r\n\t\t\t\t\t\t\t\treturn widget.connect(widget, type, callback);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t// 1.x may never hit this branch, but it's the default for 2.0\r\n\t\t\t\t\t\t\t\treturn widget.on(type, callback, true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Cleanup flag set above, just in case\r\n\t\t\t\t\tif(this.containerNode && this.containerNode.stopParser){\r\n\t\t\t\t\t\tdelete this.containerNode.stopParser;\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tif(!this._startupWidgets){\r\n\t\t\t\t\tthrow new Error(this.declaredClass + \": parser returned unfilled promise (probably waiting for module auto-load), \" +\r\n\t\t\t\t\t\t\"unsupported by _WidgetsInTemplateMixin.   Must pre-load all supporting widgets before instantiation.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_processTemplateNode: function(/*DOMNode|Widget*/ baseNode, getAttrFunc, attachFunc){\r\n\t\t\t// Override _AttachMixin._processNode to skip DOMNodes with data-dojo-type set.   They are handled separately\r\n\t\t\t// in the _beforeFillContent() code above.\r\n\r\n\t\t\tif(getAttrFunc(baseNode, \"dojoType\") || getAttrFunc(baseNode, \"data-dojo-type\")){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tarray.forEach(this._startupWidgets, function(w){\r\n\t\t\t\tif(w && !w._started && w.startup){\r\n\t\t\t\t\tw.startup();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._startupWidgets = null;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/Declaration',[\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/aspect\",\t// aspect.after\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/parser\", // parser._functionFromScript\r\n\t\"dojo/query\", // query\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_WidgetsInTemplateMixin\",\r\n\t\"dojo/NodeList-dom\"\r\n], function(array, aspect, declare, lang, parser, query, _Widget, _TemplatedMixin, _WidgetsInTemplateMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Declaration\r\n\r\n\treturn declare(\"dijit.Declaration\", _Widget, {\r\n\t\t// summary:\r\n\t\t//\t\tThe Declaration widget allows a developer to declare new widget\r\n\t\t//\t\tclasses directly from a snippet of markup.\r\n\r\n\t\t// _noScript: [private] Boolean\r\n\t\t//\t\tFlag to parser to leave alone the script tags contained inside of me\r\n\t\t_noScript: true,\r\n\r\n\t\t// stopParser: [private] Boolean\r\n\t\t//\t\tFlag to parser to not try and parse widgets declared inside of me\r\n\t\tstopParser: true,\r\n\r\n\t\t// widgetClass: [const] String\r\n\t\t//\t\tName of class being declared, ex: \"acme.myWidget\"\r\n\t\twidgetClass: \"\",\r\n\r\n\t\t// propList: [const] Object\r\n\t\t//\t\tSet of attributes for this widget along with default values, ex:\r\n\t\t//\t\t{delay: 100, title: \"hello world\"}\r\n\t\tdefaults: null,\r\n\r\n\t\t// mixins: [const] String[]\r\n\t\t//\t\tList containing the prototype for this widget, and also any mixins,\r\n\t\t//\t\tex: [\"dijit._Widget\", \"dijit._Container\"]\r\n\t\tmixins: [],\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tvar src = this.srcNodeRef.parentNode.removeChild(this.srcNodeRef),\r\n\t\t\t\tmethods = query(\"> script[type='dojo/method']\", src).orphan(),\r\n\t\t\t\tconnects = query(\"> script[type='dojo/connect']\", src).orphan(), // remove for 2.0\r\n\t\t\t\taspects = query(\"> script[type='dojo/aspect']\", src).orphan(),\r\n\t\t\t\tsrcType = src.nodeName;\r\n\r\n\t\t\tvar propList = this.defaults || {};\r\n\r\n\t\t\t// For all methods defined like <script type=\"dojo/method\" data-dojo-event=\"foo\">,\r\n\t\t\t// add that method to prototype.\r\n\t\t\t// If there's no \"event\" specified then it's code to run on instantiation,\r\n\t\t\t// so it becomes a connection to \"postscript\" (handled below).\r\n\t\t\tarray.forEach(methods, function(s){\r\n\t\t\t\tvar evt = s.getAttribute(\"event\") || s.getAttribute(\"data-dojo-event\"), // remove \"event\" for 2.0\r\n\t\t\t\t\tfunc = parser._functionFromScript(s, \"data-dojo-\");\r\n\t\t\t\tif(evt){\r\n\t\t\t\t\tpropList[evt] = func;\r\n\t\t\t\t}else{\r\n\t\t\t\t\taspects.push(s);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// map array of strings like [ \"dijit.form.Button\" ] to array of mixin objects\r\n\t\t\t// (note that array.map(this.mixins, lang.getObject) doesn't work because it passes\r\n\t\t\t// a bogus third argument to getObject(), confusing it)\r\n\t\t\tif(this.mixins.length){\r\n\t\t\t\tthis.mixins = array.map(this.mixins, function(name){ return lang.getObject(name); } );\r\n\t\t\t}else{\r\n\t\t\t\tthis.mixins = [ _Widget, _TemplatedMixin, _WidgetsInTemplateMixin ];\r\n\t\t\t}\r\n\r\n\t\t\tpropList._skipNodeCache = true;\r\n\t\t\tpropList.templateString =\r\n\t\t\t\t\"<\"+srcType+\" class='\"+src.className+\"'\" +\r\n\t\t\t\t\" data-dojo-attach-point='\"+\r\n\t\t\t\t\t(src.getAttribute(\"data-dojo-attach-point\") || src.getAttribute(\"dojoAttachPoint\") || '')+\r\n\t\t\t\t\"' data-dojo-attach-event='\"+\r\n\t\t\t\t\t(src.getAttribute(\"data-dojo-attach-event\") || src.getAttribute(\"dojoAttachEvent\") || '')+\r\n\t\t\t\t\"' >\"+src.innerHTML.replace(/\\%7B/g,\"{\").replace(/\\%7D/g,\"}\")+\"</\"+srcType+\">\";\r\n\r\n\t\t\t// create the new widget class\r\n\t\t\tvar wc = declare(\r\n\t\t\t\tthis.widgetClass,\r\n\t\t\t\tthis.mixins,\r\n\t\t\t\tpropList\r\n\t\t\t);\r\n\r\n\t\t\t// Handle <script> blocks of form:\r\n\t\t\t//\t\t<script type=\"dojo/aspect\" data-dojo-advice=\"after\" data-dojo-method=\"foo\">\r\n\t\t\t// and\r\n\t\t\t//\t\t<script type=\"dojo/method\">\r\n\t\t\t// (Note that the second one is just shorthand for a dojo/aspect to postscript)\r\n\t\t\t// Since this is a connect in the declaration, we are actually connection to the method\r\n\t\t\t// in the _prototype_.\r\n\t\t\tarray.forEach(aspects, function(s){\r\n\t\t\t\tvar advice = s.getAttribute(\"data-dojo-advice\") || \"after\",\r\n\t\t\t\t\tmethod = s.getAttribute(\"data-dojo-method\") || \"postscript\",\r\n\t\t\t\t\tfunc = parser._functionFromScript(s);\r\n\t\t\t\taspect.after(wc.prototype, method, func, true);\r\n\t\t\t});\r\n\r\n\t\t\t// Handle legacy <script type=\"dojo/connect\" data-dojo-event=\"foo\">.\r\n\t\t\t// Remove for 2.0.\r\n\t\t\tarray.forEach(connects, function(s){\r\n\t\t\t\tvar evt = s.getAttribute(\"event\") || s.getAttribute(\"data-dojo-event\"),\r\n\t\t\t\t\tfunc = parser._functionFromScript(s);\r\n\t\t\t\taspect.after(wc.prototype, evt, func, true);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_FormMixin',[\r\n\t\"dojo/_base/array\", // array.every array.filter array.forEach array.indexOf array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\", // lang.hitch lang.isArray\r\n\t\"dojo/on\",\r\n\t\"dojo/window\" // winUtils.scrollIntoView\r\n], function(array, declare, kernel, lang, on, winUtils){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_FormMixin\r\n\r\n\treturn declare(\"dijit.form._FormMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for containers of form widgets (i.e. widgets that represent a single value\r\n\t\t//\t\tand can be children of a `<form>` node or `dijit/form/Form` widget)\r\n\t\t// description:\r\n\t\t//\t\tCan extract all the form widgets\r\n\t\t//\t\tvalues and combine them into a single javascript object, or alternately\r\n\t\t//\t\ttake such an object and set the values for all the contained\r\n\t\t//\t\tform widgets\r\n\r\n\t/*=====\r\n\t\t// value: Object\r\n\t\t//\t\tName/value hash for each child widget with a name and value.\r\n\t\t//\t\tChild widgets without names are not part of the hash.\r\n\t\t//\r\n\t\t//\t\tIf there are multiple child widgets w/the same name, value is an array,\r\n\t\t//\t\tunless they are radio buttons in which case value is a scalar (since only\r\n\t\t//\t\tone radio button can be checked at a time).\r\n\t\t//\r\n\t\t//\t\tIf a child widget's name is a dot separated list (like a.b.c.d), it's a nested structure.\r\n\t\t//\r\n\t\t//\t\tExample:\r\n\t\t//\t|\t{ name: \"John Smith\", interests: [\"sports\", \"movies\"] }\r\n\t=====*/\r\n\r\n\t\t// state: [readonly] String\r\n\t\t//\t\tWill be \"Error\" if one or more of the child widgets has an invalid value,\r\n\t\t//\t\t\"Incomplete\" if not all of the required child widgets are filled in.  Otherwise, \"\",\r\n\t\t//\t\twhich indicates that the form is ready to be submitted.\r\n\t\tstate: \"\",\r\n\r\n\t\t// TODO:\r\n\t\t//\t* Repeater\r\n\t\t//\t* better handling for arrays.  Often form elements have names with [] like\r\n\t\t//\t* people[3].sex (for a list of people [{name: Bill, sex: M}, ...])\r\n\r\n\r\n\t\t_getDescendantFormWidgets: function(/*dijit/_WidgetBase[]?*/ children){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns all form widget descendants, searching through non-form child widgets like BorderContainer\r\n\t\t\tvar res = [];\r\n\t\t\tarray.forEach(children || this.getChildren(), function(child){\r\n\t\t\t\tif(\"value\" in child){\r\n\t\t\t\t\tres.push(child);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tres = res.concat(this._getDescendantFormWidgets(child.getChildren()));\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\treturn res;\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\tarray.forEach(this._getDescendantFormWidgets(), function(widget){\r\n\t\t\t\tif(widget.reset){\r\n\t\t\t\t\twidget.reset();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tvalidate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns if the form is valid - same as isValid - but\r\n\t\t\t//\t\tprovides a few additional (ui-specific) features:\r\n\t\t\t//\r\n\t\t\t//\t\t1. it will highlight any sub-widgets that are not valid\r\n\t\t\t//\t\t2. it will call focus() on the first invalid sub-widget\r\n\t\t\tvar didFocus = false;\r\n\t\t\treturn array.every(array.map(this._getDescendantFormWidgets(), function(widget){\r\n\t\t\t\t// Need to set this so that \"required\" widgets get their\r\n\t\t\t\t// state set.\r\n\t\t\t\twidget._hasBeenBlurred = true;\r\n\t\t\t\tvar valid = widget.disabled || !widget.validate || widget.validate();\r\n\t\t\t\tif(!valid && !didFocus){\r\n\t\t\t\t\t// Set focus of the first non-valid widget\r\n\t\t\t\t\twinUtils.scrollIntoView(widget.containerNode || widget.domNode);\r\n\t\t\t\t\twidget.focus();\r\n\t\t\t\t\tdidFocus = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn valid;\r\n\t\t\t}), function(item){ return item; });\r\n\t\t},\r\n\r\n\t\tsetValues: function(val){\r\n\t\t\tkernel.deprecated(this.declaredClass+\"::setValues() is deprecated. Use set('value', val) instead.\", \"\", \"2.0\");\r\n\t\t\treturn this.set('value', val);\r\n\t\t},\r\n\t\t_setValueAttr: function(/*Object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFill in form values from according to an Object (in the format returned by get('value'))\r\n\r\n\t\t\t// generate map from name --> [list of widgets with that name]\r\n\t\t\tvar map = { };\r\n\t\t\tarray.forEach(this._getDescendantFormWidgets(), function(widget){\r\n\t\t\t\tif(!widget.name){ return; }\r\n\t\t\t\tvar entry = map[widget.name] || (map[widget.name] = [] );\r\n\t\t\t\tentry.push(widget);\r\n\t\t\t});\r\n\r\n\t\t\tfor(var name in map){\r\n\t\t\t\tif(!map.hasOwnProperty(name)){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar widgets = map[name],\t\t\t\t\t\t// array of widgets w/this name\r\n\t\t\t\t\tvalues = lang.getObject(name, false, obj);\t// list of values for those widgets\r\n\r\n\t\t\t\tif(values === undefined){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvalues = [].concat(values);\r\n\t\t\t\tif(typeof widgets[0].checked == 'boolean'){\r\n\t\t\t\t\t// for checkbox/radio, values is a list of which widgets should be checked\r\n\t\t\t\t\tarray.forEach(widgets, function(w){\r\n\t\t\t\t\t\tw.set('value', array.indexOf(values, w._get('value')) != -1);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else if(widgets[0].multiple){\r\n\t\t\t\t\t// it takes an array (e.g. multi-select)\r\n\t\t\t\t\twidgets[0].set('value', values);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// otherwise, values is a list of values to be assigned sequentially to each widget\r\n\t\t\t\t\tarray.forEach(widgets, function(w, i){\r\n\t\t\t\t\t\tw.set('value', values[i]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/***\r\n\t\t\t *\tTODO: code for plain input boxes (this shouldn't run for inputs that are part of widgets)\r\n\r\n\t\t\tarray.forEach(this.containerNode.elements, function(element){\r\n\t\t\t\tif(element.name == ''){return};\t// like \"continue\"\r\n\t\t\t\tvar namePath = element.name.split(\".\");\r\n\t\t\t\tvar myObj=obj;\r\n\t\t\t\tvar name=namePath[namePath.length-1];\r\n\t\t\t\tfor(var j=1,len2=namePath.length;j<len2;++j){\r\n\t\t\t\t\tvar p=namePath[j - 1];\r\n\t\t\t\t\t// repeater support block\r\n\t\t\t\t\tvar nameA=p.split(\"[\");\r\n\t\t\t\t\tif(nameA.length > 1){\r\n\t\t\t\t\t\tif(typeof(myObj[nameA[0]]) == \"undefined\"){\r\n\t\t\t\t\t\t\tmyObj[nameA[0]]=[ ];\r\n\t\t\t\t\t\t} // if\r\n\r\n\t\t\t\t\t\tnameIndex=parseInt(nameA[1]);\r\n\t\t\t\t\t\tif(typeof(myObj[nameA[0]][nameIndex]) == \"undefined\"){\r\n\t\t\t\t\t\t\tmyObj[nameA[0]][nameIndex] = { };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmyObj=myObj[nameA[0]][nameIndex];\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} // repeater support ends\r\n\r\n\t\t\t\t\tif(typeof(myObj[p]) == \"undefined\"){\r\n\t\t\t\t\t\tmyObj=undefined;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tmyObj=myObj[p];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof(myObj) == \"undefined\"){\r\n\t\t\t\t\treturn;\t\t// like \"continue\"\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof(myObj[name]) == \"undefined\" && this.ignoreNullValues){\r\n\t\t\t\t\treturn;\t\t// like \"continue\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// TODO: widget values (just call set('value', ...) on the widget)\r\n\r\n\t\t\t\t// TODO: maybe should call dojo.getNodeProp() instead\r\n\t\t\t\tswitch(element.type){\r\n\t\t\t\t\tcase \"checkbox\":\r\n\t\t\t\t\t\telement.checked = (name in myObj) &&\r\n\t\t\t\t\t\t\tarray.some(myObj[name], function(val){ return val == element.value; });\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"radio\":\r\n\t\t\t\t\t\telement.checked = (name in myObj) && myObj[name] == element.value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"select-multiple\":\r\n\t\t\t\t\t\telement.selectedIndex=-1;\r\n\t\t\t\t\t\tarray.forEach(element.options, function(option){\r\n\t\t\t\t\t\t\toption.selected = array.some(myObj[name], function(val){ return option.value == val; });\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"select-one\":\r\n\t\t\t\t\t\telement.selectedIndex=\"0\";\r\n\t\t\t\t\t\tarray.forEach(element.options, function(option){\r\n\t\t\t\t\t\t\toption.selected = option.value == myObj[name];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"hidden\":\r\n\t\t\t\t\tcase \"text\":\r\n\t\t\t\t\tcase \"textarea\":\r\n\t\t\t\t\tcase \"password\":\r\n\t\t\t\t\t\telement.value = myObj[name] || \"\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t*/\r\n\r\n\t\t\t// Note: no need to call this._set(\"value\", ...) as the child updates will trigger onChange events\r\n\t\t\t// which I am monitoring.\r\n\t\t},\r\n\r\n\t\tgetValues: function(){\r\n\t\t\tkernel.deprecated(this.declaredClass+\"::getValues() is deprecated. Use get('value') instead.\", \"\", \"2.0\");\r\n\t\t\treturn this.get('value');\r\n\t\t},\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns Object representing form values.   See description of `value` for details.\r\n\t\t\t// description:\r\n\r\n\t\t\t// The value is updated into this.value every time a child has an onChange event,\r\n\t\t\t// so in the common case this function could just return this.value.   However,\r\n\t\t\t// that wouldn't work when:\r\n\t\t\t//\r\n\t\t\t// 1. User presses return key to submit a form.  That doesn't fire an onchange event,\r\n\t\t\t// and even if it did it would come too late due to the defer(...) in _handleOnChange()\r\n\t\t\t//\r\n\t\t\t// 2. app for some reason calls this.get(\"value\") while the user is typing into a\r\n\t\t\t// form field.   Not sure if that case needs to be supported or not.\r\n\r\n\t\t\t// get widget values\r\n\t\t\tvar obj = { };\r\n\t\t\tarray.forEach(this._getDescendantFormWidgets(), function(widget){\r\n\t\t\t\tvar name = widget.name;\r\n\t\t\t\tif(!name || widget.disabled){ return; }\r\n\r\n\t\t\t\t// Single value widget (checkbox, radio, or plain <input> type widget)\r\n\t\t\t\tvar value = widget.get('value');\r\n\r\n\t\t\t\t// Store widget's value(s) as a scalar, except for checkboxes which are automatically arrays\r\n\t\t\t\tif(typeof widget.checked == 'boolean'){\r\n\t\t\t\t\tif(/Radio/.test(widget.declaredClass)){\r\n\t\t\t\t\t\t// radio button\r\n\t\t\t\t\t\tif(value !== false){\r\n\t\t\t\t\t\t\tlang.setObject(name, value, obj);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// give radio widgets a default of null\r\n\t\t\t\t\t\t\tvalue = lang.getObject(name, false, obj);\r\n\t\t\t\t\t\t\tif(value === undefined){\r\n\t\t\t\t\t\t\t\tlang.setObject(name, null, obj);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// checkbox/toggle button\r\n\t\t\t\t\t\tvar ary=lang.getObject(name, false, obj);\r\n\t\t\t\t\t\tif(!ary){\r\n\t\t\t\t\t\t\tary=[];\r\n\t\t\t\t\t\t\tlang.setObject(name, ary, obj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(value !== false){\r\n\t\t\t\t\t\t\tary.push(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar prev=lang.getObject(name, false, obj);\r\n\t\t\t\t\tif(typeof prev != \"undefined\"){\r\n\t\t\t\t\t\tif(lang.isArray(prev)){\r\n\t\t\t\t\t\t\tprev.push(value);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlang.setObject(name, [prev, value], obj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// unique name\r\n\t\t\t\t\t\tlang.setObject(name, value, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t/***\r\n\t\t\t * code for plain input boxes (see also domForm.formToObject, can we use that instead of this code?\r\n\t\t\t * but it doesn't understand [] notation, presumably)\r\n\t\t\tvar obj = { };\r\n\t\t\tarray.forEach(this.containerNode.elements, function(elm){\r\n\t\t\t\tif(!elm.name)\t{\r\n\t\t\t\t\treturn;\t\t// like \"continue\"\r\n\t\t\t\t}\r\n\t\t\t\tvar namePath = elm.name.split(\".\");\r\n\t\t\t\tvar myObj=obj;\r\n\t\t\t\tvar name=namePath[namePath.length-1];\r\n\t\t\t\tfor(var j=1,len2=namePath.length;j<len2;++j){\r\n\t\t\t\t\tvar nameIndex = null;\r\n\t\t\t\t\tvar p=namePath[j - 1];\r\n\t\t\t\t\tvar nameA=p.split(\"[\");\r\n\t\t\t\t\tif(nameA.length > 1){\r\n\t\t\t\t\t\tif(typeof(myObj[nameA[0]]) == \"undefined\"){\r\n\t\t\t\t\t\t\tmyObj[nameA[0]]=[ ];\r\n\t\t\t\t\t\t} // if\r\n\t\t\t\t\t\tnameIndex=parseInt(nameA[1]);\r\n\t\t\t\t\t\tif(typeof(myObj[nameA[0]][nameIndex]) == \"undefined\"){\r\n\t\t\t\t\t\t\tmyObj[nameA[0]][nameIndex] = { };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(typeof(myObj[nameA[0]]) == \"undefined\"){\r\n\t\t\t\t\t\tmyObj[nameA[0]] = { }\r\n\t\t\t\t\t} // if\r\n\r\n\t\t\t\t\tif(nameA.length == 1){\r\n\t\t\t\t\t\tmyObj=myObj[nameA[0]];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tmyObj=myObj[nameA[0]][nameIndex];\r\n\t\t\t\t\t} // if\r\n\t\t\t\t} // for\r\n\r\n\t\t\t\tif((elm.type != \"select-multiple\" && elm.type != \"checkbox\" && elm.type != \"radio\") || (elm.type == \"radio\" && elm.checked)){\r\n\t\t\t\t\tif(name == name.split(\"[\")[0]){\r\n\t\t\t\t\t\tmyObj[name]=elm.value;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// can not set value when there is no name\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(elm.type == \"checkbox\" && elm.checked){\r\n\t\t\t\t\tif(typeof(myObj[name]) == 'undefined'){\r\n\t\t\t\t\t\tmyObj[name]=[ ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmyObj[name].push(elm.value);\r\n\t\t\t\t}else if(elm.type == \"select-multiple\"){\r\n\t\t\t\t\tif(typeof(myObj[name]) == 'undefined'){\r\n\t\t\t\t\t\tmyObj[name]=[ ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var jdx=0,len3=elm.options.length; jdx<len3; ++jdx){\r\n\t\t\t\t\t\tif(elm.options[jdx].selected){\r\n\t\t\t\t\t\t\tmyObj[name].push(elm.options[jdx].value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // if\r\n\t\t\t\tname=undefined;\r\n\t\t\t}); // forEach\r\n\t\t\t***/\r\n\t\t\treturn obj;\r\n\t\t},\r\n\r\n\t\tisValid: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if all of the widgets are valid.\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0.  Use get(\"state\") instead.\r\n\r\n\t\t\treturn this.state == \"\";\r\n\t\t},\r\n\r\n\t\tonValidStateChange: function(/*Boolean*/ /*===== isValid =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function to connect to if you want to do something\r\n\t\t\t//\t\t(like disable/enable a submit button) when the valid\r\n\t\t\t//\t\tstate changes on the form as a whole.\r\n\t\t\t//\r\n\t\t\t//\t\tDeprecated.  Will be removed in 2.0.  Use watch(\"state\", ...) instead.\r\n\t\t},\r\n\r\n\t\t_getState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCompute what this.state should be based on state of children\r\n\t\t\tvar states = array.map(this._descendants, function(w){\r\n\t\t\t\treturn w.get(\"state\") || \"\";\r\n\t\t\t});\r\n\r\n\t\t\treturn array.indexOf(states, \"Error\") >= 0 ? \"Error\" :\r\n\t\t\t\tarray.indexOf(states, \"Incomplete\") >= 0 ? \"Incomplete\" : \"\";\r\n\t\t},\r\n\r\n\t\tdisconnectChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated method.   Applications no longer need to call this.   Remove for 2.0.\r\n\t\t},\r\n\r\n\t\tconnectChildren: function(/*Boolean*/ inStartup){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tYou can call this function directly, ex. in the event that you\r\n\t\t\t//\t\tprogrammatically add a widget to the form *after* the form has been\r\n\t\t\t//\t\tinitialized.\r\n\r\n\t\t\t// TODO: rename for 2.0\r\n\r\n\t\t\tthis._descendants = this._getDescendantFormWidgets();\r\n\r\n\t\t\t// To get notifications from children they need to be started.   Children didn't used to need to be started,\r\n\t\t\t// so for back-compat, start them here\r\n\t\t\tarray.forEach(this._descendants, function(child){\r\n\t\t\t\tif(!child._started){ child.startup(); }\r\n\t\t\t});\r\n\r\n\t\t\tif(!inStartup){\r\n\t\t\t\tthis._onChildChange();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onChildChange: function(/*String*/ attr){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when child's value or disabled state changes\r\n\r\n\t\t\t// The unit tests expect state update to be synchronous, so update it immediately.\r\n\t\t\tif(!attr || attr == \"state\" || attr == \"disabled\"){\r\n\t\t\t\tthis._set(\"state\", this._getState());\r\n\t\t\t}\r\n\r\n\t\t\t// Use defer() to collapse value changes in multiple children into a single\r\n\t\t\t// update to my value.   Multiple updates will occur on:\r\n\t\t\t//\t1. Form.set()\r\n\t\t\t//\t2. Form.reset()\r\n\t\t\t//\t3. user selecting a radio button (which will de-select another radio button,\r\n\t\t\t//\t\t causing two onChange events)\r\n\t\t\tif(!attr || attr == \"value\" || attr == \"disabled\" || attr == \"checked\"){\r\n\t\t\t\tif(this._onChangeDelayTimer){\r\n\t\t\t\t\tthis._onChangeDelayTimer.remove();\r\n\t\t\t\t}\r\n\t\t\t\tthis._onChangeDelayTimer = this.defer(function(){\r\n\t\t\t\t\tdelete this._onChangeDelayTimer;\r\n\t\t\t\t\tthis._set(\"value\", this.get(\"value\"));\r\n\t\t\t\t}, 10);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Set initial this.value and this.state.   Don't emit watch() notifications.\r\n\t\t\tthis._descendants = this._getDescendantFormWidgets();\r\n\t\t\tthis.value = this.get(\"value\");\r\n\t\t\tthis.state = this._getState();\r\n\r\n\t\t\t// Initialize value and valid/invalid state tracking.\r\n\t\t\tvar self = this;\r\n\t\t\tthis.own(\r\n\t\t\t\ton(\r\n\t\t\t\t\tthis.containerNode,\r\n\t\t\t\t\t\"attrmodified-state, attrmodified-disabled, attrmodified-value, attrmodified-checked\",\r\n\t\t\t\t\tfunction(evt){\r\n\t\t\t\t\t\tif(evt.target == self.domNode){\r\n\t\t\t\t\t\t\treturn;\t// ignore events that I fire on myself because my children changed\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tself._onChildChange(evt.type.replace(\"attrmodified-\", \"\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\t// Make state change call onValidStateChange(), will be removed in 2.0\r\n\t\t\tthis.watch(\"state\", function(attr, oldVal, newVal){ this.onValidStateChange(newVal == \"\"); });\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\r\n\t});\r\n});\r\n\ndefine('dijit/_DialogMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./a11y\"\t// _getTabNavigable\r\n], function(declare, a11y){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_DialogMixin\r\n\r\n\treturn declare(\"dijit._DialogMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tThis provides functions useful to Dialog and TooltipDialog\r\n\r\n\t\t// actionBarTemplate: String\r\n\t\t//\t\tHTML snippet to show the action bar (gray bar with OK/cancel buttons).\r\n\t\t//\t\tBlank by default, but used by ConfirmDialog/ConfirmTooltipDialog subclasses.\r\n\t\tactionBarTemplate: \"\",\r\n\r\n\t\texecute: function(/*Object*/ /*===== formContents =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when the user hits the submit button.\r\n\t\t\t//\t\tOverride this method to handle Dialog execution.\r\n\t\t\t// description:\r\n\t\t\t//\t\tAfter the user has pressed the submit button, the Dialog\r\n\t\t\t//\t\tfirst calls onExecute() to notify the container to hide the\r\n\t\t\t//\t\tdialog and restore focus to wherever it used to be.\r\n\t\t\t//\r\n\t\t\t//\t\t*Then* this method is called.\r\n\t\t\t// type:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonCancel: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when user has pressed the Dialog's cancel button, to notify container.\r\n\t\t\t// description:\r\n\t\t\t//\t\tDeveloper shouldn't override or connect to this method;\r\n\t\t\t//\t\tit's a private communication device between the TooltipDialog\r\n\t\t\t//\t\tand the thing that opened it (ex: `dijit/form/DropDownButton`)\r\n\t\t\t// type:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tonExecute: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when user has pressed the dialog's OK button, to notify container.\r\n\t\t\t// description:\r\n\t\t\t//\t\tDeveloper shouldn't override or connect to this method;\r\n\t\t\t//\t\tit's a private communication device between the TooltipDialog\r\n\t\t\t//\t\tand the thing that opened it (ex: `dijit/form/DropDownButton`)\r\n\t\t\t// type:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\t_onSubmit: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when user hits submit button\r\n\t\t\t// type:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.onExecute();\t// notify container that we are about to execute\r\n\t\t\tthis.execute(this.get('value'));\r\n\t\t},\r\n\r\n\t\t_getFocusItems: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds focusable items in dialog,\r\n\t\t\t//\t\tand sets this._firstFocusItem and this._lastFocusItem\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar elems = a11y._getTabNavigable(this.domNode);\r\n\t\t\tthis._firstFocusItem = elems.lowest || elems.first || this.closeButtonNode || this.domNode;\r\n\t\t\tthis._lastFocusItem = elems.last || elems.highest || this._firstFocusItem;\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/DialogUnderlay',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/aspect\", // aspect.after\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/on\",\r\n\t\"dojo/window\", // winUtils.getBox, winUtils.get\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./BackgroundIframe\",\r\n\t\"./Viewport\",\r\n\t\"./main\" // for back-compat, exporting dijit._underlay (remove in 2.0)\r\n], function(declare, lang, aspect, domAttr, domStyle, on,\r\n\t\t\twinUtils, _Widget, _TemplatedMixin, BackgroundIframe, Viewport, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/DialogUnderlay\r\n\r\n\tvar DialogUnderlay = declare(\"dijit.DialogUnderlay\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA component used to block input behind a `dijit/Dialog`.\r\n\t\t//\r\n\t\t//\t\tNormally this class should not be instantiated directly, but rather shown and hidden via\r\n\t\t//\t\tDialogUnderlay.show() and DialogUnderlay.hide().  And usually the module is not accessed directly\r\n\t\t//\t\tat all, since the underlay is shown and hidden by Dialog.DialogLevelManager.\r\n\t\t//\r\n\t\t//\t\tThe underlay itself can be styled based on and id:\r\n\t\t//\t|\t#myDialog_underlay { background-color:red; }\r\n\t\t//\r\n\t\t//\t\tIn the case of `dijit.Dialog`, this id is based on the id of the Dialog,\r\n\t\t//\t\tsuffixed with _underlay.\r\n\r\n\t\t// Template has two divs; outer div is used for fade-in/fade-out, and also to hold background iframe.\r\n\t\t// Inner div has opacity specified in CSS file.\r\n\t\ttemplateString: \"<div class='dijitDialogUnderlayWrapper'><div class='dijitDialogUnderlay' tabIndex='-1' data-dojo-attach-point='node'></div></div>\",\r\n\r\n\t\t// Parameters on creation or updatable later\r\n\r\n\t\t// dialogId: String\r\n\t\t//\t\tId of the dialog.... DialogUnderlay's id is based on this id\r\n\t\tdialogId: \"\",\r\n\r\n\t\t// class: String\r\n\t\t//\t\tThis class name is used on the DialogUnderlay node, in addition to dijitDialogUnderlay\r\n\t\t\"class\": \"\",\r\n\r\n\t\t// This will get overwritten as soon as show() is call, but leave an empty array in case hide() or destroy()\r\n\t\t// is called first.   The array is shared between instances but that's OK because we never write into it.\r\n\t\t_modalConnects: [],\r\n\r\n\t\t_setDialogIdAttr: function(id){\r\n\t\t\tdomAttr.set(this.node, \"id\", id + \"_underlay\");\r\n\t\t\tthis._set(\"dialogId\", id);\r\n\t\t},\r\n\r\n\t\t_setClassAttr: function(clazz){\r\n\t\t\tthis.node.className = \"dijitDialogUnderlay \" + clazz;\r\n\t\t\tthis._set(\"class\", clazz);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// Append the underlay to the body\r\n\t\t\tthis.ownerDocumentBody.appendChild(this.domNode);\r\n\r\n\t\t\tthis.own(on(this.domNode, \"keydown\", lang.hitch(this, \"_onKeyDown\")));\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the background to the size of the viewport\r\n\t\t\t//\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets the background to the size of the viewport (rather than the size\r\n\t\t\t//\t\tof the document) since we need to cover the whole browser window, even\r\n\t\t\t//\t\tif the document is only a few lines long.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar is = this.node.style,\r\n\t\t\t\tos = this.domNode.style;\r\n\r\n\t\t\t// hide the background temporarily, so that the background itself isn't\r\n\t\t\t// causing scrollbars to appear (might happen when user shrinks browser\r\n\t\t\t// window and then we are called to resize)\r\n\t\t\tos.display = \"none\";\r\n\r\n\t\t\t// then resize and show\r\n\t\t\tvar viewport = winUtils.getBox(this.ownerDocument);\r\n\t\t\tos.top = viewport.t + \"px\";\r\n\t\t\tos.left = viewport.l + \"px\";\r\n\t\t\tis.width = viewport.w + \"px\";\r\n\t\t\tis.height = viewport.h + \"px\";\r\n\t\t\tos.display = \"block\";\r\n\t\t},\r\n\r\n\t\tshow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tShow the dialog underlay\r\n\t\t\tthis.domNode.style.display = \"block\";\r\n\t\t\tthis.open = true;\r\n\t\t\tthis.layout();\r\n\t\t\tthis.bgIframe = new BackgroundIframe(this.domNode);\r\n\r\n\t\t\tvar win = winUtils.get(this.ownerDocument);\r\n\t\t\tthis._modalConnects = [\r\n\t\t\t\tViewport.on(\"resize\", lang.hitch(this, \"layout\")),\r\n\t\t\t\ton(win, \"scroll\", lang.hitch(this, \"layout\"))\r\n\t\t\t];\r\n\r\n\t\t},\r\n\r\n\t\thide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHides the dialog underlay\r\n\r\n\t\t\tthis.bgIframe.destroy();\r\n\t\t\tdelete this.bgIframe;\r\n\t\t\tthis.domNode.style.display = \"none\";\r\n\t\t\twhile(this._modalConnects.length){ (this._modalConnects.pop()).remove(); }\r\n\t\t\tthis.open = false;\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\twhile(this._modalConnects.length){ (this._modalConnects.pop()).remove(); }\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tExtension point so Dialog can monitor keyboard events on the underlay.\r\n\t\t}\r\n\t});\r\n\r\n\tDialogUnderlay.show = function(/*Object*/ attrs, /*Number*/ zIndex){\r\n\t\t// summary:\r\n\t\t//\t\tDisplay the underlay with the given attributes set.  If the underlay is already displayed,\r\n\t\t//\t\tthen adjust it's attributes as specified.\r\n\t\t// attrs:\r\n\t\t//\t\tThe parameters to create DialogUnderlay with.\r\n\t\t// zIndex:\r\n\t\t//\t\tzIndex of the underlay\r\n\r\n\t\tvar underlay = DialogUnderlay._singleton;\r\n\t\tif(!underlay || underlay._destroyed){\r\n\t\t\tunderlay = dijit._underlay = DialogUnderlay._singleton = new DialogUnderlay(attrs);\r\n\t\t}else{\r\n\t\t\tif(attrs){ underlay.set(attrs); }\r\n\t\t}\r\n\t\tdomStyle.set(underlay.domNode, 'zIndex', zIndex);\r\n\t\tif(!underlay.open){\r\n\t\t\tunderlay.show();\r\n\t\t}\r\n\t};\r\n\r\n\tDialogUnderlay.hide = function(){\r\n\t\t// summary:\r\n\t\t//\t\tHide the underlay.\r\n\r\n\t\t// Guard code in case the underlay widget has already been destroyed\r\n\t\t// because we are being called during page unload (when all widgets are destroyed)\r\n\t\tvar underlay = DialogUnderlay._singleton;\r\n\t\tif(underlay && !underlay._destroyed){\r\n\t\t\tunderlay.hide();\r\n\t\t}\r\n\t};\r\n\r\n\treturn DialogUnderlay;\r\n});\r\n\ndefine('dijit/layout/utils',[\r\n\t\"dojo/_base/array\", // array.filter array.forEach\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove\r\n\t\"dojo/dom-geometry\", // domGeometry.marginBox\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/_base/lang\" // lang.mixin, lang.setObject\r\n], function(array, domClass, domGeometry, domStyle, lang){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/utils\r\n\r\n\tfunction capitalize(word){\r\n\t\treturn word.substring(0,1).toUpperCase() + word.substring(1);\r\n\t}\r\n\r\n\tfunction size(widget, dim){\r\n\t\t// size the child\r\n\t\tvar newSize = widget.resize ? widget.resize(dim) : domGeometry.setMarginBox(widget.domNode, dim);\r\n\r\n\t\t// record child's size\r\n\t\tif(newSize){\r\n\t\t\t// if the child returned it's new size then use that\r\n\t\t\tlang.mixin(widget, newSize);\r\n\t\t}else{\r\n\t\t\t// otherwise, call getMarginBox(), but favor our own numbers when we have them.\r\n\t\t\t// the browser lies sometimes\r\n\t\t\tlang.mixin(widget, domGeometry.getMarginBox(widget.domNode));\r\n\t\t\tlang.mixin(widget, dim);\r\n\t\t}\r\n\t}\r\n\r\n\tvar utils = {\r\n\t\t// summary:\r\n\t\t//\t\tUtility functions for doing layout\r\n\r\n\t\tmarginBox2contentBox: function(/*DomNode*/ node, /*Object*/ mb){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGiven the margin-box size of a node, return its content box size.\r\n\t\t\t//\t\tFunctions like domGeometry.contentBox() but is more reliable since it doesn't have\r\n\t\t\t//\t\tto wait for the browser to compute sizes.\r\n\t\t\tvar cs = domStyle.getComputedStyle(node);\r\n\t\t\tvar me = domGeometry.getMarginExtents(node, cs);\r\n\t\t\tvar pb = domGeometry.getPadBorderExtents(node, cs);\r\n\t\t\treturn {\r\n\t\t\t\tl: domStyle.toPixelValue(node, cs.paddingLeft),\r\n\t\t\t\tt: domStyle.toPixelValue(node, cs.paddingTop),\r\n\t\t\t\tw: mb.w - (me.w + pb.w),\r\n\t\t\t\th: mb.h - (me.h + pb.h)\r\n\t\t\t};\r\n\t\t},\r\n\r\n\r\n\t\tlayoutChildren: function(/*DomNode*/ container, /*Object*/ dim, /*Widget[]*/ children,\r\n\t\t\t\t/*String?*/ changedRegionId, /*Number?*/ changedRegionSize){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLayout a bunch of child dom nodes within a parent dom node\r\n\t\t\t// container:\r\n\t\t\t//\t\tparent node\r\n\t\t\t// dim:\r\n\t\t\t//\t\t{l, t, w, h} object specifying dimensions of container into which to place children\r\n\t\t\t// children:\r\n\t\t\t//\t\tAn array of Widgets or at least objects containing:\r\n\t\t\t//\r\n\t\t\t//\t\t- domNode: pointer to DOM node to position\r\n\t\t\t//\t\t- region or layoutAlign: position to place DOM node\r\n\t\t\t//\t\t- resize(): (optional) method to set size of node\r\n\t\t\t//\t\t- id: (optional) Id of widgets, referenced from resize object, below.\r\n\t\t\t//\r\n\t\t\t//\t\tThe widgets in this array should be ordered according to how they should be laid out\r\n\t\t\t//\t\t(each element will be processed in order, and take up as much remaining space as needed),\r\n\t\t\t//\t\twith the center widget last.\r\n\t\t\t// changedRegionId:\r\n\t\t\t//\t\tIf specified, the slider for the region with the specified id has been dragged, and thus\r\n\t\t\t//\t\tthe region's height or width should be adjusted according to changedRegionSize\r\n\t\t\t// changedRegionSize:\r\n\t\t\t//\t\tSee changedRegionId.\r\n\r\n\t\t\t// copy dim because we are going to modify it\r\n\t\t\tdim = lang.mixin({}, dim);\r\n\r\n\t\t\tdomClass.add(container, \"dijitLayoutContainer\");\r\n\r\n\t\t\t// Move \"client\" elements to the end of the array for layout.  a11y dictates that the author\r\n\t\t\t// needs to be able to put them in the document in tab-order, but this algorithm requires that\r\n\t\t\t// client be last.    TODO: remove for 2.0, all dijit client code already sends children as last item.\r\n\t\t\tchildren = array.filter(children, function(item){ return item.region != \"center\" && item.layoutAlign != \"client\"; })\r\n\t\t\t\t.concat(array.filter(children, function(item){ return item.region == \"center\" || item.layoutAlign == \"client\"; }));\r\n\r\n\t\t\t// set positions/sizes\r\n\t\t\tarray.forEach(children, function(child){\r\n\t\t\t\tvar elm = child.domNode,\r\n\t\t\t\t\tpos = (child.region || child.layoutAlign);\r\n\t\t\t\tif(!pos){\r\n\t\t\t\t\tthrow new Error(\"No region setting for \" + child.id)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set elem to upper left corner of unused space; may move it later\r\n\t\t\t\tvar elmStyle = elm.style;\r\n\t\t\t\telmStyle.left = dim.l+\"px\";\r\n\t\t\t\telmStyle.top = dim.t+\"px\";\r\n\t\t\t\telmStyle.position = \"absolute\";\r\n\r\n\t\t\t\tdomClass.add(elm, \"dijitAlign\" + capitalize(pos));\r\n\r\n\t\t\t\t// Size adjustments to make to this child widget\r\n\t\t\t\tvar sizeSetting = {};\r\n\r\n\t\t\t\t// Check for optional size adjustment due to splitter drag (height adjustment for top/bottom align\r\n\t\t\t\t// panes and width adjustment for left/right align panes.\r\n\t\t\t\tif(changedRegionId && changedRegionId == child.id){\r\n\t\t\t\t\tsizeSetting[child.region == \"top\" || child.region == \"bottom\" ? \"h\" : \"w\"] = changedRegionSize;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(pos == \"leading\"){\r\n\t\t\t\t\tpos = child.isLeftToRight() ? \"left\" : \"right\";\r\n\t\t\t\t}\r\n\t\t\t\tif(pos == \"trailing\"){\r\n\t\t\t\t\tpos = child.isLeftToRight() ? \"right\" : \"left\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set size && adjust record of remaining space.\r\n\t\t\t\t// note that setting the width of a <div> may affect its height.\r\n\t\t\t\tif(pos == \"top\" || pos == \"bottom\"){\r\n\t\t\t\t\tsizeSetting.w = dim.w;\r\n\t\t\t\t\tsize(child, sizeSetting);\r\n\t\t\t\t\tdim.h -= child.h;\r\n\t\t\t\t\tif(pos == \"top\"){\r\n\t\t\t\t\t\tdim.t += child.h;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\telmStyle.top = dim.t + dim.h + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(pos == \"left\" || pos == \"right\"){\r\n\t\t\t\t\tsizeSetting.h = dim.h;\r\n\t\t\t\t\tsize(child, sizeSetting);\r\n\t\t\t\t\tdim.w -= child.w;\r\n\t\t\t\t\tif(pos == \"left\"){\r\n\t\t\t\t\t\tdim.l += child.w;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\telmStyle.left = dim.l + dim.w + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(pos == \"client\" || pos == \"center\"){\r\n\t\t\t\t\tsize(child, dim);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tlang.setObject(\"dijit.layout.utils\", utils);\t// remove for 2.0\r\n\r\n\treturn utils;\r\n});\r\n\ndefine('dijit/layout/_ContentPaneResizeMixin',[\r\n\t\"dojo/_base/array\", // array.filter array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.contains domClass.toggle\r\n\t\"dojo/dom-geometry\", // domGeometry.contentBox domGeometry.marginBox\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"dojo/query\", // query\r\n\t\"../registry\", // registry.byId\r\n\t\"../Viewport\",\r\n\t\"./utils\" // marginBox2contextBox\r\n], function(array, declare, domClass, domGeometry, domStyle, lang, query,\r\n\t\t\tregistry, Viewport, layoutUtils){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/_ContentPaneResizeMixin\r\n\r\n\treturn declare(\"dijit.layout._ContentPaneResizeMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tResize() functionality of ContentPane.   If there's a single layout widget\r\n\t\t//\t\tchild then it will call resize() with the same dimensions as the ContentPane.\r\n\t\t//\t\tOtherwise just calls resize on each child.\r\n\t\t//\r\n\t\t//\t\tAlso implements basic startup() functionality, where starting the parent\r\n\t\t//\t\twill start the children\r\n\r\n\t\t// doLayout: Boolean\r\n\t\t//\t\t- false - don't adjust size of children\r\n\t\t//\t\t- true - if there is a single visible child widget, set it's size to however big the ContentPane is\r\n\t\tdoLayout: true,\r\n\r\n\t\t// isLayoutContainer: [protected] Boolean\r\n\t\t//\t\tIndicates that this widget will call resize() on it's child widgets\r\n\t\t//\t\twhen they become visible.\r\n\t\tisLayoutContainer: true,\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSee `dijit/layout/_LayoutWidget.startup()` for description.\r\n\t\t\t//\t\tAlthough ContentPane doesn't extend _LayoutWidget, it does implement\r\n\t\t\t//\t\tthe same API.\r\n\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar parent = this.getParent();\r\n\t\t\tthis._childOfLayoutWidget = parent && parent.isLayoutContainer;\r\n\r\n\t\t\t// I need to call resize() on my child/children (when I become visible), unless\r\n\t\t\t// I'm the child of a layout widget in which case my parent will call resize() on me and I'll do it then.\r\n\t\t\tthis._needLayout = !this._childOfLayoutWidget;\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this._isShown()){\r\n\t\t\t\tthis._onShow();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this._childOfLayoutWidget){\r\n\t\t\t\t// Since my parent isn't a layout container, and my style *may be* width=height=100%\r\n\t\t\t\t// or something similar (either set directly or via a CSS class),\r\n\t\t\t\t// monitor when viewport size changes so that I can re-layout.\r\n\t\t\t\t// This is more for subclasses of ContentPane than ContentPane itself, although it\r\n\t\t\t\t// could be useful for a ContentPane if it has a single child widget inheriting ContentPane's size.\r\n\t\t\t\tthis.own(Viewport.on(\"resize\", lang.hitch(this, \"resize\")));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_checkIfSingleChild: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTest if we have exactly one visible widget as a child,\r\n\t\t\t//\t\tand if so assume that we are a container for that widget,\r\n\t\t\t//\t\tand should propagate startup() and resize() calls to it.\r\n\t\t\t//\t\tSkips over things like data stores since they aren't visible.\r\n\r\n\t\t\tif(!this.doLayout){ return; }\r\n\r\n\t\t\tvar candidateWidgets = [],\r\n\t\t\t\totherVisibleNodes = false;\r\n\r\n\t\t\tquery(\"> *\", this.containerNode).some(function(node){\r\n\t\t\t\tvar widget = registry.byNode(node);\r\n\t\t\t\tif(widget && widget.resize){\r\n\t\t\t\t\tcandidateWidgets.push(widget);\r\n\t\t\t\t}else if(!/script|link|style/i.test(node.nodeName) && node.offsetHeight){\r\n\t\t\t\t\totherVisibleNodes = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._singleChild = candidateWidgets.length == 1 && !otherVisibleNodes ?\r\n\t\t\t\tcandidateWidgets[0] : null;\r\n\r\n\t\t\t// So we can set overflow: hidden to avoid a safari bug w/scrollbars showing up (#9449)\r\n\t\t\tdomClass.toggle(this.containerNode, this.baseClass + \"SingleChild\", !!this._singleChild);\r\n\t\t},\r\n\r\n\t\tresize: function(changeSize, resultSize){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSee `dijit/layout/_LayoutWidget.resize()` for description.\r\n\t\t\t//\t\tAlthough ContentPane doesn't extend _LayoutWidget, it does implement\r\n\t\t\t//\t\tthe same API.\r\n\r\n\t\t\tthis._resizeCalled = true;\r\n\r\n\t\t\tthis._scheduleLayout(changeSize, resultSize);\r\n\t\t},\r\n\r\n\t\t_scheduleLayout: function(changeSize, resultSize){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize myself, and call resize() on each of my child layout widgets, either now\r\n\t\t\t//\t\t(if I'm currently visible) or when I become visible\r\n\t\t\tif(this._isShown()){\r\n\t\t\t\tthis._layout(changeSize, resultSize);\r\n\t\t\t}else{\r\n\t\t\t\tthis._needLayout = true;\r\n\t\t\t\tthis._changeSize = changeSize;\r\n\t\t\t\tthis._resultSize = resultSize;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_layout: function(changeSize, resultSize){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize myself according to optional changeSize/resultSize parameters, like a layout widget.\r\n\t\t\t//\t\tAlso, since I am an isLayoutContainer widget, each of my children expects me to\r\n\t\t\t//\t\tcall resize() or layout() on it.\r\n\t\t\t//\r\n\t\t\t//\t\tShould be called on initialization and also whenever we get new content\r\n\t\t\t//\t\t(from an href, or from set('content', ...))... but deferred until\r\n\t\t\t//\t\tthe ContentPane is visible\r\n\r\n\t\t\tdelete this._needLayout;\r\n\r\n\t\t\t// For the TabContainer --> BorderContainer --> ContentPane case, _onShow() is\r\n\t\t\t// never called directly, so resize() is our trigger to do the initial href download (see [20099]).\r\n\t\t\t// However, don't load href for closed TitlePanes.\r\n\t\t\tif(!this._wasShown && this.open !== false){\r\n\t\t\t\tthis._onShow();\r\n\t\t\t}\r\n\r\n\t\t\t// Set margin box size, unless it wasn't specified, in which case use current size.\r\n\t\t\tif(changeSize){\r\n\t\t\t\tdomGeometry.setMarginBox(this.domNode, changeSize);\r\n\t\t\t}\r\n\r\n\t\t\t// Compute content box size of containerNode in case we [later] need to size our single child.\r\n\t\t\tvar cn = this.containerNode;\r\n\t\t\tif(cn === this.domNode){\r\n\t\t\t\t// If changeSize or resultSize was passed to this method and this.containerNode ==\r\n\t\t\t\t// this.domNode then we can compute the content-box size without querying the node,\r\n\t\t\t\t// which is more reliable (similar to LayoutWidget.resize) (see for example #9449).\r\n\t\t\t\tvar mb = resultSize || {};\r\n\t\t\t\tlang.mixin(mb, changeSize || {}); // changeSize overrides resultSize\r\n\t\t\t\tif(!(\"h\" in mb) || !(\"w\" in mb)){\r\n\t\t\t\t\tmb = lang.mixin(domGeometry.getMarginBox(cn), mb); // just use domGeometry.setMarginBox() to fill in missing values\r\n\t\t\t\t}\r\n\t\t\t\tthis._contentBox = layoutUtils.marginBox2contentBox(cn, mb);\r\n\t\t\t}else{\r\n\t\t\t\tthis._contentBox = domGeometry.getContentBox(cn);\r\n\t\t\t}\r\n\r\n\t\t\tthis._layoutChildren();\r\n\t\t},\r\n\r\n\t\t_layoutChildren: function(){\r\n\t\t\t// Call _checkIfSingleChild() again in case app has manually mucked w/the content\r\n\t\t\t// of the ContentPane (rather than changing it through the set(\"content\", ...) API.\r\n\t\t\tthis._checkIfSingleChild();\r\n\r\n\t\t\tif(this._singleChild && this._singleChild.resize){\r\n\t\t\t\tvar cb = this._contentBox || domGeometry.getContentBox(this.containerNode);\r\n\r\n\t\t\t\t// note: if widget has padding this._contentBox will have l and t set,\r\n\t\t\t\t// but don't pass them to resize() or it will doubly-offset the child\r\n\t\t\t\tthis._singleChild.resize({w: cb.w, h: cb.h});\r\n\t\t\t}else{\r\n\t\t\t\t// All my child widgets are independently sized (rather than matching my size),\r\n\t\t\t\t// but I still need to call resize() on each child to make it layout.\r\n\t\t\t\tvar children = this.getChildren(),\r\n\t\t\t\t\twidget,\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\twhile(widget = children[i++]){\r\n\t\t\t\t\tif(widget.resize){\r\n\t\t\t\t\t\twidget.resize();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_isShown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if the content is currently shown.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf I am a child of a layout widget then it actually returns true if I've ever been visible,\r\n\t\t\t//\t\tnot whether I'm currently visible, since that's much faster than tracing up the DOM/widget\r\n\t\t\t//\t\ttree every call, and at least solves the performance problem on page load by deferring loading\r\n\t\t\t//\t\thidden ContentPanes until they are first shown\r\n\r\n\t\t\tif(this._childOfLayoutWidget){\r\n\t\t\t\t// If we are TitlePane, etc - we return that only *IF* we've been resized\r\n\t\t\t\tif(this._resizeCalled && \"open\" in this){\r\n\t\t\t\t\treturn this.open;\r\n\t\t\t\t}\r\n\t\t\t\treturn this._resizeCalled;\r\n\t\t\t}else if(\"open\" in this){\r\n\t\t\t\treturn this.open;\t\t// for TitlePane, etc.\r\n\t\t\t}else{\r\n\t\t\t\tvar node = this.domNode, parent = this.domNode.parentNode;\r\n\t\t\t\treturn (node.style.display != 'none') && (node.style.visibility != 'hidden') && !domClass.contains(node, \"dijitHidden\") &&\r\n\t\t\t\t\tparent && parent.style && (parent.style.display != 'none');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onShow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the ContentPane is made visible\r\n\t\t\t// description:\r\n\t\t\t//\t\tFor a plain ContentPane, this is called on initialization, from startup().\r\n\t\t\t//\t\tIf the ContentPane is a hidden pane of a TabContainer etc., then it's\r\n\t\t\t//\t\tcalled whenever the pane is made visible.\r\n\t\t\t//\r\n\t\t\t//\t\tDoes layout/resize of child widget(s)\r\n\r\n\t\t\t// Need to keep track of whether ContentPane has been shown (which is different than\r\n\t\t\t// whether or not it's currently visible).\r\n\t\t\tthis._wasShown = true;\r\n\r\n\t\t\tif(this._needLayout){\r\n\t\t\t\t// If a layout has been scheduled for when we become visible, do it now\r\n\t\t\t\tthis._layout(this._changeSize, this._resultSize);\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/layout/ContentPane',[\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\", // lang.mixin lang.delegate lang.hitch lang.isFunction lang.isObject\r\n\t\"../_Widget\",\r\n\t\"../_Container\",\r\n\t\"./_ContentPaneResizeMixin\",\r\n\t\"dojo/string\", // string.substitute\r\n\t\"dojo/html\", // html._ContentSetter\r\n\t\"dojo/i18n!../nls/loading\",\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/Deferred\", // Deferred\r\n\t\"dojo/dom\", // dom.byId\r\n\t\"dojo/dom-attr\", // domAttr.attr\r\n\t\"dojo/dom-construct\", // empty()\r\n\t\"dojo/_base/xhr\", // xhr.get\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/when\"\r\n], function(kernel, lang, _Widget, _Container, _ContentPaneResizeMixin, string, html, nlsLoading, array, declare,\r\n\t\t\tDeferred, dom, domAttr, domConstruct, xhr, i18n, when){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/ContentPane\r\n\r\n\treturn declare(\"dijit.layout.ContentPane\", [_Widget, _Container, _ContentPaneResizeMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA widget containing an HTML fragment, specified inline\r\n\t\t//\t\tor by uri.  Fragment may include widgets.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tThis widget embeds a document fragment in the page, specified\r\n\t\t//\t\teither by uri, javascript generated markup or DOM reference.\r\n\t\t//\t\tAny widgets within this content are instantiated and managed,\r\n\t\t//\t\tbut laid out according to the HTML structure.  Unlike IFRAME,\r\n\t\t//\t\tContentPane embeds a document fragment as would be found\r\n\t\t//\t\tinside the BODY tag of a full HTML document.  It should not\r\n\t\t//\t\tcontain the HTML, HEAD, or BODY tags.\r\n\t\t//\t\tFor more advanced functionality with scripts and\r\n\t\t//\t\tstylesheets, see dojox/layout/ContentPane.  This widget may be\r\n\t\t//\t\tused stand alone or as a base class for other widgets.\r\n\t\t//\t\tContentPane is useful as a child of other layout containers\r\n\t\t//\t\tsuch as BorderContainer or TabContainer, but note that those\r\n\t\t//\t\twidgets can contain any widget as a child.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tSome quick samples:\r\n\t\t//\t\tTo change the innerHTML:\r\n\t\t// |\t\tcp.set('content', '<b>new content</b>')`\r\n\t\t//\t\tOr you can send it a NodeList:\r\n\t\t// |\t\tcp.set('content', dojo.query('div [class=selected]', userSelection))\r\n\t\t//\t\tTo do an ajax update:\r\n\t\t// |\t\tcp.set('href', url)\r\n\r\n\t\t// href: String\r\n\t\t//\t\tThe href of the content that displays now.\r\n\t\t//\t\tSet this at construction if you want to load data externally when the\r\n\t\t//\t\tpane is shown.  (Set preload=true to load it immediately.)\r\n\t\t//\t\tChanging href after creation doesn't have any effect; Use set('href', ...);\r\n\t\thref: \"\",\r\n\r\n\t\t// content: String|DomNode|NodeList|dijit/_Widget\r\n\t\t//\t\tThe innerHTML of the ContentPane.\r\n\t\t//\t\tNote that the initialization parameter / argument to set(\"content\", ...)\r\n\t\t//\t\tcan be a String, DomNode, Nodelist, or _Widget.\r\n\t\tcontent: \"\",\r\n\r\n\t\t// extractContent: Boolean\r\n\t\t//\t\tExtract visible content from inside of `<body> .... </body>`.\r\n\t\t//\t\tI.e., strip `<html>` and `<head>` (and it's contents) from the href\r\n\t\textractContent: false,\r\n\r\n\t\t// parseOnLoad: Boolean\r\n\t\t//\t\tParse content and create the widgets, if any.\r\n\t\tparseOnLoad: true,\r\n\r\n\t\t// parserScope: String\r\n\t\t//\t\tFlag passed to parser.  Root for attribute names to search for.   If scopeName is dojo,\r\n\t\t//\t\twill search for data-dojo-type (or dojoType).  For backwards compatibility\r\n\t\t//\t\treasons defaults to dojo._scopeName (which is \"dojo\" except when\r\n\t\t//\t\tmulti-version support is used, when it will be something like dojo16, dojo20, etc.)\r\n\t\tparserScope: kernel._scopeName,\r\n\r\n\t\t// preventCache: Boolean\r\n\t\t//\t\tPrevent caching of data from href's by appending a timestamp to the href.\r\n\t\tpreventCache: false,\r\n\r\n\t\t// preload: Boolean\r\n\t\t//\t\tForce load of data on initialization even if pane is hidden.\r\n\t\tpreload: false,\r\n\r\n\t\t// refreshOnShow: Boolean\r\n\t\t//\t\tRefresh (re-download) content when pane goes from hidden to shown\r\n\t\trefreshOnShow: false,\r\n\r\n\t\t// loadingMessage: String\r\n\t\t//\t\tMessage that shows while downloading\r\n\t\tloadingMessage: \"<span class='dijitContentPaneLoading'><span class='dijitInline dijitIconLoading'></span>${loadingState}</span>\",\r\n\r\n\t\t// errorMessage: String\r\n\t\t//\t\tMessage that shows if an error occurs\r\n\t\terrorMessage: \"<span class='dijitContentPaneError'><span class='dijitInline dijitIconError'></span>${errorState}</span>\",\r\n\r\n\t\t// isLoaded: [readonly] Boolean\r\n\t\t//\t\tTrue if the ContentPane has data in it, either specified\r\n\t\t//\t\tduring initialization (via href or inline content), or set\r\n\t\t//\t\tvia set('content', ...) / set('href', ...)\r\n\t\t//\r\n\t\t//\t\tFalse if it doesn't have any content, or if ContentPane is\r\n\t\t//\t\tstill in the process of downloading href.\r\n\t\tisLoaded: false,\r\n\r\n\t\tbaseClass: \"dijitContentPane\",\r\n\r\n\t\t/*======\r\n\t\t // ioMethod: dojo/_base/xhr.get|dojo._base/xhr.post\r\n\t\t //\t\tFunction that should grab the content specified via href.\r\n\t\t ioMethod: dojo.xhrGet,\r\n\t\t ======*/\r\n\r\n\t\t// ioArgs: Object\r\n\t\t//\t\tParameters to pass to xhrGet() request, for example:\r\n\t\t// |\t<div data-dojo-type=\"dijit/layout/ContentPane\" data-dojo-props=\"href: './bar', ioArgs: {timeout: 500}\">\r\n\t\tioArgs: {},\r\n\r\n\t\t// onLoadDeferred: [readonly] dojo.Deferred\r\n\t\t//\t\tThis is the `dojo.Deferred` returned by set('href', ...) and refresh().\r\n\t\t//\t\tCalling onLoadDeferred.then() registers your\r\n\t\t//\t\tcallback to be called only once, when the prior set('href', ...) call or\r\n\t\t//\t\tthe initial href parameter to the constructor finishes loading.\r\n\t\t//\r\n\t\t//\t\tThis is different than an onLoad() handler which gets called any time any href\r\n\t\t//\t\tor content is loaded.\r\n\t\tonLoadDeferred: null,\r\n\r\n\t\t// Cancel _WidgetBase's _setTitleAttr because we don't want the title attribute (used to specify\r\n\t\t// tab labels) to be copied to ContentPane.domNode... otherwise a tooltip shows up over the\r\n\t\t// entire pane.\r\n\t\t_setTitleAttr: null,\r\n\r\n\t\t// Flag to parser that I'll parse my contents, so it shouldn't.\r\n\t\tstopParser: true,\r\n\r\n\t\t// template: [private] Boolean\r\n\t\t//\t\tFlag from the parser that this ContentPane is inside a template\r\n\t\t//\t\tso the contents are pre-parsed.\r\n\t\t// TODO: this declaration can be commented out in 2.0\r\n\t\ttemplate: false,\r\n\r\n\t\tmarkupFactory: function(params, node, ctor){\r\n\t\t\tvar self = new ctor(params, node);\r\n\r\n\t\t\t// If a parse has started but is waiting for modules to load, then return a Promise for when the parser\r\n\t\t\t// finishes.  Don't return a promise though for the case when content hasn't started loading because the\r\n\t\t\t// ContentPane is hidden and it has an href (ex: hidden pane of a TabContainer).   In that case we consider\r\n\t\t\t// that initialization has already finished.\r\n\t\t\treturn !self.href && self._contentSetter && self._contentSetter.parseDeferred && !self._contentSetter.parseDeferred.isFulfilled() ?\r\n\t\t\t\tself._contentSetter.parseDeferred.then(function(){\r\n\t\t\t\t\treturn self;\r\n\t\t\t\t}) : self;\r\n\t\t},\r\n\r\n\t\tcreate: function(params, srcNodeRef){\r\n\t\t\t// Convert a srcNodeRef argument into a content parameter, so that the original contents are\r\n\t\t\t// processed in the same way as contents set via set(\"content\", ...), calling the parser etc.\r\n\t\t\t// Avoid modifying original params object since that breaks NodeList instantiation, see #11906.\r\n\t\t\tif((!params || !params.template) && srcNodeRef && !(\"href\" in params) && !(\"content\" in params)){\r\n\t\t\t\tsrcNodeRef = dom.byId(srcNodeRef);\r\n\t\t\t\tvar df = srcNodeRef.ownerDocument.createDocumentFragment();\r\n\t\t\t\twhile(srcNodeRef.firstChild){\r\n\t\t\t\t\tdf.appendChild(srcNodeRef.firstChild);\r\n\t\t\t\t}\r\n\t\t\t\tparams = lang.delegate(params, {content: df});\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments, [params, srcNodeRef]);\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar messages = i18n.getLocalization(\"dijit\", \"loading\", this.lang);\r\n\t\t\tthis.loadingMessage = string.substitute(this.loadingMessage, messages);\r\n\t\t\tthis.errorMessage = string.substitute(this.errorMessage, messages);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Since we have no template we need to set this.containerNode ourselves, to make getChildren() work.\r\n\t\t\t// For subclasses of ContentPane that do have a template, does nothing.\r\n\t\t\tif(!this.containerNode){\r\n\t\t\t\tthis.containerNode = this.domNode;\r\n\t\t\t}\r\n\r\n\t\t\t// remove the title attribute so it doesn't show up when hovering\r\n\t\t\t// over a node  (TODO: remove in 2.0, no longer needed after #11490)\r\n\t\t\tthis.domNode.removeAttribute(\"title\");\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall startup() on all children including non _Widget ones like dojo/dnd/Source objects\r\n\r\n\t\t\t// This starts all the widgets\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// And this catches stuff like dojo/dnd/Source\r\n\t\t\tif(this._contentSetter){\r\n\t\t\t\tarray.forEach(this._contentSetter.parseResults, function(obj){\r\n\t\t\t\t\tif(!obj._started && !obj._destroyed && lang.isFunction(obj.startup)){\r\n\t\t\t\t\t\tobj.startup();\r\n\t\t\t\t\t\tobj._started = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_startChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when content is loaded.   Calls startup on each child widget.   Similar to ContentPane.startup()\r\n\t\t\t//\t\titself, but avoids marking the ContentPane itself as \"restarted\" (see #15581).\r\n\r\n\t\t\t// This starts all the widgets\r\n\t\t\tarray.forEach(this.getChildren(), function(obj){\r\n\t\t\t\tif(!obj._started && !obj._destroyed && lang.isFunction(obj.startup)){\r\n\t\t\t\t\tobj.startup();\r\n\t\t\t\t\tobj._started = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// And this catches stuff like dojo/dnd/Source\r\n\t\t\tif(this._contentSetter){\r\n\t\t\t\tarray.forEach(this._contentSetter.parseResults, function(obj){\r\n\t\t\t\t\tif(!obj._started && !obj._destroyed && lang.isFunction(obj.startup)){\r\n\t\t\t\t\t\tobj.startup();\r\n\t\t\t\t\t\tobj._started = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetHref: function(/*String|Uri*/ href){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('href', ...) instead.\r\n\t\t\tkernel.deprecated(\"dijit.layout.ContentPane.setHref() is deprecated. Use set('href', ...) instead.\", \"\", \"2.0\");\r\n\t\t\treturn this.set(\"href\", href);\r\n\t\t},\r\n\t\t_setHrefAttr: function(/*String|Uri*/ href){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set(\"href\", ...) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tReset the (external defined) content of this pane and replace with new url\r\n\t\t\t//\t\tNote: It delays the download until widget is shown if preload is false.\r\n\t\t\t// href:\r\n\t\t\t//\t\turl to the page you want to get, must be within the same domain as your mainpage\r\n\r\n\t\t\t// Cancel any in-flight requests (a set('href', ...) will cancel any in-flight set('href', ...))\r\n\t\t\tthis.cancel();\r\n\r\n\t\t\tthis.onLoadDeferred = new Deferred(lang.hitch(this, \"cancel\"));\r\n\t\t\tthis.onLoadDeferred.then(lang.hitch(this, \"onLoad\"));\r\n\r\n\t\t\tthis._set(\"href\", href);\r\n\r\n\t\t\t// _setHrefAttr() is called during creation and by the user, after creation.\r\n\t\t\t// Assuming preload == false, only in the second case do we actually load the URL;\r\n\t\t\t// otherwise it's done in startup(), and only if this widget is shown.\r\n\t\t\tif(this.preload || (this._created && this._isShown())){\r\n\t\t\t\tthis._load();\r\n\t\t\t}else{\r\n\t\t\t\t// Set flag to indicate that href needs to be loaded the next time the\r\n\t\t\t\t// ContentPane is made visible\r\n\t\t\t\tthis._hrefChanged = true;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.onLoadDeferred;\t\t// Deferred\r\n\t\t},\r\n\r\n\t\tsetContent: function(/*String|DomNode|Nodelist*/data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('content', ...) instead.\r\n\t\t\tkernel.deprecated(\"dijit.layout.ContentPane.setContent() is deprecated.  Use set('content', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set(\"content\", data);\r\n\t\t},\r\n\t\t_setContentAttr: function(/*String|DomNode|Nodelist*/data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to make set(\"content\", ...) work.\r\n\t\t\t//\t\tReplaces old content with data content, include style classes from old content\r\n\t\t\t// data:\r\n\t\t\t//\t\tthe new Content may be String, DomNode or NodeList\r\n\t\t\t//\r\n\t\t\t//\t\tif data is a NodeList (or an array of nodes) nodes are copied\r\n\t\t\t//\t\tso you can import nodes from another document implicitly\r\n\r\n\t\t\t// clear href so we can't run refresh and clear content\r\n\t\t\t// refresh should only work if we downloaded the content\r\n\t\t\tthis._set(\"href\", \"\");\r\n\r\n\t\t\t// Cancel any in-flight requests (a set('content', ...) will cancel any in-flight set('href', ...))\r\n\t\t\tthis.cancel();\r\n\r\n\t\t\t// Even though user is just setting content directly, still need to define an onLoadDeferred\r\n\t\t\t// because the _onLoadHandler() handler is still getting called from setContent()\r\n\t\t\tthis.onLoadDeferred = new Deferred(lang.hitch(this, \"cancel\"));\r\n\t\t\tif(this._created){\r\n\t\t\t\t// For back-compat reasons, call onLoad() for set('content', ...)\r\n\t\t\t\t// calls but not for content specified in srcNodeRef (ie: <div data-dojo-type=ContentPane>...</div>)\r\n\t\t\t\t// or as initialization parameter (ie: new ContentPane({content: ...})\r\n\t\t\t\tthis.onLoadDeferred.then(lang.hitch(this, \"onLoad\"));\r\n\t\t\t}\r\n\r\n\t\t\tthis._setContent(data || \"\");\r\n\r\n\t\t\tthis._isDownloaded = false; // mark that content is from a set('content') not a set('href')\r\n\r\n\t\t\treturn this.onLoadDeferred;\t// Deferred\r\n\t\t},\r\n\t\t_getContentAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to make get(\"content\") work\r\n\t\t\treturn this.containerNode.innerHTML;\r\n\t\t},\r\n\r\n\t\tcancel: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCancels an in-flight download of content\r\n\t\t\tif(this._xhrDfd && (this._xhrDfd.fired == -1)){\r\n\t\t\t\tthis._xhrDfd.cancel();\r\n\t\t\t}\r\n\t\t\tdelete this._xhrDfd; // garbage collect\r\n\r\n\t\t\tthis.onLoadDeferred = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis.cancel();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tdestroyRecursive: function(/*Boolean*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy the ContentPane and its contents\r\n\r\n\t\t\t// if we have multiple controllers destroying us, bail after the first\r\n\t\t\tif(this._beingDestroyed){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onShow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the ContentPane is made visible\r\n\t\t\t// description:\r\n\t\t\t//\t\tFor a plain ContentPane, this is called on initialization, from startup().\r\n\t\t\t//\t\tIf the ContentPane is a hidden pane of a TabContainer etc., then it's\r\n\t\t\t//\t\tcalled whenever the pane is made visible.\r\n\t\t\t//\r\n\t\t\t//\t\tDoes necessary processing, including href download and layout/resize of\r\n\t\t\t//\t\tchild widget(s)\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this.href){\r\n\t\t\t\tif(!this._xhrDfd && // if there's an href that isn't already being loaded\r\n\t\t\t\t\t(!this.isLoaded || this._hrefChanged || this.refreshOnShow)\r\n\t\t\t\t\t){\r\n\t\t\t\t\treturn this.refresh();\t// If child has an href, promise that fires when the load is complete\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefresh: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\t[Re]download contents of href and display\r\n\t\t\t// description:\r\n\t\t\t//\t\t1. cancels any currently in-flight requests\r\n\t\t\t//\t\t2. posts \"loading...\" message\r\n\t\t\t//\t\t3. sends XHR to download new data\r\n\r\n\t\t\t// Cancel possible prior in-flight request\r\n\t\t\tthis.cancel();\r\n\r\n\t\t\tthis.onLoadDeferred = new Deferred(lang.hitch(this, \"cancel\"));\r\n\t\t\tthis.onLoadDeferred.then(lang.hitch(this, \"onLoad\"));\r\n\t\t\tthis._load();\r\n\t\t\treturn this.onLoadDeferred;\t\t// If child has an href, promise that fires when refresh is complete\r\n\t\t},\r\n\r\n\t\t_load: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLoad/reload the href specified in this.href\r\n\r\n\t\t\t// display loading message\r\n\t\t\tthis._setContent(this.onDownloadStart(), true);\r\n\r\n\t\t\tvar self = this;\r\n\t\t\tvar getArgs = {\r\n\t\t\t\tpreventCache: (this.preventCache || this.refreshOnShow),\r\n\t\t\t\turl: this.href,\r\n\t\t\t\thandleAs: \"text\"\r\n\t\t\t};\r\n\t\t\tif(lang.isObject(this.ioArgs)){\r\n\t\t\t\tlang.mixin(getArgs, this.ioArgs);\r\n\t\t\t}\r\n\r\n\t\t\tvar hand = (this._xhrDfd = (this.ioMethod || xhr.get)(getArgs)),\r\n\t\t\t\treturnedHtml;\r\n\r\n\t\t\thand.then(\r\n\t\t\t\tfunction(html){\r\n\t\t\t\t\treturnedHtml = html;\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tself._isDownloaded = true;\r\n\t\t\t\t\t\treturn self._setContent(html, false);\r\n\t\t\t\t\t}catch(err){\r\n\t\t\t\t\t\tself._onError('Content', err); // onContentError\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfunction(err){\r\n\t\t\t\t\tif(!hand.canceled){\r\n\t\t\t\t\t\t// show error message in the pane\r\n\t\t\t\t\t\tself._onError('Download', err); // onDownloadError\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete self._xhrDfd;\r\n\t\t\t\t\treturn err;\r\n\t\t\t\t}\r\n\t\t\t).then(function(){\r\n\t\t\t\t\tself.onDownloadEnd();\r\n\t\t\t\t\tdelete self._xhrDfd;\r\n\t\t\t\t\treturn returnedHtml;\r\n\t\t\t\t});\r\n\r\n\t\t\t// Remove flag saying that a load is needed\r\n\t\t\tdelete this._hrefChanged;\r\n\t\t},\r\n\r\n\t\t_onLoadHandler: function(data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is called whenever new content is being loaded\r\n\t\t\tthis._set(\"isLoaded\", true);\r\n\t\t\ttry{\r\n\t\t\t\tthis.onLoadDeferred.resolve(data);\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.error('Error ' + this.widgetId + ' running custom onLoad code: ' + e.message);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onUnloadHandler: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is called whenever the content is being unloaded\r\n\t\t\tthis._set(\"isLoaded\", false);\r\n\t\t\ttry{\r\n\t\t\t\tthis.onUnload();\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.error('Error ' + this.widgetId + ' running custom onUnload code: ' + e.message);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroyDescendants: function(/*Boolean*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy all the widgets inside the ContentPane and empty containerNode\r\n\r\n\t\t\t// Make sure we call onUnload (but only when the ContentPane has real content)\r\n\t\t\tif(this.isLoaded){\r\n\t\t\t\tthis._onUnloadHandler();\r\n\t\t\t}\r\n\r\n\t\t\t// Even if this.isLoaded == false there might still be a \"Loading...\" message\r\n\t\t\t// to erase, so continue...\r\n\r\n\t\t\t// For historical reasons we need to delete all widgets under this.containerNode,\r\n\t\t\t// even ones that the user has created manually.\r\n\t\t\tvar setter = this._contentSetter;\r\n\t\t\tarray.forEach(this.getChildren(), function(widget){\r\n\t\t\t\tif(widget.destroyRecursive){\r\n\t\t\t\t\t// All widgets will hit this branch\r\n\t\t\t\t\twidget.destroyRecursive(preserveDom);\r\n\t\t\t\t}else if(widget.destroy){\r\n\t\t\t\t\t// Things like dojo/dnd/Source have destroy(), not destroyRecursive()\r\n\t\t\t\t\twidget.destroy(preserveDom);\r\n\t\t\t\t}\r\n\t\t\t\twidget._destroyed = true;\r\n\t\t\t});\r\n\t\t\tif(setter){\r\n\t\t\t\t// Most of the widgets in setter.parseResults have already been destroyed, but\r\n\t\t\t\t// things like Menu that have been moved to <body> haven't yet\r\n\t\t\t\tarray.forEach(setter.parseResults, function(widget){\r\n\t\t\t\t\tif(!widget._destroyed){\r\n\t\t\t\t\t\tif(widget.destroyRecursive){\r\n\t\t\t\t\t\t\t// All widgets will hit this branch\r\n\t\t\t\t\t\t\twidget.destroyRecursive(preserveDom);\r\n\t\t\t\t\t\t}else if(widget.destroy){\r\n\t\t\t\t\t\t\t// Things like dojo/dnd/Source have destroy(), not destroyRecursive()\r\n\t\t\t\t\t\t\twidget.destroy(preserveDom);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twidget._destroyed = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tdelete setter.parseResults;\r\n\t\t\t}\r\n\r\n\t\t\t// And then clear away all the DOM nodes\r\n\t\t\tif(!preserveDom){\r\n\t\t\t\tdomConstruct.empty(this.containerNode);\r\n\t\t\t}\r\n\r\n\t\t\t// Delete any state information we have about current contents\r\n\t\t\tdelete this._singleChild;\r\n\t\t},\r\n\r\n\t\t_setContent: function(/*String|DocumentFragment*/ cont, /*Boolean*/ isFakeContent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInsert the content into the container node\r\n\t\t\t// returns:\r\n\t\t\t//\t\tReturns a Deferred promise that is resolved when the content is parsed.\r\n\r\n\t\t\t// first get rid of child widgets\r\n\t\t\tthis.destroyDescendants();\r\n\r\n\t\t\t// html.set will take care of the rest of the details\r\n\t\t\t// we provide an override for the error handling to ensure the widget gets the errors\r\n\t\t\t// configure the setter instance with only the relevant widget instance properties\r\n\t\t\t// NOTE: unless we hook into attr, or provide property setters for each property,\r\n\t\t\t// we need to re-configure the ContentSetter with each use\r\n\t\t\tvar setter = this._contentSetter;\r\n\t\t\tif(!(setter && setter instanceof html._ContentSetter)){\r\n\t\t\t\tsetter = this._contentSetter = new html._ContentSetter({\r\n\t\t\t\t\tnode: this.containerNode,\r\n\t\t\t\t\t_onError: lang.hitch(this, this._onError),\r\n\t\t\t\t\tonContentError: lang.hitch(this, function(e){\r\n\t\t\t\t\t\t// fires if a domfault occurs when we are appending this.errorMessage\r\n\t\t\t\t\t\t// like for instance if domNode is a UL and we try append a DIV\r\n\t\t\t\t\t\tvar errMess = this.onContentError(e);\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tthis.containerNode.innerHTML = errMess;\r\n\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t\tconsole.error('Fatal ' + this.id + ' could not change content due to ' + e.message, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})/*,\r\n\t\t\t\t\t _onError */\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar setterParams = lang.mixin({\r\n\t\t\t\tcleanContent: this.cleanContent,\r\n\t\t\t\textractContent: this.extractContent,\r\n\t\t\t\tparseContent: !cont.domNode && this.parseOnLoad,\r\n\t\t\t\tparserScope: this.parserScope,\r\n\t\t\t\tstartup: false,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir\r\n\t\t\t}, this._contentSetterParams || {});\r\n\r\n\t\t\tvar p = setter.set((lang.isObject(cont) && cont.domNode) ? cont.domNode : cont, setterParams);\r\n\r\n\t\t\t// dojox/layout/html/_base::_ContentSetter.set() returns a Promise that indicates when everything is completed.\r\n\t\t\t// dojo/html::_ContentSetter.set() currently returns the DOMNode, but that will be changed for 2.0.\r\n\t\t\t// So, if set() returns a promise then use it, otherwise fallback to waiting on setter.parseDeferred\r\n\t\t\tvar self = this;\r\n\t\t\treturn when(p && p.then ? p : setter.parseDeferred, function(){\r\n\t\t\t\t// setter params must be pulled afresh from the ContentPane each time\r\n\t\t\t\tdelete self._contentSetterParams;\r\n\r\n\t\t\t\tif(!isFakeContent){\r\n\t\t\t\t\tif(self._started){\r\n\t\t\t\t\t\t// Startup each top level child widget (and they will start their children, recursively)\r\n\t\t\t\t\t\tself._startChildren();\r\n\r\n\t\t\t\t\t\t// Call resize() on each of my child layout widgets,\r\n\t\t\t\t\t\t// or resize() on my single child layout widget...\r\n\t\t\t\t\t\t// either now (if I'm currently visible) or when I become visible\r\n\t\t\t\t\t\tself._scheduleLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself._onLoadHandler(cont);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onError: function(type, err, consoleText){\r\n\t\t\tthis.onLoadDeferred.reject(err);\r\n\r\n\t\t\t// shows user the string that is returned by on[type]Error\r\n\t\t\t// override on[type]Error and return your own string to customize\r\n\t\t\tvar errText = this['on' + type + 'Error'].call(this, err);\r\n\t\t\tif(consoleText){\r\n\t\t\t\tconsole.error(consoleText, err);\r\n\t\t\t}else if(errText){// a empty string won't change current content\r\n\t\t\t\tthis._setContent(errText, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// EVENT's, should be overide-able\r\n\t\tonLoad: function(/*===== data =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent hook, is called after everything is loaded and widgetified\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonUnload: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent hook, is called before old content is cleared\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonDownloadStart: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled before download starts.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe string returned by this function will be the html\r\n\t\t\t//\t\tthat tells the user we are loading something.\r\n\t\t\t//\t\tOverride with your own function if you want to change text.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn this.loadingMessage;\r\n\t\t},\r\n\r\n\t\tonContentError: function(/*Error*/ /*===== error =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled on DOM faults, require faults etc. in content.\r\n\t\t\t//\r\n\t\t\t//\t\tIn order to display an error message in the pane, return\r\n\t\t\t//\t\tthe error message from this method, as an HTML string.\r\n\t\t\t//\r\n\t\t\t//\t\tBy default (if this method is not overriden), it returns\r\n\t\t\t//\t\tnothing, so the error message is just printed to the console.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\tonDownloadError: function(/*Error*/ /*===== error =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when download error occurs.\r\n\t\t\t//\r\n\t\t\t//\t\tIn order to display an error message in the pane, return\r\n\t\t\t//\t\tthe error message from this method, as an HTML string.\r\n\t\t\t//\r\n\t\t\t//\t\tDefault behavior (if this method is not overriden) is to display\r\n\t\t\t//\t\tthe error message inside the pane.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn this.errorMessage;\r\n\t\t},\r\n\r\n\t\tonDownloadEnd: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when download is finished.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t}\r\n\t});\r\n});\r\n\n\n\ndefine('dijit/Dialog',[\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.map\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/Deferred\", // Deferred\r\n\t\"dojo/dom\", // dom.isDescendant\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains\r\n\t\"dojo/dom-geometry\", // domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/_base/fx\", // fx.fadeIn fx.fadeOut\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/keys\",\r\n\t\"dojo/_base/lang\", // lang.mixin lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/ready\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"opera\") has(\"dijit-legacy-requires\")\r\n\t\"dojo/window\", // winUtils.getBox, winUtils.get\r\n\t\"dojo/dnd/Moveable\", // Moveable\r\n\t\"dojo/dnd/TimedMoveable\", // TimedMoveable\r\n\t\"./focus\",\r\n\t\"./_base/manager\", // manager.defaultDuration\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_CssStateMixin\",\r\n\t\"./form/_FormMixin\",\r\n\t\"./_DialogMixin\",\r\n\t\"./DialogUnderlay\",\r\n\t\"./layout/ContentPane\",\r\n\t\"./layout/utils\",\r\n\t\"dojo/text!./templates/Dialog.html\",\r\n\t\"./a11yclick\",\t// template uses ondijitclick\r\n\t\"dojo/i18n!./nls/common\"\r\n], function(require, array, aspect, declare, Deferred,\r\n\t\t\tdom, domClass, domGeometry, domStyle, fx, i18n, keys, lang, on, ready, has, winUtils,\r\n\t\t\tMoveable, TimedMoveable, focus, manager, _Widget, _TemplatedMixin, _CssStateMixin, _FormMixin, _DialogMixin,\r\n\t\t\tDialogUnderlay, ContentPane, utils, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Dialog\r\n\r\n\tvar resolvedDeferred = new Deferred();\r\n\tresolvedDeferred.resolve(true);\r\n\r\n\tvar _DialogBase = declare(\"dijit._DialogBase\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), [_TemplatedMixin, _FormMixin, _DialogMixin, _CssStateMixin], {\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitDialog\",\r\n\r\n\t\tcssStateNodes: {\r\n\t\t\tcloseButtonNode: \"dijitDialogCloseIcon\"\r\n\t\t},\r\n\r\n\t\t// Map widget attributes to DOMNode attributes.\r\n\t\t_setTitleAttr: { node: \"titleNode\", type: \"innerHTML\" },\r\n\r\n\t\t// open: [readonly] Boolean\r\n\t\t//\t\tTrue if Dialog is currently displayed on screen.\r\n\t\topen: false,\r\n\r\n\t\t// duration: Integer\r\n\t\t//\t\tThe time in milliseconds it takes the dialog to fade in and out\r\n\t\tduration: manager.defaultDuration,\r\n\r\n\t\t// refocus: Boolean\r\n\t\t//\t\tA Toggle to modify the default focus behavior of a Dialog, which\r\n\t\t//\t\tis to re-focus the element which had focus before being opened.\r\n\t\t//\t\tFalse will disable refocusing. Default: true\r\n\t\trefocus: true,\r\n\r\n\t\t// autofocus: Boolean\r\n\t\t//\t\tA Toggle to modify the default focus behavior of a Dialog, which\r\n\t\t//\t\tis to focus on the first dialog element after opening the dialog.\r\n\t\t//\t\tFalse will disable autofocusing. Default: true\r\n\t\tautofocus: true,\r\n\r\n\t\t// _firstFocusItem: [private readonly] DomNode\r\n\t\t//\t\tThe pointer to the first focusable node in the dialog.\r\n\t\t//\t\tSet by `dijit/_DialogMixin._getFocusItems()`.\r\n\t\t_firstFocusItem: null,\r\n\r\n\t\t// _lastFocusItem: [private readonly] DomNode\r\n\t\t//\t\tThe pointer to which node has focus prior to our dialog.\r\n\t\t//\t\tSet by `dijit/_DialogMixin._getFocusItems()`.\r\n\t\t_lastFocusItem: null,\r\n\r\n\t\t// draggable: Boolean\r\n\t\t//\t\tToggles the movable aspect of the Dialog. If true, Dialog\r\n\t\t//\t\tcan be dragged by it's title. If false it will remain centered\r\n\t\t//\t\tin the viewport.\r\n\t\tdraggable: true,\r\n\t\t_setDraggableAttr: function(/*Boolean*/ val){\r\n\t\t\t// Avoid _WidgetBase behavior of copying draggable attribute to this.domNode,\r\n\t\t\t// as that prevents text select on modern browsers (#14452)\r\n\t\t\tthis._set(\"draggable\", val);\r\n\t\t},\r\n\r\n\t\t// maxRatio: Number\r\n\t\t//\t\tMaximum size to allow the dialog to expand to, relative to viewport size\r\n\t\tmaxRatio: 0.9,\r\n\r\n\t\t// closable: Boolean\r\n\t\t//\t\tDialog show [x] icon to close itself, and ESC key will close the dialog.\r\n\t\tclosable: true,\r\n\t\t_setClosableAttr: function(val){\r\n\t\t\tthis.closeButtonNode.style.display = val ? \"\" : \"none\";\r\n\t\t\tthis._set(\"closable\", val);\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tvar _nlsResources = i18n.getLocalization(\"dijit\", \"common\");\r\n\t\t\tlang.mixin(this, _nlsResources);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tdomStyle.set(this.domNode, {\r\n\t\t\t\tdisplay: \"none\",\r\n\t\t\t\tposition: \"absolute\"\r\n\t\t\t});\r\n\t\t\tthis.ownerDocumentBody.appendChild(this.domNode);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\taspect.after(this, \"onExecute\", lang.hitch(this, \"hide\"), true);\r\n\t\t\taspect.after(this, \"onCancel\", lang.hitch(this, \"hide\"), true);\r\n\r\n\t\t\tthis._modalconnects = [];\r\n\t\t},\r\n\r\n\t\tonLoad: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when data has been loaded from an href.\r\n\t\t\t//\t\tUnlike most other callbacks, this function can be connected to (via `dojo.connect`)\r\n\t\t\t//\t\tbut should *not* be overridden.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\r\n\t\t\t// when href is specified we need to reposition the dialog after the data is loaded\r\n\t\t\t// and find the focusable elements\r\n\t\t\tthis.resize();\r\n\t\t\tthis._position();\r\n\r\n\t\t\tif(this.autofocus && DialogLevelManager.isTop(this)){\r\n\t\t\t\tthis._getFocusItems();\r\n\t\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\tthis._getFocusItems();\r\n\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t},\r\n\r\n\t\t_endDrag: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after dragging the Dialog. Saves the position of the dialog in the viewport,\r\n\t\t\t//\t\tand also adjust position to be fully within the viewport, so user doesn't lose access to handle\r\n\t\t\tvar nodePosition = domGeometry.position(this.domNode),\r\n\t\t\t\tviewport = winUtils.getBox(this.ownerDocument);\r\n\t\t\tnodePosition.y = Math.min(Math.max(nodePosition.y, 0), (viewport.h - nodePosition.h));\r\n\t\t\tnodePosition.x = Math.min(Math.max(nodePosition.x, 0), (viewport.w - nodePosition.w));\r\n\t\t\tthis._relativePosition = nodePosition;\r\n\t\t\tthis._position();\r\n\t\t},\r\n\r\n\t\t_setup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStuff we need to do before showing the Dialog for the first\r\n\t\t\t//\t\ttime (but we defer it until right beforehand, for\r\n\t\t\t//\t\tperformance reasons).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar node = this.domNode;\r\n\r\n\t\t\tif(this.titleBar && this.draggable){\r\n\t\t\t\tthis._moveable = new ((has(\"ie\") == 6) ? TimedMoveable // prevent overload, see #5285\r\n\t\t\t\t\t: Moveable)(node, { handle: this.titleBar });\r\n\t\t\t\taspect.after(this._moveable, \"onMoveStop\", lang.hitch(this, \"_endDrag\"), true);\r\n\t\t\t}else{\r\n\t\t\t\tdomClass.add(node, \"dijitDialogFixed\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.underlayAttrs = {\r\n\t\t\t\tdialogId: this.id,\r\n\t\t\t\t\"class\": array.map(this[\"class\"].split(/\\s/),function(s){\r\n\t\t\t\t\treturn s + \"_underlay\";\r\n\t\t\t\t}).join(\" \"),\r\n\t\t\t\t_onKeyDown: lang.hitch(this, \"_onKey\"),\r\n\t\t\t\townerDocument: this.ownerDocument\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t_size: function(){\r\n\t\t\t// TODO: remove for 2.0\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\r\n\t\t_position: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPosition the dialog in the viewport.  If no relative offset\r\n\t\t\t//\t\tin the viewport has been determined (by dragging, for instance),\r\n\t\t\t//\t\tcenter the dialog.  Otherwise, use the Dialog's stored relative offset,\r\n\t\t\t//\t\tadjusted by the viewport's scroll.\r\n\t\t\tif(!domClass.contains(this.ownerDocumentBody, \"dojoMove\")){    // don't do anything if called during auto-scroll\r\n\t\t\t\tvar node = this.domNode,\r\n\t\t\t\t\tviewport = winUtils.getBox(this.ownerDocument),\r\n\t\t\t\t\tp = this._relativePosition,\r\n\t\t\t\t\tbb = p ? null : domGeometry.position(node),\r\n\t\t\t\t\tl = Math.floor(viewport.l + (p ? p.x : (viewport.w - bb.w) / 2)),\r\n\t\t\t\t\tt = Math.floor(viewport.t + (p ? p.y : (viewport.h - bb.h) / 2))\r\n\t\t\t\t\t;\r\n\t\t\t\tdomStyle.set(node, {\r\n\t\t\t\t\tleft: l + \"px\",\r\n\t\t\t\t\ttop: t + \"px\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onKey: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles the keyboard events for accessibility reasons\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(evt.keyCode == keys.TAB){\r\n\t\t\t\tthis._getFocusItems();\r\n\t\t\t\tvar node = evt.target;\r\n\t\t\t\tif(this._firstFocusItem == this._lastFocusItem){\r\n\t\t\t\t\t// don't move focus anywhere, but don't allow browser to move focus off of dialog either\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t}else if(node == this._firstFocusItem && evt.shiftKey){\r\n\t\t\t\t\t// if we are shift-tabbing from first focusable item in dialog, send focus to last item\r\n\t\t\t\t\tfocus.focus(this._lastFocusItem);\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t}else if(node == this._lastFocusItem && !evt.shiftKey){\r\n\t\t\t\t\t// if we are tabbing from last focusable item in dialog, send focus to first item\r\n\t\t\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}else if(this.closable && evt.keyCode == keys.ESCAPE){\r\n\t\t\t\tthis.onCancel();\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tshow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay the dialog\r\n\t\t\t// returns: dojo/promise/Promise\r\n\t\t\t//\t\tPromise object that resolves when the display animation is complete\r\n\r\n\t\t\tif(this.open){\r\n\t\t\t\treturn resolvedDeferred.promise;\r\n\t\t\t}\r\n\r\n\t\t\tif(!this._started){\r\n\t\t\t\tthis.startup();\r\n\t\t\t}\r\n\r\n\t\t\t// first time we show the dialog, there's some initialization stuff to do\r\n\t\t\tif(!this._alreadyInitialized){\r\n\t\t\t\tthis._setup();\r\n\t\t\t\tthis._alreadyInitialized = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._fadeOutDeferred){\r\n\t\t\t\t// There's a hide() operation in progress, so cancel it, but still call DialogLevelManager.hide()\r\n\t\t\t\t// as though the hide() completed, in preparation for the DialogLevelManager.show() call below.\r\n\t\t\t\tthis._fadeOutDeferred.cancel();\r\n\t\t\t\tDialogLevelManager.hide(this);\r\n\t\t\t}\r\n\r\n\t\t\t// Recenter Dialog if user scrolls browser.  Connecting to document doesn't work on IE, need to use window.\r\n\t\t\t// Be sure that event object doesn't get passed to resize() method, because it's expecting an optional\r\n\t\t\t// {w: ..., h:...} arg.\r\n\t\t\tvar win = winUtils.get(this.ownerDocument);\r\n\t\t\tthis._modalconnects.push(on(win, \"scroll\", lang.hitch(this, \"resize\", null)));\r\n\r\n\t\t\tthis._modalconnects.push(on(this.domNode, \"keydown\", lang.hitch(this, \"_onKey\")));\r\n\r\n\t\t\tdomStyle.set(this.domNode, {\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tdisplay: \"\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._set(\"open\", true);\r\n\t\t\tthis._onShow(); // lazy load trigger\r\n\r\n\t\t\tthis.resize();\r\n\t\t\tthis._position();\r\n\r\n\t\t\t// fade-in Animation object, setup below\r\n\t\t\tvar fadeIn;\r\n\r\n\t\t\tthis._fadeInDeferred = new Deferred(lang.hitch(this, function(){\r\n\t\t\t\tfadeIn.stop();\r\n\t\t\t\tdelete this._fadeInDeferred;\r\n\t\t\t}));\r\n\r\n\t\t\t// If delay is 0, code below will delete this._fadeInDeferred instantly, so grab promise while we can.\r\n\t\t\tvar promise = this._fadeInDeferred.promise;\r\n\r\n\t\t\tfadeIn = fx.fadeIn({\r\n\t\t\t\tnode: this.domNode,\r\n\t\t\t\tduration: this.duration,\r\n\t\t\t\tbeforeBegin: lang.hitch(this, function(){\r\n\t\t\t\t\tDialogLevelManager.show(this, this.underlayAttrs);\r\n\t\t\t\t}),\r\n\t\t\t\tonEnd: lang.hitch(this, function(){\r\n\t\t\t\t\tif(this.autofocus && DialogLevelManager.isTop(this)){\r\n\t\t\t\t\t\t// find focusable items each time dialog is shown since if dialog contains a widget the\r\n\t\t\t\t\t\t// first focusable items can change\r\n\t\t\t\t\t\tthis._getFocusItems();\r\n\t\t\t\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._fadeInDeferred.resolve(true);\r\n\t\t\t\t\tdelete this._fadeInDeferred;\r\n\t\t\t\t})\r\n\t\t\t}).play();\r\n\r\n\t\t\treturn promise;\r\n\t\t},\r\n\r\n\t\thide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the dialog\r\n\t\t\t// returns: dojo/promise/Promise\r\n\t\t\t//\t\tPromise object that resolves when the display animation is complete\r\n\r\n\t\t\t// If we haven't been initialized yet then we aren't showing and we can just return.\r\n\t\t\t// Likewise if we are already hidden, or are currently fading out.\r\n\t\t\tif(!this._alreadyInitialized || !this.open){\r\n\t\t\t\treturn resolvedDeferred.promise;\r\n\t\t\t}\r\n\t\t\tif(this._fadeInDeferred){\r\n\t\t\t\tthis._fadeInDeferred.cancel();\r\n\t\t\t}\r\n\r\n\t\t\t// fade-in Animation object, setup below\r\n\t\t\tvar fadeOut;\r\n\r\n\t\t\tthis._fadeOutDeferred = new Deferred(lang.hitch(this, function(){\r\n\t\t\t\tfadeOut.stop();\r\n\t\t\t\tdelete this._fadeOutDeferred;\r\n\t\t\t}));\r\n\r\n\t\t\t// fire onHide when the promise resolves.\r\n\t\t\tthis._fadeOutDeferred.then(lang.hitch(this, 'onHide'));\r\n\r\n\t\t\t// If delay is 0, code below will delete this._fadeOutDeferred instantly, so grab promise while we can.\r\n\t\t\tvar promise = this._fadeOutDeferred.promise;\r\n\r\n\t\t\tfadeOut = fx.fadeOut({\r\n\t\t\t\tnode: this.domNode,\r\n\t\t\t\tduration: this.duration,\r\n\t\t\t\tonEnd: lang.hitch(this, function(){\r\n\t\t\t\t\tthis.domNode.style.display = \"none\";\r\n\t\t\t\t\tDialogLevelManager.hide(this);\r\n\t\t\t\t\tthis._fadeOutDeferred.resolve(true);\r\n\t\t\t\t\tdelete this._fadeOutDeferred;\r\n\t\t\t\t})\r\n\t\t\t}).play();\r\n\r\n\t\t\tif(this._scrollConnected){\r\n\t\t\t\tthis._scrollConnected = false;\r\n\t\t\t}\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this._modalconnects.pop()){\r\n\t\t\t\th.remove();\r\n\t\t\t}\r\n\r\n\t\t\tif(this._relativePosition){\r\n\t\t\t\tdelete this._relativePosition;\r\n\t\t\t}\r\n\t\t\tthis._set(\"open\", false);\r\n\r\n\t\t\treturn promise;\r\n\t\t},\r\n\r\n\t\tresize: function(dim){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled with no argument when viewport scrolled or viewport size changed.  Adjusts Dialog as\r\n\t\t\t//\t\tnecessary to keep it visible.\r\n\t\t\t//\r\n\t\t\t//\t\tCan also be called with an argument (by dojox/layout/ResizeHandle etc.) to explicitly set the\r\n\t\t\t//\t\tsize of the dialog.\r\n\t\t\t// dim: Object?\r\n\t\t\t//\t\tOptional dimension object like {w: 200, h: 300}\r\n\r\n\t\t\tif(this.domNode.style.display != \"none\"){\r\n\r\n\t\t\t\tthis._checkIfSingleChild();\r\n\r\n\t\t\t\tif(!dim){\r\n\t\t\t\t\tif(this._shrunk){\r\n\t\t\t\t\t\t// If we earlier shrunk the dialog to fit in the viewport, reset it to its natural size\r\n\t\t\t\t\t\tif(this._singleChild){\r\n\t\t\t\t\t\t\tif(typeof this._singleChildOriginalStyle != \"undefined\"){\r\n\t\t\t\t\t\t\t\tthis._singleChild.domNode.style.cssText = this._singleChildOriginalStyle;\r\n\t\t\t\t\t\t\t\tdelete this._singleChildOriginalStyle;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tarray.forEach([this.domNode, this.containerNode, this.titleBar, this.actionBarNode], function(node){\r\n\t\t\t\t\t\t\tif(node){\t// because titleBar may not be defined\r\n\t\t\t\t\t\t\t\tdomStyle.set(node, {\r\n\t\t\t\t\t\t\t\t\tposition: \"static\",\r\n\t\t\t\t\t\t\t\t\twidth: \"auto\",\r\n\t\t\t\t\t\t\t\t\theight: \"auto\"\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.domNode.style.position = \"absolute\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If necessary, shrink Dialog to fit in viewport and have some space around it\r\n\t\t\t\t\t// to indicate that it's a popup.  This will also compensate for possible scrollbars on viewport.\r\n\t\t\t\t\tvar viewport = winUtils.getBox(this.ownerDocument);\r\n\t\t\t\t\tviewport.w *= this.maxRatio;\r\n\t\t\t\t\tviewport.h *= this.maxRatio;\r\n\r\n\t\t\t\t\tvar bb = domGeometry.position(this.domNode);\r\n\t\t\t\t\tif(bb.w >= viewport.w || bb.h >= viewport.h){\r\n\t\t\t\t\t\tdim = {\r\n\t\t\t\t\t\t\tw: Math.min(bb.w, viewport.w),\r\n\t\t\t\t\t\t\th: Math.min(bb.h, viewport.h)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis._shrunk = true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._shrunk = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Code to run if user has requested an explicit size, or the shrinking code above set an implicit size\r\n\t\t\t\tif(dim){\r\n\t\t\t\t\t// Set this.domNode to specified size\r\n\t\t\t\t\tdomGeometry.setMarginBox(this.domNode, dim);\r\n\r\n\t\t\t\t\t// And then size this.containerNode\r\n\t\t\t\t\tvar layoutNodes = [];\r\n\t\t\t\t\tif(this.titleBar){\r\n\t\t\t\t\t\tlayoutNodes.push({domNode: this.titleBar, region: \"top\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.actionBarNode){\r\n\t\t\t\t\t\tlayoutNodes.push({domNode: this.actionBarNode, region: \"bottom\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar centerSize = {domNode: this.containerNode, region: \"center\"};\r\n\t\t\t\t\tlayoutNodes.push(centerSize);\r\n\r\n\t\t\t\t\tvar contentDim = utils.marginBox2contentBox(this.domNode, dim);\r\n\t\t\t\t\tutils.layoutChildren(this.domNode, contentDim, layoutNodes);\r\n\r\n\t\t\t\t\t// And then if this.containerNode has a single layout widget child, size it too.\r\n\t\t\t\t\t// Otherwise, make this.containerNode show a scrollbar if it's overflowing.\r\n\t\t\t\t\tif(this._singleChild){\r\n\t\t\t\t\t\tvar cb = utils.marginBox2contentBox(this.containerNode, centerSize);\r\n\t\t\t\t\t\t// note: if containerNode has padding singleChildSize will have l and t set,\r\n\t\t\t\t\t\t// but don't pass them to resize() or it will doubly-offset the child\r\n\t\t\t\t\t\tthis._singleChild.resize({w: cb.w, h: cb.h});\r\n\t\t\t\t\t\t// TODO: save original size for restoring it on another show()?\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.containerNode.style.overflow = \"auto\";\r\n\t\t\t\t\t\tthis._layoutChildren();\t\t// send resize() event to all child widgets\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._layoutChildren();\t\t// send resize() event to all child widgets\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!has(\"touch\") && !dim){\r\n\t\t\t\t\t// If the user has scrolled the viewport then reposition the Dialog.  But don't do it for touch\r\n\t\t\t\t\t// devices, because it will counteract when a keyboard pops up and then the browser auto-scrolls\r\n\t\t\t\t\t// the focused node into view.\r\n\t\t\t\t\tthis._position();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_layoutChildren: function(){\r\n\t\t\t// Override _ContentPaneResizeMixin._layoutChildren because even when there's just a single layout child\r\n\t\t\t// widget, sometimes we don't want to size it explicitly (i.e. to pass a dim argument to resize())\r\n\r\n\t\t\tarray.forEach(this.getChildren(), function(widget){\r\n\t\t\t\tif(widget.resize){\r\n\t\t\t\t\twidget.resize();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this._fadeInDeferred){\r\n\t\t\t\tthis._fadeInDeferred.cancel();\r\n\t\t\t}\r\n\t\t\tif(this._fadeOutDeferred){\r\n\t\t\t\tthis._fadeOutDeferred.cancel();\r\n\t\t\t}\r\n\t\t\tif(this._moveable){\r\n\t\t\t\tthis._moveable.destroy();\r\n\t\t\t}\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this._modalconnects.pop()){\r\n\t\t\t\th.remove();\r\n\t\t\t}\r\n\r\n\t\t\tDialogLevelManager.hide(this);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\t_DialogBase = declare(\"dijit._DialogBase\", _DialogBase, {\r\n\t\t\t_setTitleAttr: function(/*String*/ title){\r\n\t\t\t\tthis._set(\"title\", title);\r\n\t\t\t\tthis.titleNode.innerHTML = title;\r\n\t\t\t\tthis.applyTextDir(this.titleNode);\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(textDir){\r\n\t\t\t\tif(this._created && this.textDir != textDir){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tthis.set(\"title\", this.title);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar Dialog = declare(\"dijit.Dialog\", [ContentPane, _DialogBase], {\r\n\t\t// summary:\r\n\t\t//\t\tA modal dialog Widget.\r\n\t\t// description:\r\n\t\t//\t\tPops up a modal dialog window, blocking access to the screen\r\n\t\t//\t\tand also graying out the screen Dialog is extended from\r\n\t\t//\t\tContentPane so it supports all the same parameters (href, etc.).\r\n\t\t// example:\r\n\t\t// |\t<div data-dojo-type=\"dijit/Dialog\" data-dojo-props=\"href: 'test.html'\"></div>\r\n\t\t// example:\r\n\t\t// |\tvar foo = new Dialog({ title: \"test dialog\", content: \"test content\" });\r\n\t\t// |\tfoo.placeAt(win.body());\r\n\t\t// |\tfoo.startup();\r\n\t});\r\n\tDialog._DialogBase = _DialogBase;\t// for monkey patching and dojox/widget/DialogSimple\r\n\r\n\tvar DialogLevelManager = Dialog._DialogLevelManager = {\r\n\t\t// summary:\r\n\t\t//\t\tControls the various active \"levels\" on the page, starting with the\r\n\t\t//\t\tstuff initially visible on the page (at z-index 0), and then having an entry for\r\n\t\t//\t\teach Dialog shown.\r\n\r\n\t\t_beginZIndex: 950,\r\n\r\n\t\tshow: function(/*dijit/_WidgetBase*/ dialog, /*Object*/ underlayAttrs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall right before fade-in animation for new dialog.\r\n\t\t\t//\t\tSaves current focus, displays/adjusts underlay for new dialog,\r\n\t\t\t//\t\tand sets the z-index of the dialog itself.\r\n\t\t\t//\r\n\t\t\t//\t\tNew dialog will be displayed on top of all currently displayed dialogs.\r\n\t\t\t//\r\n\t\t\t//\t\tCaller is responsible for setting focus in new dialog after the fade-in\r\n\t\t\t//\t\tanimation completes.\r\n\r\n\t\t\t// Save current focus\r\n\t\t\tds[ds.length - 1].focus = focus.curNode;\r\n\r\n\t\t\t// Set z-index a bit above previous dialog\r\n\t\t\tvar zIndex = ds[ds.length - 1].dialog ? ds[ds.length - 1].zIndex + 2 : Dialog._DialogLevelManager._beginZIndex;\r\n\t\t\tdomStyle.set(dialog.domNode, 'zIndex', zIndex);\r\n\r\n\t\t\t// Display the underlay, or if already displayed then adjust for this new dialog\r\n\t\t\tDialogUnderlay.show(underlayAttrs, zIndex - 1);\r\n\r\n\t\t\tds.push({dialog: dialog, underlayAttrs: underlayAttrs, zIndex: zIndex});\r\n\t\t},\r\n\r\n\t\thide: function(/*dijit/_WidgetBase*/ dialog){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the specified dialog is hidden/destroyed, after the fade-out\r\n\t\t\t//\t\tanimation ends, in order to reset page focus, fix the underlay, etc.\r\n\t\t\t//\t\tIf the specified dialog isn't open then does nothing.\r\n\t\t\t//\r\n\t\t\t//\t\tCaller is responsible for either setting display:none on the dialog domNode,\r\n\t\t\t//\t\tor calling dijit/popup.hide(), or removing it from the page DOM.\r\n\r\n\t\t\tif(ds[ds.length - 1].dialog == dialog){\r\n\t\t\t\t// Removing the top (or only) dialog in the stack, return focus\r\n\t\t\t\t// to previous dialog\r\n\r\n\t\t\t\tds.pop();\r\n\r\n\t\t\t\tvar pd = ds[ds.length - 1];\t// the new active dialog (or the base page itself)\r\n\r\n\t\t\t\t// Adjust underlay\r\n\t\t\t\tif(ds.length == 1){\r\n\t\t\t\t\t// Returning to original page.  Hide the underlay.\r\n\t\t\t\t\tDialogUnderlay.hide();\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Popping back to previous dialog, adjust underlay.\r\n\t\t\t\t\tDialogUnderlay.show(pd.underlayAttrs, pd.zIndex - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Adjust focus.\r\n\t\t\t\t// TODO: regardless of setting of dialog.refocus, if the exeucte() method set focus somewhere,\r\n\t\t\t\t// don't shift focus back to button.  Note that execute() runs at the start of the fade-out but\r\n\t\t\t\t// this code runs later, at the end of the fade-out.  Menu has code like this.\r\n\t\t\t\tif(dialog.refocus){\r\n\t\t\t\t\t// If we are returning control to a previous dialog but for some reason\r\n\t\t\t\t\t// that dialog didn't have a focused field, set focus to first focusable item.\r\n\t\t\t\t\t// This situation could happen if two dialogs appeared at nearly the same time,\r\n\t\t\t\t\t// since a dialog doesn't set it's focus until the fade-in is finished.\r\n\t\t\t\t\tvar focus = pd.focus;\r\n\t\t\t\t\tif(pd.dialog && (!focus || !dom.isDescendant(focus, pd.dialog.domNode))){\r\n\t\t\t\t\t\tpd.dialog._getFocusItems();\r\n\t\t\t\t\t\tfocus = pd.dialog._firstFocusItem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(focus){\r\n\t\t\t\t\t\t// Refocus the button that spawned the Dialog.   This will fail in corner cases including\r\n\t\t\t\t\t\t// page unload on IE, because the dijit/form/Button that launched the Dialog may get destroyed\r\n\t\t\t\t\t\t// before this code runs.  (#15058)\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tfocus.focus();\r\n\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// Removing a dialog out of order (#9944, #10705).\r\n\t\t\t\t// Don't need to mess with underlay or z-index or anything.\r\n\t\t\t\tvar idx = array.indexOf(array.map(ds, function(elem){\r\n\t\t\t\t\treturn elem.dialog;\r\n\t\t\t\t}), dialog);\r\n\t\t\t\tif(idx != -1){\r\n\t\t\t\t\tds.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tisTop: function(/*dijit/_WidgetBase*/ dialog){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if specified Dialog is the top in the task\r\n\t\t\treturn ds[ds.length - 1].dialog == dialog;\r\n\t\t}\r\n\t};\r\n\r\n\t// Stack representing the various active \"levels\" on the page, starting with the\r\n\t// stuff initially visible on the page (at z-index 0), and then having an entry for\r\n\t// each Dialog shown.\r\n\t// Each element in stack has form {\r\n\t//\t\tdialog: dialogWidget,\r\n\t//\t\tfocus: returnFromGetFocus(),\r\n\t//\t\tunderlayAttrs: attributes to set on underlay (when this widget is active)\r\n\t// }\r\n\tvar ds = Dialog._dialogStack = [\r\n\t\t{dialog: null, focus: null, underlayAttrs: null}    // entry for stuff at z-index: 0\r\n\t];\r\n\r\n\t// If focus was accidentally removed from the dialog, such as if the user clicked a blank\r\n\t// area of the screen, or clicked the browser's address bar and then tabbed into the page,\r\n\t// then refocus.   Won't do anything if focus was removed because the Dialog was closed, or\r\n\t// because a new Dialog popped up on top of the old one, or when focus moves to popups\r\n\tfocus.watch(\"curNode\", function(attr, oldNode, node){\r\n \t\t// Note: if no dialogs, ds.length==1 but ds[ds.length-1].dialog is null\r\n\t\tvar topDialog = ds[ds.length - 1].dialog;\r\n\r\n\t\t// If a node was focused, and there's a Dialog currently showing, and not in the process of fading out...\r\n\t\t// Ignore focus events on other document though because it's likely an Editor inside of the Dialog.\r\n\t\tif(node && topDialog && !topDialog._fadeOutDeferred && node.ownerDocument == topDialog.ownerDocument){\r\n\t\t\t// If the node that was focused is inside the dialog or in a popup, even a context menu that isn't\r\n\t\t\t// technically a descendant of the the dialog, don't do anything.\r\n\t\t\tdo{\r\n\t\t\t\tif(node == topDialog.domNode || domClass.contains(node, \"dijitPopup\")){ return; }\r\n\t\t\t}while(node = node.parentNode);\r\n\r\n\t\t\t// Otherwise, return focus to the dialog.  Use a delay to avoid confusing dijit/focus code's\r\n\t\t\t// own tracking of focus.\r\n\t\t\ttopDialog.focus();\r\n\t\t}\r\n\t});\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/TooltipDialog\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\treturn Dialog;\r\n});\r\n\n\ndefine('dijit/TooltipDialog',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.replace\r\n\t\"dojo/has\",\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"./focus\",\r\n\t\"./layout/ContentPane\",\r\n\t\"./_DialogMixin\",\r\n\t\"./form/_FormMixin\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"dojo/text!./templates/TooltipDialog.html\",\r\n\t\"./main\"        // exports methods to dijit global\r\n], function(declare, domClass, has, keys, lang, on, focus, ContentPane, _DialogMixin, _FormMixin, _TemplatedMixin, template, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/TooltipDialog\r\n\r\n\r\n\tvar TooltipDialog = declare(\"dijit.TooltipDialog\",\r\n\t\t[ContentPane, _TemplatedMixin, _FormMixin, _DialogMixin], {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPops up a dialog that appears like a Tooltip\r\n\r\n\t\t\t// title: String\r\n\t\t\t//\t\tDescription of tooltip dialog (required for a11y)\r\n\t\t\ttitle: \"\",\r\n\r\n\t\t\t// doLayout: [protected] Boolean\r\n\t\t\t//\t\tDon't change this parameter from the default value.\r\n\t\t\t//\t\tThis ContentPane parameter doesn't make sense for TooltipDialog, since TooltipDialog\r\n\t\t\t//\t\tis never a child of a layout container, nor can you specify the size of\r\n\t\t\t//\t\tTooltipDialog in order to control the size of an inner widget.\r\n\t\t\tdoLayout: false,\r\n\r\n\t\t\t// autofocus: Boolean\r\n\t\t\t//\t\tA Toggle to modify the default focus behavior of a Dialog, which\r\n\t\t\t//\t\tis to focus on the first dialog element after opening the dialog.\r\n\t\t\t//\t\tFalse will disable autofocusing.  Default: true.\r\n\t\t\tautofocus: true,\r\n\r\n\t\t\t// baseClass: [protected] String\r\n\t\t\t//\t\tThe root className to use for the various states of this widget\r\n\t\t\tbaseClass: \"dijitTooltipDialog\",\r\n\r\n\t\t\t// _firstFocusItem: [private readonly] DomNode\r\n\t\t\t//\t\tThe pointer to the first focusable node in the dialog.\r\n\t\t\t//\t\tSet by `dijit/_DialogMixin._getFocusItems()`.\r\n\t\t\t_firstFocusItem: null,\r\n\r\n\t\t\t// _lastFocusItem: [private readonly] DomNode\r\n\t\t\t//\t\tThe pointer to which node has focus prior to our dialog.\r\n\t\t\t//\t\tSet by `dijit/_DialogMixin._getFocusItems()`.\r\n\t\t\t_lastFocusItem: null,\r\n\r\n\t\t\ttemplateString: template,\r\n\r\n\t\t\t_setTitleAttr: \"containerNode\",\r\n\r\n\t\t\tpostCreate: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.own(on(this.domNode, \"keydown\", lang.hitch(this, \"_onKey\")));\r\n\t\t\t},\r\n\r\n\t\t\torient: function(/*DomNode*/ node, /*String*/ aroundCorner, /*String*/ tooltipCorner){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tConfigure widget to be displayed in given position relative to the button.\r\n\t\t\t\t//\t\tThis is called from the dijit.popup code, and should not be called\r\n\t\t\t\t//\t\tdirectly.\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprotected\r\n\r\n\t\t\t\t// Note: intentionally not using dijitTooltip class since that sets position:absolute, which\r\n\t\t\t\t// confuses dijit/popup trying to get the size of the tooltip.\r\n\t\t\t\tvar newC = {\r\n\t\t\t\t\t// Real around node\r\n\t\t\t\t\t\"MR-ML\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"ML-MR\": \"dijitTooltipLeft\",\r\n\t\t\t\t\t\"TM-BM\": \"dijitTooltipAbove\",\r\n\t\t\t\t\t\"BM-TM\": \"dijitTooltipBelow\",\r\n\t\t\t\t\t\"BL-TL\": \"dijitTooltipBelow dijitTooltipABLeft\",\r\n\t\t\t\t\t\"TL-BL\": \"dijitTooltipAbove dijitTooltipABLeft\",\r\n\t\t\t\t\t\"BR-TR\": \"dijitTooltipBelow dijitTooltipABRight\",\r\n\t\t\t\t\t\"TR-BR\": \"dijitTooltipAbove dijitTooltipABRight\",\r\n\t\t\t\t\t\"BR-BL\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"BL-BR\": \"dijitTooltipLeft\",\r\n\r\n\t\t\t\t\t// Positioning \"around\" a point, ex: mouse position\r\n\t\t\t\t\t\"BR-TL\": \"dijitTooltipBelow dijitTooltipABLeft\",\r\n\t\t\t\t\t\"BL-TR\": \"dijitTooltipBelow dijitTooltipABRight\",\r\n\t\t\t\t\t\"TL-BR\": \"dijitTooltipAbove dijitTooltipABRight\",\r\n\t\t\t\t\t\"TR-BL\": \"dijitTooltipAbove dijitTooltipABLeft\"\r\n\t\t\t\t}[aroundCorner + \"-\" + tooltipCorner];\r\n\r\n\t\t\t\tdomClass.replace(this.domNode, newC, this._currentOrientClass || \"\");\r\n\t\t\t\tthis._currentOrientClass = newC;\r\n\r\n\t\t\t\t// Tooltip.orient() has code to reposition connector for when Tooltip is before/after anchor.\r\n\t\t\t\t// Not putting here to avoid code bloat, and since TooltipDialogs are generally above/below.\r\n\t\t\t\t// Should combine code from Tooltip and TooltipDialog.\r\n\t\t\t},\r\n\r\n\t\t\tfocus: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tFocus on first field\r\n\t\t\t\tthis._getFocusItems();\r\n\t\t\t\tfocus.focus(this._firstFocusItem);\r\n\t\t\t},\r\n\r\n\t\t\tonOpen: function(/*Object*/ pos){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tCalled when dialog is displayed.\r\n\t\t\t\t//\t\tThis is called from the dijit.popup code, and should not be called directly.\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprotected\r\n\r\n\t\t\t\tthis.orient(this.domNode, pos.aroundCorner, pos.corner);\r\n\r\n\t\t\t\t// Position the tooltip connector for middle alignment.\r\n\t\t\t\t// This could not have been done in orient() since the tooltip wasn't positioned at that time.\r\n\t\t\t\tvar aroundNodeCoords = pos.aroundNodePos;\r\n\t\t\t\tif(pos.corner.charAt(0) == 'M' && pos.aroundCorner.charAt(0) == 'M'){\r\n\t\t\t\t\tthis.connectorNode.style.top = aroundNodeCoords.y + ((aroundNodeCoords.h - this.connectorNode.offsetHeight) >> 1) - pos.y + \"px\";\r\n\t\t\t\t\tthis.connectorNode.style.left = \"\";\r\n\t\t\t\t}else if(pos.corner.charAt(1) == 'M' && pos.aroundCorner.charAt(1) == 'M'){\r\n\t\t\t\t\tthis.connectorNode.style.left = aroundNodeCoords.x + ((aroundNodeCoords.w - this.connectorNode.offsetWidth) >> 1) - pos.x + \"px\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._onShow(); // lazy load trigger  (TODO: shouldn't we load before positioning?)\r\n\t\t\t},\r\n\r\n\t\t\tonClose: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tCalled when dialog is hidden.\r\n\t\t\t\t//\t\tThis is called from the dijit.popup code, and should not be called directly.\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprotected\r\n\t\t\t\tthis.onHide();\r\n\t\t\t},\r\n\r\n\t\t\t_onKey: function(/*Event*/ evt){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tHandler for keydown events\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tKeep keyboard focus in dialog; close dialog on escape key\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\r\n\t\t\t\tif(evt.keyCode == keys.ESCAPE){\r\n\t\t\t\t\t// Use defer to avoid crash on IE, see #10396.  Not sure if this is still needed or not.\r\n\t\t\t\t\t// If this if() wasn't here, presumably dijit/popup would catch the ESCAPE key and close the popup.\r\n\t\t\t\t\tthis.defer(\"onCancel\");\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t}else if(evt.keyCode == keys.TAB){\r\n\t\t\t\t\tvar node = evt.target;\r\n\t\t\t\t\tthis._getFocusItems();\r\n\t\t\t\t\tif(this._firstFocusItem == this._lastFocusItem){\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}else if(node == this._firstFocusItem && evt.shiftKey){\r\n\t\t\t\t\t\tfocus.focus(this._lastFocusItem); // send focus to last item in dialog\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}else if(node == this._lastFocusItem && !evt.shiftKey){\r\n\t\t\t\t\t\tfocus.focus(this._firstFocusItem); // send focus to first item in dialog\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// we want the browser's default tab handling to move focus\r\n\t\t\t\t\t\t// but we don't want the tab to propagate upwards\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tTooltipDialog.extend({\r\n\t\t\t_setTitleAttr: function(/*String*/ title){\r\n\t\t\t\tthis.containerNode.title = (this.textDir && this.enforceTextDirWithUcc) ? this.enforceTextDirWithUcc(null, title) : title;\r\n\t\t\t\tthis._set(\"title\", title);\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(/*String*/ textDir){\r\n\t\t\t\tif(!this._created || this.textDir != textDir){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tif(this.textDir && this.title){\r\n\t\t\t\t\t\tthis.containerNode.title = this.enforceTextDirWithUcc(null, this.title);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn TooltipDialog;\r\n});\r\n\ndefine('dijit/_KeyNavMixin',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/keys\", // keys.END keys.HOME, keys.LEFT_ARROW etc.\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dijit/registry\",\r\n\t\"dijit/_FocusMixin\"        // to make _onBlur() work\r\n], function(array, declare, domAttr, keys, lang, on, registry, _FocusMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_KeyNavMixin\r\n\r\n\treturn declare(\"dijit._KeyNavMixin\", _FocusMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin to allow arrow key and letter key navigation of child or descendant widgets.\r\n\t\t//\t\tIt can be used by dijit/_Container based widgets with a flat list of children,\r\n\t\t//\t\tor more complex widgets like dijit/Tree.\r\n\t\t//\r\n\t\t//\t\tTo use this mixin, the subclass must:\r\n\t\t//\r\n\t\t//\t\t\t- Implement  _getNext(), _getFirst(), _getLast(), _onLeftArrow(), _onRightArrow()\r\n\t\t//\t\t\t  _onDownArrow(), _onUpArrow() methods to handle home/end/left/right/up/down keystrokes.\r\n\t\t//\t\t\t  Next and previous in this context refer to a linear ordering of the descendants used\r\n\t\t//\t\t\t  by letter key search.\r\n\t\t//\t\t\t- Set all descendants' initial tabIndex to \"-1\"; both initial descendants and any\r\n\t\t//\t\t\t  descendants added later, by for example addChild()\r\n\t\t//\t\t\t- Define childSelector to a function or string that identifies focusable descendant widgets\r\n\t\t//\r\n\t\t//\t\tAlso, child widgets must implement a focus() method.\r\n\r\n\t\t/*=====\r\n\t\t // focusedChild: [protected readonly] Widget\r\n\t\t //\t\tThe currently focused child widget, or null if there isn't one\r\n\t\t focusedChild: null,\r\n\r\n\t\t // _keyNavCodes: Object\r\n\t\t //\t\tHash mapping key code (arrow keys and home/end key) to functions to handle those keys.\r\n\t\t //\t\tUsually not used directly, as subclasses can instead override _onLeftArrow() etc.\r\n\t\t _keyNavCodes: {},\r\n\t\t =====*/\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tTab index of the container; same as HTML tabIndex attribute.\r\n\t\t//\t\tNote then when user tabs into the container, focus is immediately\r\n\t\t//\t\tmoved to the first item in the container.\r\n\t\ttabIndex: \"0\",\r\n\r\n\t\t// childSelector: [protected abstract] Function||String\r\n\t\t//\t\tSelector (passed to on.selector()) used to identify what to treat as a child widget.   Used to monitor\r\n\t\t//\t\tfocus events and set this.focusedChild.   Must be set by implementing class.   If this is a string\r\n\t\t//\t\t(ex: \"> *\") then the implementing class must require dojo/query.\r\n\t\tchildSelector: null,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Set tabIndex on this.domNode.  Will be automatic after #7381 is fixed.\r\n\t\t\tdomAttr.set(this.domNode, \"tabIndex\", this.tabIndex);\r\n\r\n\t\t\tif(!this._keyNavCodes){\r\n\t\t\t\tvar keyCodes = this._keyNavCodes = {};\r\n\t\t\t\tkeyCodes[keys.HOME] = lang.hitch(this, \"focusFirstChild\");\r\n\t\t\t\tkeyCodes[keys.END] = lang.hitch(this, \"focusLastChild\");\r\n\t\t\t\tkeyCodes[this.isLeftToRight() ? keys.LEFT_ARROW : keys.RIGHT_ARROW] = lang.hitch(this, \"_onLeftArrow\");\r\n\t\t\t\tkeyCodes[this.isLeftToRight() ? keys.RIGHT_ARROW : keys.LEFT_ARROW] = lang.hitch(this, \"_onRightArrow\");\r\n\t\t\t\tkeyCodes[keys.UP_ARROW] = lang.hitch(this, \"_onUpArrow\");\r\n\t\t\t\tkeyCodes[keys.DOWN_ARROW] = lang.hitch(this, \"_onDownArrow\");\r\n\t\t\t}\r\n\r\n\t\t\tvar self = this,\r\n\t\t\t\tchildSelector = typeof this.childSelector == \"string\"\r\n\t\t\t\t\t? this.childSelector\r\n\t\t\t\t\t: lang.hitch(this, \"childSelector\");\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.domNode, \"keypress\", lang.hitch(this, \"_onContainerKeypress\")),\r\n\t\t\t\ton(this.domNode, \"keydown\", lang.hitch(this, \"_onContainerKeydown\")),\r\n\t\t\t\ton(this.domNode, \"focus\", lang.hitch(this, \"_onContainerFocus\")),\r\n\t\t\t\ton(this.containerNode, on.selector(childSelector, \"focusin\"), function(evt){\r\n\t\t\t\t\tself._onChildFocus(registry.getEnclosingWidget(this), evt);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_onLeftArrow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled on left arrow key, or right arrow key if widget is in RTL mode.\r\n\t\t\t//\t\tShould go back to the previous child in horizontal container widgets like Toolbar.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\t_onRightArrow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled on right arrow key, or left arrow key if widget is in RTL mode.\r\n\t\t\t//\t\tShould go to the next child in horizontal container widgets like Toolbar.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\t_onUpArrow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled on up arrow key. Should go to the previous child in vertical container widgets like Menu.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\t_onDownArrow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled on down arrow key. Should go to the next child in vertical container widgets like Menu.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDefault focus() implementation: focus the first child.\r\n\t\t\tthis.focusFirstChild();\r\n\t\t},\r\n\r\n\t\t_getFirstFocusableChild: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns first child that can be focused.\r\n\r\n\t\t\t// Leverage _getNextFocusableChild() to skip disabled children\r\n\t\t\treturn this._getNextFocusableChild(null, 1);\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\t_getLastFocusableChild: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns last child that can be focused.\r\n\r\n\t\t\t// Leverage _getNextFocusableChild() to skip disabled children\r\n\t\t\treturn this._getNextFocusableChild(null, -1);\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tfocusFirstChild: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the first focusable child in the container.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.focusChild(this._getFirstFocusableChild());\r\n\t\t},\r\n\r\n\t\tfocusLastChild: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the last focusable child in the container.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.focusChild(this._getLastFocusableChild());\r\n\t\t},\r\n\r\n\t\tfocusChild: function(/*dijit/_WidgetBase*/ widget, /*Boolean*/ last){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus specified child widget.\r\n\t\t\t// widget:\r\n\t\t\t//\t\tReference to container's child widget\r\n\t\t\t// last:\r\n\t\t\t//\t\tIf true and if widget has multiple focusable nodes, focus the\r\n\t\t\t//\t\tlast one instead of the first one\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!widget){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.focusedChild && widget !== this.focusedChild){\r\n\t\t\t\tthis._onChildBlur(this.focusedChild);\t// used to be used by _MenuBase\r\n\t\t\t}\r\n\t\t\twidget.set(\"tabIndex\", this.tabIndex);\t// for IE focus outline to appear, must set tabIndex before focus\r\n\t\t\twidget.focus(last ? \"end\" : \"start\");\r\n\r\n\t\t\t// Don't set focusedChild here, because the focus event should trigger a call to _onChildFocus(), which will\r\n\t\t\t// set it.   More importantly, _onChildFocus(), which may be executed asynchronously (after this function\r\n\t\t\t// returns) needs to know the old focusedChild to set its tabIndex to -1.\r\n\t\t},\r\n\r\n\t\t_onContainerFocus: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when the container itself gets focus.\r\n\t\t\t// description:\r\n\t\t\t//\t\tInitially the container itself has a tabIndex, but when it gets\r\n\t\t\t//\t\tfocus, switch focus to first child.\r\n\t\t\t//\r\n\t\t\t//\t\tTODO for 2.0 (or earlier): Instead of having the container tabbable, always maintain a single child\r\n\t\t\t//\t\twidget as tabbable, Requires code in startup(), addChild(), and removeChild().\r\n\t\t\t//\t\tThat would avoid various issues like #17347.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// Note that we can't use _onFocus() because switching focus from the\r\n\t\t\t// _onFocus() handler confuses the focus.js code\r\n\t\t\t// (because it causes _onFocusNode() to be called recursively).\r\n\t\t\t// Also, _onFocus() would fire when focus went directly to a child widget due to mouse click.\r\n\r\n\t\t\t// Ignore spurious focus events:\r\n\t\t\t//\t1. focus on a child widget bubbles on FF\r\n\t\t\t//\t2. on IE, clicking the scrollbar of a select dropdown moves focus from the focused child item to me\r\n\t\t\tif(evt.target !== this.domNode || this.focusedChild){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.focus();\r\n\t\t},\r\n\r\n\t\t_onFocus: function(){\r\n\t\t\t// When the container gets focus by being tabbed into, or a descendant gets focus by being clicked,\r\n\t\t\t// set the container's tabIndex to -1 (don't remove as that breaks Safari 4) so that tab or shift-tab\r\n\t\t\t// will go to the fields after/before the container, rather than the container itself\r\n\t\t\tdomAttr.set(this.domNode, \"tabIndex\", \"-1\");\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onBlur: function(evt){\r\n\t\t\t// When focus is moved away the container, and its descendant (popup) widgets,\r\n\t\t\t// then restore the container's tabIndex so that user can tab to it again.\r\n\t\t\t// Note that using _onBlur() so that this doesn't happen when focus is shifted\r\n\t\t\t// to one of my child widgets (typically a popup)\r\n\r\n\t\t\t// TODO: for 2.0 consider changing this to blur whenever the container blurs, to be truthful that there is\r\n\t\t\t// no focused child at that time.\r\n\r\n\t\t\tdomAttr.set(this.domNode, \"tabIndex\", this.tabIndex);\r\n\t\t\tif(this.focusedChild){\r\n\t\t\t\tthis.focusedChild.set(\"tabIndex\", \"-1\");\r\n\t\t\t\tthis.lastFocusedChild = this.focusedChild;\r\n\t\t\t\tthis._set(\"focusedChild\", null);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onChildFocus: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when a child widget gets focus, either by user clicking\r\n\t\t\t//\t\tit, or programatically by arrow key handling code.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIt marks that the current node is the selected one, and the previously\r\n\t\t\t//\t\tselected node no longer is.\r\n\r\n\t\t\tif(child && child != this.focusedChild){\r\n\t\t\t\tif(this.focusedChild && !this.focusedChild._destroyed){\r\n\t\t\t\t\t// mark that the previously focusable node is no longer focusable\r\n\t\t\t\t\tthis.focusedChild.set(\"tabIndex\", \"-1\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// mark that the new node is the currently selected one\r\n\t\t\t\tchild.set(\"tabIndex\", this.tabIndex);\r\n\t\t\t\tthis.lastFocused = child;\t\t// back-compat for Tree, remove for 2.0\r\n\t\t\t\tthis._set(\"focusedChild\", child);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_searchString: \"\",\r\n\t\t// multiCharSearchDuration: Number\r\n\t\t//\t\tIf multiple characters are typed where each keystroke happens within\r\n\t\t//\t\tmultiCharSearchDuration of the previous keystroke,\r\n\t\t//\t\tsearch for nodes matching all the keystrokes.\r\n\t\t//\r\n\t\t//\t\tFor example, typing \"ab\" will search for entries starting with\r\n\t\t//\t\t\"ab\" unless the delay between \"a\" and \"b\" is greater than multiCharSearchDuration.\r\n\t\tmultiCharSearchDuration: 1000,\r\n\r\n\t\tonKeyboardSearch: function(/*dijit/_WidgetBase*/ item, /*Event*/ evt, /*String*/ searchString, /*Number*/ numMatches){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen a key is pressed that matches a child item,\r\n\t\t\t//\t\tthis method is called so that a widget can take appropriate action is necessary.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(item){\r\n\t\t\t\tthis.focusChild(item);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_keyboardSearchCompare: function(/*dijit/_WidgetBase*/ item, /*String*/ searchString){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCompares the searchString to the widget's text label, returning:\r\n\t\t\t//\r\n\t\t\t//\t\t\t* -1: a high priority match  and stop searching\r\n\t\t\t//\t\t \t* 0: not a match\r\n\t\t\t//\t\t \t* 1: a match but keep looking for a higher priority match\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar element = item.domNode,\r\n\t\t\t\ttext = item.label || (element.focusNode ? element.focusNode.label : '') || element.innerText || element.textContent || \"\",\r\n\t\t\t\tcurrentString = text.replace(/^\\s+/, '').substr(0, searchString.length).toLowerCase();\r\n\r\n\t\t\treturn (!!searchString.length && currentString == searchString) ? -1 : 0; // stop searching after first match by default\r\n\t\t},\r\n\r\n\t\t_onContainerKeydown: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen a key is pressed, if it's an arrow key etc. then it's handled here.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar func = this._keyNavCodes[evt.keyCode];\r\n\t\t\tif(func){\r\n\t\t\t\tfunc(evt, this.focusedChild);\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\tthis._searchString = ''; // so a DOWN_ARROW b doesn't search for ab\r\n\t\t\t}else if(evt.keyCode == keys.SPACE && this._searchTimer && !(evt.ctrlKey || evt.altKey || evt.metaKey)){\r\n\t\t\t\tevt.stopImmediatePropagation(); // stop a11yclick and _HasDropdown from seeing SPACE if we're doing keyboard searching\r\n\t\t\t\tevt.preventDefault(); // stop IE from scrolling, and most browsers (except FF) from sending keypress\r\n\t\t\t\tthis._keyboardSearch(evt, ' ');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onContainerKeypress: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen a printable key is pressed, it's handled here, searching by letter.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// Ignore:\r\n\t\t\t// \t\t- duplicate events on firefox (ex: arrow key that will be handled by keydown handler)\r\n\t\t\t//\t\t- control sequences like CMD-Q.\r\n\t\t\t//\t\t- the SPACE key (only occurs on FF)\r\n\t\t\t//\r\n\t\t\t// Note: if there's no search in progress, then SPACE should be ignored.   If there is a search\r\n\t\t\t// in progress, then SPACE is handled in _onContainerKeyDown.\r\n\t\t\tif(evt.charCode <= keys.SPACE || evt.ctrlKey || evt.altKey || evt.metaKey){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation();\r\n\r\n\t\t\tthis._keyboardSearch(evt, String.fromCharCode(evt.charCode).toLowerCase());\r\n\t\t},\r\n\r\n\t\t_keyboardSearch: function(/*Event*/ evt, /*String*/ keyChar){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPerform a search of the widget's options based on the user's keyboard activity\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalled on keypress (and sometimes keydown), searches through this widget's children\r\n\t\t\t//\t\tlooking for items that match the user's typed search string.  Multiple characters\r\n\t\t\t//\t\ttyped within 1 sec of each other are combined for multicharacter searching.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar\r\n\t\t\t\tmatchedItem = null,\r\n\t\t\t\tsearchString,\r\n\t\t\t\tnumMatches = 0,\r\n\t\t\t\tsearch = lang.hitch(this, function(){\r\n\t\t\t\t\tif(this._searchTimer){\r\n\t\t\t\t\t\tthis._searchTimer.remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._searchString += keyChar;\r\n\t\t\t\t\tvar allSameLetter = /^(.)\\1*$/.test(this._searchString);\r\n\t\t\t\t\tvar searchLen = allSameLetter ? 1 : this._searchString.length;\r\n\t\t\t\t\tsearchString = this._searchString.substr(0, searchLen);\r\n\t\t\t\t\t// commented out code block to search again if the multichar search fails after a smaller timeout\r\n\t\t\t\t\t//this._searchTimer = this.defer(function(){ // this is the \"failure\" timeout\r\n\t\t\t\t\t//\tthis._typingSlowly = true; // if the search fails, then treat as a full timeout\r\n\t\t\t\t\t//\tthis._searchTimer = this.defer(function(){ // this is the \"success\" timeout\r\n\t\t\t\t\t//\t\tthis._searchTimer = null;\r\n\t\t\t\t\t//\t\tthis._searchString = '';\r\n\t\t\t\t\t//\t}, this.multiCharSearchDuration >> 1);\r\n\t\t\t\t\t//}, this.multiCharSearchDuration >> 1);\r\n\t\t\t\t\tthis._searchTimer = this.defer(function(){ // this is the \"success\" timeout\r\n\t\t\t\t\t\tthis._searchTimer = null;\r\n\t\t\t\t\t\tthis._searchString = '';\r\n\t\t\t\t\t}, this.multiCharSearchDuration);\r\n\t\t\t\t\tvar currentItem = this.focusedChild || null;\r\n\t\t\t\t\tif(searchLen == 1 || !currentItem){\r\n\t\t\t\t\t\tcurrentItem = this._getNextFocusableChild(currentItem, 1); // skip current\r\n\t\t\t\t\t\tif(!currentItem){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} // no items\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar stop = currentItem;\r\n\t\t\t\t\tdo{\r\n\t\t\t\t\t\tvar rc = this._keyboardSearchCompare(currentItem, searchString);\r\n\t\t\t\t\t\tif(!!rc && numMatches++ == 0){\r\n\t\t\t\t\t\t\tmatchedItem = currentItem;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(rc == -1){ // priority match\r\n\t\t\t\t\t\t\tnumMatches = -1;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrentItem = this._getNextFocusableChild(currentItem, 1);\r\n\t\t\t\t\t}while(currentItem != stop);\r\n\t\t\t\t\t// commented out code block to search again if the multichar search fails after a smaller timeout\r\n\t\t\t\t\t//if(!numMatches && (this._typingSlowly || searchLen == 1)){\r\n\t\t\t\t\t//\tthis._searchString = '';\r\n\t\t\t\t\t//\tif(searchLen > 1){\r\n\t\t\t\t\t//\t\t// if no matches and they're typing slowly, then go back to first letter searching\r\n\t\t\t\t\t//\t\tsearch();\r\n\t\t\t\t\t//\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\r\n\t\t\tsearch();\r\n\t\t\t// commented out code block to search again if the multichar search fails after a smaller timeout\r\n\t\t\t//this._typingSlowly = false;\r\n\t\t\tthis.onKeyboardSearch(matchedItem, evt, searchString, numMatches);\r\n\t\t},\r\n\r\n\t\t_onChildBlur: function(/*dijit/_WidgetBase*/ /*===== widget =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when focus leaves a child widget to go\r\n\t\t\t//\t\tto a sibling widget.\r\n\t\t\t//\t\tUsed to be used by MenuBase.js (remove for 2.0)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\t_getNextFocusableChild: function(child, dir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the next or previous focusable descendant, compared to \"child\".\r\n\t\t\t//\t\tImplements and extends _KeyNavMixin._getNextFocusableChild() for a _Container.\r\n\t\t\t// child: Widget\r\n\t\t\t//\t\tThe current widget\r\n\t\t\t// dir: Integer\r\n\t\t\t//\t\t- 1 = after\r\n\t\t\t//\t\t- -1 = before\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\r\n\t\t\tvar wrappedValue = child;\r\n\t\t\tdo{\r\n\t\t\t\tif(!child){\r\n\t\t\t\t\tchild = this[dir > 0 ? \"_getFirst\" : \"_getLast\"]();\r\n\t\t\t\t\tif(!child){ break; }\r\n\t\t\t\t}else{\r\n\t\t\t\t\tchild = this._getNext(child, dir);\r\n\t\t\t\t}\r\n\t\t\t\tif(child != null && child != wrappedValue && child.isFocusable()){\r\n\t\t\t\t\treturn child;\t// dijit/_WidgetBase\r\n\t\t\t\t}\r\n\t\t\t}while(child != wrappedValue);\r\n\t\t\t// no focusable child found\r\n\t\t\treturn null;\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\t_getFirst: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the first child.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\r\n\t\t\treturn null;\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\t_getLast: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the last descendant.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\r\n\t\t\treturn null;\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\t_getNext: function(child, dir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the next descendant, compared to \"child\".\r\n\t\t\t// child: Widget\r\n\t\t\t//\t\tThe current widget\r\n\t\t\t// dir: Integer\r\n\t\t\t//\t\t- 1 = after\r\n\t\t\t//\t\t- -1 = before\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\r\n\t\t\tif(child){\r\n\t\t\t\tchild = child.domNode;\r\n\t\t\t\twhile(child){\r\n\t\t\t\t\tchild = child[dir < 0 ? \"previousSibling\" : \"nextSibling\"];\r\n\t\t\t\t\tif(child  && \"getAttribute\" in child){\r\n\t\t\t\t\t\tvar w = registry.byNode(child);\r\n\t\t\t\t\t\tif(w){\r\n\t\t\t\t\t\t\treturn w; // dijit/_WidgetBase\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\t// dijit/_WidgetBase\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/_KeyNavContainer',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/keys\", // keys.END keys.HOME\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"./registry\",\r\n\t\"./_Container\",\r\n\t\"./_FocusMixin\",\r\n\t\"./_KeyNavMixin\"\r\n], function(array, declare, domAttr, kernel, keys, lang, registry, _Container, _FocusMixin, _KeyNavMixin){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/_KeyNavContainer\r\n\r\n\treturn declare(\"dijit._KeyNavContainer\", [_FocusMixin, _KeyNavMixin, _Container], {\r\n\t\t// summary:\r\n\t\t//\t\tA _Container with keyboard navigation of its children.\r\n\t\t// description:\r\n\t\t//\t\tProvides normalized keyboard and focusing code for Container widgets.\r\n\t\t//\t\tTo use this mixin, call connectKeyNavHandlers() in postCreate().\r\n\t\t//\t\tAlso, child widgets must implement a focus() method.\r\n\r\n\t\tconnectKeyNavHandlers: function(/*keys[]*/ prevKeyCodes, /*keys[]*/ nextKeyCodes){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  You can call this in postCreate() to attach the keyboard handlers to the container,\r\n\t\t\t//\t\tbut the preferred method is to override _onLeftArrow() and _onRightArrow(), or\r\n\t\t\t//\t\t_onUpArrow() and _onDownArrow(), to call focusPrev() and focusNext().\r\n\t\t\t// prevKeyCodes: keys[]\r\n\t\t\t//\t\tKey codes for navigating to the previous child.\r\n\t\t\t// nextKeyCodes: keys[]\r\n\t\t\t//\t\tKey codes for navigating to the next child.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// TODO: remove for 2.0, and make subclasses override _onLeftArrow, _onRightArrow etc. instead.\r\n\r\n\t\t\tvar keyCodes = (this._keyNavCodes = {});\r\n\t\t\tvar prev = lang.hitch(this, \"focusPrev\");\r\n\t\t\tvar next = lang.hitch(this, \"focusNext\");\r\n\t\t\tarray.forEach(prevKeyCodes, function(code){\r\n\t\t\t\tkeyCodes[code] = prev;\r\n\t\t\t});\r\n\t\t\tarray.forEach(nextKeyCodes, function(code){\r\n\t\t\t\tkeyCodes[code] = next;\r\n\t\t\t});\r\n\t\t\tkeyCodes[keys.HOME] = lang.hitch(this, \"focusFirstChild\");\r\n\t\t\tkeyCodes[keys.END] = lang.hitch(this, \"focusLastChild\");\r\n\t\t},\r\n\r\n\t\tstartupKeyNavChildren: function(){\r\n\t\t\tkernel.deprecated(\"startupKeyNavChildren() call no longer needed\", \"\", \"2.0\");\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tarray.forEach(this.getChildren(), lang.hitch(this, \"_startupChild\"));\r\n\t\t},\r\n\r\n\t\taddChild: function(/*dijit/_WidgetBase*/ widget, /*int?*/ insertIndex){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._startupChild(widget);\r\n\t\t},\r\n\r\n\t\t_startupChild: function(/*dijit/_WidgetBase*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSetup for each child widget.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets tabIndex=-1 on each child, so that the tab key will\r\n\t\t\t//\t\tleave the container rather than visiting each child.\r\n\t\t\t//\r\n\t\t\t//\t\tNote: if you add children by a different method than addChild(), then need to call this manually\r\n\t\t\t//\t\tor at least make sure the child's tabIndex is -1.\r\n\t\t\t//\r\n\t\t\t//\t\tNote: see also _LayoutWidget.setupChild(), which is also called for each child widget.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\twidget.set(\"tabIndex\", \"-1\");\r\n\t\t},\r\n\r\n\t\t_getFirst: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the first child.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\treturn children.length ? children[0] : null;\r\n\t\t},\r\n\r\n\t\t_getLast: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the last descendant.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\treturn children.length ? children[children.length - 1] : null;\r\n\t\t},\r\n\r\n\t\tfocusNext: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the next widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.focusChild(this._getNextFocusableChild(this.focusedChild, 1));\r\n\t\t},\r\n\r\n\t\tfocusPrev: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the last focusable node in the previous widget\r\n\t\t\t//\t\t(ex: go to the ComboButton icon section rather than button section)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.focusChild(this._getNextFocusableChild(this.focusedChild, -1), true);\r\n\t\t},\r\n\r\n\t\tchildSelector: function(/*DOMNode*/ node){\r\n\t\t\t// Implement _KeyNavMixin.childSelector, to identify focusable child nodes.\r\n\t\t\t// If we allowed a dojo/query dependency from this module this could more simply be a string \"> *\"\r\n\t\t\t// instead of this function.\r\n\r\n\t\t\tvar node = registry.byNode(node);\r\n\t\t\treturn node && node.getParent() == this;\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/Toolbar',[\r\n\t\"require\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/has\",\r\n\t\"dojo/keys\", // keys.LEFT_ARROW keys.RIGHT_ARROW\r\n\t\"dojo/ready\",\r\n\t\"./_Widget\",\r\n\t\"./_KeyNavContainer\",\r\n\t\"./_TemplatedMixin\"\r\n], function(require, declare, has, keys, ready, _Widget, _KeyNavContainer, _TemplatedMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Toolbar\r\n\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/ToolbarSeparator\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\treturn declare(\"dijit.Toolbar\", [_Widget, _TemplatedMixin, _KeyNavContainer], {\r\n\t\t// summary:\r\n\t\t//\t\tA Toolbar widget, used to hold things like `dijit/Editor` buttons\r\n\r\n\t\ttemplateString:\r\n\t\t\t'<div class=\"dijit\" role=\"toolbar\" tabIndex=\"${tabIndex}\" data-dojo-attach-point=\"containerNode\">' +\r\n\t\t\t'</div>',\r\n\r\n\t\tbaseClass: \"dijitToolbar\",\r\n\r\n\t\t_onLeftArrow: function(){\r\n\t\t\tthis.focusPrev();\r\n\t\t},\r\n\r\n\t\t_onRightArrow: function(){\r\n\t\t\tthis.focusNext();\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/ToolbarSeparator',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\"\r\n], function(declare, dom, _Widget, _TemplatedMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/ToolbarSeparator\r\n\r\n\r\n\treturn declare(\"dijit.ToolbarSeparator\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA spacer between two `dijit.Toolbar` items\r\n\r\n\t\ttemplateString: '<div class=\"dijitToolbarSeparator dijitInline\" role=\"presentation\"></div>',\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdom.setSelectable(this.domNode, false);\r\n\t\t},\r\n\r\n\t\tisFocusable: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis widget isn't focusable, so pass along that fact.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_ButtonMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/has\",\r\n\t\"../registry\"        // registry.byNode\r\n], function(declare, dom, has, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ButtonMixin\r\n\r\n\tvar ButtonMixin = declare(\"dijit.form._ButtonMixin\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), null, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin to add a thin standard API wrapper to a normal HTML button\r\n\t\t// description:\r\n\t\t//\t\tA label should always be specified (through innerHTML) or the label attribute.\r\n\t\t//\r\n\t\t//\t\tAttach points:\r\n\t\t//\r\n\t\t//\t\t- focusNode (required): this node receives focus\r\n\t\t//\t\t- valueNode (optional): this node's value gets submitted with FORM elements\r\n\t\t//\t\t- containerNode (optional): this node gets the innerHTML assignment for label\r\n\t\t// example:\r\n\t\t// |\t<button data-dojo-type=\"dijit/form/Button\" onClick=\"...\">Hello world</button>\r\n\t\t// example:\r\n\t\t// |\tvar button1 = new Button({label: \"hello world\", onClick: foo});\r\n\t\t// |\tdojo.body().appendChild(button1.domNode);\r\n\r\n\t\t// label: HTML String\r\n\t\t//\t\tContent to display in button.\r\n\t\tlabel: \"\",\r\n\r\n\t\t// type: [const] String\r\n\t\t//\t\tType of button (submit, reset, button, checkbox, radio)\r\n\t\ttype: \"button\",\r\n\r\n\t\t__onClick: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to divert the real click onto the hidden INPUT that has a native default action associated with it\r\n\t\t\t// type:\r\n\t\t\t//\t\tprivate\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tif(!this.disabled){\r\n\t\t\t\t// cannot use on.emit since button default actions won't occur\r\n\t\t\t\tthis.valueNode.click(e);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to handle click actions\r\n\t\t\tif(this.disabled){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.onClick(e) === false){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tvar cancelled = e.defaultPrevented;\r\n\r\n\t\t\t// Signal Form/Dialog to submit/close.  For 2.0, consider removing this code and instead making the Form/Dialog\r\n\t\t\t// listen for bubbled click events where evt.target.type == \"submit\" && !evt.defaultPrevented.\r\n\t\t\tif(!cancelled && this.type == \"submit\" && !(this.valueNode || this.focusNode).form){\r\n\t\t\t\tfor(var node = this.domNode; node.parentNode; node = node.parentNode){\r\n\t\t\t\t\tvar widget = registry.byNode(node);\r\n\t\t\t\t\tif(widget && typeof widget._onSubmit == \"function\"){\r\n\t\t\t\t\t\twidget._onSubmit(e);\r\n\t\t\t\t\t\te.preventDefault(); // action has already occurred\r\n\t\t\t\t\t\tcancelled = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn !cancelled;\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdom.setSelectable(this.focusNode, false);\r\n\t\t},\r\n\r\n\t\tonClick: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback for when button is clicked.\r\n\t\t\t//\t\tIf type=\"submit\", return true to perform submit, or false to cancel it.\r\n\t\t\t// type:\r\n\t\t\t//\t\tcallback\r\n\t\t\treturn true;\t\t// Boolean\r\n\t\t},\r\n\r\n\t\t_setLabelAttr: function(/*String*/ content){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for set('label', ...) to work.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSet the label (text) of the button; takes an HTML string.\r\n\t\t\tthis._set(\"label\", content);\r\n\t\t\tvar labelNode = this.containerNode || this.focusNode;\r\n\t\t\tlabelNode.innerHTML = content;\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tButtonMixin = declare(\"dijit.form._ButtonMixin\", ButtonMixin, {\r\n\t\t\t_setLabelAttr: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tvar labelNode = this.containerNode || this.focusNode;\r\n\t\t\t\tthis.applyTextDir(labelNode);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn ButtonMixin;\r\n});\r\n\n\ndefine('dijit/form/Button',[\r\n\t\"require\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/has\", // has(\"dijit-legacy-requires\")\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\", // lang.trim\r\n\t\"dojo/ready\",\r\n\t\"./_FormWidget\",\r\n\t\"./_ButtonMixin\",\r\n\t\"dojo/text!./templates/Button.html\",\r\n\t\"../a11yclick\"\t// template uses ondijitclick\r\n], function(require, declare, domClass, has, kernel, lang, ready, _FormWidget, _ButtonMixin, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/Button\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/form/DropDownButton\", \"dijit/form/ComboButton\", \"dijit/form/ToggleButton\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\tvar Button = declare(\"dijit.form.Button\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), [_FormWidget, _ButtonMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tBasically the same thing as a normal HTML button, but with special styling.\r\n\t\t// description:\r\n\t\t//\t\tButtons can display a label, an icon, or both.\r\n\t\t//\t\tA label should always be specified (through innerHTML) or the label\r\n\t\t//\t\tattribute.  It can be hidden via showLabel=false.\r\n\t\t// example:\r\n\t\t// |\t<button data-dojo-type=\"dijit/form/Button\" onClick=\"...\">Hello world</button>\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\tvar button1 = new Button({label: \"hello world\", onClick: foo});\r\n\t\t// |\tdojo.body().appendChild(button1.domNode);\r\n\r\n\t\t// showLabel: Boolean\r\n\t\t//\t\tSet this to true to hide the label text and display only the icon.\r\n\t\t//\t\t(If showLabel=false then iconClass must be specified.)\r\n\t\t//\t\tEspecially useful for toolbars.\r\n\t\t//\t\tIf showLabel=true, the label will become the title (a.k.a. tooltip/hint) of the icon.\r\n\t\t//\r\n\t\t//\t\tThe exception case is for computers in high-contrast mode, where the label\r\n\t\t//\t\twill still be displayed, since the icon doesn't appear.\r\n\t\tshowLabel: true,\r\n\r\n\t\t// iconClass: String\r\n\t\t//\t\tClass to apply to DOMNode in button to make it display an icon\r\n\t\ticonClass: \"dijitNoIcon\",\r\n\t\t_setIconClassAttr: { node: \"iconNode\", type: \"class\" },\r\n\r\n\t\tbaseClass: \"dijitButton\",\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Map widget attributes to DOMNode attributes.\r\n\t\t_setValueAttr: \"valueNode\",\r\n\t\t_setNameAttr: function(name){\r\n\t\t\t// avoid breaking existing subclasses where valueNode undefined.  Perhaps in 2.0 require it to be defined?\r\n\t\t\tif(this.valueNode){\r\n\t\t\t\tthis.valueNode.setAttribute(\"name\", name);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_fillContent: function(/*DomNode*/ source){\r\n\t\t\t// Overrides _Templated._fillContent().\r\n\t\t\t// If button label is specified as srcNodeRef.innerHTML rather than\r\n\t\t\t// this.params.label, handle it here.\r\n\t\t\t// TODO: remove the method in 2.0, parser will do it all for me\r\n\t\t\tif(source && (!this.params || !(\"label\" in this.params))){\r\n\t\t\t\tvar sourceLabel = lang.trim(source.innerHTML);\r\n\t\t\t\tif(sourceLabel){\r\n\t\t\t\t\tthis.label = sourceLabel; // _applyAttributes will be called after buildRendering completes to update the DOM\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setShowLabelAttr: function(val){\r\n\t\t\tif(this.containerNode){\r\n\t\t\t\tdomClass.toggle(this.containerNode, \"dijitDisplayNone\", !val);\r\n\t\t\t}\r\n\t\t\tthis._set(\"showLabel\", val);\r\n\t\t},\r\n\r\n\t\tsetLabel: function(/*String*/ content){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('label', ...) instead.\r\n\t\t\tkernel.deprecated(\"dijit.form.Button.setLabel() is deprecated.  Use set('label', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set(\"label\", content);\r\n\t\t},\r\n\r\n\t\t_setLabelAttr: function(/*String*/ content){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for set('label', ...) to work.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSet the label (text) of the button; takes an HTML string.\r\n\t\t\t//\t\tIf the label is hidden (showLabel=false) then and no title has\r\n\t\t\t//\t\tbeen specified, then label is also set as title attribute of icon.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.showLabel && !(\"title\" in this.params)){\r\n\t\t\t\tthis.titleNode.title = lang.trim(this.containerNode.innerText || this.containerNode.textContent || '');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tButton = declare(\"dijit.form.Button\", Button, {\r\n\t\t\t_setLabelAttr: function(/*String*/ content){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tif(this.titleNode.title){\r\n\t\t\t\t\tthis.applyTextDir(this.titleNode, this.titleNode.title);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(/*String*/ textDir){\r\n\t\t\t\tif(this._created && this.textDir != textDir){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tthis._setLabelAttr(this.label); // call applyTextDir on both focusNode and titleNode\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn Button;\r\n});\r\n\ndefine('dijit/form/_ToggleButtonMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\" // domAttr.set\r\n], function(declare, domAttr){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ToggleButtonMixin\r\n\r\n\treturn declare(\"dijit.form._ToggleButtonMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin to provide functionality to allow a button that can be in two states (checked or not).\r\n\r\n\t\t// checked: Boolean\r\n\t\t//\t\tCorresponds to the native HTML `<input>` element's attribute.\r\n\t\t//\t\tIn markup, specified as \"checked='checked'\" or just \"checked\".\r\n\t\t//\t\tTrue if the button is depressed, or the checkbox is checked,\r\n\t\t//\t\tor the radio button is selected, etc.\r\n\t\tchecked: false,\r\n\r\n\t\t// aria-pressed for toggle buttons, and aria-checked for checkboxes\r\n\t\t_aria_attr: \"aria-pressed\",\r\n\r\n\t\t_onClick: function(/*Event*/ evt){\r\n\t\t\tvar original = this.checked;\r\n\t\t\tthis._set('checked', !original); // partially set the toggled value, assuming the toggle will work, so it can be overridden in the onclick handler\r\n\t\t\tvar ret = this.inherited(arguments); // the user could reset the value here\r\n\t\t\tthis.set('checked', ret ? this.checked : original); // officially set the toggled or user value, or reset it back\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\t_setCheckedAttr: function(/*Boolean*/ value, /*Boolean?*/ priorityChange){\r\n\t\t\tthis._set(\"checked\", value);\r\n\t\t\tvar node = this.focusNode || this.domNode;\r\n\t\t\tif(this._created){ // IE is not ready to handle checked attribute (affects tab order)\r\n\t\t\t\t// needlessly setting \"checked\" upsets IE's tab order\r\n\t\t\t\tif(domAttr.get(node, \"checked\") != !!value){\r\n\t\t\t\t\tdomAttr.set(node, \"checked\", !!value); // \"mixed\" -> true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnode.setAttribute(this._aria_attr, String(value)); // aria values should be strings\r\n\t\t\tthis._handleOnChange(value, priorityChange);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){ // use postCreate instead of startup so users forgetting to call startup are OK\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar node = this.focusNode || this.domNode;\r\n\t\t\tif(this.checked){\r\n\t\t\t\t// need this here instead of on the template so IE8 tab order works\r\n\t\t\t\tnode.setAttribute('checked', 'checked');\r\n\t\t\t}\r\n\r\n\t\t\t// Update our reset value if it hasn't yet been set (because this.set()\r\n\t\t\t// is only called when there *is* a value)\r\n\t\t\tif(this._resetValue === undefined){\r\n\t\t\t\tthis._lastValueReported = this._resetValue = this.checked;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReset the widget's value to what it was at initialization time\r\n\r\n\t\t\tthis._hasBeenBlurred = false;\r\n\r\n\t\t\t// set checked state to original setting\r\n\t\t\tthis.set('checked', this.params.checked || false);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/ToggleButton',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"./Button\",\r\n\t\"./_ToggleButtonMixin\"\r\n], function(declare, kernel, Button, _ToggleButtonMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/ToggleButton\r\n\r\n\r\n\treturn declare(\"dijit.form.ToggleButton\", [Button, _ToggleButtonMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA templated button widget that can be in two states (checked or not).\r\n\t\t//\t\tCan be base class for things like tabs or checkbox or radio buttons.\r\n\r\n\t\tbaseClass: \"dijitToggleButton\",\r\n\r\n\t\tsetChecked: function(/*Boolean*/ checked){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('checked', true/false) instead.\r\n\t\t\tkernel.deprecated(\"setChecked(\"+checked+\") is deprecated. Use set('checked',\"+checked+\") instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('checked', checked);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/_editor/_Plugin',[\r\n\t\"dojo/_base/connect\", // connect.connect\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.mixin, lang.hitch\r\n\t\"../Destroyable\",\r\n\t\"../form/Button\"\r\n], function(connect, declare, lang, Destroyable, Button){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/_Plugin\r\n\r\n\tvar _Plugin = declare(\"dijit._editor._Plugin\", Destroyable, {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for a \"plugin\" to the editor, which is usually\r\n\t\t//\t\ta single button on the Toolbar and some associated code\r\n\r\n\t\tconstructor: function(args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the plugin.\r\n\t\t\t// args: Object?\r\n\t\t\t//\t\tInitial settings for any of the attributes.\r\n\r\n\t\t\tthis.params = args || {};\r\n\t\t\tlang.mixin(this, this.params);\r\n\t\t\tthis._attrPairNames = {};\r\n\t\t},\r\n\r\n\t\t// editor: [const] dijit.Editor\r\n\t\t//\t\tPoints to the parent editor\r\n\t\teditor: null,\r\n\r\n\t\t// iconClassPrefix: [const] String\r\n\t\t//\t\tThe CSS class name for the button node is formed from `iconClassPrefix` and `command`\r\n\t\ticonClassPrefix: \"dijitEditorIcon\",\r\n\r\n\t\t// button: dijit/_WidgetBase?\r\n\t\t//\t\tPointer to `dijit/form/Button` or other widget (ex: `dijit/form/FilteringSelect`)\r\n\t\t//\t\tthat is added to the toolbar to control this plugin.\r\n\t\t//\t\tIf not specified, will be created on initialization according to `buttonClass`\r\n\t\tbutton: null,\r\n\r\n\t\t// command: String\r\n\t\t//\t\tString like \"insertUnorderedList\", \"outdent\", \"justifyCenter\", etc. that represents an editor command.\r\n\t\t//\t\tPassed to editor.execCommand() if `useDefaultCommand` is true.\r\n\t\tcommand: \"\",\r\n\r\n\t\t// useDefaultCommand: Boolean\r\n\t\t//\t\tIf true, this plugin executes by calling Editor.execCommand() with the argument specified in `command`.\r\n\t\tuseDefaultCommand: true,\r\n\r\n\t\t// buttonClass: Widget Class\r\n\t\t//\t\tClass of widget (ex: dijit.form.Button or dijit/form/FilteringSelect)\r\n\t\t//\t\tthat is added to the toolbar to control this plugin.\r\n\t\t//\t\tThis is used to instantiate the button, unless `button` itself is specified directly.\r\n\t\tbuttonClass: Button,\r\n\r\n\t\t// disabled: Boolean\r\n\t\t//\t\tFlag to indicate if this plugin has been disabled and should do nothing\r\n\t\t//\t\thelps control button state, among other things.  Set via the setter api.\r\n\t\tdisabled: false,\r\n\r\n\t\tgetLabel: function(/*String*/key){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the label to use for the button\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn this.editor.commands[key];\t\t// String\r\n\t\t},\r\n\r\n\t\t_initButton: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitialize the button or other widget that will control this plugin.\r\n\t\t\t//\t\tThis code only works for plugins controlling built-in commands in the editor.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\tif(this.command.length){\r\n\t\t\t\tvar label = this.getLabel(this.command),\r\n\t\t\t\t\teditor = this.editor,\r\n\t\t\t\t\tclassName = this.iconClassPrefix + \" \" + this.iconClassPrefix + this.command.charAt(0).toUpperCase() + this.command.substr(1);\r\n\t\t\t\tif(!this.button){\r\n\t\t\t\t\tvar props = lang.mixin({\r\n\t\t\t\t\t\tlabel: label,\r\n\t\t\t\t\t\townerDocument: editor.ownerDocument,\r\n\t\t\t\t\t\tdir: editor.dir,\r\n\t\t\t\t\t\tlang: editor.lang,\r\n\t\t\t\t\t\tshowLabel: false,\r\n\t\t\t\t\t\ticonClass: className,\r\n\t\t\t\t\t\tdropDown: this.dropDown,\r\n\t\t\t\t\t\ttabIndex: \"-1\"\r\n\t\t\t\t\t}, this.params || {});\r\n\r\n\t\t\t\t\t// Avoid creating Button with a name like \"dijit/editor/_plugins/ToggleDir\", since that name becomes\r\n\t\t\t\t\t// a global object, and then if the ToggleDir plugin is referenced again, _Plugin.js will\r\n\t\t\t\t\t// find the <input> rather than the ToggleDir module.\r\n\t\t\t\t\t// Not necessary in 2.0 once the getObject() call is removed from _Plugin.js.\r\n\t\t\t\t\tdelete props.name;\r\n\r\n\t\t\t\t\tthis.button = new this.buttonClass(props);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.get(\"disabled\") && this.button){\r\n\t\t\t\tthis.button.set(\"disabled\", this.get(\"disabled\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\tthis.dropDown.destroyRecursive();\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tconnect: function(o, f, tf){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use this.own() with dojo/on or dojo/aspect.instead.\r\n\t\t\t//\r\n\t\t\t//\t\tMake a connect.connect() that is automatically disconnected when this plugin is destroyed.\r\n\t\t\t//\t\tSimilar to `dijit/_Widget.connect()`.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected deprecated\r\n\r\n\t\t\tthis.own(connect.connect(o, f, this, tf));\r\n\t\t},\r\n\r\n\t\tupdateState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChange state of the plugin to respond to events in the editor.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis is called on meaningful events in the editor, such as change of selection\r\n\t\t\t//\t\tor caret position (but not simple typing of alphanumeric keys).   It gives the\r\n\t\t\t//\t\tplugin a chance to update the CSS of its button.\r\n\t\t\t//\r\n\t\t\t//\t\tFor example, the \"bold\" plugin will highlight/unhighlight the bold button depending on whether the\r\n\t\t\t//\t\tcharacters next to the caret are bold or not.\r\n\t\t\t//\r\n\t\t\t//\t\tOnly makes sense when `useDefaultCommand` is true, as it calls Editor.queryCommandEnabled(`command`).\r\n\t\t\tvar e = this.editor,\r\n\t\t\t\tc = this.command,\r\n\t\t\t\tchecked, enabled;\r\n\t\t\tif(!e || !e.isLoaded || !c.length){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar disabled = this.get(\"disabled\");\r\n\t\t\tif(this.button){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tenabled = !disabled && e.queryCommandEnabled(c);\r\n\t\t\t\t\tif(this.enabled !== enabled){\r\n\t\t\t\t\t\tthis.enabled = enabled;\r\n\t\t\t\t\t\tthis.button.set('disabled', !enabled);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(enabled){\r\n\t\t\t\t\t\tif(typeof this.button.checked == 'boolean'){\r\n\t\t\t\t\t\t\tchecked = e.queryCommandState(c);\r\n\t\t\t\t\t\t\tif(this.checked !== checked){\r\n\t\t\t\t\t\t\t\tthis.checked = checked;\r\n\t\t\t\t\t\t\t\tthis.button.set('checked', e.queryCommandState(c));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tconsole.log(e); // FIXME: we shouldn't have debug statements in our code.  Log as an error?\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetEditor: function(/*dijit/Editor*/ editor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTell the plugin which Editor it is associated with.\r\n\r\n\t\t\t// TODO: refactor code to just pass editor to constructor.\r\n\r\n\t\t\t// FIXME: detach from previous editor!!\r\n\t\t\tthis.editor = editor;\r\n\r\n\t\t\t// FIXME: prevent creating this if we don't need to (i.e., editor can't handle our command)\r\n\t\t\tthis._initButton();\r\n\r\n\t\t\t// Processing for buttons that execute by calling editor.execCommand()\r\n\t\t\tif(this.button && this.useDefaultCommand){\r\n\t\t\t\tif(this.editor.queryCommandAvailable(this.command)){\r\n\t\t\t\t\tthis.own(this.button.on(\"click\",\r\n\t\t\t\t\t\tlang.hitch(this.editor, \"execCommand\", this.command, this.commandArg)\r\n\t\t\t\t\t));\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// hide button because editor doesn't support command (due to browser limitations)\r\n\t\t\t\t\tthis.button.domNode.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.own(this.editor.on(\"NormalizedDisplayChanged\", lang.hitch(this, \"updateState\")));\r\n\t\t},\r\n\r\n\t\tsetToolbar: function(/*dijit/Toolbar*/ toolbar){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTell the plugin to add it's controller widget (often a button)\r\n\t\t\t//\t\tto the toolbar.  Does nothing if there is no controller widget.\r\n\r\n\t\t\t// TODO: refactor code to just pass toolbar to constructor.\r\n\r\n\t\t\tif(this.button){\r\n\t\t\t\ttoolbar.addChild(this.button);\r\n\t\t\t}\r\n\t\t\t// console.debug(\"adding\", this.button, \"to:\", toolbar);\r\n\t\t},\r\n\r\n\t\tset: function(/* attribute */ name, /* anything */ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet a property on a plugin\r\n\t\t\t// name:\r\n\t\t\t//\t\tThe property to set.\r\n\t\t\t// value:\r\n\t\t\t//\t\tThe value to set in the property.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets named properties on a plugin which may potentially be handled by a\r\n\t\t\t//\t\tsetter in the plugin.\r\n\t\t\t//\t\tFor example, if the plugin has a properties \"foo\"\r\n\t\t\t//\t\tand \"bar\" and a method named \"_setFooAttr\", calling:\r\n\t\t\t//\t|\tplugin.set(\"foo\", \"Howdy!\");\r\n\t\t\t//\t\twould be equivalent to writing:\r\n\t\t\t//\t|\tplugin._setFooAttr(\"Howdy!\");\r\n\t\t\t//\t\tand:\r\n\t\t\t//\t|\tplugin.set(\"bar\", 3);\r\n\t\t\t//\t\twould be equivalent to writing:\r\n\t\t\t//\t|\tplugin.bar = 3;\r\n\t\t\t//\r\n\t\t\t//\t\tset() may also be called with a hash of name/value pairs, ex:\r\n\t\t\t//\t|\tplugin.set({\r\n\t\t\t//\t|\t\tfoo: \"Howdy\",\r\n\t\t\t//\t|\t\tbar: 3\r\n\t\t\t//\t|\t})\r\n\t\t\t//\t\tThis is equivalent to calling set(foo, \"Howdy\") and set(bar, 3)\r\n\t\t\tif(typeof name === \"object\"){\r\n\t\t\t\tfor(var x in name){\r\n\t\t\t\t\tthis.set(x, name[x]);\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tvar names = this._getAttrNames(name);\r\n\t\t\tif(this[names.s]){\r\n\t\t\t\t// use the explicit setter\r\n\t\t\t\tvar result = this[names.s].apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t\t}else{\r\n\t\t\t\tthis._set(name, value);\r\n\t\t\t}\r\n\t\t\treturn result || this;\r\n\t\t},\r\n\r\n\t\tget: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet a property from a plugin.\r\n\t\t\t// name:\r\n\t\t\t//\t\tThe property to get.\r\n\t\t\t// description:\r\n\t\t\t//\t\tGet a named property from a plugin. The property may\r\n\t\t\t//\t\tpotentially be retrieved via a getter method. If no getter is defined, this\r\n\t\t\t//\t\tjust retrieves the object's property.\r\n\t\t\t//\t\tFor example, if the plugin has a properties \"foo\"\r\n\t\t\t//\t\tand \"bar\" and a method named \"_getFooAttr\", calling:\r\n\t\t\t//\t|\tplugin.get(\"foo\");\r\n\t\t\t//\t\twould be equivalent to writing:\r\n\t\t\t//\t|\tplugin._getFooAttr();\r\n\t\t\t//\t\tand:\r\n\t\t\t//\t|\tplugin.get(\"bar\");\r\n\t\t\t//\t\twould be equivalent to writing:\r\n\t\t\t//\t|\tplugin.bar;\r\n\t\t\tvar names = this._getAttrNames(name);\r\n\t\t\treturn this[names.g] ? this[names.g]() : this[name];\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to set the plugin state and call updateState to make sure the\r\n\t\t\t//\t\tbutton is updated appropriately.\r\n\t\t\tthis._set(\"disabled\", disabled);\r\n\t\t\tthis.updateState();\r\n\t\t},\r\n\r\n\t\t_getAttrNames: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function for get() and set().\r\n\t\t\t//\t\tCaches attribute name values so we don't do the string ops every time.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar apn = this._attrPairNames;\r\n\t\t\tif(apn[name]){\r\n\t\t\t\treturn apn[name];\r\n\t\t\t}\r\n\t\t\tvar uc = name.charAt(0).toUpperCase() + name.substr(1);\r\n\t\t\treturn (apn[name] = {\r\n\t\t\t\ts: \"_set\" + uc + \"Attr\",\r\n\t\t\t\tg: \"_get\" + uc + \"Attr\"\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_set: function(/*String*/ name, /*anything*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function to set new value for specified attribute\r\n\t\t\tthis[name] = value;\r\n\t\t}\r\n\t});\r\n\r\n\t// Hash mapping plugin name to factory, used for registering plugins\r\n\t_Plugin.registry = {};\r\n\r\n\treturn _Plugin;\r\n});\r\n\ndefine('dojo/_base/unload',[\"./kernel\", \"./lang\", \"../on\"], function(dojo, lang, on){\r\n\r\n// module:\r\n//\t\tdojo/unload\r\n\r\nvar win = window;\r\n\r\nvar unload = {\r\n\t// summary:\r\n\t//\t\tThis module contains the document and window unload detection API.\r\n\t//\t\tThis module is deprecated.  Use on(window, \"unload\", func)\r\n\t//\t\tand on(window, \"beforeunload\", func) instead.\r\n\r\n\taddOnWindowUnload: function(/*Object|Function?*/ obj, /*String|Function?*/ functionName){\r\n\t\t// summary:\r\n\t\t//\t\tRegisters a function to be triggered when window.onunload fires.\r\n\t\t//\t\tDeprecated, use on(window, \"unload\", lang.hitch(obj, functionName)) instead.\r\n\t\t// description:\r\n\t\t//\t\tThe first time that addOnWindowUnload is called Dojo\r\n\t\t//\t\twill register a page listener to trigger your unload\r\n\t\t//\t\thandler with. Note that registering these handlers may\r\n\t\t//\t\tdestroy \"fastback\" page caching in browsers that support\r\n\t\t//\t\tit. Be careful trying to modify the DOM or access\r\n\t\t//\t\tJavaScript properties during this phase of page unloading:\r\n\t\t//\t\tthey may not always be available. Consider\r\n\t\t//\t\taddOnUnload() if you need to modify the DOM or do\r\n\t\t//\t\theavy JavaScript work since it fires at the equivalent of\r\n\t\t//\t\tthe page's \"onbeforeunload\" event.\r\n\t\t// example:\r\n\t\t//\t|\tvar afunc = function() {console.log(\"global function\");};\r\n\t\t//\t|\trequire([\"dojo/_base/unload\"], function(unload) {\r\n\t\t//\t|\t\tvar foo = {bar: function(){ console.log(\"bar unloading...\");}, \r\n\t\t//\t|\t\t           data: \"mydata\"};\r\n\t\t//\t|\t\tunload.addOnWindowUnload(afunc);\r\n\t\t//\t|\t\tunload.addOnWindowUnload(foo, \"bar\");\r\n\t\t//\t|\t\tunload.addOnWindowUnload(foo, function(){console.log(\"\", this.data);});\r\n\t\t//\t|\t});\r\n\r\n\t\tif (!dojo.windowUnloaded){\r\n\t\t\ton(win, \"unload\", (dojo.windowUnloaded = function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tsignal fired by impending window destruction. You may use\r\n\t\t\t\t//\t\tdojo.addOnWindowUnload() to register a listener for this\r\n\t\t\t\t//\t\tevent. NOTE: if you wish to dojo.connect() to this method\r\n\t\t\t\t//\t\tto perform page/application cleanup, be aware that this\r\n\t\t\t\t//\t\tevent WILL NOT fire if no handler has been registered with\r\n\t\t\t\t//\t\taddOnWindowUnload(). This behavior started in Dojo 1.3.\r\n\t\t\t\t//\t\tPrevious versions always triggered windowUnloaded(). See\r\n\t\t\t\t//\t\taddOnWindowUnload for more info.\r\n\t\t\t}));\r\n\t\t}\r\n\t\ton(win, \"unload\", lang.hitch(obj, functionName));\r\n\t},\r\n\r\n\taddOnUnload: function(/*Object?|Function?*/ obj, /*String|Function?*/ functionName){\r\n\t\t// summary:\r\n\t\t//\t\tRegisters a function to be triggered when the page unloads.\r\n\t\t//\t\tDeprecated, use on(window, \"beforeunload\", lang.hitch(obj, functionName)) instead.\r\n\t\t// description:\r\n\t\t//\t\tThe first time that addOnUnload is called Dojo will\r\n\t\t//\t\tregister a page listener to trigger your unload handler\r\n\t\t//\t\twith.\r\n\t\t//\r\n\t\t//\t\tIn a browser environment, the functions will be triggered\r\n\t\t//\t\tduring the window.onbeforeunload event. Be careful of doing\r\n\t\t//\t\ttoo much work in an unload handler. onbeforeunload can be\r\n\t\t//\t\ttriggered if a link to download a file is clicked, or if\r\n\t\t//\t\tthe link is a javascript: link. In these cases, the\r\n\t\t//\t\tonbeforeunload event fires, but the document is not\r\n\t\t//\t\tactually destroyed. So be careful about doing destructive\r\n\t\t//\t\toperations in a dojo.addOnUnload callback.\r\n\t\t//\r\n\t\t//\t\tFurther note that calling dojo.addOnUnload will prevent\r\n\t\t//\t\tbrowsers from using a \"fast back\" cache to make page\r\n\t\t//\t\tloading via back button instantaneous.\r\n\t\t// example:\r\n\t\t//\t|\tvar afunc = function() {console.log(\"global function\");};\r\n\t\t//\t|\trequire([\"dojo/_base/unload\"], function(unload) {\r\n\t\t//\t|\t\tvar foo = {bar: function(){ console.log(\"bar unloading...\");}, \r\n\t\t//\t|\t\t           data: \"mydata\"};\r\n\t\t//\t|\t\tunload.addOnUnload(afunc);\r\n\t\t//\t|\t\tunload.addOnUnload(foo, \"bar\");\r\n\t\t//\t|\t\tunload.addOnUnload(foo, function(){console.log(\"\", this.data);});\r\n\t\t//\t|\t});\r\n\r\n\t\ton(win, \"beforeunload\", lang.hitch(obj, functionName));\r\n\t}\r\n};\r\n\r\ndojo.addOnWindowUnload = unload.addOnWindowUnload;\r\ndojo.addOnUnload = unload.addOnUnload;\r\n\r\nreturn unload;\r\n\r\n});\r\n\ndefine('dijit/_editor/range',[\r\n\t\"dojo/_base/array\", // array.every\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\" // lang.isArray\r\n], function(array, declare, lang){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/range\r\n\r\n\tvar rangeapi = {\r\n\t\t// summary:\r\n\t\t//\t\tW3C range API\r\n\r\n\t\tgetIndex: function(/*DomNode*/ node, /*DomNode*/ parent){\r\n\t\t\tvar ret = [], retR = [];\r\n\t\t\tvar onode = node;\r\n\r\n\t\t\tvar pnode, n;\r\n\t\t\twhile(node != parent){\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\tpnode = node.parentNode;\r\n\t\t\t\twhile((n = pnode.childNodes[i++])){\r\n\t\t\t\t\tif(n === node){\r\n\t\t\t\t\t\t--i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//if(i>=pnode.childNodes.length){\r\n\t\t\t\t//console.debug(\"Error finding index of a node in dijit/range.getIndex()\");\r\n\t\t\t\t//}\r\n\t\t\t\tret.unshift(i);\r\n\t\t\t\tretR.unshift(i - pnode.childNodes.length);\r\n\t\t\t\tnode = pnode;\r\n\t\t\t}\r\n\r\n\t\t\t//normalized() can not be called so often to prevent\r\n\t\t\t//invalidating selection/range, so we have to detect\r\n\t\t\t//here that any text nodes in a row\r\n\t\t\tif(ret.length > 0 && onode.nodeType == 3){\r\n\t\t\t\tn = onode.previousSibling;\r\n\t\t\t\twhile(n && n.nodeType == 3){\r\n\t\t\t\t\tret[ret.length - 1]--;\r\n\t\t\t\t\tn = n.previousSibling;\r\n\t\t\t\t}\r\n\t\t\t\tn = onode.nextSibling;\r\n\t\t\t\twhile(n && n.nodeType == 3){\r\n\t\t\t\t\tretR[retR.length - 1]++;\r\n\t\t\t\t\tn = n.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {o: ret, r:retR};\r\n\t\t},\r\n\r\n\t\tgetNode: function(/*Array*/ index, /*DomNode*/ parent){\r\n\t\t\tif(!lang.isArray(index) || index.length == 0){\r\n\t\t\t\treturn parent;\r\n\t\t\t}\r\n\t\t\tvar node = parent;\r\n\t\t\t//\tif(!node)debugger\r\n\t\t\tarray.every(index, function(i){\r\n\t\t\t\tif(i >= 0 && i < node.childNodes.length){\r\n\t\t\t\t\tnode = node.childNodes[i];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnode = null;\r\n\t\t\t\t\t//console.debug('Error: can not find node with index',index,'under parent node',parent );\r\n\t\t\t\t\treturn false; //terminate array.every\r\n\t\t\t\t}\r\n\t\t\t\treturn true; //carry on the every loop\r\n\t\t\t});\r\n\r\n\t\t\treturn node;\r\n\t\t},\r\n\r\n\t\tgetCommonAncestor: function(n1, n2, root){\r\n\t\t\troot = root || n1.ownerDocument.body;\r\n\t\t\tvar getAncestors = function(n){\r\n\t\t\t\tvar as = [];\r\n\t\t\t\twhile(n){\r\n\t\t\t\t\tas.unshift(n);\r\n\t\t\t\t\tif(n !== root){\r\n\t\t\t\t\t\tn = n.parentNode;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn as;\r\n\t\t\t};\r\n\t\t\tvar n1as = getAncestors(n1);\r\n\t\t\tvar n2as = getAncestors(n2);\r\n\r\n\t\t\tvar m = Math.min(n1as.length, n2as.length);\r\n\t\t\tvar com = n1as[0]; //at least, one element should be in the array: the root (BODY by default)\r\n\t\t\tfor(var i = 1; i < m; i++){\r\n\t\t\t\tif(n1as[i] === n2as[i]){\r\n\t\t\t\t\tcom = n1as[i]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn com;\r\n\t\t},\r\n\r\n\t\tgetAncestor: function(/*DomNode*/ node, /*RegEx?*/ regex, /*DomNode?*/ root){\r\n\t\t\troot = root || node.ownerDocument.body;\r\n\t\t\twhile(node && node !== root){\r\n\t\t\t\tvar name = node.nodeName.toUpperCase();\r\n\t\t\t\tif(regex.test(name)){\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode = node.parentNode;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\tBlockTagNames: /^(?:P|DIV|H1|H2|H3|H4|H5|H6|ADDRESS|PRE|OL|UL|LI|DT|DE)$/,\r\n\r\n\t\tgetBlockAncestor: function(/*DomNode*/ node, /*RegEx?*/ regex, /*DomNode?*/ root){\r\n\t\t\troot = root || node.ownerDocument.body;\r\n\t\t\tregex = regex || rangeapi.BlockTagNames;\r\n\t\t\tvar block = null, blockContainer;\r\n\t\t\twhile(node && node !== root){\r\n\t\t\t\tvar name = node.nodeName.toUpperCase();\r\n\t\t\t\tif(!block && regex.test(name)){\r\n\t\t\t\t\tblock = node;\r\n\t\t\t\t}\r\n\t\t\t\tif(!blockContainer && (/^(?:BODY|TD|TH|CAPTION)$/).test(name)){\r\n\t\t\t\t\tblockContainer = node;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode = node.parentNode;\r\n\t\t\t}\r\n\t\t\treturn {blockNode:block, blockContainer:blockContainer || node.ownerDocument.body};\r\n\t\t},\r\n\r\n\t\tatBeginningOfContainer: function(/*DomNode*/ container, /*DomNode*/ node, /*Int*/ offset){\r\n\t\t\tvar atBeginning = false;\r\n\t\t\tvar offsetAtBeginning = (offset == 0);\r\n\t\t\tif(!offsetAtBeginning && node.nodeType == 3){ //if this is a text node, check whether the left part is all space\r\n\t\t\t\tif(/^[\\s\\xA0]+$/.test(node.nodeValue.substr(0, offset))){\r\n\t\t\t\t\toffsetAtBeginning = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(offsetAtBeginning){\r\n\t\t\t\tvar cnode = node;\r\n\t\t\t\tatBeginning = true;\r\n\t\t\t\twhile(cnode && cnode !== container){\r\n\t\t\t\t\tif(cnode.previousSibling){\r\n\t\t\t\t\t\tatBeginning = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcnode = cnode.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn atBeginning;\r\n\t\t},\r\n\r\n\t\tatEndOfContainer: function(/*DomNode*/ container, /*DomNode*/ node, /*Int*/ offset){\r\n\t\t\tvar atEnd = false;\r\n\t\t\tvar offsetAtEnd = (offset == (node.length || node.childNodes.length));\r\n\t\t\tif(!offsetAtEnd && node.nodeType == 3){ //if this is a text node, check whether the right part is all space\r\n\t\t\t\tif(/^[\\s\\xA0]+$/.test(node.nodeValue.substr(offset))){\r\n\t\t\t\t\toffsetAtEnd = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(offsetAtEnd){\r\n\t\t\t\tvar cnode = node;\r\n\t\t\t\tatEnd = true;\r\n\t\t\t\twhile(cnode && cnode !== container){\r\n\t\t\t\t\tif(cnode.nextSibling){\r\n\t\t\t\t\t\tatEnd = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcnode = cnode.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn atEnd;\r\n\t\t},\r\n\r\n\t\tadjacentNoneTextNode: function(startnode, next){\r\n\t\t\tvar node = startnode;\r\n\t\t\tvar len = (0 - startnode.length) || 0;\r\n\t\t\tvar prop = next ? 'nextSibling' : 'previousSibling';\r\n\t\t\twhile(node){\r\n\t\t\t\tif(node.nodeType != 3){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlen += node.length;\r\n\t\t\t\tnode = node[prop];\r\n\t\t\t}\r\n\t\t\treturn [node,len];\r\n\t\t},\r\n\r\n\t\tcreate: function(/*Window?*/ win){\t// TODO: for 2.0, replace optional window param w/mandatory window or document param\r\n\t\t\twin = win || window;\r\n\t\t\tif(win.getSelection){\r\n\t\t\t\treturn win.document.createRange();\r\n\t\t\t}else{//IE\r\n\t\t\t\treturn new W3CRange();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetSelection: function(/*Window*/ window, /*Boolean?*/ ignoreUpdate){\r\n\t\t\tif(window.getSelection){\r\n\t\t\t\treturn window.getSelection();\r\n\t\t\t}else{//IE\r\n\t\t\t\tvar s = new ie.selection(window);\r\n\t\t\t\tif(!ignoreUpdate){\r\n\t\t\t\t\ts._getCurrentSelection();\r\n\t\t\t\t}\r\n\t\t\t\treturn s;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// TODO: convert to has() test?   But remember IE9 issues with quirks vs. standards in main frame vs. iframe.\r\n\tif(!window.getSelection){\r\n\t\tvar ie = rangeapi.ie = {\r\n\t\t\tcachedSelection: {},\r\n\t\t\tselection: function(window){\r\n\t\t\t\tthis._ranges = [];\r\n\t\t\t\tthis.addRange = function(r, /*boolean*/ internal){\r\n\t\t\t\t\tthis._ranges.push(r);\r\n\t\t\t\t\tif(!internal){\r\n\t\t\t\t\t\tr._select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.rangeCount = this._ranges.length;\r\n\t\t\t\t};\r\n\t\t\t\tthis.removeAllRanges = function(){\r\n\t\t\t\t\t//don't detach, the range may be used later\r\n\t\t\t\t\t//\t\t\t\tfor(var i=0;i<this._ranges.length;i++){\r\n\t\t\t\t\t//\t\t\t\t\tthis._ranges[i].detach();\r\n\t\t\t\t\t//\t\t\t\t}\r\n\t\t\t\t\tthis._ranges = [];\r\n\t\t\t\t\tthis.rangeCount = 0;\r\n\t\t\t\t};\r\n\t\t\t\tvar _initCurrentRange = function(){\r\n\t\t\t\t\tvar r = window.document.selection.createRange();\r\n\t\t\t\t\tvar type = window.document.selection.type.toUpperCase();\r\n\t\t\t\t\tif(type == \"CONTROL\"){\r\n\t\t\t\t\t\t//TODO: multiple range selection(?)\r\n\t\t\t\t\t\treturn new W3CRange(ie.decomposeControlRange(r));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treturn new W3CRange(ie.decomposeTextRange(r));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tthis.getRangeAt = function(i){\r\n\t\t\t\t\treturn this._ranges[i];\r\n\t\t\t\t};\r\n\t\t\t\tthis._getCurrentSelection = function(){\r\n\t\t\t\t\tthis.removeAllRanges();\r\n\t\t\t\t\tvar r = _initCurrentRange();\r\n\t\t\t\t\tif(r){\r\n\t\t\t\t\t\tthis.addRange(r, true);\r\n\t\t\t\t\t\tthis.isCollapsed = r.collapsed;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.isCollapsed = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tdecomposeControlRange: function(range){\r\n\t\t\t\tvar firstnode = range.item(0), lastnode = range.item(range.length - 1);\r\n\t\t\t\tvar startContainer = firstnode.parentNode, endContainer = lastnode.parentNode;\r\n\t\t\t\tvar startOffset = rangeapi.getIndex(firstnode, startContainer).o[0];\r\n\t\t\t\tvar endOffset = rangeapi.getIndex(lastnode, endContainer).o[0] + 1;\r\n\t\t\t\treturn [startContainer, startOffset,endContainer, endOffset];\r\n\t\t\t},\r\n\t\t\tgetEndPoint: function(range, end){\r\n\t\t\t\tvar atmrange = range.duplicate();\r\n\t\t\t\tatmrange.collapse(!end);\r\n\t\t\t\tvar cmpstr = 'EndTo' + (end ? 'End' : 'Start');\r\n\t\t\t\tvar parentNode = atmrange.parentElement();\r\n\r\n\t\t\t\tvar startnode, startOffset, lastNode;\r\n\t\t\t\tif(parentNode.childNodes.length > 0){\r\n\t\t\t\t\tarray.every(parentNode.childNodes, function(node, i){\r\n\t\t\t\t\t\tvar calOffset;\r\n\t\t\t\t\t\tif(node.nodeType != 3){\r\n\t\t\t\t\t\t\tatmrange.moveToElementText(node);\r\n\r\n\t\t\t\t\t\t\tif(atmrange.compareEndPoints(cmpstr, range) > 0){\r\n\t\t\t\t\t\t\t\t//startnode = node.previousSibling;\r\n\t\t\t\t\t\t\t\tif(lastNode && lastNode.nodeType == 3){\r\n\t\t\t\t\t\t\t\t\t//where shall we put the start? in the text node or after?\r\n\t\t\t\t\t\t\t\t\tstartnode = lastNode;\r\n\t\t\t\t\t\t\t\t\tcalOffset = true;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tstartnode = parentNode;\r\n\t\t\t\t\t\t\t\t\tstartOffset = i;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tif(i == parentNode.childNodes.length - 1){\r\n\t\t\t\t\t\t\t\t\tstartnode = parentNode;\r\n\t\t\t\t\t\t\t\t\tstartOffset = parentNode.childNodes.length;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(i == parentNode.childNodes.length - 1){//at the end of this node\r\n\t\t\t\t\t\t\t\tstartnode = node;\r\n\t\t\t\t\t\t\t\tcalOffset = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//\t\t\ttry{\r\n\t\t\t\t\t\tif(calOffset && startnode){\r\n\t\t\t\t\t\t\tvar prevnode = rangeapi.adjacentNoneTextNode(startnode)[0];\r\n\t\t\t\t\t\t\tif(prevnode){\r\n\t\t\t\t\t\t\t\tstartnode = prevnode.nextSibling;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tstartnode = parentNode.firstChild; //firstChild must be a text node\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar prevnodeobj = rangeapi.adjacentNoneTextNode(startnode);\r\n\t\t\t\t\t\t\tprevnode = prevnodeobj[0];\r\n\t\t\t\t\t\t\tvar lenoffset = prevnodeobj[1];\r\n\t\t\t\t\t\t\tif(prevnode){\r\n\t\t\t\t\t\t\t\tatmrange.moveToElementText(prevnode);\r\n\t\t\t\t\t\t\t\tatmrange.collapse(false);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tatmrange.moveToElementText(parentNode);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tatmrange.setEndPoint(cmpstr, range);\r\n\t\t\t\t\t\t\tstartOffset = atmrange.text.length - lenoffset;\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//\t\t\t}catch(e){ debugger }\r\n\t\t\t\t\t\tlastNode = node;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstartnode = parentNode;\r\n\t\t\t\t\tstartOffset = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if at the end of startnode and we are dealing with start container, then\r\n\t\t\t\t//move the startnode to nextSibling if it is a text node\r\n\t\t\t\t//TODO: do this for end container?\r\n\t\t\t\tif(!end && startnode.nodeType == 1 && startOffset == startnode.childNodes.length){\r\n\t\t\t\t\tvar nextnode = startnode.nextSibling;\r\n\t\t\t\t\tif(nextnode && nextnode.nodeType == 3){\r\n\t\t\t\t\t\tstartnode = nextnode;\r\n\t\t\t\t\t\tstartOffset = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn [startnode, startOffset];\r\n\t\t\t},\r\n\t\t\tsetEndPoint: function(range, container, offset){\r\n\t\t\t\t//text node\r\n\t\t\t\tvar atmrange = range.duplicate(), node, len;\r\n\t\t\t\tif(container.nodeType != 3){ //normal node\r\n\t\t\t\t\tif(offset > 0){\r\n\t\t\t\t\t\tnode = container.childNodes[offset - 1];\r\n\t\t\t\t\t\tif(node){\r\n\t\t\t\t\t\t\tif(node.nodeType == 3){\r\n\t\t\t\t\t\t\t\tcontainer = node;\r\n\t\t\t\t\t\t\t\toffset = node.length;\r\n\t\t\t\t\t\t\t\t//pass through\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tif(node.nextSibling && node.nextSibling.nodeType == 3){\r\n\t\t\t\t\t\t\t\t\tcontainer = node.nextSibling;\r\n\t\t\t\t\t\t\t\t\toffset = 0;\r\n\t\t\t\t\t\t\t\t\t//pass through\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tatmrange.moveToElementText(node.nextSibling ? node : container);\r\n\t\t\t\t\t\t\t\t\tvar parent = node.parentNode;\r\n\t\t\t\t\t\t\t\t\tvar tempNode = parent.insertBefore(node.ownerDocument.createTextNode(' '), node.nextSibling);\r\n\t\t\t\t\t\t\t\t\tatmrange.collapse(false);\r\n\t\t\t\t\t\t\t\t\tparent.removeChild(tempNode);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tatmrange.moveToElementText(container);\r\n\t\t\t\t\t\tatmrange.collapse(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(container.nodeType == 3){\r\n\t\t\t\t\tvar prevnodeobj = rangeapi.adjacentNoneTextNode(container);\r\n\t\t\t\t\tvar prevnode = prevnodeobj[0];\r\n\t\t\t\t\tlen = prevnodeobj[1];\r\n\t\t\t\t\tif(prevnode){\r\n\t\t\t\t\t\tatmrange.moveToElementText(prevnode);\r\n\t\t\t\t\t\tatmrange.collapse(false);\r\n\t\t\t\t\t\t//if contentEditable is not inherit, the above collapse won't make the end point\r\n\t\t\t\t\t\t//in the correctly position: it always has a -1 offset, so compensate it\r\n\t\t\t\t\t\tif(prevnode.contentEditable != 'inherit'){\r\n\t\t\t\t\t\t\tlen++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tatmrange.moveToElementText(container.parentNode);\r\n\t\t\t\t\t\tatmrange.collapse(true);\r\n\r\n\t\t\t\t\t\t// Correct internal cursor position\r\n\t\t\t\t\t\t// http://bugs.dojotoolkit.org/ticket/15578\r\n\t\t\t\t\t\tatmrange.move('character', 1);\r\n\t\t\t\t\t\tatmrange.move('character', -1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toffset += len;\r\n\t\t\t\t\tif(offset > 0){\r\n\t\t\t\t\t\tif(atmrange.move('character', offset) != offset){\r\n\t\t\t\t\t\t\tconsole.error('Error when moving!');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn atmrange;\r\n\t\t\t},\r\n\t\t\tdecomposeTextRange: function(range){\r\n\t\t\t\tvar tmpary = ie.getEndPoint(range);\r\n\t\t\t\tvar startContainer = tmpary[0], startOffset = tmpary[1];\r\n\t\t\t\tvar endContainer = tmpary[0], endOffset = tmpary[1];\r\n\r\n\t\t\t\tif(range.htmlText.length){\r\n\t\t\t\t\tif(range.htmlText == range.text){ //in the same text node\r\n\t\t\t\t\t\tendOffset = startOffset + range.text.length;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttmpary = ie.getEndPoint(range, true);\r\n\t\t\t\t\t\tendContainer = tmpary[0],endOffset = tmpary[1];\r\n\t\t\t\t\t\t//\t\t\t\t\tif(startContainer.tagName == \"BODY\"){\r\n\t\t\t\t\t\t//\t\t\t\t\t\tstartContainer = startContainer.firstChild;\r\n\t\t\t\t\t\t//\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn [startContainer, startOffset, endContainer, endOffset];\r\n\t\t\t},\r\n\t\t\tsetRange: function(range, startContainer, startOffset, endContainer, endOffset, collapsed){\r\n\t\t\t\tvar start = ie.setEndPoint(range, startContainer, startOffset);\r\n\r\n\t\t\t\trange.setEndPoint('StartToStart', start);\r\n\t\t\t\tif(!collapsed){\r\n\t\t\t\t\tvar end = ie.setEndPoint(range, endContainer, endOffset);\r\n\t\t\t\t}\r\n\t\t\t\trange.setEndPoint('EndToEnd', end || start);\r\n\r\n\t\t\t\treturn range;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar W3CRange = rangeapi.W3CRange = declare(null, {\r\n\t\t\tconstructor: function(){\r\n\t\t\t\tif(arguments.length>0){\r\n\t\t\t\t\tthis.setStart(arguments[0][0],arguments[0][1]);\r\n\t\t\t\t\tthis.setEnd(arguments[0][2],arguments[0][3]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.commonAncestorContainer = null;\r\n\t\t\t\t\tthis.startContainer = null;\r\n\t\t\t\t\tthis.startOffset = 0;\r\n\t\t\t\t\tthis.endContainer = null;\r\n\t\t\t\t\tthis.endOffset = 0;\r\n\t\t\t\t\tthis.collapsed = true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_updateInternal: function(){\r\n\t\t\t\tif(this.startContainer !== this.endContainer){\r\n\t\t\t\t\tthis.commonAncestorContainer = rangeapi.getCommonAncestor(this.startContainer, this.endContainer);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.commonAncestorContainer = this.startContainer;\r\n\t\t\t\t}\r\n\t\t\t\tthis.collapsed = (this.startContainer === this.endContainer) && (this.startOffset == this.endOffset);\r\n\t\t\t},\r\n\t\t\tsetStart: function(node, offset){\r\n\t\t\t\toffset=parseInt(offset);\r\n\t\t\t\tif(this.startContainer === node && this.startOffset == offset){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._cachedBookmark;\r\n\r\n\t\t\t\tthis.startContainer = node;\r\n\t\t\t\tthis.startOffset = offset;\r\n\t\t\t\tif(!this.endContainer){\r\n\t\t\t\t\tthis.setEnd(node, offset);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._updateInternal();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsetEnd: function(node, offset){\r\n\t\t\t\toffset=parseInt(offset);\r\n\t\t\t\tif(this.endContainer === node && this.endOffset == offset){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._cachedBookmark;\r\n\r\n\t\t\t\tthis.endContainer = node;\r\n\t\t\t\tthis.endOffset = offset;\r\n\t\t\t\tif(!this.startContainer){\r\n\t\t\t\t\tthis.setStart(node, offset);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._updateInternal();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsetStartAfter: function(node, offset){\r\n\t\t\t\tthis._setPoint('setStart', node, offset, 1);\r\n\t\t\t},\r\n\t\t\tsetStartBefore: function(node, offset){\r\n\t\t\t\tthis._setPoint('setStart', node, offset, 0);\r\n\t\t\t},\r\n\t\t\tsetEndAfter: function(node, offset){\r\n\t\t\t\tthis._setPoint('setEnd', node, offset, 1);\r\n\t\t\t},\r\n\t\t\tsetEndBefore: function(node, offset){\r\n\t\t\t\tthis._setPoint('setEnd', node, offset, 0);\r\n\t\t\t},\r\n\t\t\t_setPoint: function(what, node, offset, ext){\r\n\t\t\t\tvar index = rangeapi.getIndex(node, node.parentNode).o;\r\n\t\t\t\tthis[what](node.parentNode, index.pop()+ext);\r\n\t\t\t},\r\n\t\t\t_getIERange: function(){\r\n\t\t\t\tvar r = (this._body || this.endContainer.ownerDocument.body).createTextRange();\r\n\t\t\t\tie.setRange(r, this.startContainer, this.startOffset, this.endContainer, this.endOffset, this.collapsed);\r\n\t\t\t\treturn r;\r\n\t\t\t},\r\n\t\t\tgetBookmark: function(){\r\n\t\t\t\tthis._getIERange();\r\n\t\t\t\treturn this._cachedBookmark;\r\n\t\t\t},\r\n\t\t\t_select: function(){\r\n\t\t\t\tvar r = this._getIERange();\r\n\t\t\t\tr.select();\r\n\t\t\t},\r\n\t\t\tdeleteContents: function(){\r\n\t\t\t\tvar s = this.startContainer, r = this._getIERange();\r\n\t\t\t\tif(s.nodeType === 3 && !this.startOffset){\r\n\t\t\t\t\t//if the range starts at the beginning of a\r\n\t\t\t\t\t//text node, move it to before the textnode\r\n\t\t\t\t\t//to make sure the range is still valid\r\n\t\t\t\t\t//after deleteContents() finishes\r\n\t\t\t\t\tthis.setStartBefore(s);\r\n\t\t\t\t}\r\n\t\t\t\tr.pasteHTML('');\r\n\t\t\t\tthis.endContainer = this.startContainer;\r\n\t\t\t\tthis.endOffset = this.startOffset;\r\n\t\t\t\tthis.collapsed = true;\r\n\t\t\t},\r\n\t\t\tcloneRange: function(){\r\n\t\t\t\tvar r = new W3CRange([this.startContainer,this.startOffset,\r\n\t\t\t\t\tthis.endContainer,this.endOffset]);\r\n\t\t\t\tr._body = this._body;\r\n\t\t\t\treturn r;\r\n\t\t\t},\r\n\t\t\tdetach: function(){\r\n\t\t\t\tthis._body = null;\r\n\t\t\t\tthis.commonAncestorContainer = null;\r\n\t\t\t\tthis.startContainer = null;\r\n\t\t\t\tthis.startOffset = 0;\r\n\t\t\t\tthis.endContainer = null;\r\n\t\t\t\tthis.endOffset = 0;\r\n\t\t\t\tthis.collapsed = true;\r\n\t\t\t}\r\n\t\t});\r\n\t} //if(!window.getSelection)\r\n\r\n\t// remove for 2.0\r\n\tlang.setObject(\"dijit.range\", rangeapi);\r\n\r\n\treturn rangeapi;\r\n});\r\n\ndefine('dijit/_editor/html',[\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/lang\", // lang.setObject\r\n\t\"dojo/sniff\" // has(\"ie\")\r\n], function(array, lang, has){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/html\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tHTML serialization utility functions used by editor\r\n\t};\r\n\tlang.setObject(\"dijit._editor.html\", exports);\r\n\r\n\tvar escape = exports.escapeXml = function(/*String*/ str, /*Boolean?*/ noSingleQuotes){\r\n\t\t// summary:\r\n\t\t//\t\tAdds escape sequences for special characters in XML: `&<>\"'`.\r\n\t\t//\t\tOptionally skips escapes for single quotes.\r\n\t\tstr = str.replace(/&/gm, \"&amp;\").replace(/</gm, \"&lt;\").replace(/>/gm, \"&gt;\").replace(/\"/gm, \"&quot;\");\r\n\t\tif(!noSingleQuotes){\r\n\t\t\tstr = str.replace(/'/gm, \"&#39;\");\r\n\t\t}\r\n\t\treturn str; // string\r\n\t};\r\n\r\n\texports.getNodeHtml = function(/*DomNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tReturn string representing HTML for node and it's children\r\n\t\tvar output = [];\r\n\t\texports.getNodeHtmlHelper(node, output);\r\n\t\treturn output.join(\"\");\r\n\t};\r\n\r\n\texports.getNodeHtmlHelper = function(/*DomNode*/ node, /*String[]*/ output){\r\n\t\t// summary:\r\n\t\t//\t\tPushes array of strings into output[] which represent HTML for node and it's children\r\n\t\tswitch(node.nodeType){\r\n\t\t\tcase 1: // element node\r\n\t\t\t\tvar lName = node.nodeName.toLowerCase();\r\n\t\t\t\tif(!lName || lName.charAt(0) == \"/\"){\r\n\t\t\t\t\t// IE does some strange things with malformed HTML input, like\r\n\t\t\t\t\t// treating a close tag </span> without an open tag <span>, as\r\n\t\t\t\t\t// a new tag with tagName of /span.  Corrupts output HTML, remove\r\n\t\t\t\t\t// them.  Other browsers don't prefix tags that way, so will\r\n\t\t\t\t\t// never show up.\r\n\t\t\t\t\treturn \"\";\r\n\t\t\t\t}\r\n\t\t\t\toutput.push('<', lName);\r\n\r\n\t\t\t\t// store the list of attributes and sort it to have the\r\n\t\t\t\t// attributes appear in the dictionary order\r\n\t\t\t\tvar attrarray = [], attrhash = {};\r\n\t\t\t\tvar attr;\r\n\t\t\t\tif(has(\"dom-attributes-explicit\") || has(\"dom-attributes-specified-flag\")){\r\n\t\t\t\t\t// IE8+ and all other browsers.\r\n\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\twhile((attr = node.attributes[i++])){\r\n\t\t\t\t\t\t// ignore all attributes starting with _dj which are\r\n\t\t\t\t\t\t// internal temporary attributes used by the editor\r\n\t\t\t\t\t\tvar n = attr.name;\r\n\t\t\t\t\t\tif(n.substr(0, 3) !== '_dj' &&\r\n\t\t\t\t\t\t\t(!has(\"dom-attributes-specified-flag\") || attr.specified) && !(n in attrhash)){    // workaround repeated attributes bug in IE8 (LinkDialog test)\r\n\t\t\t\t\t\t\tvar v = attr.value;\r\n\t\t\t\t\t\t\tif(n == 'src' || n == 'href'){\r\n\t\t\t\t\t\t\t\tif(node.getAttribute('_djrealurl')){\r\n\t\t\t\t\t\t\t\t\tv = node.getAttribute('_djrealurl');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(has(\"ie\") === 8 && n === \"style\"){\r\n\t\t\t\t\t\t\t\tv = v.replace(\"HEIGHT:\", \"height:\").replace(\"WIDTH:\", \"width:\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tattrarray.push([n, v]);\r\n\t\t\t\t\t\t\tattrhash[n] = v;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// IE6-7 code path\r\n\t\t\t\t\tvar clone = /^input$|^img$/i.test(node.nodeName) ? node : node.cloneNode(false);\r\n\t\t\t\t\tvar s = clone.outerHTML;\r\n\t\t\t\t\t// Split up and manage the attrs via regexp\r\n\t\t\t\t\t// similar to prettyPrint attr logic.\r\n\t\t\t\t\tvar rgxp_attrsMatch = /[\\w-]+=(\"[^\"]*\"|'[^']*'|\\S*)/gi\r\n\t\t\t\t\tvar attrSplit = s.match(rgxp_attrsMatch);\r\n\t\t\t\t\ts = s.substr(0, s.indexOf('>'));\r\n\t\t\t\t\tarray.forEach(attrSplit, function(attr){\r\n\t\t\t\t\t\tif(attr){\r\n\t\t\t\t\t\t\tvar idx = attr.indexOf(\"=\");\r\n\t\t\t\t\t\t\tif(idx > 0){\r\n\t\t\t\t\t\t\t\tvar key = attr.substring(0, idx);\r\n\t\t\t\t\t\t\t\tif(key.substr(0, 3) != '_dj'){\r\n\t\t\t\t\t\t\t\t\tif(key == 'src' || key == 'href'){\r\n\t\t\t\t\t\t\t\t\t\tif(node.getAttribute('_djrealurl')){\r\n\t\t\t\t\t\t\t\t\t\t\tattrarray.push([key, node.getAttribute('_djrealurl')]);\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar val, match;\r\n\t\t\t\t\t\t\t\t\tswitch(key){\r\n\t\t\t\t\t\t\t\t\t\tcase 'style':\r\n\t\t\t\t\t\t\t\t\t\t\tval = node.style.cssText.toLowerCase();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'class':\r\n\t\t\t\t\t\t\t\t\t\t\tval = node.className;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'width':\r\n\t\t\t\t\t\t\t\t\t\t\tif(lName === \"img\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t// This somehow gets lost on IE for IMG tags and the like\r\n\t\t\t\t\t\t\t\t\t\t\t\t// and we have to find it in outerHTML, known IE oddity.\r\n\t\t\t\t\t\t\t\t\t\t\t\tmatch = /width=(\\S+)/i.exec(s);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(match){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tval = match[1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcase 'height':\r\n\t\t\t\t\t\t\t\t\t\t\tif(lName === \"img\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\t// This somehow gets lost on IE for IMG tags and the like\r\n\t\t\t\t\t\t\t\t\t\t\t\t// and we have to find it in outerHTML, known IE oddity.\r\n\t\t\t\t\t\t\t\t\t\t\t\tmatch = /height=(\\S+)/i.exec(s);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(match){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tval = match[1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\tval = node.getAttribute(key);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(val != null){\r\n\t\t\t\t\t\t\t\t\t\tattrarray.push([key, val.toString()]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t\tattrarray.sort(function(a, b){\r\n\t\t\t\t\treturn a[0] < b[0] ? -1 : (a[0] == b[0] ? 0 : 1);\r\n\t\t\t\t});\r\n\t\t\t\tvar j = 0;\r\n\t\t\t\twhile((attr = attrarray[j++])){\r\n\t\t\t\t\toutput.push(' ', attr[0], '=\"',\r\n\t\t\t\t\t\t(typeof attr[1] === \"string\" ? escape(attr[1], true) : attr[1]), '\"');\r\n\t\t\t\t}\r\n\t\t\t\tswitch(lName){\r\n\t\t\t\t\tcase 'br':\r\n\t\t\t\t\tcase 'hr':\r\n\t\t\t\t\tcase 'img':\r\n\t\t\t\t\tcase 'input':\r\n\t\t\t\t\tcase 'base':\r\n\t\t\t\t\tcase 'meta':\r\n\t\t\t\t\tcase 'area':\r\n\t\t\t\t\tcase 'basefont':\r\n\t\t\t\t\t\t// These should all be singly closed\r\n\t\t\t\t\t\toutput.push(' />');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'script':\r\n\t\t\t\t\t\t// Browsers handle script tags differently in how you get content,\r\n\t\t\t\t\t\t// but innerHTML always seems to work, so insert its content that way\r\n\t\t\t\t\t\t// Yes, it's bad to allow script tags in the editor code, but some people\r\n\t\t\t\t\t\t// seem to want to do it, so we need to at least return them right.\r\n\t\t\t\t\t\t// other plugins/filters can strip them.\r\n\t\t\t\t\t\toutput.push('>', node.innerHTML, '</', lName, '>');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\toutput.push('>');\r\n\t\t\t\t\t\tif(node.hasChildNodes()){\r\n\t\t\t\t\t\t\texports.getChildrenHtmlHelper(node, output);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toutput.push('</', lName, '>');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4: // cdata\r\n\t\t\tcase 3: // text\r\n\t\t\t\t// FIXME:\r\n\t\t\t\toutput.push(escape(node.nodeValue, true));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // comment\r\n\t\t\t\t// FIXME:\r\n\t\t\t\toutput.push('<!--', escape(node.nodeValue, true), '-->');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\toutput.push(\"<!-- Element not recognized - Type: \", node.nodeType, \" Name: \", node.nodeName, \"-->\");\r\n\t\t}\r\n\t};\r\n\r\n\texports.getChildrenHtml = function(/*DomNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tReturns the html content of a DomNode's children\r\n\t\tvar output = [];\r\n\t\texports.getChildrenHtmlHelper(node, output);\r\n\t\treturn output.join(\"\");\r\n\t};\r\n\r\n\texports.getChildrenHtmlHelper = function(/*DomNode*/ dom, /*String[]*/ output){\r\n\t\t// summary:\r\n\t\t//\t\tPushes the html content of a DomNode's children into out[]\r\n\r\n\t\tif(!dom){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar nodes = dom[\"childNodes\"] || dom;\r\n\r\n\t\t// IE issue.\r\n\t\t// If we have an actual node we can check parent relationships on for IE,\r\n\t\t// We should check, as IE sometimes builds invalid DOMS.  If no parent, we can't check\r\n\t\t// And should just process it and hope for the best.\r\n\t\tvar checkParent = !has(\"ie\") || nodes !== dom;\r\n\r\n\t\tvar node, i = 0;\r\n\t\twhile((node = nodes[i++])){\r\n\t\t\t// IE is broken.  DOMs are supposed to be a tree.  But in the case of malformed HTML, IE generates a graph\r\n\t\t\t// meaning one node ends up with multiple references (multiple parents).  This is totally wrong and invalid, but\r\n\t\t\t// such is what it is.  We have to keep track and check for this because otherwise the source output HTML will have dups.\r\n\t\t\t// No other browser generates a graph.  Leave it to IE to break a fundamental DOM rule.  So, we check the parent if we can\r\n\t\t\t// If we can't, nothing more we can do other than walk it.\r\n\t\t\tif(!checkParent || node.parentNode == dom){\r\n\t\t\t\texports.getNodeHtmlHelper(node, output);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn exports;\r\n});\r\n\ndefine('dijit/_editor/RichText',[\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.some\r\n\t\"dojo/_base/config\", // config\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/Deferred\", // Deferred\r\n\t\"dojo/dom\", // dom.byId\r\n\t\"dojo/dom-attr\", // domAttr.set or get\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove\r\n\t\"dojo/dom-construct\", // domConstruct.create domConstruct.destroy domConstruct.place\r\n\t\"dojo/dom-geometry\", // domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle domStyle.set\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/keys\", // keys.BACKSPACE keys.TAB\r\n\t\"dojo/_base/lang\", // lang.clone lang.hitch lang.isArray lang.isFunction lang.isString lang.trim\r\n\t\"dojo/on\", // on()\r\n\t\"dojo/query\", // query\r\n\t\"dojo/domReady\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"mozilla\") has(\"opera\") has(\"safari\") has(\"webkit\")\r\n\t\"dojo/topic\", // topic.publish() (publish)\r\n\t\"dojo/_base/unload\", // unload\r\n\t\"dojo/_base/url\", // url\r\n\t\"dojo/window\", // winUtils.get()\r\n\t\"../_Widget\",\r\n\t\"../_CssStateMixin\",\r\n\t\"../selection\",\r\n\t\"./range\",\r\n\t\"./html\",\r\n\t\"../focus\",\r\n\t\"../main\"    // dijit._scopeName\r\n], function(array, config, declare, Deferred, dom, domAttr, domClass, domConstruct, domGeometry, domStyle,\r\n\t\t\tkernel, keys, lang, on, query, domReady, has, topic, unload, _Url, winUtils,\r\n\t\t\t_Widget, _CssStateMixin, selectionapi, rangeapi, htmlapi, focus, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/RichText\r\n\r\n\t// If you want to allow for rich text saving with back/forward actions, you must add a text area to your page with\r\n\t// the id==dijit._scopeName + \"._editor.RichText.value\" (typically \"dijit/_editor/RichText.value). For example,\r\n\t// something like this will work:\r\n\t//\r\n\t//\t<textarea id=\"dijit._editor.RichText.value\" style=\"display:none;position:absolute;top:-100px;left:-100px;height:3px;width:3px;overflow:hidden;\"></textarea>\r\n\r\n\tvar RichText = declare(\"dijit._editor.RichText\", [_Widget, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tdijit/_editor/RichText is the core of dijit.Editor, which provides basic\r\n\t\t//\t\tWYSIWYG editing features.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tdijit/_editor/RichText is the core of dijit.Editor, which provides basic\r\n\t\t//\t\tWYSIWYG editing features. It also encapsulates the differences\r\n\t\t//\t\tof different js engines for various browsers.  Do not use this widget\r\n\t\t//\t\twith an HTML &lt;TEXTAREA&gt; tag, since the browser unescapes XML escape characters,\r\n\t\t//\t\tlike &lt;.  This can have unexpected behavior and lead to security issues\r\n\t\t//\t\tsuch as scripting attacks.\r\n\t\t//\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tconstructor: function(params /*===== , srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tInitial settings for any of the widget attributes, except readonly attributes.\r\n\t\t\t// srcNodeRef: DOMNode\r\n\t\t\t//\t\tThe widget replaces the specified DOMNode.\r\n\r\n\t\t\t// contentPreFilters: Function(String)[]\r\n\t\t\t//\t\tPre content filter function register array.\r\n\t\t\t//\t\tthese filters will be executed before the actual\r\n\t\t\t//\t\tediting area gets the html content.\r\n\t\t\tthis.contentPreFilters = [];\r\n\r\n\t\t\t// contentPostFilters: Function(String)[]\r\n\t\t\t//\t\tpost content filter function register array.\r\n\t\t\t//\t\tThese will be used on the resulting html\r\n\t\t\t//\t\tfrom contentDomPostFilters. The resulting\r\n\t\t\t//\t\tcontent is the final html (returned by getValue()).\r\n\t\t\tthis.contentPostFilters = [];\r\n\r\n\t\t\t// contentDomPreFilters: Function(DomNode)[]\r\n\t\t\t//\t\tPre content dom filter function register array.\r\n\t\t\t//\t\tThese filters are applied after the result from\r\n\t\t\t//\t\tcontentPreFilters are set to the editing area.\r\n\t\t\tthis.contentDomPreFilters = [];\r\n\r\n\t\t\t// contentDomPostFilters: Function(DomNode)[]\r\n\t\t\t//\t\tPost content dom filter function register array.\r\n\t\t\t//\t\tThese filters are executed on the editing area dom.\r\n\t\t\t//\t\tThe result from these will be passed to contentPostFilters.\r\n\t\t\tthis.contentDomPostFilters = [];\r\n\r\n\t\t\t// editingAreaStyleSheets: dojo._URL[]\r\n\t\t\t//\t\tarray to store all the stylesheets applied to the editing area\r\n\t\t\tthis.editingAreaStyleSheets = [];\r\n\r\n\t\t\t// Make a copy of this.events before we start writing into it, otherwise we\r\n\t\t\t// will modify the prototype which leads to bad things on pages w/multiple editors\r\n\t\t\tthis.events = [].concat(this.events);\r\n\r\n\t\t\tthis._keyHandlers = {};\r\n\r\n\t\t\tif(params && lang.isString(params.value)){\r\n\t\t\t\tthis.value = params.value;\r\n\t\t\t}\r\n\r\n\t\t\tthis.onLoadDeferred = new Deferred();\r\n\t\t},\r\n\r\n\t\tbaseClass: \"dijitEditor\",\r\n\r\n\t\t// inheritWidth: Boolean\r\n\t\t//\t\twhether to inherit the parent's width or simply use 100%\r\n\t\tinheritWidth: false,\r\n\r\n\t\t// focusOnLoad: [deprecated] Boolean\r\n\t\t//\t\tFocus into this widget when the page is loaded\r\n\t\tfocusOnLoad: false,\r\n\r\n\t\t// name: String?\r\n\t\t//\t\tSpecifies the name of a (hidden) `<textarea>` node on the page that's used to save\r\n\t\t//\t\tthe editor content on page leave.   Used to restore editor contents after navigating\r\n\t\t//\t\tto a new page and then hitting the back button.\r\n\t\tname: \"\",\r\n\r\n\t\t// styleSheets: [const] String\r\n\t\t//\t\tsemicolon (\";\") separated list of css files for the editing area\r\n\t\tstyleSheets: \"\",\r\n\r\n\t\t// height: String\r\n\t\t//\t\tSet height to fix the editor at a specific height, with scrolling.\r\n\t\t//\t\tBy default, this is 300px.  If you want to have the editor always\r\n\t\t//\t\tresizes to accommodate the content, use AlwaysShowToolbar plugin\r\n\t\t//\t\tand set height=\"\".  If this editor is used within a layout widget,\r\n\t\t//\t\tset height=\"100%\".\r\n\t\theight: \"300px\",\r\n\r\n\t\t// minHeight: String\r\n\t\t//\t\tThe minimum height that the editor should have.\r\n\t\tminHeight: \"1em\",\r\n\r\n\t\t// isClosed: [private] Boolean\r\n\t\tisClosed: true,\r\n\r\n\t\t// isLoaded: [private] Boolean\r\n\t\tisLoaded: false,\r\n\r\n\t\t// _SEPARATOR: [private] String\r\n\t\t//\t\tUsed to concat contents from multiple editors into a single string,\r\n\t\t//\t\tso they can be saved into a single `<textarea>` node.  See \"name\" attribute.\r\n\t\t_SEPARATOR: \"@@**%%__RICHTEXTBOUNDRY__%%**@@\",\r\n\r\n\t\t// _NAME_CONTENT_SEP: [private] String\r\n\t\t//\t\tUSed to separate name from content.  Just a colon isn't safe.\r\n\t\t_NAME_CONTENT_SEP: \"@@**%%:%%**@@\",\r\n\r\n\t\t// onLoadDeferred: [readonly] dojo/promise/Promise\r\n\t\t//\t\tDeferred which is fired when the editor finishes loading.\r\n\t\t//\t\tCall myEditor.onLoadDeferred.then(callback) it to be informed\r\n\t\t//\t\twhen the rich-text area initialization is finalized.\r\n\t\tonLoadDeferred: null,\r\n\r\n\t\t// isTabIndent: Boolean\r\n\t\t//\t\tMake tab key and shift-tab indent and outdent rather than navigating.\r\n\t\t//\t\tCaution: sing this makes web pages inaccessible to users unable to use a mouse.\r\n\t\tisTabIndent: false,\r\n\r\n\t\t// disableSpellCheck: [const] Boolean\r\n\t\t//\t\tWhen true, disables the browser's native spell checking, if supported.\r\n\t\t//\t\tWorks only in Firefox.\r\n\t\tdisableSpellCheck: false,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tif(\"textarea\" === this.domNode.tagName.toLowerCase()){\r\n\t\t\t\tconsole.warn(\"RichText should not be used with the TEXTAREA tag.  See dijit._editor.RichText docs.\");\r\n\t\t\t}\r\n\r\n\t\t\t// Push in the builtin filters now, making them the first executed, but not over-riding anything\r\n\t\t\t// users passed in.  See: #6062\r\n\t\t\tthis.contentPreFilters = [\r\n\t\t\t\tlang.trim,\t// avoid IE10 problem hitting ENTER on last line when there's a trailing \\n.\r\n\t\t\t\tlang.hitch(this, \"_preFixUrlAttributes\")\r\n\t\t\t].concat(this.contentPreFilters);\r\n\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\tthis.contentPreFilters = [this._normalizeFontStyle].concat(this.contentPreFilters);\r\n\t\t\t\tthis.contentPostFilters = [this._removeMozBogus].concat(this.contentPostFilters);\r\n\t\t\t}\r\n\t\t\tif(has(\"webkit\")){\r\n\t\t\t\t// Try to clean up WebKit bogus artifacts.  The inserted classes\r\n\t\t\t\t// made by WebKit sometimes messes things up.\r\n\t\t\t\tthis.contentPreFilters = [this._removeWebkitBogus].concat(this.contentPreFilters);\r\n\t\t\t\tthis.contentPostFilters = [this._removeWebkitBogus].concat(this.contentPostFilters);\r\n\t\t\t}\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\t// IE generates <strong> and <em> but we want to normalize to <b> and <i>\r\n\t\t\t\t// Still happens in IE11!\r\n\t\t\t\tthis.contentPostFilters = [this._normalizeFontStyle].concat(this.contentPostFilters);\r\n\t\t\t\tthis.contentDomPostFilters = [lang.hitch(this, \"_stripBreakerNodes\")].concat(this.contentDomPostFilters);\r\n\t\t\t}\r\n\t\t\tthis.contentDomPostFilters = [lang.hitch(this, \"_stripTrailingEmptyNodes\")].concat(this.contentDomPostFilters);\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\ttopic.publish(dijit._scopeName + \"._editor.RichText::init\", this);\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Don't call open() until startup() because we need to be attached to the DOM, and also if we are the\r\n\t\t\t// child of a StackContainer, let StackContainer._setupChild() do DOM manipulations before iframe is\r\n\t\t\t// created, to avoid duplicate onload call.\r\n\t\t\tthis.open();\r\n\t\t\tthis.setupDefaultShortcuts();\r\n\t\t},\r\n\r\n\t\tsetupDefaultShortcuts: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd some default key handlers\r\n\t\t\t// description:\r\n\t\t\t//\t\tOverwrite this to setup your own handlers. The default\r\n\t\t\t//\t\timplementation does not use Editor commands, but directly\r\n\t\t\t//\t\texecutes the builtin commands within the underlying browser\r\n\t\t\t//\t\tsupport.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar exec = lang.hitch(this, function(cmd, arg){\r\n\t\t\t\treturn function(){\r\n\t\t\t\t\treturn !this.execCommand(cmd, arg);\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tvar ctrlKeyHandlers = {\r\n\t\t\t\tb: exec(\"bold\"),\r\n\t\t\t\ti: exec(\"italic\"),\r\n\t\t\t\tu: exec(\"underline\"),\r\n\t\t\t\ta: exec(\"selectall\"),\r\n\t\t\t\ts: function(){\r\n\t\t\t\t\tthis.save(true);\r\n\t\t\t\t},\r\n\t\t\t\tm: function(){\r\n\t\t\t\t\tthis.isTabIndent = !this.isTabIndent;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t\"1\": exec(\"formatblock\", \"h1\"),\r\n\t\t\t\t\"2\": exec(\"formatblock\", \"h2\"),\r\n\t\t\t\t\"3\": exec(\"formatblock\", \"h3\"),\r\n\t\t\t\t\"4\": exec(\"formatblock\", \"h4\"),\r\n\r\n\t\t\t\t\"\\\\\": exec(\"insertunorderedlist\")\r\n\t\t\t};\r\n\r\n\t\t\tif(!has(\"ie\")){\r\n\t\t\t\tctrlKeyHandlers.Z = exec(\"redo\"); //FIXME: undo?\r\n\t\t\t}\r\n\r\n\t\t\tvar key;\r\n\t\t\tfor(key in ctrlKeyHandlers){\r\n\t\t\t\tthis.addKeyHandler(key, true, false, ctrlKeyHandlers[key]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// events: [private] String[]\r\n\t\t//\t\t events which should be connected to the underlying editing area\r\n\t\tevents: [\"onKeyDown\", \"onKeyUp\"], // onClick handled specially\r\n\r\n\t\t// captureEvents: [deprecated] String[]\r\n\t\t//\t\t Events which should be connected to the underlying editing\r\n\t\t//\t\t area, events in this array will be addListener with\r\n\t\t//\t\t capture=true.\r\n\t\t// TODO: looking at the code I don't see any distinction between events and captureEvents,\r\n\t\t// so get rid of this for 2.0 if not sooner\r\n\t\tcaptureEvents: [],\r\n\r\n\t\t_editorCommandsLocalized: false,\r\n\t\t_localizeEditorCommands: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen IE is running in a non-English locale, the API actually changes,\r\n\t\t\t//\t\tso that we have to say (for example) danraku instead of p (for paragraph).\r\n\t\t\t//\t\tHandle that here.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(RichText._editorCommandsLocalized){\r\n\t\t\t\t// Use the already generate cache of mappings.\r\n\t\t\t\tthis._local2NativeFormatNames = RichText._local2NativeFormatNames;\r\n\t\t\t\tthis._native2LocalFormatNames = RichText._native2LocalFormatNames;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tRichText._editorCommandsLocalized = true;\r\n\t\t\tRichText._local2NativeFormatNames = {};\r\n\t\t\tRichText._native2LocalFormatNames = {};\r\n\t\t\tthis._local2NativeFormatNames = RichText._local2NativeFormatNames;\r\n\t\t\tthis._native2LocalFormatNames = RichText._native2LocalFormatNames;\r\n\t\t\t//in IE, names for blockformat is locale dependent, so we cache the values here\r\n\r\n\t\t\t//put p after div, so if IE returns Normal, we show it as paragraph\r\n\t\t\t//We can distinguish p and div if IE returns Normal, however, in order to detect that,\r\n\t\t\t//we have to call this.document.selection.createRange().parentElement() or such, which\r\n\t\t\t//could slow things down. Leave it as it is for now\r\n\t\t\tvar formats = ['div', 'p', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ol', 'ul', 'address'];\r\n\t\t\tvar localhtml = \"\", format, i = 0;\r\n\t\t\twhile((format = formats[i++])){\r\n\t\t\t\t//append a <br> after each element to separate the elements more reliably\r\n\t\t\t\tif(format.charAt(1) !== 'l'){\r\n\t\t\t\t\tlocalhtml += \"<\" + format + \"><span>content</span></\" + format + \"><br/>\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlocalhtml += \"<\" + format + \"><li>content</li></\" + format + \"><br/>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// queryCommandValue returns empty if we hide editNode, so move it out of screen temporary\r\n\t\t\t// Also, IE9 does weird stuff unless we do it inside the editor iframe.\r\n\t\t\tvar style = { position: \"absolute\", top: \"0px\", zIndex: 10, opacity: 0.01 };\r\n\t\t\tvar div = domConstruct.create('div', {style: style, innerHTML: localhtml});\r\n\t\t\tthis.ownerDocumentBody.appendChild(div);\r\n\r\n\t\t\t// IE9 has a timing issue with doing this right after setting\r\n\t\t\t// the inner HTML, so put a delay in.\r\n\t\t\tvar inject = lang.hitch(this, function(){\r\n\t\t\t\tvar node = div.firstChild;\r\n\t\t\t\twhile(node){\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tthis.selection.selectElement(node.firstChild);\r\n\t\t\t\t\t\tvar nativename = node.tagName.toLowerCase();\r\n\t\t\t\t\t\tthis._local2NativeFormatNames[nativename] = document.queryCommandValue(\"formatblock\");\r\n\t\t\t\t\t\tthis._native2LocalFormatNames[this._local2NativeFormatNames[nativename]] = nativename;\r\n\t\t\t\t\t\tnode = node.nextSibling.nextSibling;\r\n\t\t\t\t\t\t//console.log(\"Mapped: \", nativename, \" to: \", this._local2NativeFormatNames[nativename]);\r\n\t\t\t\t\t}catch(e){ /*Sqelch the occasional IE9 error */\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdomConstruct.destroy(div);\r\n\t\t\t});\r\n\t\t\tthis.defer(inject);\r\n\t\t},\r\n\r\n\t\topen: function(/*DomNode?*/ element){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTransforms the node referenced in this.domNode into a rich text editing\r\n\t\t\t//\t\tnode.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets up the editing area asynchronously. This will result in\r\n\t\t\t//\t\tthe creation and replacement with an iframe.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!this.onLoadDeferred || this.onLoadDeferred.fired >= 0){\r\n\t\t\t\tthis.onLoadDeferred = new Deferred();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.isClosed){\r\n\t\t\t\tthis.close();\r\n\t\t\t}\r\n\t\t\ttopic.publish(dijit._scopeName + \"._editor.RichText::open\", this);\r\n\r\n\t\t\tif(arguments.length === 1 && element.nodeName){ // else unchanged\r\n\t\t\t\tthis.domNode = element;\r\n\t\t\t}\r\n\r\n\t\t\tvar dn = this.domNode;\r\n\r\n\t\t\t// Compute initial value of the editor\r\n\t\t\tvar html;\r\n\t\t\tif(lang.isString(this.value)){\r\n\t\t\t\t// Allow setting the editor content programmatically instead of\r\n\t\t\t\t// relying on the initial content being contained within the target\r\n\t\t\t\t// domNode.\r\n\t\t\t\thtml = this.value;\r\n\t\t\t\tdn.innerHTML = \"\";\r\n\t\t\t}else if(dn.nodeName && dn.nodeName.toLowerCase() == \"textarea\"){\r\n\t\t\t\t// if we were created from a textarea, then we need to create a\r\n\t\t\t\t// new editing harness node.\r\n\t\t\t\tvar ta = (this.textarea = dn);\r\n\t\t\t\tthis.name = ta.name;\r\n\t\t\t\thtml = ta.value;\r\n\t\t\t\tdn = this.domNode = this.ownerDocument.createElement(\"div\");\r\n\t\t\t\tdn.setAttribute('widgetId', this.id);\r\n\t\t\t\tta.removeAttribute('widgetId');\r\n\t\t\t\tdn.cssText = ta.cssText;\r\n\t\t\t\tdn.className += \" \" + ta.className;\r\n\t\t\t\tdomConstruct.place(dn, ta, \"before\");\r\n\t\t\t\tvar tmpFunc = lang.hitch(this, function(){\r\n\t\t\t\t\t//some browsers refuse to submit display=none textarea, so\r\n\t\t\t\t\t//move the textarea off screen instead\r\n\t\t\t\t\tdomStyle.set(ta, {\r\n\t\t\t\t\t\tdisplay: \"block\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\ttop: \"-1000px\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(has(\"ie\")){ //nasty IE bug: abnormal formatting if overflow is not hidden\r\n\t\t\t\t\t\tvar s = ta.style;\r\n\t\t\t\t\t\tthis.__overflow = s.overflow;\r\n\t\t\t\t\t\ts.overflow = \"hidden\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(has(\"ie\")){\r\n\t\t\t\t\tthis.defer(tmpFunc, 10);\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttmpFunc();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(ta.form){\r\n\t\t\t\t\tvar resetValue = ta.value;\r\n\t\t\t\t\tthis.reset = function(){\r\n\t\t\t\t\t\tvar current = this.getValue();\r\n\t\t\t\t\t\tif(current !== resetValue){\r\n\t\t\t\t\t\t\tthis.replaceValue(resetValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\ton(ta.form, \"submit\", lang.hitch(this, function(){\r\n\t\t\t\t\t\t// Copy value to the <textarea> so it gets submitted along with form.\r\n\t\t\t\t\t\t// FIXME: should we be calling close() here instead?\r\n\t\t\t\t\t\tdomAttr.set(ta, 'disabled', this.disabled); // don't submit the value if disabled\r\n\t\t\t\t\t\tta.value = this.getValue();\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\thtml = htmlapi.getChildrenHtml(dn);\r\n\t\t\t\tdn.innerHTML = \"\";\r\n\t\t\t}\r\n\t\t\tthis.value = html;\r\n\r\n\t\t\t// If we're a list item we have to put in a blank line to force the\r\n\t\t\t// bullet to nicely align at the top of text\r\n\t\t\tif(dn.nodeName && dn.nodeName === \"LI\"){\r\n\t\t\t\tdn.innerHTML = \" <br>\";\r\n\t\t\t}\r\n\r\n\t\t\t// Construct the editor div structure.\r\n\t\t\tthis.header = dn.ownerDocument.createElement(\"div\");\r\n\t\t\tdn.appendChild(this.header);\r\n\t\t\tthis.editingArea = dn.ownerDocument.createElement(\"div\");\r\n\t\t\tdn.appendChild(this.editingArea);\r\n\t\t\tthis.footer = dn.ownerDocument.createElement(\"div\");\r\n\t\t\tdn.appendChild(this.footer);\r\n\r\n\t\t\tif(!this.name){\r\n\t\t\t\tthis.name = this.id + \"_AUTOGEN\";\r\n\t\t\t}\r\n\r\n\t\t\t// User has pressed back/forward button so we lost the text in the editor, but it's saved\r\n\t\t\t// in a hidden <textarea> (which contains the data for all the editors on this page),\r\n\t\t\t// so get editor value from there\r\n\t\t\tif(this.name !== \"\" && (!config[\"useXDomain\"] || config[\"allowXdRichTextSave\"])){\r\n\t\t\t\tvar saveTextarea = dom.byId(dijit._scopeName + \"._editor.RichText.value\");\r\n\t\t\t\tif(saveTextarea && saveTextarea.value !== \"\"){\r\n\t\t\t\t\tvar datas = saveTextarea.value.split(this._SEPARATOR), i = 0, dat;\r\n\t\t\t\t\twhile((dat = datas[i++])){\r\n\t\t\t\t\t\tvar data = dat.split(this._NAME_CONTENT_SEP);\r\n\t\t\t\t\t\tif(data[0] === this.name){\r\n\t\t\t\t\t\t\tthis.value = data[1];\r\n\t\t\t\t\t\t\tdatas = datas.splice(i, 1);\r\n\t\t\t\t\t\t\tsaveTextarea.value = datas.join(this._SEPARATOR);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!RichText._globalSaveHandler){\r\n\t\t\t\t\tRichText._globalSaveHandler = {};\r\n\t\t\t\t\tunload.addOnUnload(function(){\r\n\t\t\t\t\t\tvar id;\r\n\t\t\t\t\t\tfor(id in RichText._globalSaveHandler){\r\n\t\t\t\t\t\t\tvar f = RichText._globalSaveHandler[id];\r\n\t\t\t\t\t\t\tif(lang.isFunction(f)){\r\n\t\t\t\t\t\t\t\tf();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tRichText._globalSaveHandler[this.id] = lang.hitch(this, \"_saveContent\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.isClosed = false;\r\n\r\n\t\t\tvar ifr = (this.editorObject = this.iframe = this.ownerDocument.createElement('iframe'));\r\n\t\t\tifr.id = this.id + \"_iframe\";\r\n\t\t\tifr.style.border = \"none\";\r\n\t\t\tifr.style.width = \"100%\";\r\n\t\t\tif(this._layoutMode){\r\n\t\t\t\t// iframe should be 100% height, thus getting it's height from surrounding\r\n\t\t\t\t// <div> (which has the correct height set by Editor)\r\n\t\t\t\tifr.style.height = \"100%\";\r\n\t\t\t}else{\r\n\t\t\t\tif(has(\"ie\") >= 7){\r\n\t\t\t\t\tif(this.height){\r\n\t\t\t\t\t\tifr.style.height = this.height;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.minHeight){\r\n\t\t\t\t\t\tifr.style.minHeight = this.minHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tifr.style.height = this.height ? this.height : this.minHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tifr.frameBorder = 0;\r\n\t\t\tifr._loadFunc = lang.hitch(this, function(w){\r\n\t\t\t\t// This method is called when the editor is first loaded and also if the Editor's\r\n\t\t\t\t// dom node is repositioned. Unfortunately repositioning the Editor tends to\r\n\t\t\t\t// clear the iframe's contents, so we can't just no-op in that case.\r\n\r\n\t\t\t\tthis.window = w;\r\n\t\t\t\tthis.document = w.document;\r\n\r\n\t\t\t\t// instantiate class to access selected text in editor's iframe\r\n\t\t\t\tthis.selection = new selectionapi.SelectionManager(w);\r\n\r\n\t\t\t\tif(has(\"ie\")){\r\n\t\t\t\t\tthis._localizeEditorCommands();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Do final setup and set contents of editor.\r\n\t\t\t\t// Use get(\"value\") rather than html in case _loadFunc() is being called for a second time\r\n\t\t\t\t// because editor's DOMNode was repositioned.\r\n\t\t\t\tthis.onLoad(this.get(\"value\"));\r\n\t\t\t});\r\n\r\n\t\t\t// Attach iframe to document, and set the initial (blank) content.\r\n\t\t\tvar src = this._getIframeDocTxt().replace(/\\\\/g, \"\\\\\\\\\").replace(/'/g, \"\\\\'\"),\r\n\t\t\t\ts;\r\n\r\n\t\t\t// IE10 and earlier will throw an \"Access is denied\" error when attempting to access the parent frame if\r\n\t\t\t// document.domain has been set, unless the child frame also has the same document.domain set. In some\r\n\t\t\t// cases, we can only set document.domain while the document is being constructed using open/write/close;\r\n\t\t\t// attempting to set it later results in a different \"This method can't be used in this context\" error.\r\n\t\t\t// However, in at least IE9-10, sometimes the parent.window check will succeed and the access failure will\r\n\t\t\t// only happen later when trying to access frameElement, so there is an additional check and fix there\r\n\t\t\t// as well. See #17529\r\n\t\t\tif (has(\"ie\") < 11) {\r\n\t\t\t\ts = 'javascript:document.open();try{parent.window;}catch(e){document.domain=\"' + document.domain + '\";}' +\r\n\t\t\t\t\t'document.write(\\'' + src + '\\');document.close()';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ts = \"javascript: '\" + src + \"'\";\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"ie\") == 9){\r\n\t\t\t\t// On IE9, attach to document before setting the content, to avoid problem w/iframe running in\r\n\t\t\t\t// wrong security context, see #16633.\r\n\t\t\t\tthis.editingArea.appendChild(ifr);\r\n\t\t\t\tifr.src = s;\r\n\t\t\t}else{\r\n\t\t\t\t// For other browsers, set src first, especially for IE6/7 where attaching first gives a warning on\r\n\t\t\t\t// https:// about \"this page contains secure and insecure items, do you want to view both?\"\r\n\t\t\t\tifr.setAttribute('src', s);\r\n\t\t\t\tthis.editingArea.appendChild(ifr);\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: this is a guess at the default line-height, kinda works\r\n\t\t\tif(dn.nodeName === \"LI\"){\r\n\t\t\t\tdn.lastChild.style.marginTop = \"-1.2em\";\r\n\t\t\t}\r\n\r\n\t\t\tdomClass.add(this.domNode, this.baseClass);\r\n\t\t},\r\n\r\n\t\t//static cache variables shared among all instance of this class\r\n\t\t_local2NativeFormatNames: {},\r\n\t\t_native2LocalFormatNames: {},\r\n\r\n\t\t_getIframeDocTxt: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGenerates the boilerplate text of the document inside the iframe (ie, `<html><head>...</head><body/></html>`).\r\n\t\t\t//\t\tEditor content (if not blank) should be added afterwards.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar _cs = domStyle.getComputedStyle(this.domNode);\r\n\r\n\t\t\t// The contents inside of <body>.  The real contents are set later via a call to setValue().\r\n\t\t\t// In auto-expand mode, need a wrapper div for AlwaysShowToolbar plugin to correctly\r\n\t\t\t// expand/contract the editor as the content changes.\r\n\t\t\tvar html = \"<div id='dijitEditorBody'></div>\";\r\n\r\n\t\t\tvar font = [ _cs.fontWeight, _cs.fontSize, _cs.fontFamily ].join(\" \");\r\n\r\n\t\t\t// line height is tricky - applying a units value will mess things up.\r\n\t\t\t// if we can't get a non-units value, bail out.\r\n\t\t\tvar lineHeight = _cs.lineHeight;\r\n\t\t\tif(lineHeight.indexOf(\"px\") >= 0){\r\n\t\t\t\tlineHeight = parseFloat(lineHeight) / parseFloat(_cs.fontSize);\r\n\t\t\t\t// console.debug(lineHeight);\r\n\t\t\t}else if(lineHeight.indexOf(\"em\") >= 0){\r\n\t\t\t\tlineHeight = parseFloat(lineHeight);\r\n\t\t\t}else{\r\n\t\t\t\t// If we can't get a non-units value, just default\r\n\t\t\t\t// it to the CSS spec default of 'normal'.  Seems to\r\n\t\t\t\t// work better, esp on IE, than '1.0'\r\n\t\t\t\tlineHeight = \"normal\";\r\n\t\t\t}\r\n\t\t\tvar userStyle = \"\";\r\n\t\t\tvar self = this;\r\n\t\t\tthis.style.replace(/(^|;)\\s*(line-|font-?)[^;]+/ig, function(match){\r\n\t\t\t\tmatch = match.replace(/^;/ig, \"\") + ';';\r\n\t\t\t\tvar s = match.split(\":\")[0];\r\n\t\t\t\tif(s){\r\n\t\t\t\t\ts = lang.trim(s);\r\n\t\t\t\t\ts = s.toLowerCase();\r\n\t\t\t\t\tvar i;\r\n\t\t\t\t\tvar sC = \"\";\r\n\t\t\t\t\tfor(i = 0; i < s.length; i++){\r\n\t\t\t\t\t\tvar c = s.charAt(i);\r\n\t\t\t\t\t\tswitch(c){\r\n\t\t\t\t\t\t\tcase \"-\":\r\n\t\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t\t\tc = s.charAt(i).toUpperCase();\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tsC += c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomStyle.set(self.domNode, sC, \"\");\r\n\t\t\t\t}\r\n\t\t\t\tuserStyle += match + ';';\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// need to find any associated label element, aria-label, or aria-labelledby and update iframe document title\r\n\t\t\tvar label = query('label[for=\"' + this.id + '\"]');\r\n\t\t\tvar title = \"\";\r\n\t\t\tif(label.length){\r\n\t\t\t\ttitle = label[0].innerHTML;\r\n\t\t\t}else if(this[\"aria-label\"]){\r\n\t\t\t\ttitle = this[\"aria-label\"];\r\n\t\t\t}else if(this[\"aria-labelledby\"]){\r\n\t\t\t\ttitle = dom.byId(this[\"aria-labelledby\"]).innerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t// Now that we have the title, also set it as the title attribute on the iframe\r\n\t\t\tthis.iframe.setAttribute(\"title\", title);\r\n\r\n\t\t\treturn [\r\n\t\t\t\t\"<!DOCTYPE html>\",\r\n\t\t\t\tthis.isLeftToRight() ? \"<html lang='\" + this.lang + \"'>\\n<head>\\n\" : \"<html dir='rtl' lang='\" + this.lang + \"'>\\n<head>\\n\",\r\n\t\t\t\ttitle ? \"<title>\" + title + \"</title>\" : \"\",\r\n\t\t\t\t\"<meta http-equiv='Content-Type' content='text/html'>\\n\",\r\n\t\t\t\t\"<style>\\n\",\r\n\t\t\t\t\"\\tbody,html {\\n\",\r\n\t\t\t\t\"\\t\\tbackground:transparent;\\n\",\r\n\t\t\t\t\"\\t\\tpadding: 1px 0 0 0;\\n\",\r\n\t\t\t\t\"\\t\\tmargin: -1px 0 0 0;\\n\", // remove extraneous vertical scrollbar on safari and firefox\r\n\t\t\t\t\"\\t}\\n\",\r\n\t\t\t\t\"\\tbody,html,#dijitEditorBody { outline: none; }\",\r\n\r\n\t\t\t\t// Set <body> to expand to full size of editor, so clicking anywhere will work.\r\n\t\t\t\t// Except in auto-expand mode, in which case the editor expands to the size of <body>.\r\n\t\t\t\t// Also determine how scrollers should be applied.  In autoexpand mode (height = \"\") no scrollers on y at all.\r\n\t\t\t\t// But in fixed height mode we want both x/y scrollers.\r\n\t\t\t\t// Scrollers go on <body> since it's been set to height: 100%.\r\n\t\t\t\t\"html { height: 100%; width: 100%; overflow: hidden; }\\n\",\t// scroll bar is on #dijitEditorBody, shouldn't be on <html>\r\n\t\t\t\tthis.height ? \"\\tbody,#dijitEditorBody { height: 100%; width: 100%; overflow: auto; }\\n\" :\r\n\t\t\t\t\t\"\\tbody,#dijitEditorBody { min-height: \" + this.minHeight + \"; width: 100%; overflow-x: auto; overflow-y: hidden; }\\n\",\r\n\r\n\t\t\t\t// TODO: left positioning will cause contents to disappear out of view\r\n\t\t\t\t//\t   if it gets too wide for the visible area\r\n\t\t\t\t\"\\tbody{\\n\",\r\n\t\t\t\t\"\\t\\ttop:0px;\\n\",\r\n\t\t\t\t\"\\t\\tleft:0px;\\n\",\r\n\t\t\t\t\"\\t\\tright:0px;\\n\",\r\n\t\t\t\t\"\\t\\tfont:\", font, \";\\n\",\r\n\t\t\t\t((this.height || has(\"opera\")) ? \"\" : \"\\t\\tposition: fixed;\\n\"),\r\n\t\t\t\t\"\\t\\tline-height:\", lineHeight, \";\\n\",\r\n\t\t\t\t\"\\t}\\n\",\r\n\t\t\t\t\"\\tp{ margin: 1em 0; }\\n\",\r\n\r\n\t\t\t\t\"\\tli > ul:-moz-first-node, li > ol:-moz-first-node{ padding-top: 1.2em; }\\n\",\r\n\t\t\t\t// Can't set min-height in IE>=9, it puts layout on li, which puts move/resize handles.\r\n\t\t\t\t(has(\"ie\") || has(\"trident\") ? \"\" : \"\\tli{ min-height:1.2em; }\\n\"),\r\n\t\t\t\t\"</style>\\n\",\r\n\t\t\t\tthis._applyEditingAreaStyleSheets(), \"\\n\",\r\n\t\t\t\t\"</head>\\n<body role='main' \",\r\n\r\n\t\t\t\t// Onload handler fills in real editor content.\r\n\t\t\t\t// On IE9, sometimes onload is called twice, and the first time frameElement is null (test_FullScreen.html)\r\n\t\t\t\t// On IE9-10, it is also possible that accessing window.parent in the initial creation of the\r\n\t\t\t\t// iframe DOM will succeed, but trying to access window.frameElement will fail, in which case we\r\n\t\t\t\t// *can* set the domain without a \"This method can't be used in this context\" error. See #17529\r\n\t\t\t\t\"onload='try{frameElement && frameElement._loadFunc(window,document)}catch(e){document.domain=\\\"\" + document.domain + \"\\\";frameElement._loadFunc(window,document)}' \",\r\n\t\t\t\t\"style='\" + userStyle + \"'>\", html, \"</body>\\n</html>\"\r\n\t\t\t].join(\"\"); // String\r\n\t\t},\r\n\r\n\t\t_applyEditingAreaStyleSheets: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tapply the specified css files in styleSheets\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar files = [];\r\n\t\t\tif(this.styleSheets){\r\n\t\t\t\tfiles = this.styleSheets.split(';');\r\n\t\t\t\tthis.styleSheets = '';\r\n\t\t\t}\r\n\r\n\t\t\t//empty this.editingAreaStyleSheets here, as it will be filled in addStyleSheet\r\n\t\t\tfiles = files.concat(this.editingAreaStyleSheets);\r\n\t\t\tthis.editingAreaStyleSheets = [];\r\n\r\n\t\t\tvar text = '', i = 0, url, ownerWindow = winUtils.get(this.ownerDocument);\r\n\t\t\twhile((url = files[i++])){\r\n\t\t\t\tvar abstring = (new _Url(ownerWindow.location, url)).toString();\r\n\t\t\t\tthis.editingAreaStyleSheets.push(abstring);\r\n\t\t\t\ttext += '<link rel=\"stylesheet\" type=\"text/css\" href=\"' + abstring + '\"/>';\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t},\r\n\r\n\t\taddStyleSheet: function(/*dojo/_base/url*/ uri){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadd an external stylesheet for the editing area\r\n\t\t\t// uri:\r\n\t\t\t//\t\tUrl of the external css file\r\n\t\t\tvar url = uri.toString(), ownerWindow = winUtils.get(this.ownerDocument);\r\n\r\n\t\t\t//if uri is relative, then convert it to absolute so that it can be resolved correctly in iframe\r\n\t\t\tif(url.charAt(0) === '.' || (url.charAt(0) !== '/' && !uri.host)){\r\n\t\t\t\turl = (new _Url(ownerWindow.location, url)).toString();\r\n\t\t\t}\r\n\r\n\t\t\tif(array.indexOf(this.editingAreaStyleSheets, url) > -1){\r\n//\t\t\tconsole.debug(\"dijit/_editor/RichText.addStyleSheet(): Style sheet \"+url+\" is already applied\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.editingAreaStyleSheets.push(url);\r\n\t\t\tthis.onLoadDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\tif(this.document.createStyleSheet){ //IE\r\n\t\t\t\t\tthis.document.createStyleSheet(url);\r\n\t\t\t\t}else{ //other browser\r\n\t\t\t\t\tvar head = this.document.getElementsByTagName(\"head\")[0];\r\n\t\t\t\t\tvar stylesheet = this.document.createElement(\"link\");\r\n\t\t\t\t\tstylesheet.rel = \"stylesheet\";\r\n\t\t\t\t\tstylesheet.type = \"text/css\";\r\n\t\t\t\t\tstylesheet.href = url;\r\n\t\t\t\t\thead.appendChild(stylesheet);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\tremoveStyleSheet: function(/*dojo/_base/url*/ uri){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremove an external stylesheet for the editing area\r\n\t\t\tvar url = uri.toString(), ownerWindow = winUtils.get(this.ownerDocument);\r\n\t\t\t//if uri is relative, then convert it to absolute so that it can be resolved correctly in iframe\r\n\t\t\tif(url.charAt(0) === '.' || (url.charAt(0) !== '/' && !uri.host)){\r\n\t\t\t\turl = (new _Url(ownerWindow.location, url)).toString();\r\n\t\t\t}\r\n\t\t\tvar index = array.indexOf(this.editingAreaStyleSheets, url);\r\n\t\t\tif(index === -1){\r\n//\t\t\tconsole.debug(\"dijit/_editor/RichText.removeStyleSheet(): Style sheet \"+url+\" has not been applied\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdelete this.editingAreaStyleSheets[index];\r\n\t\t\tquery('link[href=\"' + url + '\"]', this.window.document).orphan();\r\n\t\t},\r\n\r\n\t\t// disabled: Boolean\r\n\t\t//\t\tThe editor is disabled; the text cannot be changed.\r\n\t\tdisabled: false,\r\n\r\n\t\t_mozSettingProps: {'styleWithCSS': false},\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\tvalue = !!value;\r\n\t\t\tthis._set(\"disabled\", value);\r\n\t\t\tif(!this.isLoaded){\r\n\t\t\t\treturn;\r\n\t\t\t} // this method requires init to be complete\r\n\t\t\tvar preventIEfocus = has(\"ie\") && (this.isLoaded || !this.focusOnLoad);\r\n\t\t\tif(preventIEfocus){\r\n\t\t\t\tthis.editNode.unselectable = \"on\";\r\n\t\t\t}\r\n\t\t\tthis.editNode.contentEditable = !value;\r\n\t\t\tthis.editNode.tabIndex = value ? \"-1\" : this.tabIndex;\r\n\t\t\tif(preventIEfocus){\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tif(this.editNode){        // guard in case widget destroyed before timeout\r\n\t\t\t\t\t\tthis.editNode.unselectable = \"off\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(has(\"mozilla\") && !value && this._mozSettingProps){\r\n\t\t\t\tvar ps = this._mozSettingProps;\r\n\t\t\t\tvar n;\r\n\t\t\t\tfor(n in ps){\r\n\t\t\t\t\tif(ps.hasOwnProperty(n)){\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tthis.document.execCommand(n, false, ps[n]);\r\n\t\t\t\t\t\t}catch(e2){\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._disabledOK = true;\r\n\t\t},\r\n\r\n\t\t/* Event handlers\r\n\t\t *****************/\r\n\r\n\t\tonLoad: function(/*String*/ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler after the iframe finishes loading.\r\n\t\t\t// html: String\r\n\t\t\t//\t\tEditor contents should be set to this value\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!this.window.__registeredWindow){\r\n\t\t\t\tthis.window.__registeredWindow = true;\r\n\t\t\t\tthis._iframeRegHandle = focus.registerIframe(this.iframe);\r\n\t\t\t}\r\n\r\n\t\t\t// there's a wrapper div around the content, see _getIframeDocTxt().\r\n\t\t\tthis.editNode = this.document.body.firstChild;\r\n\t\t\tvar _this = this;\r\n\r\n\t\t\t// Helper code so IE and FF skip over focusing on the <iframe> and just focus on the inner <div>.\r\n\t\t\t// See #4996 IE wants to focus the BODY tag.\r\n\t\t\tthis.beforeIframeNode = domConstruct.place(\"<div tabIndex=-1></div>\", this.iframe, \"before\");\r\n\t\t\tthis.afterIframeNode = domConstruct.place(\"<div tabIndex=-1></div>\", this.iframe, \"after\");\r\n\t\t\tthis.iframe.onfocus = this.document.onfocus = function(){\r\n\t\t\t\t_this.editNode.focus();\r\n\t\t\t};\r\n\r\n\t\t\tthis.focusNode = this.editNode; // for InlineEditBox\r\n\r\n\r\n\t\t\tvar events = this.events.concat(this.captureEvents);\r\n\t\t\tvar ap = this.iframe ? this.document : this.editNode;\r\n\t\t\tthis.own.apply(this,\r\n\t\t\t\tarray.map(events, function(item){\r\n\t\t\t\t\tvar type = item.toLowerCase().replace(/^on/, \"\");\r\n\t\t\t\t\treturn on(ap, type, lang.hitch(this, item));\r\n\t\t\t\t}, this)\r\n\t\t\t);\r\n\r\n\t\t\tthis.own(\r\n\t\t\t\t// mouseup in the margin does not generate an onclick event\r\n\t\t\t\ton(ap, \"mouseup\", lang.hitch(this, \"onClick\"))\r\n\t\t\t);\r\n\r\n\t\t\tif(has(\"ie\")){ // IE contentEditable\r\n\t\t\t\tthis.own(on(this.document, \"mousedown\", lang.hitch(this, \"_onIEMouseDown\"))); // #4996 fix focus\r\n\r\n\t\t\t\t// give the node Layout on IE\r\n\t\t\t\t// TODO: this may no longer be needed, since we've reverted IE to using an iframe,\r\n\t\t\t\t// not contentEditable.   Removing it would also probably remove the need for creating\r\n\t\t\t\t// the extra <div> in _getIframeDocTxt()\r\n\t\t\t\tthis.editNode.style.zoom = 1.0;\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"webkit\")){\r\n\t\t\t\t//WebKit sometimes doesn't fire right on selections, so the toolbar\r\n\t\t\t\t//doesn't update right.  Therefore, help it out a bit with an additional\r\n\t\t\t\t//listener.  A mouse up will typically indicate a display change, so fire this\r\n\t\t\t\t//and get the toolbar to adapt.  Reference: #9532\r\n\t\t\t\tthis._webkitListener = this.own(on(this.document, \"mouseup\", lang.hitch(this, \"onDisplayChanged\")))[0];\r\n\t\t\t\tthis.own(on(this.document, \"mousedown\", lang.hitch(this, function(e){\r\n\t\t\t\t\tvar t = e.target;\r\n\t\t\t\t\tif(t && (t === this.document.body || t === this.document)){\r\n\t\t\t\t\t\t// Since WebKit uses the inner DIV, we need to check and set position.\r\n\t\t\t\t\t\t// See: #12024 as to why the change was made.\r\n\t\t\t\t\t\tthis.defer(\"placeCursorAtEnd\");\r\n\t\t\t\t\t}\r\n\t\t\t\t})));\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// Try to make sure 'hidden' elements aren't visible in edit mode (like browsers other than IE\r\n\t\t\t\t// do).  See #9103\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis.document.execCommand('RespectVisibilityInDesign', true, null);\r\n\t\t\t\t}catch(e){/* squelch */\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.isLoaded = true;\r\n\r\n\t\t\tthis.set('disabled', this.disabled); // initialize content to editable (or not)\r\n\r\n\t\t\t// Note that setValue() call will only work after isLoaded is set to true (above)\r\n\r\n\t\t\t// Set up a function to allow delaying the setValue until a callback is fired\r\n\t\t\t// This ensures extensions like dijit.Editor have a way to hold the value set\r\n\t\t\t// until plugins load (and do things like register filters).\r\n\t\t\tvar setContent = lang.hitch(this, function(){\r\n\t\t\t\tthis.setValue(html);\r\n\r\n\t\t\t\t// Tell app that the Editor has finished loading.  isFulfilled() check avoids spurious\r\n\t\t\t\t// console warning when this function is called repeatedly because Editor DOMNode was moved.\r\n\t\t\t\tif(this.onLoadDeferred && !this.onLoadDeferred.isFulfilled()){\r\n\t\t\t\t\tthis.onLoadDeferred.resolve(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.onDisplayChanged();\r\n\t\t\t\tif(this.focusOnLoad){\r\n\t\t\t\t\t// after the document loads, then set focus after updateInterval expires so that\r\n\t\t\t\t\t// onNormalizedDisplayChanged has run to avoid input caret issues\r\n\t\t\t\t\tdomReady(lang.hitch(this, \"defer\", \"focus\", this.updateInterval));\r\n\t\t\t\t}\r\n\t\t\t\t// Save off the initial content now\r\n\t\t\t\tthis.value = this.getValue(true);\r\n\t\t\t});\r\n\t\t\tif(this.setValueDeferred){\r\n\t\t\t\tthis.setValueDeferred.then(setContent);\r\n\t\t\t}else{\r\n\t\t\t\tsetContent();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonKeyDown: function(/* Event */ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for keydown event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// Modifier keys should not cause the onKeyPressed event because they do not cause any change to the\r\n\t\t\t// display\r\n\t\t\tif(e.keyCode === keys.SHIFT ||\r\n\t\t\t   e.keyCode === keys.ALT ||\r\n\t\t\t   e.keyCode === keys.META ||\r\n\t\t\t   e.keyCode === keys.CTRL){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif(e.keyCode === keys.TAB && this.isTabIndent){\r\n\t\t\t\t//prevent tab from moving focus out of editor\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// FIXME: this is a poor-man's indent/outdent. It would be\r\n\t\t\t\t// better if it added 4 \"&nbsp;\" chars in an undoable way.\r\n\t\t\t\t// Unfortunately pasteHTML does not prove to be undoable\r\n\t\t\t\tif(this.queryCommandEnabled((e.shiftKey ? \"outdent\" : \"indent\"))){\r\n\t\t\t\t\tthis.execCommand((e.shiftKey ? \"outdent\" : \"indent\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Make tab and shift-tab skip over the <iframe>, going from the nested <div> to the toolbar\r\n\t\t\t// or next element after the editor\r\n\t\t\tif(e.keyCode == keys.TAB && !this.isTabIndent && !e.ctrlKey && !e.altKey){\r\n\t\t\t\tif(e.shiftKey){\r\n\t\t\t\t\t// focus the <iframe> so the browser will shift-tab away from it instead\r\n\t\t\t\t\tthis.beforeIframeNode.focus();\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// focus node after the <iframe> so the browser will tab away from it instead\r\n\t\t\t\t\tthis.afterIframeNode.focus();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prevent onKeyPressed from firing in order to avoid triggering a display change event when the\r\n\t\t\t\t// editor is tabbed away; this fixes toolbar controls being inappropriately disabled in IE9+\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"ie\") < 9 && e.keyCode === keys.BACKSPACE && this.document.selection.type === \"Control\"){\r\n\t\t\t\t// IE has a bug where if a non-text object is selected in the editor,\r\n\t\t\t\t// hitting backspace would act as if the browser's back button was\r\n\t\t\t\t// clicked instead of deleting the object. see #1069\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.execCommand(\"delete\");\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"ff\")){\r\n\t\t\t\tif(e.keyCode === keys.PAGE_UP || e.keyCode === keys.PAGE_DOWN){\r\n\t\t\t\t\tif(this.editNode.clientHeight >= this.editNode.scrollHeight){\r\n\t\t\t\t\t\t// Stop the event to prevent firefox from trapping the cursor when there is no scroll bar.\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar handlers = this._keyHandlers[e.keyCode],\r\n\t\t\t\targs = arguments;\r\n\r\n\t\t\tif(handlers && !e.altKey){\r\n\t\t\t\tarray.some(handlers, function(h){\r\n\t\t\t\t\t// treat meta- same as ctrl-, for benefit of mac users\r\n\t\t\t\t\tif(!(h.shift ^ e.shiftKey) && !(h.ctrl ^ (e.ctrlKey || e.metaKey))){\r\n\t\t\t\t\t\tif(!h.handler.apply(this, args)){\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\r\n\t\t\t// function call after the character has been inserted\r\n\t\t\tthis.defer(\"onKeyPressed\", 1);\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tonKeyUp: function(/*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for onkeyup event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tsetDisabled: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, use set('disabled', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated('dijit.Editor::setDisabled is deprecated', 'use dijit.Editor::attr(\"disabled\",boolean) instead', 2.0);\r\n\t\t\tthis.set('disabled', disabled);\r\n\t\t},\r\n\t\t_setValueAttr: function(/*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters that attr(\"value\", foo) should call setValue(foo)\r\n\t\t\tthis.setValue(value);\r\n\t\t},\r\n\t\t_setDisableSpellCheckAttr: function(/*Boolean*/ disabled){\r\n\t\t\tif(this.document){\r\n\t\t\t\tdomAttr.set(this.document.body, \"spellcheck\", !disabled);\r\n\t\t\t}else{\r\n\t\t\t\t// try again after the editor is finished loading\r\n\t\t\t\tthis.onLoadDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\t\tdomAttr.set(this.document.body, \"spellcheck\", !disabled);\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tthis._set(\"disableSpellCheck\", disabled);\r\n\t\t},\r\n\r\n\t\taddKeyHandler: function(/*String|Number*/ key, /*Boolean*/ ctrl, /*Boolean*/ shift, /*Function*/ handler){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a handler for a keyboard shortcut\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(typeof key == \"string\"){\r\n\t\t\t\t// Something like Ctrl-B.  Since using keydown event, we need to convert string to a number.\r\n\t\t\t\tkey = key.toUpperCase().charCodeAt(0);\r\n\t\t\t}\r\n\r\n\t\t\tif(!lang.isArray(this._keyHandlers[key])){\r\n\t\t\t\tthis._keyHandlers[key] = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis._keyHandlers[key].push({\r\n\t\t\t\tshift: shift || false,\r\n\t\t\t\tctrl: ctrl || false,\r\n\t\t\t\thandler: handler\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonKeyPressed: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for after the user has pressed a key, and the display has been updated.\r\n\t\t\t//\t\t(Runs on a timer so that it runs after the display is updated)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.onDisplayChanged(/*e*/); // can't pass in e\r\n\t\t},\r\n\r\n\t\tonClick: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when the user clicks.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// console.info('onClick',this._tryDesignModeOn);\r\n\t\t\tthis.onDisplayChanged(e);\r\n\t\t},\r\n\r\n\t\t_onIEMouseDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIE only to prevent 2 clicks to focus\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!this.focused && !this.disabled){\r\n\t\t\t\tthis.focus();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onBlur: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from focus manager when focus has moved away from this editor\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// Workaround IE problem when you blur the browser windows while an editor is focused: IE hangs\r\n\t\t\t// when you focus editor #1, blur the browser window, and then click editor #0.  See #16939.\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tif(!focus.curNode){\r\n\t\t\t\t\t\tthis.ownerDocumentBody.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar newValue = this.getValue(true);\r\n\t\t\tif(newValue !== this.value){\r\n\t\t\t\tthis.onChange(newValue);\r\n\t\t\t}\r\n\t\t\tthis._set(\"value\", newValue);\r\n\t\t},\r\n\r\n\t\t_onFocus: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from focus manager when focus has moved into this editor\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// console.info('_onFocus')\r\n\t\t\tif(!this.disabled){\r\n\t\t\t\tif(!this._disabledOK){\r\n\t\t\t\t\tthis.set('disabled', false);\r\n\t\t\t\t}\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// TODO: remove in 2.0\r\n\t\tblur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove focus from this instance.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tif(!has(\"ie\") && this.window.document.documentElement && this.window.document.documentElement.focus){\r\n\t\t\t\tthis.window.document.documentElement.focus();\r\n\t\t\t}else if(this.ownerDocumentBody.focus){\r\n\t\t\t\tthis.ownerDocumentBody.focus();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMove focus to this editor\r\n\t\t\tif(!this.isLoaded){\r\n\t\t\t\tthis.focusOnLoad = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(has(\"ie\") < 9){\r\n\t\t\t\t//this.editNode.focus(); -> causes IE to scroll always (strict and quirks mode) to the top the Iframe\r\n\t\t\t\t// if we fire the event manually and let the browser handle the focusing, the latest\r\n\t\t\t\t// cursor position is focused like in FF\r\n\t\t\t\tthis.iframe.fireEvent('onfocus', document.createEventObject()); // createEventObject/fireEvent only in IE < 11\r\n\t\t\t}else{\r\n\t\t\t\t// Firefox and chrome\r\n\t\t\t\tthis.editNode.focus();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// _lastUpdate: 0,\r\n\t\tupdateInterval: 200,\r\n\t\t_updateTimer: null,\r\n\t\tonDisplayChanged: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis event will be fired every time the display context\r\n\t\t\t//\t\tchanges and the result needs to be reflected in the UI.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf you don't want to have update too often,\r\n\t\t\t//\t\tonNormalizedDisplayChanged should be used instead\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// var _t=new Date();\r\n\t\t\tif(this._updateTimer){\r\n\t\t\t\tthis._updateTimer.remove();\r\n\t\t\t}\r\n\t\t\tthis._updateTimer = this.defer(\"onNormalizedDisplayChanged\", this.updateInterval);\r\n\r\n\t\t\t// Technically this should trigger a call to watch(\"value\", ...) registered handlers,\r\n\t\t\t// but getValue() is too slow to call on every keystroke so we don't.\r\n\t\t},\r\n\t\tonNormalizedDisplayChanged: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis event is fired every updateInterval ms or more\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf something needs to happen immediately after a\r\n\t\t\t//\t\tuser change, please use onDisplayChanged instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tdelete this._updateTimer;\r\n\t\t},\r\n\t\tonChange: function(/*===== newContent =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is fired if and only if the editor loses focus and\r\n\t\t\t//\t\tthe content is changed.\r\n\t\t},\r\n\t\t_normalizeCommand: function(/*String*/ cmd, /*Anything?*/argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed as the advice function to map our\r\n\t\t\t//\t\tnormalized set of commands to those supported by the target\r\n\t\t\t//\t\tbrowser.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar command = cmd.toLowerCase();\r\n\t\t\tif(command === \"formatblock\"){\r\n\t\t\t\tif(has(\"safari\") && argument === undefined){\r\n\t\t\t\t\tcommand = \"heading\";\r\n\t\t\t\t}\r\n\t\t\t}else if(command === \"hilitecolor\" && !has(\"mozilla\")){\r\n\t\t\t\tcommand = \"backcolor\";\r\n\t\t\t}\r\n\r\n\t\t\treturn command;\r\n\t\t},\r\n\r\n\t\t_qcaCache: {},\r\n\t\tqueryCommandAvailable: function(/*String*/ command){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests whether a command is supported by the host. Clients\r\n\t\t\t//\t\tSHOULD check whether a command is supported before attempting\r\n\t\t\t//\t\tto use it, behaviour for unsupported commands is undefined.\r\n\t\t\t// command:\r\n\t\t\t//\t\tThe command to test for\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// memoizing version. See _queryCommandAvailable for computing version\r\n\t\t\tvar ca = this._qcaCache[command];\r\n\t\t\tif(ca !== undefined){\r\n\t\t\t\treturn ca;\r\n\t\t\t}\r\n\t\t\treturn (this._qcaCache[command] = this._queryCommandAvailable(command));\r\n\t\t},\r\n\r\n\t\t_queryCommandAvailable: function(/*String*/ command){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSee queryCommandAvailable().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar ie = 1;\r\n\t\t\tvar mozilla = 1 << 1;\r\n\t\t\tvar webkit = 1 << 2;\r\n\t\t\tvar opera = 1 << 3;\r\n\r\n\t\t\tfunction isSupportedBy(browsers){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tie: Boolean(browsers & ie),\r\n\t\t\t\t\tmozilla: Boolean(browsers & mozilla),\r\n\t\t\t\t\twebkit: Boolean(browsers & webkit),\r\n\t\t\t\t\topera: Boolean(browsers & opera)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar supportedBy = null;\r\n\r\n\t\t\tswitch(command.toLowerCase()){\r\n\t\t\t\tcase \"bold\":\r\n\t\t\t\tcase \"italic\":\r\n\t\t\t\tcase \"underline\":\r\n\t\t\t\tcase \"subscript\":\r\n\t\t\t\tcase \"superscript\":\r\n\t\t\t\tcase \"fontname\":\r\n\t\t\t\tcase \"fontsize\":\r\n\t\t\t\tcase \"forecolor\":\r\n\t\t\t\tcase \"hilitecolor\":\r\n\t\t\t\tcase \"justifycenter\":\r\n\t\t\t\tcase \"justifyfull\":\r\n\t\t\t\tcase \"justifyleft\":\r\n\t\t\t\tcase \"justifyright\":\r\n\t\t\t\tcase \"delete\":\r\n\t\t\t\tcase \"selectall\":\r\n\t\t\t\tcase \"toggledir\":\r\n\t\t\t\t\tsupportedBy = isSupportedBy(mozilla | ie | webkit | opera);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"createlink\":\r\n\t\t\t\tcase \"unlink\":\r\n\t\t\t\tcase \"removeformat\":\r\n\t\t\t\tcase \"inserthorizontalrule\":\r\n\t\t\t\tcase \"insertimage\":\r\n\t\t\t\tcase \"insertorderedlist\":\r\n\t\t\t\tcase \"insertunorderedlist\":\r\n\t\t\t\tcase \"indent\":\r\n\t\t\t\tcase \"outdent\":\r\n\t\t\t\tcase \"formatblock\":\r\n\t\t\t\tcase \"inserthtml\":\r\n\t\t\t\tcase \"undo\":\r\n\t\t\t\tcase \"redo\":\r\n\t\t\t\tcase \"strikethrough\":\r\n\t\t\t\tcase \"tabindent\":\r\n\t\t\t\t\tsupportedBy = isSupportedBy(mozilla | ie | opera | webkit);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"blockdirltr\":\r\n\t\t\t\tcase \"blockdirrtl\":\r\n\t\t\t\tcase \"dirltr\":\r\n\t\t\t\tcase \"dirrtl\":\r\n\t\t\t\tcase \"inlinedirltr\":\r\n\t\t\t\tcase \"inlinedirrtl\":\r\n\t\t\t\t\tsupportedBy = isSupportedBy(ie);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"cut\":\r\n\t\t\t\tcase \"copy\":\r\n\t\t\t\tcase \"paste\":\r\n\t\t\t\t\tsupportedBy = isSupportedBy(ie | mozilla | webkit | opera);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"inserttable\":\r\n\t\t\t\t\tsupportedBy = isSupportedBy(mozilla | ie);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"insertcell\":\r\n\t\t\t\tcase \"insertcol\":\r\n\t\t\t\tcase \"insertrow\":\r\n\t\t\t\tcase \"deletecells\":\r\n\t\t\t\tcase \"deletecols\":\r\n\t\t\t\tcase \"deleterows\":\r\n\t\t\t\tcase \"mergecells\":\r\n\t\t\t\tcase \"splitcell\":\r\n\t\t\t\t\tsupportedBy = isSupportedBy(ie | mozilla);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn ((has(\"ie\") || has(\"trident\")) && supportedBy.ie) ||\r\n\t\t\t\t(has(\"mozilla\") && supportedBy.mozilla) ||\r\n\t\t\t\t(has(\"webkit\") && supportedBy.webkit) ||\r\n\t\t\t\t(has(\"opera\") && supportedBy.opera);\t// Boolean return true if the command is supported, false otherwise\r\n\t\t},\r\n\r\n\t\texecCommand: function(/*String*/ command, argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tExecutes a command in the Rich Text area\r\n\t\t\t// command:\r\n\t\t\t//\t\tThe command to execute\r\n\t\t\t// argument:\r\n\t\t\t//\t\tAn optional argument to the command\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar returnValue;\r\n\r\n\t\t\t//focus() is required for IE to work\r\n\t\t\t//In addition, focus() makes sure after the execution of\r\n\t\t\t//the command, the editor receives the focus as expected\r\n\t\t\tif(this.focused){\r\n\t\t\t\t// put focus back in the iframe, unless focus has somehow been shifted out of the editor completely\r\n\t\t\t\tthis.focus();\r\n\t\t\t}\r\n\r\n\t\t\tcommand = this._normalizeCommand(command, argument);\r\n\r\n\t\t\tif(argument !== undefined){\r\n\t\t\t\tif(command === \"heading\"){\r\n\t\t\t\t\tthrow new Error(\"unimplemented\");\r\n\t\t\t\t}else if(command === \"formatblock\" && (has(\"ie\") || has(\"trident\"))){\r\n\t\t\t\t\targument = '<' + argument + '>';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Check to see if we have any over-rides for commands, they will be functions on this\r\n\t\t\t//widget of the form _commandImpl.  If we don't, fall through to the basic native\r\n\t\t\t//exec command of the browser.\r\n\t\t\tvar implFunc = \"_\" + command + \"Impl\";\r\n\t\t\tif(this[implFunc]){\r\n\t\t\t\treturnValue = this[implFunc](argument);\r\n\t\t\t}else{\r\n\t\t\t\targument = arguments.length > 1 ? argument : null;\r\n\t\t\t\tif(argument || command !== \"createlink\"){\r\n\t\t\t\t\treturnValue = this.document.execCommand(command, false, argument);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.onDisplayChanged();\r\n\t\t\treturn returnValue;\r\n\t\t},\r\n\r\n\t\tqueryCommandEnabled: function(/*String*/ command){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck whether a command is enabled or not.\r\n\t\t\t// command:\r\n\t\t\t//\t\tThe command to execute\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(this.disabled || !this._disabledOK){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tcommand = this._normalizeCommand(command);\r\n\r\n\t\t\t//Check to see if we have any over-rides for commands, they will be functions on this\r\n\t\t\t//widget of the form _commandEnabledImpl.  If we don't, fall through to the basic native\r\n\t\t\t//command of the browser.\r\n\t\t\tvar implFunc = \"_\" + command + \"EnabledImpl\";\r\n\r\n\t\t\tif(this[implFunc]){\r\n\t\t\t\treturn  this[implFunc](command);\r\n\t\t\t}else{\r\n\t\t\t\treturn this._browserQueryCommandEnabled(command);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tqueryCommandState: function(command){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck the state of a given command and returns true or false.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.disabled || !this._disabledOK){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tcommand = this._normalizeCommand(command);\r\n\t\t\ttry{\r\n\t\t\t\treturn this.document.queryCommandState(command);\r\n\t\t\t}catch(e){\r\n\t\t\t\t//Squelch, occurs if editor is hidden on FF 3 (and maybe others.)\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tqueryCommandValue: function(command){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCheck the value of a given command. This matters most for\r\n\t\t\t//\t\tcustom selections and complex values like font value setting.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.disabled || !this._disabledOK){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar r;\r\n\t\t\tcommand = this._normalizeCommand(command);\r\n\t\t\tif((has(\"ie\") || has(\"trident\")) && command === \"formatblock\"){\r\n\t\t\t\tr = this._native2LocalFormatNames[this.document.queryCommandValue(command)];\r\n\t\t\t}else if(has(\"mozilla\") && command === \"hilitecolor\"){\r\n\t\t\t\tvar oldValue;\r\n\t\t\t\ttry{\r\n\t\t\t\t\toldValue = this.document.queryCommandValue(\"styleWithCSS\");\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\toldValue = false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.document.execCommand(\"styleWithCSS\", false, true);\r\n\t\t\t\tr = this.document.queryCommandValue(command);\r\n\t\t\t\tthis.document.execCommand(\"styleWithCSS\", false, oldValue);\r\n\t\t\t}else{\r\n\t\t\t\tr = this.document.queryCommandValue(command);\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t},\r\n\r\n\t\t// Misc.\r\n\r\n\t\t_sCall: function(name, args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, remove for 2.0.   New code should access this.selection directly.\r\n\t\t\t//\t\tRun the named method of dijit/selection over the\r\n\t\t\t//\t\tcurrent editor instance's window, with the passed args.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate deprecated\r\n\r\n\t\t\treturn this.selection[name].apply(this.selection, args);\r\n\t\t},\r\n\r\n\t\t// FIXME: this is a TON of code duplication. Why?\r\n\r\n\t\tplaceCursorAtStart: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPlace the cursor at the start of the editing area.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.focus();\r\n\r\n\t\t\t//see comments in placeCursorAtEnd\r\n\t\t\tvar isvalid = false;\r\n\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t// TODO:  Is this branch even necessary?\r\n\t\t\t\tvar first = this.editNode.firstChild;\r\n\t\t\t\twhile(first){\r\n\t\t\t\t\tif(first.nodeType === 3){\r\n\t\t\t\t\t\tif(first.nodeValue.replace(/^\\s+|\\s+$/g, \"\").length > 0){\r\n\t\t\t\t\t\t\tisvalid = true;\r\n\t\t\t\t\t\t\tthis.selection.selectElement(first);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(first.nodeType === 1){\r\n\t\t\t\t\t\tisvalid = true;\r\n\t\t\t\t\t\tvar tg = first.tagName ? first.tagName.toLowerCase() : \"\";\r\n\t\t\t\t\t\t// Collapse before childless tags.\r\n\t\t\t\t\t\tif(/br|input|img|base|meta|area|basefont|hr|link/.test(tg)){\r\n\t\t\t\t\t\t\tthis.selection.selectElement(first);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// Collapse inside tags with children.\r\n\t\t\t\t\t\t\tthis.selection.selectElementChildren(first);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirst = first.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tisvalid = true;\r\n\t\t\t\tthis.selection.selectElementChildren(this.editNode);\r\n\t\t\t}\r\n\t\t\tif(isvalid){\r\n\t\t\t\tthis.selection.collapse(true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tplaceCursorAtEnd: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPlace the cursor at the end of the editing area.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.focus();\r\n\r\n\t\t\t//In mozilla, if last child is not a text node, we have to use\r\n\t\t\t// selectElementChildren on this.editNode.lastChild otherwise the\r\n\t\t\t// cursor would be placed at the end of the closing tag of\r\n\t\t\t//this.editNode.lastChild\r\n\t\t\tvar isvalid = false;\r\n\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\tvar last = this.editNode.lastChild;\r\n\t\t\t\twhile(last){\r\n\t\t\t\t\tif(last.nodeType === 3){\r\n\t\t\t\t\t\tif(last.nodeValue.replace(/^\\s+|\\s+$/g, \"\").length > 0){\r\n\t\t\t\t\t\t\tisvalid = true;\r\n\t\t\t\t\t\t\tthis.selection.selectElement(last);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(last.nodeType === 1){\r\n\t\t\t\t\t\tisvalid = true;\r\n\t\t\t\t\t\tthis.selection.selectElement(last.lastChild || last);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlast = last.previousSibling;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tisvalid = true;\r\n\t\t\t\tthis.selection.selectElementChildren(this.editNode);\r\n\t\t\t}\r\n\t\t\tif(isvalid){\r\n\t\t\t\tthis.selection.collapse(false);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetValue: function(/*Boolean?*/ nonDestructive){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the current content of the editing area (post filters\r\n\t\t\t//\t\tare applied).  Users should call get('value') instead.\r\n\t\t\t// nonDestructive:\r\n\t\t\t//\t\tdefaults to false. Should the post-filtering be run over a copy\r\n\t\t\t//\t\tof the live DOM? Most users should pass \"true\" here unless they\r\n\t\t\t//\t\t*really* know that none of the installed filters are going to\r\n\t\t\t//\t\tmess up the editing session.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.textarea){\r\n\t\t\t\tif(this.isClosed || !this.isLoaded){\r\n\t\t\t\t\treturn this.textarea.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isLoaded ? this._postFilterContent(null, nonDestructive) : this.value;\r\n\t\t},\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to make attr(\"value\") work\r\n\t\t\treturn this.getValue(true);\r\n\t\t},\r\n\r\n\t\tsetValue: function(/*String*/ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function sets the content. No undo history is preserved.\r\n\t\t\t//\t\tUsers should use set('value', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\r\n\t\t\t// TODO: remove this and getValue() for 2.0, and move code to _setValueAttr()\r\n\r\n\t\t\tif(!this.isLoaded){\r\n\t\t\t\t// try again after the editor is finished loading\r\n\t\t\t\tthis.onLoadDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\t\tthis.setValue(html);\r\n\t\t\t\t}));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.textarea && (this.isClosed || !this.isLoaded)){\r\n\t\t\t\tthis.textarea.value = html;\r\n\t\t\t}else{\r\n\t\t\t\thtml = this._preFilterContent(html);\r\n\t\t\t\tvar node = this.isClosed ? this.domNode : this.editNode;\r\n\r\n\t\t\t\tnode.innerHTML = html;\r\n\t\t\t\tthis._preDomFilterContent(node);\r\n\t\t\t}\r\n\r\n\t\t\tthis.onDisplayChanged();\r\n\t\t\tthis._set(\"value\", this.getValue(true));\r\n\t\t},\r\n\r\n\t\treplaceValue: function(/*String*/ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function set the content while trying to maintain the undo stack\r\n\t\t\t//\t\t(now only works fine with Moz, this is identical to setValue in all\r\n\t\t\t//\t\tother browsers)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.isClosed){\r\n\t\t\t\tthis.setValue(html);\r\n\t\t\t}else if(this.window && this.window.getSelection && !has(\"mozilla\")){ // Safari\r\n\t\t\t\t// look ma! it's a totally f'd browser!\r\n\t\t\t\tthis.setValue(html);\r\n\t\t\t}else if(this.window && this.window.getSelection){ // Moz\r\n\t\t\t\thtml = this._preFilterContent(html);\r\n\t\t\t\tthis.execCommand(\"selectall\");\r\n\t\t\t\tthis.execCommand(\"inserthtml\", html);\r\n\t\t\t\tthis._preDomFilterContent(this.editNode);\r\n\t\t\t}else if(this.document && this.document.selection){//IE\r\n\t\t\t\t//In IE, when the first element is not a text node, say\r\n\t\t\t\t//an <a> tag, when replacing the content of the editing\r\n\t\t\t\t//area, the <a> tag will be around all the content\r\n\t\t\t\t//so for now, use setValue for IE too\r\n\t\t\t\tthis.setValue(html);\r\n\t\t\t}\r\n\r\n\t\t\tthis._set(\"value\", this.getValue(true));\r\n\t\t},\r\n\r\n\t\t_preFilterContent: function(/*String*/ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFilter the input before setting the content of the editing\r\n\t\t\t//\t\tarea. DOM pre-filtering may happen after this\r\n\t\t\t//\t\tstring-based filtering takes place but as of 1.2, this is not\r\n\t\t\t//\t\tguaranteed for operations such as the inserthtml command.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar ec = html;\r\n\t\t\tarray.forEach(this.contentPreFilters, function(ef){\r\n\t\t\t\tif(ef){\r\n\t\t\t\t\tec = ef(ec);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ec;\r\n\t\t},\r\n\t\t_preDomFilterContent: function(/*DomNode*/ dom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tfilter the input's live DOM. All filter operations should be\r\n\t\t\t//\t\tconsidered to be \"live\" and operating on the DOM that the user\r\n\t\t\t//\t\twill be interacting with in their editing session.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tdom = dom || this.editNode;\r\n\t\t\tarray.forEach(this.contentDomPreFilters, function(ef){\r\n\t\t\t\tif(ef && lang.isFunction(ef)){\r\n\t\t\t\t\tef(dom);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_postFilterContent: function(/*DomNode|DomNode[]|String?*/ dom, /*Boolean?*/ nonDestructive){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tfilter the output after getting the content of the editing area\r\n\t\t\t//\r\n\t\t\t// description:\r\n\t\t\t//\t\tpost-filtering allows plug-ins and users to specify any number\r\n\t\t\t//\t\tof transforms over the editor's content, enabling many common\r\n\t\t\t//\t\tuse-cases such as transforming absolute to relative URLs (and\r\n\t\t\t//\t\tvice-versa), ensuring conformance with a particular DTD, etc.\r\n\t\t\t//\t\tThe filters are registered in the contentDomPostFilters and\r\n\t\t\t//\t\tcontentPostFilters arrays. Each item in the\r\n\t\t\t//\t\tcontentDomPostFilters array is a function which takes a DOM\r\n\t\t\t//\t\tNode or array of nodes as its only argument and returns the\r\n\t\t\t//\t\tsame. It is then passed down the chain for further filtering.\r\n\t\t\t//\t\tThe contentPostFilters array behaves the same way, except each\r\n\t\t\t//\t\tmember operates on strings. Together, the DOM and string-based\r\n\t\t\t//\t\tfiltering allow the full range of post-processing that should\r\n\t\t\t//\t\tbe necessaray to enable even the most agressive of post-editing\r\n\t\t\t//\t\tconversions to take place.\r\n\t\t\t//\r\n\t\t\t//\t\tIf nonDestructive is set to \"true\", the nodes are cloned before\r\n\t\t\t//\t\tfiltering proceeds to avoid potentially destructive transforms\r\n\t\t\t//\t\tto the content which may still needed to be edited further.\r\n\t\t\t//\t\tOnce DOM filtering has taken place, the serialized version of\r\n\t\t\t//\t\tthe DOM which is passed is run through each of the\r\n\t\t\t//\t\tcontentPostFilters functions.\r\n\t\t\t//\r\n\t\t\t// dom:\r\n\t\t\t//\t\ta node, set of nodes, which to filter using each of the current\r\n\t\t\t//\t\tmembers of the contentDomPostFilters and contentPostFilters arrays.\r\n\t\t\t//\r\n\t\t\t// nonDestructive:\r\n\t\t\t//\t\tdefaults to \"false\". If true, ensures that filtering happens on\r\n\t\t\t//\t\ta clone of the passed-in content and not the actual node\r\n\t\t\t//\t\titself.\r\n\t\t\t//\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar ec;\r\n\t\t\tif(!lang.isString(dom)){\r\n\t\t\t\tdom = dom || this.editNode;\r\n\t\t\t\tif(this.contentDomPostFilters.length){\r\n\t\t\t\t\tif(nonDestructive){\r\n\t\t\t\t\t\tdom = lang.clone(dom);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tarray.forEach(this.contentDomPostFilters, function(ef){\r\n\t\t\t\t\t\tdom = ef(dom);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tec = htmlapi.getChildrenHtml(dom);\r\n\t\t\t}else{\r\n\t\t\t\tec = dom;\r\n\t\t\t}\r\n\r\n\t\t\tif(!lang.trim(ec.replace(/^\\xA0\\xA0*/, '').replace(/\\xA0\\xA0*$/, '')).length){\r\n\t\t\t\tec = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tarray.forEach(this.contentPostFilters, function(ef){\r\n\t\t\t\tec = ef(ec);\r\n\t\t\t});\r\n\r\n\t\t\treturn ec;\r\n\t\t},\r\n\r\n\t\t_saveContent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSaves the content in an onunload event if the editor has not been closed\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar saveTextarea = dom.byId(dijit._scopeName + \"._editor.RichText.value\");\r\n\t\t\tif(saveTextarea){\r\n\t\t\t\tif(saveTextarea.value){\r\n\t\t\t\t\tsaveTextarea.value += this._SEPARATOR;\r\n\t\t\t\t}\r\n\t\t\t\tsaveTextarea.value += this.name + this._NAME_CONTENT_SEP + this.getValue(true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\tescapeXml: function(/*String*/ str, /*Boolean*/ noSingleQuotes){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds escape sequences for special characters in XML.\r\n\t\t\t//\t\tOptionally skips escapes for single quotes\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tstr = str.replace(/&/gm, \"&amp;\").replace(/</gm, \"&lt;\").replace(/>/gm, \"&gt;\").replace(/\"/gm, \"&quot;\");\r\n\t\t\tif(!noSingleQuotes){\r\n\t\t\t\tstr = str.replace(/'/gm, \"&#39;\");\r\n\t\t\t}\r\n\t\t\treturn str; // string\r\n\t\t},\r\n\r\n\t\tgetNodeHtml: function(/* DomNode */ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use dijit/_editor/html::_getNodeHtml() instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated('dijit.Editor::getNodeHtml is deprecated', 'use dijit/_editor/html::getNodeHtml instead', 2);\r\n\t\t\treturn htmlapi.getNodeHtml(node); // String\r\n\t\t},\r\n\r\n\t\tgetNodeChildrenHtml: function(/* DomNode */ dom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use dijit/_editor/html::getChildrenHtml() instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated('dijit.Editor::getNodeChildrenHtml is deprecated', 'use dijit/_editor/html::getChildrenHtml instead', 2);\r\n\t\t\treturn htmlapi.getChildrenHtml(dom);\r\n\t\t},\r\n\r\n\t\tclose: function(/*Boolean?*/ save){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tKills the editor and optionally writes back the modified contents to the\r\n\t\t\t//\t\telement from which it originated.\r\n\t\t\t// save:\r\n\t\t\t//\t\tWhether or not to save the changes. If false, the changes are discarded.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.isClosed){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!arguments.length){\r\n\t\t\t\tsave = true;\r\n\t\t\t}\r\n\t\t\tif(save){\r\n\t\t\t\tthis._set(\"value\", this.getValue(true));\r\n\t\t\t}\r\n\r\n\t\t\t// line height is squashed for iframes\r\n\t\t\t// FIXME: why was this here? if(this.iframe){ this.domNode.style.lineHeight = null; }\r\n\r\n\t\t\tif(this.interval){\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t}\r\n\r\n\t\t\tif(this._webkitListener){\r\n\t\t\t\t// Cleanup of WebKit fix: #9532\r\n\t\t\t\tthis._webkitListener.remove();\r\n\t\t\t\tdelete this._webkitListener;\r\n\t\t\t}\r\n\r\n\t\t\t// Guard against memory leaks on IE (see #9268)\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\tthis.iframe.onfocus = null;\r\n\t\t\t}\r\n\t\t\tthis.iframe._loadFunc = null;\r\n\r\n\t\t\tif(this._iframeRegHandle){\r\n\t\t\t\tthis._iframeRegHandle.remove();\r\n\t\t\t\tdelete this._iframeRegHandle;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.textarea){\r\n\t\t\t\tvar s = this.textarea.style;\r\n\t\t\t\ts.position = \"\";\r\n\t\t\t\ts.left = s.top = \"\";\r\n\t\t\t\tif(has(\"ie\")){\r\n\t\t\t\t\ts.overflow = this.__overflow;\r\n\t\t\t\t\tthis.__overflow = null;\r\n\t\t\t\t}\r\n\t\t\t\tthis.textarea.value = this.value;\r\n\t\t\t\tdomConstruct.destroy(this.domNode);\r\n\t\t\t\tthis.domNode = this.textarea;\r\n\t\t\t}else{\r\n\t\t\t\t// Note that this destroys the iframe\r\n\t\t\t\tthis.domNode.innerHTML = this.value;\r\n\t\t\t}\r\n\t\t\tdelete this.iframe;\r\n\r\n\t\t\tdomClass.remove(this.domNode, this.baseClass);\r\n\t\t\tthis.isClosed = true;\r\n\t\t\tthis.isLoaded = false;\r\n\r\n\t\t\tdelete this.editNode;\r\n\t\t\tdelete this.focusNode;\r\n\r\n\t\t\tif(this.window && this.window._frameElement){\r\n\t\t\t\tthis.window._frameElement = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.window = null;\r\n\t\t\tthis.document = null;\r\n\t\t\tthis.editingArea = null;\r\n\t\t\tthis.editorObject = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(!this.isClosed){\r\n\t\t\t\tthis.close(false);\r\n\t\t\t}\r\n\t\t\tif(this._updateTimer){\r\n\t\t\t\tthis._updateTimer.remove();\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(RichText._globalSaveHandler){\r\n\t\t\t\tdelete RichText._globalSaveHandler[this.id];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_removeMozBogus: function(/* String */ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPost filter to remove unwanted HTML attributes generated by mozilla\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn html.replace(/\\stype=\"_moz\"/gi, '').replace(/\\s_moz_dirty=\"\"/gi, '').replace(/_moz_resizing=\"(true|false)\"/gi, ''); // String\r\n\t\t},\r\n\t\t_removeWebkitBogus: function(/* String */ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPost filter to remove unwanted HTML attributes generated by webkit\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\thtml = html.replace(/\\sclass=\"webkit-block-placeholder\"/gi, '');\r\n\t\t\thtml = html.replace(/\\sclass=\"apple-style-span\"/gi, '');\r\n\t\t\t// For some reason copy/paste sometime adds extra meta tags for charset on\r\n\t\t\t// webkit (chrome) on mac.They need to be removed.  See: #12007\"\r\n\t\t\thtml = html.replace(/<meta charset=\\\"utf-8\\\" \\/>/gi, '');\r\n\t\t\treturn html; // String\r\n\t\t},\r\n\t\t_normalizeFontStyle: function(/* String */ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvert 'strong' and 'em' to 'b' and 'i'.\r\n\t\t\t// description:\r\n\t\t\t//\t\tMoz can not handle strong/em tags correctly, so to help\r\n\t\t\t//\t\tmozilla and also to normalize output, convert them to 'b' and 'i'.\r\n\t\t\t//\r\n\t\t\t//\t\tNote the IE generates 'strong' and 'em' rather than 'b' and 'i'\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn html.replace(/<(\\/)?strong([ \\>])/gi, '<$1b$2')\r\n\t\t\t\t.replace(/<(\\/)?em([ \\>])/gi, '<$1i$2'); // String\r\n\t\t},\r\n\r\n\t\t_preFixUrlAttributes: function(/* String */ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPre-filter to do fixing to href attributes on `<a>` and `<img>` tags\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn html.replace(/(?:(<a(?=\\s).*?\\shref=)(\"|')(.*?)\\2)|(?:(<a\\s.*?href=)([^\"'][^ >]+))/gi,\r\n\t\t\t\t'$1$4$2$3$5$2 _djrealurl=$2$3$5$2')\r\n\t\t\t\t.replace(/(?:(<img(?=\\s).*?\\ssrc=)(\"|')(.*?)\\2)|(?:(<img\\s.*?src=)([^\"'][^ >]+))/gi,\r\n\t\t\t\t'$1$4$2$3$5$2 _djrealurl=$2$3$5$2'); // String\r\n\t\t},\r\n\r\n\t\t/*****************************************************************************\r\n\t\t The following functions implement HTML manipulation commands for various\r\n\t\t browser/contentEditable implementations.  The goal of them is to enforce\r\n\t\t standard behaviors of them.\r\n\t\t ******************************************************************************/\r\n\r\n\t\t/*** queryCommandEnabled implementations ***/\r\n\r\n\t\t_browserQueryCommandEnabled: function(command){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tImplementation to call to the native queryCommandEnabled of the browser.\r\n\t\t\t// command:\r\n\t\t\t//\t\tThe command to check.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(!command){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar elem = has(\"ie\") < 9 ? this.document.selection.createRange() : this.document;\r\n\t\t\ttry{\r\n\t\t\t\treturn elem.queryCommandEnabled(command);\r\n\t\t\t}catch(e){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_createlinkEnabledImpl: function(/*===== argument =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the test for if the create link\r\n\t\t\t//\t\tcommand should be enabled or not.\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar enabled = true;\r\n\t\t\tif(has(\"opera\")){\r\n\t\t\t\tvar sel = this.window.getSelection();\r\n\t\t\t\tif(sel.isCollapsed){\r\n\t\t\t\t\tenabled = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tenabled = this.document.queryCommandEnabled(\"createlink\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tenabled = this._browserQueryCommandEnabled(\"createlink\");\r\n\t\t\t}\r\n\t\t\treturn enabled;\r\n\t\t},\r\n\r\n\t\t_unlinkEnabledImpl: function(/*===== argument =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the test for if the unlink\r\n\t\t\t//\t\tcommand should be enabled or not.\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar enabled = true;\r\n\t\t\tif(has(\"mozilla\") || has(\"webkit\")){\r\n\t\t\t\tenabled = this.selection.hasAncestorElement(\"a\");\r\n\t\t\t}else{\r\n\t\t\t\tenabled = this._browserQueryCommandEnabled(\"unlink\");\r\n\t\t\t}\r\n\t\t\treturn enabled;\r\n\t\t},\r\n\r\n\t\t_inserttableEnabledImpl: function(/*===== argument =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the test for if the inserttable\r\n\t\t\t//\t\tcommand should be enabled or not.\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar enabled = true;\r\n\t\t\tif(has(\"mozilla\") || has(\"webkit\")){\r\n\t\t\t\tenabled = true;\r\n\t\t\t}else{\r\n\t\t\t\tenabled = this._browserQueryCommandEnabled(\"inserttable\");\r\n\t\t\t}\r\n\t\t\treturn enabled;\r\n\t\t},\r\n\r\n\t\t_cutEnabledImpl: function(/*===== argument =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the test for if the cut\r\n\t\t\t//\t\tcommand should be enabled or not.\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar enabled = true;\r\n\t\t\tif(has(\"webkit\")){\r\n\t\t\t\t// WebKit deems clipboard activity as a security threat and natively would return false\r\n\t\t\t\tvar sel = this.window.getSelection();\r\n\t\t\t\tif(sel){\r\n\t\t\t\t\tsel = sel.toString();\r\n\t\t\t\t}\r\n\t\t\t\tenabled = !!sel;\r\n\t\t\t}else{\r\n\t\t\t\tenabled = this._browserQueryCommandEnabled(\"cut\");\r\n\t\t\t}\r\n\t\t\treturn enabled;\r\n\t\t},\r\n\r\n\t\t_copyEnabledImpl: function(/*===== argument =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the test for if the copy\r\n\t\t\t//\t\tcommand should be enabled or not.\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar enabled = true;\r\n\t\t\tif(has(\"webkit\")){\r\n\t\t\t\t// WebKit deems clipboard activity as a security threat and natively would return false\r\n\t\t\t\tvar sel = this.window.getSelection();\r\n\t\t\t\tif(sel){\r\n\t\t\t\t\tsel = sel.toString();\r\n\t\t\t\t}\r\n\t\t\t\tenabled = !!sel;\r\n\t\t\t}else{\r\n\t\t\t\tenabled = this._browserQueryCommandEnabled(\"copy\");\r\n\t\t\t}\r\n\t\t\treturn enabled;\r\n\t\t},\r\n\r\n\t\t_pasteEnabledImpl: function(/*===== argument =====*/){\r\n\t\t\t// summary:c\r\n\t\t\t//\t\tThis function implements the test for if the paste\r\n\t\t\t//\t\tcommand should be enabled or not.\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar enabled = true;\r\n\t\t\tif(has(\"webkit\")){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tenabled = this._browserQueryCommandEnabled(\"paste\");\r\n\t\t\t}\r\n\t\t\treturn enabled;\r\n\t\t},\r\n\r\n\t\t/*** execCommand implementations ***/\r\n\r\n\t\t_inserthorizontalruleImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the insertion of HTML 'HR' tags.\r\n\t\t\t//\t\tinto a point on the page.  IE doesn't to it right, so\r\n\t\t\t//\t\twe have to use an alternate form\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\treturn this._inserthtmlImpl(\"<hr>\");\r\n\t\t\t}\r\n\t\t\treturn this.document.execCommand(\"inserthorizontalrule\", false, argument);\r\n\t\t},\r\n\r\n\t\t_unlinkImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the unlink of an 'a' tag.\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif((this.queryCommandEnabled(\"unlink\")) && (has(\"mozilla\") || has(\"webkit\"))){\r\n\t\t\t\tvar a = this.selection.getAncestorElement(\"a\");\r\n\t\t\t\tthis.selection.selectElement(a);\r\n\t\t\t\treturn this.document.execCommand(\"unlink\", false, null);\r\n\t\t\t}\r\n\t\t\treturn this.document.execCommand(\"unlink\", false, argument);\r\n\t\t},\r\n\r\n\t\t_hilitecolorImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the hilitecolor command\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar returnValue;\r\n\t\t\tvar isApplied = this._handleTextColorOrProperties(\"hilitecolor\", argument);\r\n\t\t\tif(!isApplied){\r\n\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t// mozilla doesn't support hilitecolor properly when useCSS is\r\n\t\t\t\t\t// set to false (bugzilla #279330)\r\n\t\t\t\t\tthis.document.execCommand(\"styleWithCSS\", false, true);\r\n\t\t\t\t\tconsole.log(\"Executing color command.\");\r\n\t\t\t\t\treturnValue = this.document.execCommand(\"hilitecolor\", false, argument);\r\n\t\t\t\t\tthis.document.execCommand(\"styleWithCSS\", false, false);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturnValue = this.document.execCommand(\"hilitecolor\", false, argument);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn returnValue;\r\n\t\t},\r\n\r\n\t\t_backcolorImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the backcolor command\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// Tested under IE 6 XP2, no problem here, comment out\r\n\t\t\t\t// IE weirdly collapses ranges when we exec these commands, so prevent it\r\n\t\t\t\t//\tvar tr = this.document.selection.createRange();\r\n\t\t\t\targument = argument ? argument : null;\r\n\t\t\t}\r\n\t\t\tvar isApplied = this._handleTextColorOrProperties(\"backcolor\", argument);\r\n\t\t\tif(!isApplied){\r\n\t\t\t\tisApplied = this.document.execCommand(\"backcolor\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn isApplied;\r\n\t\t},\r\n\r\n\t\t_forecolorImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the forecolor command\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// Tested under IE 6 XP2, no problem here, comment out\r\n\t\t\t\t// IE weirdly collapses ranges when we exec these commands, so prevent it\r\n\t\t\t\t//\tvar tr = this.document.selection.createRange();\r\n\t\t\t\targument = argument ? argument : null;\r\n\t\t\t}\r\n\t\t\tvar isApplied = false;\r\n\t\t\tisApplied = this._handleTextColorOrProperties(\"forecolor\", argument);\r\n\t\t\tif(!isApplied){\r\n\t\t\t\tisApplied = this.document.execCommand(\"forecolor\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn isApplied;\r\n\t\t},\r\n\r\n\t\t_inserthtmlImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the insertion of HTML content into\r\n\t\t\t//\t\ta point on the page.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tThe content to insert, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\targument = this._preFilterContent(argument);\r\n\t\t\tvar rv = true;\r\n\t\t\tif(has(\"ie\") < 9){\r\n\t\t\t\tvar insertRange = this.document.selection.createRange();\r\n\t\t\t\tif(this.document.selection.type.toUpperCase() === 'CONTROL'){\r\n\t\t\t\t\tvar n = insertRange.item(0);\r\n\t\t\t\t\twhile(insertRange.length){\r\n\t\t\t\t\t\tinsertRange.remove(insertRange.item(0));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tn.outerHTML = argument;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinsertRange.pasteHTML(argument);\r\n\t\t\t\t}\r\n\t\t\t\tinsertRange.select();\r\n\t\t\t}else if(has(\"trident\") < 8){\r\n\t\t\t\tvar insertRange;\r\n\t\t\t\tvar selection = rangeapi.getSelection(this.window);\r\n\t\t\t\tif(selection && selection.rangeCount && selection.getRangeAt){\r\n\t\t\t\t\tinsertRange = selection.getRangeAt(0);\r\n\t\t\t\t\tinsertRange.deleteContents();\r\n\r\n\t\t\t\t\tvar div = domConstruct.create('div');\r\n\t\t\t\t\tdiv.innerHTML = argument;\r\n\t\t\t\t\tvar node, lastNode;\r\n\t\t\t\t\tvar n = this.document.createDocumentFragment();\r\n\t\t\t\t\twhile((node = div.firstChild)){\r\n\t\t\t\t\t\tlastNode = n.appendChild(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinsertRange.insertNode(n);\r\n\t\t\t\t\tif(lastNode) {\r\n\t\t\t\t\t\tinsertRange = insertRange.cloneRange();\r\n\t\t\t\t\t\tinsertRange.setStartAfter(lastNode);\r\n\t\t\t\t\t\tinsertRange.collapse(false);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(insertRange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else if(has(\"mozilla\") && !argument.length){\r\n\t\t\t\t//mozilla can not inserthtml an empty html to delete current selection\r\n\t\t\t\t//so we delete the selection instead in this case\r\n\t\t\t\tthis.selection.remove(); // FIXME\r\n\t\t\t}else{\r\n\t\t\t\trv = this.document.execCommand(\"inserthtml\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn rv;\r\n\t\t},\r\n\r\n\t\t_boldImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements an over-ride of the bold command.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tNot used, operates by selection.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar applied = false;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tthis._adaptIESelection();\r\n\t\t\t\tapplied = this._adaptIEFormatAreaAndExec(\"bold\");\r\n\t\t\t}\r\n\t\t\tif(!applied){\r\n\t\t\t\tapplied = this.document.execCommand(\"bold\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn applied;\r\n\t\t},\r\n\r\n\t\t_italicImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements an over-ride of the italic command.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tNot used, operates by selection.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar applied = false;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tthis._adaptIESelection();\r\n\t\t\t\tapplied = this._adaptIEFormatAreaAndExec(\"italic\");\r\n\t\t\t}\r\n\t\t\tif(!applied){\r\n\t\t\t\tapplied = this.document.execCommand(\"italic\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn applied;\r\n\t\t},\r\n\r\n\t\t_underlineImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements an over-ride of the underline command.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tNot used, operates by selection.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar applied = false;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tthis._adaptIESelection();\r\n\t\t\t\tapplied = this._adaptIEFormatAreaAndExec(\"underline\");\r\n\t\t\t}\r\n\t\t\tif(!applied){\r\n\t\t\t\tapplied = this.document.execCommand(\"underline\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn applied;\r\n\t\t},\r\n\r\n\t\t_strikethroughImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements an over-ride of the strikethrough command.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tNot used, operates by selection.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar applied = false;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tthis._adaptIESelection();\r\n\t\t\t\tapplied = this._adaptIEFormatAreaAndExec(\"strikethrough\");\r\n\t\t\t}\r\n\t\t\tif(!applied){\r\n\t\t\t\tapplied = this.document.execCommand(\"strikethrough\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn applied;\r\n\t\t},\r\n\r\n\t\t_superscriptImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements an over-ride of the superscript command.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tNot used, operates by selection.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar applied = false;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tthis._adaptIESelection();\r\n\t\t\t\tapplied = this._adaptIEFormatAreaAndExec(\"superscript\");\r\n\t\t\t}\r\n\t\t\tif(!applied){\r\n\t\t\t\tapplied = this.document.execCommand(\"superscript\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn applied;\r\n\t\t},\r\n\r\n\t\t_subscriptImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements an over-ride of the superscript command.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tNot used, operates by selection.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar applied = false;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tthis._adaptIESelection();\r\n\t\t\t\tapplied = this._adaptIEFormatAreaAndExec(\"subscript\");\r\n\r\n\t\t\t}\r\n\t\t\tif(!applied){\r\n\t\t\t\tapplied = this.document.execCommand(\"subscript\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn applied;\r\n\t\t},\r\n\r\n\t\t_fontnameImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the fontname command\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar isApplied;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tisApplied = this._handleTextColorOrProperties(\"fontname\", argument);\r\n\t\t\t}\r\n\t\t\tif(!isApplied){\r\n\t\t\t\tisApplied = this.document.execCommand(\"fontname\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn isApplied;\r\n\t\t},\r\n\r\n\t\t_fontsizeImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the fontsize command\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar isApplied;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tisApplied = this._handleTextColorOrProperties(\"fontsize\", argument);\r\n\t\t\t}\r\n\t\t\tif(!isApplied){\r\n\t\t\t\tisApplied = this.document.execCommand(\"fontsize\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn isApplied;\r\n\t\t},\r\n\r\n\t\t_insertorderedlistImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the insertorderedlist command\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar applied = false;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tapplied = this._adaptIEList(\"insertorderedlist\", argument);\r\n\t\t\t}\r\n\t\t\tif(!applied){\r\n\t\t\t\tapplied = this.document.execCommand(\"insertorderedlist\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn applied;\r\n\t\t},\r\n\r\n\t\t_insertunorderedlistImpl: function(argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function implements the insertunorderedlist command\r\n\t\t\t// argument:\r\n\t\t\t//\t\targuments to the exec command, if any.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar applied = false;\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tapplied = this._adaptIEList(\"insertunorderedlist\", argument);\r\n\t\t\t}\r\n\t\t\tif(!applied){\r\n\t\t\t\tapplied = this.document.execCommand(\"insertunorderedlist\", false, argument);\r\n\t\t\t}\r\n\t\t\treturn applied;\r\n\t\t},\r\n\r\n\t\tgetHeaderHeight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA function for obtaining the height of the header node\r\n\t\t\treturn this._getNodeChildrenHeight(this.header); // Number\r\n\t\t},\r\n\r\n\t\tgetFooterHeight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA function for obtaining the height of the footer node\r\n\t\t\treturn this._getNodeChildrenHeight(this.footer); // Number\r\n\t\t},\r\n\r\n\t\t_getNodeChildrenHeight: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAn internal function for computing the cumulative height of all child nodes of 'node'\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to process the children of;\r\n\t\t\tvar h = 0;\r\n\t\t\tif(node && node.childNodes){\r\n\t\t\t\t// IE didn't compute it right when position was obtained on the node directly is some cases,\r\n\t\t\t\t// so we have to walk over all the children manually.\r\n\t\t\t\tvar i;\r\n\t\t\t\tfor(i = 0; i < node.childNodes.length; i++){\r\n\t\t\t\t\tvar size = domGeometry.position(node.childNodes[i]);\r\n\t\t\t\t\th += size.h;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn h; // Number\r\n\t\t},\r\n\r\n\t\t_isNodeEmpty: function(node, startOffset){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to test if a node is devoid of real content.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to check.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate.\r\n\t\t\tif(node.nodeType === 1/*element*/){\r\n\t\t\t\tif(node.childNodes.length > 0){\r\n\t\t\t\t\treturn this._isNodeEmpty(node.childNodes[0], startOffset);\t// huh?   why test just first child?\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}else if(node.nodeType === 3/*text*/){\r\n\t\t\t\treturn (node.nodeValue.substring(startOffset) === \"\");\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_removeStartingRangeFromRange: function(node, range){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to adjust selection range by removing the current\r\n\t\t\t//\t\tstart node.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to remove from the starting range.\r\n\t\t\t// range:\r\n\t\t\t//\t\tThe range to adapt.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(node.nextSibling){\r\n\t\t\t\trange.setStart(node.nextSibling, 0);\r\n\t\t\t}else{\r\n\t\t\t\tvar parent = node.parentNode;\r\n\t\t\t\twhile(parent && parent.nextSibling == null){\r\n\t\t\t\t\t//move up the tree until we find a parent that has another node, that node will be the next node\r\n\t\t\t\t\tparent = parent.parentNode;\r\n\t\t\t\t}\r\n\t\t\t\tif(parent){\r\n\t\t\t\t\trange.setStart(parent.nextSibling, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn range;\r\n\t\t},\r\n\r\n\t\t_adaptIESelection: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to adapt the IE range by removing leading 'newlines'\r\n\t\t\t//\t\tNeeded to fix issue with bold/italics/underline not working if\r\n\t\t\t//\t\trange included leading 'newlines'.\r\n\t\t\t//\t\tIn IE, if a user starts a selection at the very end of a line,\r\n\t\t\t//\t\tthen the native browser commands will fail to execute correctly.\r\n\t\t\t//\t\tTo work around the issue,  we can remove all empty nodes from\r\n\t\t\t//\t\tthe start of the range selection.\r\n\t\t\tvar selection = rangeapi.getSelection(this.window);\r\n\t\t\tif(selection && selection.rangeCount && !selection.isCollapsed){\r\n\t\t\t\tvar range = selection.getRangeAt(0);\r\n\t\t\t\tvar firstNode = range.startContainer;\r\n\t\t\t\tvar startOffset = range.startOffset;\r\n\r\n\t\t\t\twhile(firstNode.nodeType === 3/*text*/ && startOffset >= firstNode.length && firstNode.nextSibling){\r\n\t\t\t\t\t//traverse the text nodes until we get to the one that is actually highlighted\r\n\t\t\t\t\tstartOffset = startOffset - firstNode.length;\r\n\t\t\t\t\tfirstNode = firstNode.nextSibling;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Remove the starting ranges until the range does not start with an empty node.\r\n\t\t\t\tvar lastNode = null;\r\n\t\t\t\twhile(this._isNodeEmpty(firstNode, startOffset) && firstNode !== lastNode){\r\n\t\t\t\t\tlastNode = firstNode; //this will break the loop in case we can't find the next sibling\r\n\t\t\t\t\trange = this._removeStartingRangeFromRange(firstNode, range); //move the start container to the next node in the range\r\n\t\t\t\t\tfirstNode = range.startContainer;\r\n\t\t\t\t\tstartOffset = 0; //start at the beginning of the new starting range\r\n\t\t\t\t}\r\n\t\t\t\tselection.removeAllRanges();// this will work as long as users cannot select multiple ranges. I have not been able to do that in the editor.\r\n\t\t\t\tselection.addRange(range);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_adaptIEFormatAreaAndExec: function(command){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to handle IE's quirkiness regarding how it handles\r\n\t\t\t//\t\tformat commands on a word.  This involves a lit of node splitting\r\n\t\t\t//\t\tand format cloning.\r\n\t\t\t// command:\r\n\t\t\t//\t\tThe format command, needed to check if the desired\r\n\t\t\t//\t\tcommand is true or not.\r\n\t\t\tvar selection = rangeapi.getSelection(this.window);\r\n\t\t\tvar doc = this.document;\r\n\t\t\tvar rs, ret, range, txt, startNode, endNode, breaker, sNode;\r\n\t\t\tif(command && selection && selection.isCollapsed){\r\n\t\t\t\tvar isApplied = this.queryCommandValue(command);\r\n\t\t\t\tif(isApplied){\r\n\r\n\t\t\t\t\t// We have to split backwards until we hit the format\r\n\t\t\t\t\tvar nNames = this._tagNamesForCommand(command);\r\n\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\tvar fs = range.startContainer;\r\n\t\t\t\t\tif(fs.nodeType === 3){\r\n\t\t\t\t\t\tvar offset = range.endOffset;\r\n\t\t\t\t\t\tif(fs.length < offset){\r\n\t\t\t\t\t\t\t//We are not looking from the right node, try to locate the correct one\r\n\t\t\t\t\t\t\tret = this._adjustNodeAndOffset(rs, offset);\r\n\t\t\t\t\t\t\tfs = ret.node;\r\n\t\t\t\t\t\t\toffset = ret.offset;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar topNode;\r\n\t\t\t\t\twhile(fs && fs !== this.editNode){\r\n\t\t\t\t\t\t// We have to walk back and see if this is still a format or not.\r\n\t\t\t\t\t\t// Hm, how do I do this?\r\n\t\t\t\t\t\tvar tName = fs.tagName ? fs.tagName.toLowerCase() : \"\";\r\n\t\t\t\t\t\tif(array.indexOf(nNames, tName) > -1){\r\n\t\t\t\t\t\t\ttopNode = fs;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfs = fs.parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Okay, we have a stopping place, time to split things apart.\r\n\t\t\t\t\tif(topNode){\r\n\t\t\t\t\t\t// Okay, we know how far we have to split backwards, so we have to split now.\r\n\t\t\t\t\t\trs = range.startContainer;\r\n\t\t\t\t\t\tvar newblock = doc.createElement(topNode.tagName);\r\n\t\t\t\t\t\tdomConstruct.place(newblock, topNode, \"after\");\r\n\t\t\t\t\t\tif(rs && rs.nodeType === 3){\r\n\t\t\t\t\t\t\t// Text node, we have to split it.\r\n\t\t\t\t\t\t\tvar nodeToMove, tNode;\r\n\t\t\t\t\t\t\tvar endOffset = range.endOffset;\r\n\t\t\t\t\t\t\tif(rs.length < endOffset){\r\n\t\t\t\t\t\t\t\t//We are not splitting the right node, try to locate the correct one\r\n\t\t\t\t\t\t\t\tret = this._adjustNodeAndOffset(rs, endOffset);\r\n\t\t\t\t\t\t\t\trs = ret.node;\r\n\t\t\t\t\t\t\t\tendOffset = ret.offset;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttxt = rs.nodeValue;\r\n\t\t\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, endOffset));\r\n\t\t\t\t\t\t\tvar endText = txt.substring(endOffset, txt.length);\r\n\t\t\t\t\t\t\tif(endText){\r\n\t\t\t\t\t\t\t\tendNode = doc.createTextNode(endText);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Place the split, then remove original nodes.\r\n\t\t\t\t\t\t\tdomConstruct.place(startNode, rs, \"before\");\r\n\t\t\t\t\t\t\tif(endNode){\r\n\t\t\t\t\t\t\t\tbreaker = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\t\tbreaker.className = \"ieFormatBreakerSpan\";\r\n\t\t\t\t\t\t\t\tdomConstruct.place(breaker, rs, \"after\");\r\n\t\t\t\t\t\t\t\tdomConstruct.place(endNode, breaker, \"after\");\r\n\t\t\t\t\t\t\t\tendNode = breaker;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdomConstruct.destroy(rs);\r\n\r\n\t\t\t\t\t\t\t// Okay, we split the text.  Now we need to see if we're\r\n\t\t\t\t\t\t\t// parented to the block element we're splitting and if\r\n\t\t\t\t\t\t\t// not, we have to split all the way up.  Ugh.\r\n\t\t\t\t\t\t\tvar parentC = startNode.parentNode;\r\n\t\t\t\t\t\t\tvar tagList = [];\r\n\t\t\t\t\t\t\tvar tagData;\r\n\t\t\t\t\t\t\twhile(parentC !== topNode){\r\n\t\t\t\t\t\t\t\tvar tg = parentC.tagName;\r\n\t\t\t\t\t\t\t\ttagData = {tagName: tg};\r\n\t\t\t\t\t\t\t\ttagList.push(tagData);\r\n\r\n\t\t\t\t\t\t\t\tvar newTg = doc.createElement(tg);\r\n\t\t\t\t\t\t\t\t// Clone over any 'style' data.\r\n\t\t\t\t\t\t\t\tif(parentC.style){\r\n\t\t\t\t\t\t\t\t\tif(newTg.style){\r\n\t\t\t\t\t\t\t\t\t\tif(parentC.style.cssText){\r\n\t\t\t\t\t\t\t\t\t\t\tnewTg.style.cssText = parentC.style.cssText;\r\n\t\t\t\t\t\t\t\t\t\t\ttagData.cssText = parentC.style.cssText;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// If font also need to clone over any font data.\r\n\t\t\t\t\t\t\t\tif(parentC.tagName === \"FONT\"){\r\n\t\t\t\t\t\t\t\t\tif(parentC.color){\r\n\t\t\t\t\t\t\t\t\t\tnewTg.color = parentC.color;\r\n\t\t\t\t\t\t\t\t\t\ttagData.color = parentC.color;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(parentC.face){\r\n\t\t\t\t\t\t\t\t\t\tnewTg.face = parentC.face;\r\n\t\t\t\t\t\t\t\t\t\ttagData.face = parentC.face;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(parentC.size){  // this check was necessary on IE\r\n\t\t\t\t\t\t\t\t\t\tnewTg.size = parentC.size;\r\n\t\t\t\t\t\t\t\t\t\ttagData.size = parentC.size;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(parentC.className){\r\n\t\t\t\t\t\t\t\t\tnewTg.className = parentC.className;\r\n\t\t\t\t\t\t\t\t\ttagData.className = parentC.className;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Now move end node and every sibling\r\n\t\t\t\t\t\t\t\t// after it over into the new tag.\r\n\t\t\t\t\t\t\t\tif(endNode){\r\n\t\t\t\t\t\t\t\t\tnodeToMove = endNode;\r\n\t\t\t\t\t\t\t\t\twhile(nodeToMove){\r\n\t\t\t\t\t\t\t\t\t\ttNode = nodeToMove.nextSibling;\r\n\t\t\t\t\t\t\t\t\t\tnewTg.appendChild(nodeToMove);\r\n\t\t\t\t\t\t\t\t\t\tnodeToMove = tNode;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(newTg.tagName == parentC.tagName){\r\n\t\t\t\t\t\t\t\t\tbreaker = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\t\t\tbreaker.className = \"ieFormatBreakerSpan\";\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(breaker, parentC, \"after\");\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(newTg, breaker, \"after\");\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(newTg, parentC, \"after\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstartNode = parentC;\r\n\t\t\t\t\t\t\t\tendNode = newTg;\r\n\t\t\t\t\t\t\t\tparentC = parentC.parentNode;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Lastly, move the split out all the split tags\r\n\t\t\t\t\t\t\t// to the new block as they should now be split properly.\r\n\t\t\t\t\t\t\tif(endNode){\r\n\t\t\t\t\t\t\t\tnodeToMove = endNode;\r\n\t\t\t\t\t\t\t\tif(nodeToMove.nodeType === 1 || (nodeToMove.nodeType === 3 && nodeToMove.nodeValue)){\r\n\t\t\t\t\t\t\t\t\t// Non-blank text and non-text nodes need to clear out that blank space\r\n\t\t\t\t\t\t\t\t\t// before moving the contents.\r\n\t\t\t\t\t\t\t\t\tnewblock.innerHTML = \"\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\twhile(nodeToMove){\r\n\t\t\t\t\t\t\t\t\ttNode = nodeToMove.nextSibling;\r\n\t\t\t\t\t\t\t\t\tnewblock.appendChild(nodeToMove);\r\n\t\t\t\t\t\t\t\t\tnodeToMove = tNode;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// We had intermediate tags, we have to now recreate them inbetween the split\r\n\t\t\t\t\t\t\t// and restore what styles, classnames, etc, we can.\r\n\t\t\t\t\t\t\tvar newrange;\r\n\t\t\t\t\t\t\tif(tagList.length){\r\n\t\t\t\t\t\t\t\ttagData = tagList.pop();\r\n\t\t\t\t\t\t\t\tvar newContTag = doc.createElement(tagData.tagName);\r\n\t\t\t\t\t\t\t\tif(tagData.cssText && newContTag.style){\r\n\t\t\t\t\t\t\t\t\tnewContTag.style.cssText = tagData.cssText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(tagData.className){\r\n\t\t\t\t\t\t\t\t\tnewContTag.className = tagData.className;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(tagData.tagName === \"FONT\"){\r\n\t\t\t\t\t\t\t\t\tif(tagData.color){\r\n\t\t\t\t\t\t\t\t\t\tnewContTag.color = tagData.color;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(tagData.face){\r\n\t\t\t\t\t\t\t\t\t\tnewContTag.face = tagData.face;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(tagData.size){\r\n\t\t\t\t\t\t\t\t\t\tnewContTag.size = tagData.size;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdomConstruct.place(newContTag, newblock, \"before\");\r\n\t\t\t\t\t\t\t\twhile(tagList.length){\r\n\t\t\t\t\t\t\t\t\ttagData = tagList.pop();\r\n\t\t\t\t\t\t\t\t\tvar newTgNode = doc.createElement(tagData.tagName);\r\n\t\t\t\t\t\t\t\t\tif(tagData.cssText && newTgNode.style){\r\n\t\t\t\t\t\t\t\t\t\tnewTgNode.style.cssText = tagData.cssText;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(tagData.className){\r\n\t\t\t\t\t\t\t\t\t\tnewTgNode.className = tagData.className;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(tagData.tagName === \"FONT\"){\r\n\t\t\t\t\t\t\t\t\t\tif(tagData.color){\r\n\t\t\t\t\t\t\t\t\t\t\tnewTgNode.color = tagData.color;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(tagData.face){\r\n\t\t\t\t\t\t\t\t\t\t\tnewTgNode.face = tagData.face;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(tagData.size){\r\n\t\t\t\t\t\t\t\t\t\t\tnewTgNode.size = tagData.size;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnewContTag.appendChild(newTgNode);\r\n\t\t\t\t\t\t\t\t\tnewContTag = newTgNode;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Okay, everything is theoretically split apart and removed from the content\r\n\t\t\t\t\t\t\t\t// so insert the dummy text to select, select it, then\r\n\t\t\t\t\t\t\t\t// clear to position cursor.\r\n\t\t\t\t\t\t\t\tsNode = doc.createTextNode(\".\");\r\n\t\t\t\t\t\t\t\tbreaker.appendChild(sNode);\r\n\t\t\t\t\t\t\t\tnewContTag.appendChild(sNode);\r\n\t\t\t\t\t\t\t\tnewrange = rangeapi.create(this.window);\r\n\t\t\t\t\t\t\t\tnewrange.setStart(sNode, 0);\r\n\t\t\t\t\t\t\t\tnewrange.setEnd(sNode, sNode.length);\r\n\t\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\t\tthis.selection.collapse(false);\r\n\t\t\t\t\t\t\t\tsNode.parentNode.innerHTML = \"\";\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t// No extra tags, so we have to insert a breaker point and rely\r\n\t\t\t\t\t\t\t\t// on filters to remove it later.\r\n\t\t\t\t\t\t\t\tbreaker = doc.createElement(\"span\");\r\n\t\t\t\t\t\t\t\tbreaker.className = \"ieFormatBreakerSpan\";\r\n\t\t\t\t\t\t\t\tsNode = doc.createTextNode(\".\");\r\n\t\t\t\t\t\t\t\tbreaker.appendChild(sNode);\r\n\t\t\t\t\t\t\t\tdomConstruct.place(breaker, newblock, \"before\");\r\n\t\t\t\t\t\t\t\tnewrange = rangeapi.create(this.window);\r\n\t\t\t\t\t\t\t\tnewrange.setStart(sNode, 0);\r\n\t\t\t\t\t\t\t\tnewrange.setEnd(sNode, sNode.length);\r\n\t\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\t\tthis.selection.collapse(false);\r\n\t\t\t\t\t\t\t\tsNode.parentNode.innerHTML = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!newblock.firstChild){\r\n\t\t\t\t\t\t\t\t// Empty, we don't need it.  Split was at end or similar\r\n\t\t\t\t\t\t\t\t// So, remove it.\r\n\t\t\t\t\t\t\t\tdomConstruct.destroy(newblock);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}else{\r\n\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\trs = range.startContainer;\r\n\t\t\t\t\tif(rs && rs.nodeType === 3){\r\n\t\t\t\t\t\t// Text node, we have to split it.\r\n\t\t\t\t\t\tvar offset = range.startOffset;\r\n\t\t\t\t\t\tif(rs.length < offset){\r\n\t\t\t\t\t\t\t//We are not splitting the right node, try to locate the correct one\r\n\t\t\t\t\t\t\tret = this._adjustNodeAndOffset(rs, offset);\r\n\t\t\t\t\t\t\trs = ret.node;\r\n\t\t\t\t\t\t\toffset = ret.offset;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttxt = rs.nodeValue;\r\n\t\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, offset));\r\n\t\t\t\t\t\tvar endText = txt.substring(offset);\r\n\t\t\t\t\t\tif(endText !== \"\"){\r\n\t\t\t\t\t\t\tendNode = doc.createTextNode(txt.substring(offset));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Create a space, we'll select and bold it, so\r\n\t\t\t\t\t\t// the whole word doesn't get bolded\r\n\t\t\t\t\t\tbreaker = doc.createElement(\"span\");\r\n\t\t\t\t\t\tsNode = doc.createTextNode(\".\");\r\n\t\t\t\t\t\tbreaker.appendChild(sNode);\r\n\t\t\t\t\t\tif(startNode.length){\r\n\t\t\t\t\t\t\tdomConstruct.place(startNode, rs, \"after\");\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tstartNode = rs;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdomConstruct.place(breaker, startNode, \"after\");\r\n\t\t\t\t\t\tif(endNode){\r\n\t\t\t\t\t\t\tdomConstruct.place(endNode, breaker, \"after\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdomConstruct.destroy(rs);\r\n\t\t\t\t\t\tvar newrange = rangeapi.create(this.window);\r\n\t\t\t\t\t\tnewrange.setStart(sNode, 0);\r\n\t\t\t\t\t\tnewrange.setEnd(sNode, sNode.length);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\tdoc.execCommand(command);\r\n\t\t\t\t\t\tdomConstruct.place(breaker.firstChild, breaker, \"before\");\r\n\t\t\t\t\t\tdomConstruct.destroy(breaker);\r\n\t\t\t\t\t\tnewrange.setStart(sNode, 0);\r\n\t\t\t\t\t\tnewrange.setEnd(sNode, sNode.length);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\tthis.selection.collapse(false);\r\n\t\t\t\t\t\tsNode.parentNode.innerHTML = \"\";\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_adaptIEList: function(command /*===== , argument =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function handles normalizing the IE list behavior as\r\n\t\t\t//\t\tmuch as possible.\r\n\t\t\t// command:\r\n\t\t\t//\t\tThe list command to execute.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tAny additional argument.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar selection = rangeapi.getSelection(this.window);\r\n\t\t\tif(selection.isCollapsed){\r\n\t\t\t\t// In the case of no selection, lets commonize the behavior and\r\n\t\t\t\t// make sure that it indents if needed.\r\n\t\t\t\tif(selection.rangeCount && !this.queryCommandValue(command)){\r\n\t\t\t\t\tvar range = selection.getRangeAt(0);\r\n\t\t\t\t\tvar sc = range.startContainer;\r\n\t\t\t\t\tif(sc && sc.nodeType == 3){\r\n\t\t\t\t\t\t// text node.  Lets see if there is a node before it that isn't\r\n\t\t\t\t\t\t// some sort of breaker.\r\n\t\t\t\t\t\tif(!range.startOffset){\r\n\t\t\t\t\t\t\t// We're at the beginning of a text area.  It may have been br split\r\n\t\t\t\t\t\t\t// Who knows?  In any event, we must create the list manually\r\n\t\t\t\t\t\t\t// or IE may shove too much into the list element.  It seems to\r\n\t\t\t\t\t\t\t// grab content before the text node too if it's br split.\r\n\t\t\t\t\t\t\t// Why can't IE work like everyone else?\r\n\r\n\t\t\t\t\t\t\t// Create a space, we'll select and bold it, so\r\n\t\t\t\t\t\t\t// the whole word doesn't get bolded\r\n\t\t\t\t\t\t\tvar lType = \"ul\";\r\n\t\t\t\t\t\t\tif(command === \"insertorderedlist\"){\r\n\t\t\t\t\t\t\t\tlType = \"ol\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar list = this.document.createElement(lType);\r\n\t\t\t\t\t\t\tvar li = domConstruct.create(\"li\", null, list);\r\n\t\t\t\t\t\t\tdomConstruct.place(list, sc, \"before\");\r\n\t\t\t\t\t\t\t// Move in the text node as part of the li.\r\n\t\t\t\t\t\t\tli.appendChild(sc);\r\n\t\t\t\t\t\t\t// We need a br after it or the enter key handler\r\n\t\t\t\t\t\t\t// sometimes throws errors.\r\n\t\t\t\t\t\t\tdomConstruct.create(\"br\", null, list, \"after\");\r\n\t\t\t\t\t\t\t// Okay, now lets move our cursor to the beginning.\r\n\t\t\t\t\t\t\tvar newrange = rangeapi.create(this.window);\r\n\t\t\t\t\t\t\tnewrange.setStart(sc, 0);\r\n\t\t\t\t\t\t\tnewrange.setEnd(sc, sc.length);\r\n\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\tthis.selection.collapse(true);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_handleTextColorOrProperties: function(command, argument){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function handles applying text color as best it is\r\n\t\t\t//\t\table to do so when the selection is collapsed, making the\r\n\t\t\t//\t\tbehavior cross-browser consistent. It also handles the name\r\n\t\t\t//\t\tand size for IE.\r\n\t\t\t// command:\r\n\t\t\t//\t\tThe command.\r\n\t\t\t// argument:\r\n\t\t\t//\t\tAny additional arguments.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar selection = rangeapi.getSelection(this.window);\r\n\t\t\tvar doc = this.document;\r\n\t\t\tvar rs, ret, range, txt, startNode, endNode, breaker, sNode;\r\n\t\t\targument = argument || null;\r\n\t\t\tif(command && selection && selection.isCollapsed){\r\n\t\t\t\tif(selection.rangeCount){\r\n\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\trs = range.startContainer;\r\n\t\t\t\t\tif(rs && rs.nodeType === 3){\r\n\t\t\t\t\t\t// Text node, we have to split it.\r\n\t\t\t\t\t\tvar offset = range.startOffset;\r\n\t\t\t\t\t\tif(rs.length < offset){\r\n\t\t\t\t\t\t\t//We are not splitting the right node, try to locate the correct one\r\n\t\t\t\t\t\t\tret = this._adjustNodeAndOffset(rs, offset);\r\n\t\t\t\t\t\t\trs = ret.node;\r\n\t\t\t\t\t\t\toffset = ret.offset;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttxt = rs.nodeValue;\r\n\t\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, offset));\r\n\t\t\t\t\t\tvar endText = txt.substring(offset);\r\n\t\t\t\t\t\tif(endText !== \"\"){\r\n\t\t\t\t\t\t\tendNode = doc.createTextNode(txt.substring(offset));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Create a space, we'll select and bold it, so\r\n\t\t\t\t\t\t// the whole word doesn't get bolded\r\n\t\t\t\t\t\tbreaker = doc.createElement(\"span\");\r\n\t\t\t\t\t\tsNode = doc.createTextNode(\".\");\r\n\t\t\t\t\t\tbreaker.appendChild(sNode);\r\n\t\t\t\t\t\t// Create a junk node to avoid it trying to style the breaker.\r\n\t\t\t\t\t\t// This will get destroyed later.\r\n\t\t\t\t\t\tvar extraSpan = doc.createElement(\"span\");\r\n\t\t\t\t\t\tbreaker.appendChild(extraSpan);\r\n\t\t\t\t\t\tif(startNode.length){\r\n\t\t\t\t\t\t\tdomConstruct.place(startNode, rs, \"after\");\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tstartNode = rs;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdomConstruct.place(breaker, startNode, \"after\");\r\n\t\t\t\t\t\tif(endNode){\r\n\t\t\t\t\t\t\tdomConstruct.place(endNode, breaker, \"after\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdomConstruct.destroy(rs);\r\n\t\t\t\t\t\tvar newrange = rangeapi.create(this.window);\r\n\t\t\t\t\t\tnewrange.setStart(sNode, 0);\r\n\t\t\t\t\t\tnewrange.setEnd(sNode, sNode.length);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\tif(has(\"webkit\")){\r\n\t\t\t\t\t\t\t// WebKit is frustrating with positioning the cursor.\r\n\t\t\t\t\t\t\t// It stinks to have a selected space, but there really\r\n\t\t\t\t\t\t\t// isn't much choice here.\r\n\t\t\t\t\t\t\tvar style = \"color\";\r\n\t\t\t\t\t\t\tif(command === \"hilitecolor\" || command === \"backcolor\"){\r\n\t\t\t\t\t\t\t\tstyle = \"backgroundColor\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdomStyle.set(breaker, style, argument);\r\n\t\t\t\t\t\t\tthis.selection.remove();\r\n\t\t\t\t\t\t\tdomConstruct.destroy(extraSpan);\r\n\t\t\t\t\t\t\tbreaker.innerHTML = \"&#160;\";\t// &nbsp;\r\n\t\t\t\t\t\t\tthis.selection.selectElement(breaker);\r\n\t\t\t\t\t\t\tthis.focus();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.execCommand(command, argument);\r\n\t\t\t\t\t\t\tdomConstruct.place(breaker.firstChild, breaker, \"before\");\r\n\t\t\t\t\t\t\tdomConstruct.destroy(breaker);\r\n\t\t\t\t\t\t\tnewrange.setStart(sNode, 0);\r\n\t\t\t\t\t\t\tnewrange.setEnd(sNode, sNode.length);\r\n\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\tthis.selection.collapse(false);\r\n\t\t\t\t\t\t\tsNode.parentNode.removeChild(sNode);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_adjustNodeAndOffset: function(/*DomNode*/node, /*Int*/offset){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIn the case there are multiple text nodes in a row the offset may not be within the node.\r\n\t\t\t//\t\tIf the offset is larger than the node length, it will attempt to find\r\n\t\t\t//\t\tthe next text sibling until it locates the text node in which the offset refers to\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to check.\r\n\t\t\t// offset:\r\n\t\t\t//\t\tThe position to find within the text node\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate.\r\n\t\t\twhile(node.length < offset && node.nextSibling && node.nextSibling.nodeType === 3){\r\n\t\t\t\t//Adjust the offset and node in the case of multiple text nodes in a row\r\n\t\t\t\toffset = offset - node.length;\r\n\t\t\t\tnode = node.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn {\"node\": node, \"offset\": offset};\r\n\t\t},\r\n\r\n\t\t_tagNamesForCommand: function(command){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to return the tab names that are associated\r\n\t\t\t//\t\twith a particular style.\r\n\t\t\t// command: String\r\n\t\t\t//\t\tThe command to return tags for.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(command === \"bold\"){\r\n\t\t\t\treturn [\"b\", \"strong\"];\r\n\t\t\t}else if(command === \"italic\"){\r\n\t\t\t\treturn [\"i\", \"em\"];\r\n\t\t\t}else if(command === \"strikethrough\"){\r\n\t\t\t\treturn [\"s\", \"strike\"];\r\n\t\t\t}else if(command === \"superscript\"){\r\n\t\t\t\treturn [\"sup\"];\r\n\t\t\t}else if(command === \"subscript\"){\r\n\t\t\t\treturn [\"sub\"];\r\n\t\t\t}else if(command === \"underline\"){\r\n\t\t\t\treturn [\"u\"];\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t},\r\n\r\n\t\t_stripBreakerNodes: function(/*DOMNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction for stripping out the breaker spans inserted by the formatting command.\r\n\t\t\t//\t\tRegistered as a filter for IE, handles the breaker spans needed to fix up\r\n\t\t\t//\t\tHow bold/italic/etc, work when selection is collapsed (single cursor).\r\n\t\t\tif(!this.isLoaded){\r\n\t\t\t\treturn;\r\n\t\t\t} // this method requires init to be complete\r\n\t\t\tquery(\".ieFormatBreakerSpan\", node).forEach(function(b){\r\n\t\t\t\twhile(b.firstChild){\r\n\t\t\t\t\tdomConstruct.place(b.firstChild, b, \"before\");\r\n\t\t\t\t}\r\n\t\t\t\tdomConstruct.destroy(b);\r\n\t\t\t});\r\n\t\t\treturn node;\r\n\t\t},\r\n\r\n\t\t_stripTrailingEmptyNodes: function(/*DOMNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction for stripping trailing nodes without any text, excluding trailing nodes\r\n\t\t\t//\t\tlike <img> or <div><img></div>, even though they don't have text either.\r\n\r\n\t\t\tfunction isEmpty(node){\r\n\t\t\t\t// If not for old IE we could check for Element children by node.firstElementChild\r\n\t\t\t\treturn (/^(p|div|br)$/i.test(node.nodeName) && node.children.length == 0 &&\r\n\t\t\t\t\t/^[\\s\\xA0]*$/.test(node.textContent || node.innerText || \"\")) ||\r\n\t\t\t\t\t(node.nodeType === 3/*text*/ && /^[\\s\\xA0]*$/.test(node.nodeValue));\r\n\t\t\t}\r\n\t\t\twhile(node.lastChild && isEmpty(node.lastChild)){\r\n\t\t\t\tdomConstruct.destroy(node.lastChild);\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\t\t},\r\n\r\n\t\t// Needed to support ToggleDir plugin.  Intentionally not inside if(has(\"dojo-bidi\")) block\r\n\t\t// so that (for backwards compatibility) ToggleDir plugin works even when has(\"dojo-bidi\") is falsy.\r\n\t\t_setTextDirAttr: function(/*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets textDir attribute.  Sets direction of editNode accordingly.\r\n\t\t\tthis._set(\"textDir\", value);\r\n\t\t\tthis.onLoadDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\tthis.editNode.dir = value;\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\treturn RichText;\r\n});\r\n\ndefine('dijit/_editor/plugins/EnterKeyHandling',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.destroy domConstruct.place\r\n\t\"dojo/keys\", // keys.ENTER\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"mozilla\") has(\"webkit\")\r\n\t\"dojo/_base/window\", // win.withGlobal\r\n\t\"dojo/window\", // winUtils.scrollIntoView\r\n\t\"../_Plugin\",\r\n\t\"../RichText\",\r\n\t\"../range\"\r\n], function(declare, domConstruct, keys, lang, on, has, win, winUtils, _Plugin, RichText, rangeapi){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/EnterKeyHandling\r\n\r\n\treturn declare(\"dijit._editor.plugins.EnterKeyHandling\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin tries to make all browsers behave consistently with regard to\r\n\t\t//\t\thow ENTER behaves in the editor window.  It traps the ENTER key and alters\r\n\t\t//\t\tthe way DOM is constructed in certain cases to try to commonize the generated\r\n\t\t//\t\tDOM and behaviors across browsers.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tThis plugin has three modes:\r\n\t\t//\r\n\t\t//\t\t- blockNodeForEnter=BR\r\n\t\t//\t\t- blockNodeForEnter=DIV\r\n\t\t//\t\t- blockNodeForEnter=P\r\n\t\t//\r\n\t\t//\t\tIn blockNodeForEnter=P, the ENTER key starts a new\r\n\t\t//\t\tparagraph, and shift-ENTER starts a new line in the current paragraph.\r\n\t\t//\t\tFor example, the input:\r\n\t\t//\r\n\t\t//\t|\tfirst paragraph <shift-ENTER>\r\n\t\t//\t|\tsecond line of first paragraph <ENTER>\r\n\t\t//\t|\tsecond paragraph\r\n\t\t//\r\n\t\t//\t\twill generate:\r\n\t\t//\r\n\t\t//\t|\t<p>\r\n\t\t//\t|\t\tfirst paragraph\r\n\t\t//\t|\t\t<br/>\r\n\t\t//\t|\t\tsecond line of first paragraph\r\n\t\t//\t|\t</p>\r\n\t\t//\t|\t<p>\r\n\t\t//\t|\t\tsecond paragraph\r\n\t\t//\t|\t</p>\r\n\t\t//\r\n\t\t//\t\tIn BR and DIV mode, the ENTER key conceptually goes to a new line in the\r\n\t\t//\t\tcurrent paragraph, and users conceptually create a new paragraph by pressing ENTER twice.\r\n\t\t//\t\tFor example, if the user enters text into an editor like this:\r\n\t\t//\r\n\t\t//\t|\t\tone <ENTER>\r\n\t\t//\t|\t\ttwo <ENTER>\r\n\t\t//\t|\t\tthree <ENTER>\r\n\t\t//\t|\t\t<ENTER>\r\n\t\t//\t|\t\tfour <ENTER>\r\n\t\t//\t|\t\tfive <ENTER>\r\n\t\t//\t|\t\tsix <ENTER>\r\n\t\t//\r\n\t\t//\t\tIt will appear on the screen as two 'paragraphs' of three lines each.  Markupwise, this generates:\r\n\t\t//\r\n\t\t//\t\tBR:\r\n\t\t//\t|\t\tone<br/>\r\n\t\t//\t|\t\ttwo<br/>\r\n\t\t//\t|\t\tthree<br/>\r\n\t\t//\t|\t\t<br/>\r\n\t\t//\t|\t\tfour<br/>\r\n\t\t//\t|\t\tfive<br/>\r\n\t\t//\t|\t\tsix<br/>\r\n\t\t//\r\n\t\t//\t\tDIV:\r\n\t\t//\t|\t\t<div>one</div>\r\n\t\t//\t|\t\t<div>two</div>\r\n\t\t//\t|\t\t<div>three</div>\r\n\t\t//\t|\t\t<div>&nbsp;</div>\r\n\t\t//\t|\t\t<div>four</div>\r\n\t\t//\t|\t\t<div>five</div>\r\n\t\t//\t|\t\t<div>six</div>\r\n\r\n\t\t// blockNodeForEnter: String\r\n\t\t//\t\tThis property decides the behavior of Enter key. It can be either P,\r\n\t\t//\t\tDIV, BR, or empty (which means disable this feature). Anything else\r\n\t\t//\t\twill trigger errors.  The default is 'BR'\r\n\t\t//\r\n\t\t//\t\tSee class description for more details.\r\n\t\tblockNodeForEnter: 'BR',\r\n\r\n\t\tconstructor: function(args){\r\n\t\t\tif(args){\r\n\t\t\t\tif(\"blockNodeForEnter\" in args){\r\n\t\t\t\t\targs.blockNodeForEnter = args.blockNodeForEnter.toUpperCase();\r\n\t\t\t\t}\r\n\t\t\t\tlang.mixin(this, args);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetEditor: function(editor){\r\n\t\t\t// Overrides _Plugin.setEditor().\r\n\t\t\tif(this.editor === editor){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.editor = editor;\r\n\t\t\tif(this.blockNodeForEnter == 'BR'){\r\n\t\t\t\t// While Moz has a mode tht mostly works, it's still a little different,\r\n\t\t\t\t// So, try to just have a common mode and be consistent.  Which means\r\n\t\t\t\t// we need to enable customUndo, if not already enabled.\r\n\t\t\t\tthis.editor.customUndo = true;\r\n\t\t\t\teditor.onLoadDeferred.then(lang.hitch(this, function(d){\r\n\t\t\t\t\tthis.own(on(editor.document, \"keydown\", lang.hitch(this, function(e){\r\n\t\t\t\t\t\tif(e.keyCode == keys.ENTER){\r\n\t\t\t\t\t\t\t// Just do it manually.  The handleEnterKey has a shift mode that\r\n\t\t\t\t\t\t\t// Always acts like <br>, so just use it.\r\n\t\t\t\t\t\t\tvar ne = lang.mixin({}, e);\r\n\t\t\t\t\t\t\tne.shiftKey = true;\r\n\t\t\t\t\t\t\tif(!this.handleEnterKey(ne)){\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})));\r\n\t\t\t\t\tif(has(\"ie\") >= 9 && has(\"ie\") <= 10){\r\n\t\t\t\t\t\tthis.own(on(editor.document, \"paste\", lang.hitch(this, function(e){\r\n\t\t\t\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\t\t\t// Use the old range/selection code to kick IE 9 into updating\r\n\t\t\t\t\t\t\t\t// its range by moving it back, then forward, one 'character'.\r\n\t\t\t\t\t\t\t\tvar r = this.editor.document.selection.createRange();\r\n\t\t\t\t\t\t\t\tr.move('character', -1);\r\n\t\t\t\t\t\t\t\tr.select();\r\n\t\t\t\t\t\t\t\tr.move('character', 1);\r\n\t\t\t\t\t\t\t\tr.select();\r\n\t\t\t\t\t\t\t}), 0);\r\n\t\t\t\t\t\t})));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}));\r\n\t\t\t}else if(this.blockNodeForEnter){\r\n\t\t\t\t// add enter key handler\r\n\t\t\t\tvar h = lang.hitch(this, \"handleEnterKey\");\r\n\t\t\t\teditor.addKeyHandler(13, 0, 0, h); //enter\r\n\t\t\t\teditor.addKeyHandler(13, 0, 1, h); //shift+enter\r\n\t\t\t\tthis.own(this.editor.on('KeyPressed', lang.hitch(this, 'onKeyPressed')));\r\n\t\t\t}\r\n\t\t},\r\n\t\tonKeyPressed: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for after the user has pressed a key, and the display has been updated.\r\n\t\t\t//\t\tConnected to RichText's onKeyPressed() method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._checkListLater){\r\n\t\t\t\tif(this.editor.selection.isCollapsed()){\r\n\t\t\t\t\tvar liparent = this.editor.selection.getAncestorElement('LI');\r\n\t\t\t\t\tif(!liparent){\r\n\t\t\t\t\t\t// circulate the undo detection code by calling RichText::execCommand directly\r\n\t\t\t\t\t\tRichText.prototype.execCommand.call(this.editor, 'formatblock', this.blockNodeForEnter);\r\n\t\t\t\t\t\t// set the innerHTML of the new block node\r\n\t\t\t\t\t\tvar block = this.editor.selection.getAncestorElement(this.blockNodeForEnter);\r\n\t\t\t\t\t\tif(block){\r\n\t\t\t\t\t\t\tblock.innerHTML = this.bogusHtmlContent;\r\n\t\t\t\t\t\t\tif(has(\"ie\") <= 9){\r\n\t\t\t\t\t\t\t\t// move to the start by moving backwards one char\r\n\t\t\t\t\t\t\t\tvar r = this.editor.document.selection.createRange();\r\n\t\t\t\t\t\t\t\tr.move('character', -1);\r\n\t\t\t\t\t\t\t\tr.select();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tconsole.error('onKeyPressed: Cannot find the new block node'); // FIXME\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t\t\tif(liparent.parentNode.parentNode.nodeName == 'LI'){\r\n\t\t\t\t\t\t\t\tliparent = liparent.parentNode.parentNode;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar fc = liparent.firstChild;\r\n\t\t\t\t\t\tif(fc && fc.nodeType == 1 && (fc.nodeName == 'UL' || fc.nodeName == 'OL')){\r\n\t\t\t\t\t\t\tliparent.insertBefore(fc.ownerDocument.createTextNode('\\xA0'), fc);\r\n\t\t\t\t\t\t\tvar newrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\t\tnewrange.setStart(liparent.firstChild, 0);\r\n\t\t\t\t\t\t\tvar selection = rangeapi.getSelection(this.editor.window, true);\r\n\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._checkListLater = false;\r\n\t\t\t}\r\n\t\t\tif(this._pressedEnterInBlock){\r\n\t\t\t\t// the new created is the original current P, so we have previousSibling below\r\n\t\t\t\tif(this._pressedEnterInBlock.previousSibling){\r\n\t\t\t\t\tthis.removeTrailingBr(this._pressedEnterInBlock.previousSibling);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._pressedEnterInBlock;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// bogusHtmlContent: [private] String\r\n\t\t//\t\tHTML to stick into a new empty block\r\n\t\tbogusHtmlContent: '&#160;', // &nbsp;\r\n\r\n\t\t// blockNodes: [private] Regex\r\n\t\t//\t\tRegex for testing if a given tag is a block level (display:block) tag\r\n\t\tblockNodes: /^(?:P|H1|H2|H3|H4|H5|H6|LI)$/,\r\n\r\n\t\thandleEnterKey: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for enter key events when blockNodeForEnter is DIV or P.\r\n\t\t\t// description:\r\n\t\t\t//\t\tManually handle enter key event to make the behavior consistent across\r\n\t\t\t//\t\tall supported browsers. See class description for details.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar selection, range, newrange, startNode, endNode, brNode, doc = this.editor.document, br, rs, txt;\r\n\t\t\tif(e.shiftKey){        // shift+enter always generates <br>\r\n\t\t\t\tvar parent = this.editor.selection.getParentElement();\r\n\t\t\t\tvar header = rangeapi.getAncestor(parent, this.blockNodes);\r\n\t\t\t\tif(header){\r\n\t\t\t\t\tif(header.tagName == 'LI'){\r\n\t\t\t\t\t\treturn true; // let browser handle\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\tif(!range.collapsed){\r\n\t\t\t\t\t\trange.deleteContents();\r\n\t\t\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rangeapi.atBeginningOfContainer(header, range.startContainer, range.startOffset)){\r\n\t\t\t\t\t\tbr = doc.createElement('br');\r\n\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\theader.insertBefore(br, header.firstChild);\r\n\t\t\t\t\t\tnewrange.setStartAfter(br);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t}else if(rangeapi.atEndOfContainer(header, range.startContainer, range.startOffset)){\r\n\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\tbr = doc.createElement('br');\r\n\t\t\t\t\t\theader.appendChild(br);\r\n\t\t\t\t\t\theader.appendChild(doc.createTextNode('\\xA0'));\r\n\t\t\t\t\t\tnewrange.setStart(header.lastChild, 0);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trs = range.startContainer;\r\n\t\t\t\t\t\tif(rs && rs.nodeType == 3){\r\n\t\t\t\t\t\t\t// Text node, we have to split it.\r\n\t\t\t\t\t\t\ttxt = rs.nodeValue;\r\n\t\t\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, range.startOffset));\r\n\t\t\t\t\t\t\tendNode = doc.createTextNode(txt.substring(range.startOffset));\r\n\t\t\t\t\t\t\tbrNode = doc.createElement(\"br\");\r\n\r\n\t\t\t\t\t\t\tif(endNode.nodeValue == \"\" && has(\"webkit\")){\r\n\t\t\t\t\t\t\t\tendNode = doc.createTextNode('\\xA0')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdomConstruct.place(startNode, rs, \"after\");\r\n\t\t\t\t\t\t\tdomConstruct.place(brNode, startNode, \"after\");\r\n\t\t\t\t\t\t\tdomConstruct.place(endNode, brNode, \"after\");\r\n\t\t\t\t\t\t\tdomConstruct.destroy(rs);\r\n\t\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\t\tnewrange.setStart(endNode, 0);\r\n\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true; // let browser handle\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\tif(selection.rangeCount){\r\n\t\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\t\tif(range && range.startContainer){\r\n\t\t\t\t\t\t\tif(!range.collapsed){\r\n\t\t\t\t\t\t\t\trange.deleteContents();\r\n\t\t\t\t\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trs = range.startContainer;\r\n\t\t\t\t\t\t\tif(rs && rs.nodeType == 3){\r\n\t\t\t\t\t\t\t\t// Text node, we have to split it.\r\n\r\n\t\t\t\t\t\t\t\tvar offset = range.startOffset;\r\n\t\t\t\t\t\t\t\tif(rs.length < offset){\r\n\t\t\t\t\t\t\t\t\t//We are not splitting the right node, try to locate the correct one\r\n\t\t\t\t\t\t\t\t\tret = this._adjustNodeAndOffset(rs, offset);\r\n\t\t\t\t\t\t\t\t\trs = ret.node;\r\n\t\t\t\t\t\t\t\t\toffset = ret.offset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttxt = rs.nodeValue;\r\n\r\n\t\t\t\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, offset));\r\n\t\t\t\t\t\t\t\tendNode = doc.createTextNode(txt.substring(offset));\r\n\t\t\t\t\t\t\t\tbrNode = doc.createElement(\"br\");\r\n\r\n\t\t\t\t\t\t\t\tif(!endNode.length){\r\n\t\t\t\t\t\t\t\t\t// Create dummy text with a &nbsp to go after the BR, to prevent IE crash.\r\n\t\t\t\t\t\t\t\t\t// See https://bugs.dojotoolkit.org/ticket/12008 for details.\r\n\t\t\t\t\t\t\t\t\tendNode = doc.createTextNode('\\xA0');\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif(startNode.length){\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(startNode, rs, \"after\");\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tstartNode = rs;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdomConstruct.place(brNode, startNode, \"after\");\r\n\t\t\t\t\t\t\t\tdomConstruct.place(endNode, brNode, \"after\");\r\n\t\t\t\t\t\t\t\tdomConstruct.destroy(rs);\r\n\t\t\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\t\t\tnewrange.setStart(endNode, 0);\r\n\t\t\t\t\t\t\t\tnewrange.setEnd(endNode, endNode.length);\r\n\t\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\t\tthis.editor.selection.collapse(true);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tvar targetNode;\r\n\t\t\t\t\t\t\t\tif(range.startOffset >= 0){\r\n\t\t\t\t\t\t\t\t\ttargetNode = rs.childNodes[range.startOffset];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar brNode = doc.createElement(\"br\");\r\n\t\t\t\t\t\t\t\tvar endNode = doc.createTextNode('\\xA0');\r\n\t\t\t\t\t\t\t\tif(!targetNode){\r\n\t\t\t\t\t\t\t\t\trs.appendChild(brNode);\r\n\t\t\t\t\t\t\t\t\trs.appendChild(endNode);\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(brNode, targetNode, \"before\");\r\n\t\t\t\t\t\t\t\t\tdomConstruct.place(endNode, brNode, \"after\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\t\t\tnewrange.setStart(endNode, 0);\r\n\t\t\t\t\t\t\t\tnewrange.setEnd(endNode, endNode.length);\r\n\t\t\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\t\t\tthis.editor.selection.collapse(true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// \\xA0 dummy text node remains, but is stripped before get(\"value\")\r\n\t\t\t\t\t\t\t// by RichText._stripTrailingEmptyNodes().  Still, could we just use a plain\r\n\t\t\t\t\t\t\t// space (\" \") instead?\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// don't change this: do not call this.execCommand, as that may have other logic in subclass\r\n\t\t\t\t\t\tRichText.prototype.execCommand.call(this.editor, 'inserthtml', '<br>');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar _letBrowserHandle = true;\r\n\r\n\t\t\t// first remove selection\r\n\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\trange = selection.getRangeAt(0);\r\n\t\t\tif(!range.collapsed){\r\n\t\t\t\trange.deleteContents();\r\n\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t}\r\n\r\n\t\t\tvar block = rangeapi.getBlockAncestor(range.endContainer, null, this.editor.editNode);\r\n\t\t\tvar blockNode = block.blockNode;\r\n\r\n\t\t\t// if this is under a LI or the parent of the blockNode is LI, just let browser to handle it\r\n\t\t\tif((this._checkListLater = (blockNode && (blockNode.nodeName == 'LI' || blockNode.parentNode.nodeName == 'LI')))){\r\n\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t// press enter in middle of P may leave a trailing <br/>, let's remove it later\r\n\t\t\t\t\tthis._pressedEnterInBlock = blockNode;\r\n\t\t\t\t}\r\n\t\t\t\t// if this li only contains spaces, set the content to empty so the browser will outdent this item\r\n\t\t\t\tif(/^(\\s|&nbsp;|&#160;|\\xA0|<span\\b[^>]*\\bclass=['\"]Apple-style-span['\"][^>]*>(\\s|&nbsp;|&#160;|\\xA0)<\\/span>)?(<br>)?$/.test(blockNode.innerHTML)){\r\n\t\t\t\t\t// empty LI node\r\n\t\t\t\t\tblockNode.innerHTML = '';\r\n\t\t\t\t\tif(has(\"webkit\")){ // WebKit tosses the range when innerHTML is reset\r\n\t\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\t\tnewrange.setStart(blockNode, 0);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._checkListLater = false; // nothing to check since the browser handles outdent\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// text node directly under body, let's wrap them in a node\r\n\t\t\tif(!block.blockNode || block.blockNode === this.editor.editNode){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tRichText.prototype.execCommand.call(this.editor, 'formatblock', this.blockNodeForEnter);\r\n\t\t\t\t}catch(e2){ /*squelch FF3 exception bug when editor content is a single BR*/\r\n\t\t\t\t}\r\n\t\t\t\t// get the newly created block node\r\n\t\t\t\t// FIXME\r\n\t\t\t\tblock = {blockNode: this.editor.selection.getAncestorElement(this.blockNodeForEnter),\r\n\t\t\t\t\tblockContainer: this.editor.editNode};\r\n\t\t\t\tif(block.blockNode){\r\n\t\t\t\t\tif(block.blockNode != this.editor.editNode &&\r\n\t\t\t\t\t\t(!(block.blockNode.textContent || block.blockNode.innerHTML).replace(/^\\s+|\\s+$/g, \"\").length)){\r\n\t\t\t\t\t\tthis.removeTrailingBr(block.blockNode);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{    // we shouldn't be here if formatblock worked\r\n\t\t\t\t\tblock.blockNode = this.editor.editNode;\r\n\t\t\t\t}\r\n\t\t\t\tselection = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\trange = selection.getRangeAt(0);\r\n\t\t\t}\r\n\r\n\t\t\tvar newblock = doc.createElement(this.blockNodeForEnter);\r\n\t\t\tnewblock.innerHTML = this.bogusHtmlContent;\r\n\t\t\tthis.removeTrailingBr(block.blockNode);\r\n\t\t\tvar endOffset = range.endOffset;\r\n\t\t\tvar node = range.endContainer;\r\n\t\t\tif(node.length < endOffset){\r\n\t\t\t\t//We are not checking the right node, try to locate the correct one\r\n\t\t\t\tvar ret = this._adjustNodeAndOffset(node, endOffset);\r\n\t\t\t\tnode = ret.node;\r\n\t\t\t\tendOffset = ret.offset;\r\n\t\t\t}\r\n\t\t\tif(rangeapi.atEndOfContainer(block.blockNode, node, endOffset)){\r\n\t\t\t\tif(block.blockNode === block.blockContainer){\r\n\t\t\t\t\tblock.blockNode.appendChild(newblock);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomConstruct.place(newblock, block.blockNode, \"after\");\r\n\t\t\t\t}\r\n\t\t\t\t_letBrowserHandle = false;\r\n\t\t\t\t// lets move caret to the newly created block\r\n\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\tnewrange.setStart(newblock, 0);\r\n\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\tif(this.editor.height){\r\n\t\t\t\t\twinUtils.scrollIntoView(newblock);\r\n\t\t\t\t}\r\n\t\t\t}else if(rangeapi.atBeginningOfContainer(block.blockNode,\r\n\t\t\t\trange.startContainer, range.startOffset)){\r\n\t\t\t\tdomConstruct.place(newblock, block.blockNode, block.blockNode === block.blockContainer ? \"first\" : \"before\");\r\n\t\t\t\tif(newblock.nextSibling && this.editor.height){\r\n\t\t\t\t\t// position input caret - mostly WebKit needs this\r\n\t\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\t\tnewrange.setStart(newblock.nextSibling, 0);\r\n\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t// browser does not scroll the caret position into view, do it manually\r\n\t\t\t\t\twinUtils.scrollIntoView(newblock.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t\t_letBrowserHandle = false;\r\n\t\t\t}else{ //press enter in the middle of P/DIV/Whatever/\r\n\t\t\t\tif(block.blockNode === block.blockContainer){\r\n\t\t\t\t\tblock.blockNode.appendChild(newblock);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomConstruct.place(newblock, block.blockNode, \"after\");\r\n\t\t\t\t}\r\n\t\t\t\t_letBrowserHandle = false;\r\n\r\n\t\t\t\t// Clone any block level styles.\r\n\t\t\t\tif(block.blockNode.style){\r\n\t\t\t\t\tif(newblock.style){\r\n\t\t\t\t\t\tif(block.blockNode.style.cssText){\r\n\t\t\t\t\t\t\tnewblock.style.cssText = block.blockNode.style.cssText;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Okay, we probably have to split.\r\n\t\t\t\trs = range.startContainer;\r\n\t\t\t\tvar firstNodeMoved;\r\n\t\t\t\tif(rs && rs.nodeType == 3){\r\n\t\t\t\t\t// Text node, we have to split it.\r\n\t\t\t\t\tvar nodeToMove, tNode;\r\n\t\t\t\t\tendOffset = range.endOffset;\r\n\t\t\t\t\tif(rs.length < endOffset){\r\n\t\t\t\t\t\t//We are not splitting the right node, try to locate the correct one\r\n\t\t\t\t\t\tret = this._adjustNodeAndOffset(rs, endOffset);\r\n\t\t\t\t\t\trs = ret.node;\r\n\t\t\t\t\t\tendOffset = ret.offset;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttxt = rs.nodeValue;\r\n\t\t\t\t\tstartNode = doc.createTextNode(txt.substring(0, endOffset));\r\n\t\t\t\t\tendNode = doc.createTextNode(txt.substring(endOffset, txt.length));\r\n\r\n\t\t\t\t\t// Place the split, then remove original nodes.\r\n\t\t\t\t\tdomConstruct.place(startNode, rs, \"before\");\r\n\t\t\t\t\tdomConstruct.place(endNode, rs, \"after\");\r\n\t\t\t\t\tdomConstruct.destroy(rs);\r\n\r\n\t\t\t\t\t// Okay, we split the text.  Now we need to see if we're\r\n\t\t\t\t\t// parented to the block element we're splitting and if\r\n\t\t\t\t\t// not, we have to split all the way up.  Ugh.\r\n\t\t\t\t\tvar parentC = startNode.parentNode;\r\n\t\t\t\t\twhile(parentC !== block.blockNode){\r\n\t\t\t\t\t\tvar tg = parentC.tagName;\r\n\t\t\t\t\t\tvar newTg = doc.createElement(tg);\r\n\t\t\t\t\t\t// Clone over any 'style' data.\r\n\t\t\t\t\t\tif(parentC.style){\r\n\t\t\t\t\t\t\tif(newTg.style){\r\n\t\t\t\t\t\t\t\tif(parentC.style.cssText){\r\n\t\t\t\t\t\t\t\t\tnewTg.style.cssText = parentC.style.cssText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// If font also need to clone over any font data.\r\n\t\t\t\t\t\tif(parentC.tagName === \"FONT\"){\r\n\t\t\t\t\t\t\tif(parentC.color){\r\n\t\t\t\t\t\t\t\tnewTg.color = parentC.color;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(parentC.face){\r\n\t\t\t\t\t\t\t\tnewTg.face = parentC.face;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(parentC.size){  // this check was necessary on IE\r\n\t\t\t\t\t\t\t\tnewTg.size = parentC.size;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnodeToMove = endNode;\r\n\t\t\t\t\t\twhile(nodeToMove){\r\n\t\t\t\t\t\t\ttNode = nodeToMove.nextSibling;\r\n\t\t\t\t\t\t\tnewTg.appendChild(nodeToMove);\r\n\t\t\t\t\t\t\tnodeToMove = tNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdomConstruct.place(newTg, parentC, \"after\");\r\n\t\t\t\t\t\tstartNode = parentC;\r\n\t\t\t\t\t\tendNode = newTg;\r\n\t\t\t\t\t\tparentC = parentC.parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lastly, move the split out tags to the new block.\r\n\t\t\t\t\t// as they should now be split properly.\r\n\t\t\t\t\tnodeToMove = endNode;\r\n\t\t\t\t\tif(nodeToMove.nodeType == 1 || (nodeToMove.nodeType == 3 && nodeToMove.nodeValue)){\r\n\t\t\t\t\t\t// Non-blank text and non-text nodes need to clear out that blank space\r\n\t\t\t\t\t\t// before moving the contents.\r\n\t\t\t\t\t\tnewblock.innerHTML = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstNodeMoved = nodeToMove;\r\n\t\t\t\t\twhile(nodeToMove){\r\n\t\t\t\t\t\ttNode = nodeToMove.nextSibling;\r\n\t\t\t\t\t\tnewblock.appendChild(nodeToMove);\r\n\t\t\t\t\t\tnodeToMove = tNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//lets move caret to the newly created block\r\n\t\t\t\tnewrange = rangeapi.create(this.editor.window);\r\n\t\t\t\tvar nodeForCursor;\r\n\t\t\t\tvar innerMostFirstNodeMoved = firstNodeMoved;\r\n\t\t\t\tif(this.blockNodeForEnter !== 'BR'){\r\n\t\t\t\t\twhile(innerMostFirstNodeMoved){\r\n\t\t\t\t\t\tnodeForCursor = innerMostFirstNodeMoved;\r\n\t\t\t\t\t\ttNode = innerMostFirstNodeMoved.firstChild;\r\n\t\t\t\t\t\tinnerMostFirstNodeMoved = tNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodeForCursor && nodeForCursor.parentNode){\r\n\t\t\t\t\t\tnewblock = nodeForCursor.parentNode;\r\n\t\t\t\t\t\tnewrange.setStart(newblock, 0);\r\n\t\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\t\tif(this.editor.height){\r\n\t\t\t\t\t\t\twinUtils.scrollIntoView(newblock);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t\t\t// press enter in middle of P may leave a trailing <br/>, let's remove it later\r\n\t\t\t\t\t\t\tthis._pressedEnterInBlock = block.blockNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t_letBrowserHandle = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnewrange.setStart(newblock, 0);\r\n\t\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\t\tselection.addRange(newrange);\r\n\t\t\t\t\tif(this.editor.height){\r\n\t\t\t\t\t\twinUtils.scrollIntoView(newblock);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t\t\t// press enter in middle of P may leave a trailing <br/>, let's remove it later\r\n\t\t\t\t\t\tthis._pressedEnterInBlock = block.blockNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn _letBrowserHandle;\r\n\t\t},\r\n\r\n\t\t_adjustNodeAndOffset: function(/*DomNode*/node, /*Int*/offset){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIn the case there are multiple text nodes in a row the offset may not be within the node.  If the offset is larger than the node length, it will attempt to find\r\n\t\t\t//\t\tthe next text sibling until it locates the text node in which the offset refers to\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node to check.\r\n\t\t\t// offset:\r\n\t\t\t//\t\tThe position to find within the text node\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate.\r\n\t\t\twhile(node.length < offset && node.nextSibling && node.nextSibling.nodeType == 3){\r\n\t\t\t\t//Adjust the offset and node in the case of multiple text nodes in a row\r\n\t\t\t\toffset = offset - node.length;\r\n\t\t\t\tnode = node.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn {\"node\": node, \"offset\": offset};\r\n\t\t},\r\n\r\n\t\tremoveTrailingBr: function(container){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIf last child of container is a `<br>`, then remove it.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar para = /P|DIV|LI/i.test(container.tagName) ?\r\n\t\t\t\tcontainer : this.editor.selection.getParentOfType(container, ['P', 'DIV', 'LI']);\r\n\r\n\t\t\tif(!para){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(para.lastChild){\r\n\t\t\t\tif((para.childNodes.length > 1 && para.lastChild.nodeType == 3 && /^[\\s\\xAD]*$/.test(para.lastChild.nodeValue)) ||\r\n\t\t\t\t\tpara.lastChild.tagName == 'BR'){\r\n\r\n\t\t\t\t\tdomConstruct.destroy(para.lastChild);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!para.childNodes.length){\r\n\t\t\t\tpara.innerHTML = this.bogusHtmlContent;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n});\r\n\n\ndefine('dijit/Editor',[\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/Deferred\", // Deferred\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-class\", // domClass.add\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-style\", // domStyle.set, get\r\n\t\"dojo/keys\", // keys.F1 keys.F15 keys.TAB\r\n\t\"dojo/_base/lang\", // lang.getObject lang.hitch\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"mac\") has(\"webkit\")\r\n\t\"dojo/string\", // string.substitute\r\n\t\"dojo/topic\", // topic.publish()\r\n\t\"./_Container\",\r\n\t\"./Toolbar\",\r\n\t\"./ToolbarSeparator\",\r\n\t\"./layout/_LayoutWidget\",\r\n\t\"./form/ToggleButton\",\r\n\t\"./_editor/_Plugin\",\r\n\t\"./_editor/plugins/EnterKeyHandling\",\r\n\t\"./_editor/html\",\r\n\t\"./_editor/range\",\r\n\t\"./_editor/RichText\",\r\n\t\"./main\", // dijit._scopeName\r\n\t\"dojo/i18n!./_editor/nls/commands\"\r\n], function(require, array, declare, Deferred, i18n, domAttr, domClass, domGeometry, domStyle,\r\n\t\t\tkeys, lang, has, string, topic,\r\n\t\t\t_Container, Toolbar, ToolbarSeparator, _LayoutWidget, ToggleButton,\r\n\t\t\t_Plugin, EnterKeyHandling, html, rangeapi, RichText, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Editor\r\n\r\n\tvar Editor = declare(\"dijit.Editor\", RichText, {\r\n\t\t// summary:\r\n\t\t//\t\tA rich text Editing widget\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tThis widget provides basic WYSIWYG editing features, based on the browser's\r\n\t\t//\t\tunderlying rich text editing capability, accompanied by a toolbar (`dijit.Toolbar`).\r\n\t\t//\t\tA plugin model is available to extend the editor's capabilities as well as the\r\n\t\t//\t\tthe options available in the toolbar.  Content generation may vary across\r\n\t\t//\t\tbrowsers, and clipboard operations may have different results, to name\r\n\t\t//\t\ta few limitations.  Note: this widget should not be used with the HTML\r\n\t\t//\t\t&lt;TEXTAREA&gt; tag -- see dijit/_editor/RichText for details.\r\n\r\n\t\t// plugins: [const] Object[]\r\n\t\t//\t\tA list of plugin names (as strings) or instances (as objects)\r\n\t\t//\t\tfor this widget.\r\n\t\t//\r\n\t\t//\t\tWhen declared in markup, it might look like:\r\n\t\t//\t|\tplugins=\"['bold',{name:'dijit._editor.plugins.FontChoice', command:'fontName', generic:true}]\"\r\n\t\tplugins: null,\r\n\r\n\t\t// extraPlugins: [const] Object[]\r\n\t\t//\t\tA list of extra plugin names which will be appended to plugins array\r\n\t\textraPlugins: null,\r\n\r\n\t\tconstructor: function(/*===== params, srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tInitial settings for any of the attributes, except readonly attributes.\r\n\t\t\t// srcNodeRef: DOMNode\r\n\t\t\t//\t\tThe editor replaces the specified DOMNode.\r\n\r\n\t\t\tif(!lang.isArray(this.plugins)){\r\n\t\t\t\tthis.plugins = [\"undo\", \"redo\", \"|\", \"cut\", \"copy\", \"paste\", \"|\", \"bold\", \"italic\", \"underline\", \"strikethrough\", \"|\",\r\n\t\t\t\t\t\"insertOrderedList\", \"insertUnorderedList\", \"indent\", \"outdent\", \"|\", \"justifyLeft\", \"justifyRight\", \"justifyCenter\", \"justifyFull\",\r\n\t\t\t\t\tEnterKeyHandling /*, \"createLink\"*/];\r\n\t\t\t}\r\n\r\n\t\t\tthis._plugins = [];\r\n\t\t\tthis._editInterval = this.editActionInterval * 1000;\r\n\r\n\t\t\t//IE will always lose focus when other element gets focus, while for FF and safari,\r\n\t\t\t//when no iframe is used, focus will be lost whenever another element gets focus.\r\n\t\t\t//For IE, we can connect to onBeforeDeactivate, which will be called right before\r\n\t\t\t//the focus is lost, so we can obtain the selected range. For other browsers,\r\n\t\t\t//no equivalent of onBeforeDeactivate, so we need to do two things to make sure\r\n\t\t\t//selection is properly saved before focus is lost: 1) when user clicks another\r\n\t\t\t//element in the page, in which case we listen to mousedown on the entire page and\r\n\t\t\t//see whether user clicks out of a focus editor, if so, save selection (focus will\r\n\t\t\t//only lost after onmousedown event is fired, so we can obtain correct caret pos.)\r\n\t\t\t//2) when user tabs away from the editor, which is handled in onKeyDown below.\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\tthis.events.push(\"onBeforeDeactivate\");\r\n\t\t\t\tthis.events.push(\"onBeforeActivate\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\tExtension to make sure a deferred is in place before certain functions\r\n\t\t\t//\texecute, like making sure all the plugins are properly inserted.\r\n\r\n\t\t\t// Set up a deferred so that the value isn't applied to the editor\r\n\t\t\t// until all the plugins load, needed to avoid timing condition\r\n\t\t\t// reported in #10537.\r\n\t\t\tthis.setValueDeferred = new Deferred();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t//for custom undo/redo, if enabled.\r\n\t\t\tthis._steps = this._steps.slice(0);\r\n\t\t\tthis._undoedSteps = this._undoedSteps.slice(0);\r\n\r\n\t\t\tif(lang.isArray(this.extraPlugins)){\r\n\t\t\t\tthis.plugins = this.plugins.concat(this.extraPlugins);\r\n\t\t\t}\r\n\r\n\t\t\tthis.commands = i18n.getLocalization(\"dijit._editor\", \"commands\", this.lang);\r\n\r\n\t\t\tif(has(\"webkit\")){\r\n\t\t\t\t// Disable selecting the entire editor by inadvertent double-clicks.\r\n\t\t\t\t// on buttons, title bar, etc.  Otherwise clicking too fast on\r\n\t\t\t\t// a button such as undo/redo selects the entire editor.\r\n\t\t\t\tdomStyle.set(this.domNode, \"KhtmlUserSelect\", \"none\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(!this.toolbar){\r\n\t\t\t\t// if we haven't been assigned a toolbar, create one\r\n\t\t\t\tthis.toolbar = new Toolbar({\r\n\t\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\t\tdir: this.dir,\r\n\t\t\t\t\tlang: this.lang,\r\n\t\t\t\t\t\"aria-label\": this.id\r\n\t\t\t\t});\r\n\t\t\t\tthis.header.appendChild(this.toolbar.domNode);\r\n\t\t\t}\r\n\r\n\t\t\tarray.forEach(this.plugins, this.addPlugin, this);\r\n\r\n\t\t\t// Okay, denote the value can now be set.\r\n\t\t\tthis.setValueDeferred.resolve(true);\r\n\r\n\t\t\tdomClass.add(this.iframe.parentNode, \"dijitEditorIFrameContainer\");\r\n\t\t\tdomClass.add(this.iframe, \"dijitEditorIFrame\");\r\n\t\t\tdomAttr.set(this.iframe, \"allowTransparency\", true);\r\n\r\n\t\t\tthis.toolbar.startup();\r\n\t\t\tthis.onNormalizedDisplayChanged(); //update toolbar button status\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tarray.forEach(this._plugins, function(p){\r\n\t\t\t\tif(p && p.destroy){\r\n\t\t\t\t\tp.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._plugins = [];\r\n\t\t\tthis.toolbar.destroyRecursive();\r\n\t\t\tdelete this.toolbar;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\taddPlugin: function(/*String||Object||Function*/ plugin, /*Integer?*/ index){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ttakes a plugin name as a string or a plugin instance and\r\n\t\t\t//\t\tadds it to the toolbar and associates it with this editor\r\n\t\t\t//\t\tinstance. The resulting plugin is added to the Editor's\r\n\t\t\t//\t\tplugins array. If index is passed, it's placed in the plugins\r\n\t\t\t//\t\tarray at that index. No big magic, but a nice helper for\r\n\t\t\t//\t\tpassing in plugin names via markup.\r\n\t\t\t// plugin:\r\n\t\t\t//\t\tString, args object, plugin instance, or plugin constructor\r\n\t\t\t// args:\r\n\t\t\t//\t\tThis object will be passed to the plugin constructor\r\n\t\t\t// index:\r\n\t\t\t//\t\tUsed when creating an instance from\r\n\t\t\t//\t\tsomething already in this.plugins. Ensures that the new\r\n\t\t\t//\t\tinstance is assigned to this.plugins at that index.\r\n\t\t\tvar args = lang.isString(plugin) ? {name: plugin} : lang.isFunction(plugin) ? {ctor: plugin} : plugin;\r\n\t\t\tif(!args.setEditor){\r\n\t\t\t\tvar o = {\"args\": args, \"plugin\": null, \"editor\": this};\r\n\t\t\t\tif(args.name){\r\n\t\t\t\t\t// search registry for a plugin factory matching args.name, if it's not there then\r\n\t\t\t\t\t// fallback to 1.0 API:\r\n\t\t\t\t\t// ask all loaded plugin modules to fill in o.plugin if they can (ie, if they implement args.name)\r\n\t\t\t\t\t// remove fallback for 2.0.\r\n\t\t\t\t\tif(_Plugin.registry[args.name]){\r\n\t\t\t\t\t\to.plugin = _Plugin.registry[args.name](args);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttopic.publish(dijit._scopeName + \".Editor.getPlugin\", o);\t// publish\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!o.plugin){\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\t// TODO: remove lang.getObject() call in 2.0\r\n\t\t\t\t\t\tvar pc = args.ctor || lang.getObject(args.name) || require(args.name);\r\n\t\t\t\t\t\tif(pc){\r\n\t\t\t\t\t\t\to.plugin = new pc(args);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\tthrow new Error(this.id + \": cannot find plugin [\" + args.name + \"]\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!o.plugin){\r\n\t\t\t\t\tthrow new Error(this.id + \": cannot find plugin [\" + args.name + \"]\");\r\n\t\t\t\t}\r\n\t\t\t\tplugin = o.plugin;\r\n\t\t\t}\r\n\t\t\tif(arguments.length > 1){\r\n\t\t\t\tthis._plugins[index] = plugin;\r\n\t\t\t}else{\r\n\t\t\t\tthis._plugins.push(plugin);\r\n\t\t\t}\r\n\t\t\tplugin.setEditor(this);\r\n\t\t\tif(lang.isFunction(plugin.setToolbar)){\r\n\t\t\t\tplugin.setToolbar(this.toolbar);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//the following 2 functions are required to make the editor play nice under a layout widget, see #4070\r\n\r\n\t\tresize: function(size){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the editor to the specified size, see `dijit/layout/_LayoutWidget.resize()`\r\n\t\t\tif(size){\r\n\t\t\t\t// we've been given a height/width for the entire editor (toolbar + contents), calls layout()\r\n\t\t\t\t// to split the allocated size between the toolbar and the contents\r\n\t\t\t\t_LayoutWidget.prototype.resize.apply(this, arguments);\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t else{\r\n\t\t\t // do nothing, the editor is already laid out correctly.   The user has probably specified\r\n\t\t\t // the height parameter, which was used to set a size on the iframe\r\n\t\t\t }\r\n\t\t\t */\r\n\t\t},\r\n\t\tlayout: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from `dijit/layout/_LayoutWidget.resize()`.  This shouldn't be called directly\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// Converts the iframe (or rather the <div> surrounding it) to take all the available space\r\n\t\t\t// except what's needed for the header (toolbars) and footer (breadcrumbs, etc).\r\n\t\t\t// A class was added to the iframe container and some themes style it, so we have to\r\n\t\t\t// calc off the added margins and padding too. See tracker: #10662\r\n\t\t\tvar areaHeight = (this._contentBox.h -\r\n\t\t\t\t(this.getHeaderHeight() + this.getFooterHeight() +\r\n\t\t\t\t\tdomGeometry.getPadBorderExtents(this.iframe.parentNode).h +\r\n\t\t\t\t\tdomGeometry.getMarginExtents(this.iframe.parentNode).h));\r\n\t\t\tthis.editingArea.style.height = areaHeight + \"px\";\r\n\t\t\tif(this.iframe){\r\n\t\t\t\tthis.iframe.style.height = \"100%\";\r\n\t\t\t}\r\n\t\t\tthis._layoutMode = true;\r\n\t\t},\r\n\r\n\t\t_onIEMouseDown: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIE only to prevent 2 clicks to focus\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar outsideClientArea;\r\n\t\t\t// IE 8's componentFromPoint is broken, which is a shame since it\r\n\t\t\t// was smaller code, but oh well.  We have to do this brute force\r\n\t\t\t// to detect if the click was scroller or not.\r\n\t\t\tvar b = this.document.body;\r\n\t\t\tvar clientWidth = b.clientWidth;\r\n\t\t\tvar clientHeight = b.clientHeight;\r\n\t\t\tvar clientLeft = b.clientLeft;\r\n\t\t\tvar offsetWidth = b.offsetWidth;\r\n\t\t\tvar offsetHeight = b.offsetHeight;\r\n\t\t\tvar offsetLeft = b.offsetLeft;\r\n\r\n\t\t\t//Check for vertical scroller click.\r\n\t\t\tif(/^rtl$/i.test(b.dir || \"\")){\r\n\t\t\t\tif(clientWidth < offsetWidth && e.x > clientWidth && e.x < offsetWidth){\r\n\t\t\t\t\t// Check the click was between width and offset width, if so, scroller\r\n\t\t\t\t\toutsideClientArea = true;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// RTL mode, we have to go by the left offsets.\r\n\t\t\t\tif(e.x < clientLeft && e.x > offsetLeft){\r\n\t\t\t\t\t// Check the click was between width and offset width, if so, scroller\r\n\t\t\t\t\toutsideClientArea = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!outsideClientArea){\r\n\t\t\t\t// Okay, might be horiz scroller, check that.\r\n\t\t\t\tif(clientHeight < offsetHeight && e.y > clientHeight && e.y < offsetHeight){\r\n\t\t\t\t\t// Horizontal scroller.\r\n\t\t\t\t\toutsideClientArea = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!outsideClientArea){\r\n\t\t\t\tdelete this._cursorToStart; // Remove the force to cursor to start position.\r\n\t\t\t\tdelete this._savedSelection; // new mouse position overrides old selection\r\n\t\t\t\tif(e.target.tagName == \"BODY\"){\r\n\t\t\t\t\tthis.defer(\"placeCursorAtEnd\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeActivate: function(){\r\n\t\t\tthis._restoreSelection();\r\n\t\t},\r\n\t\tonBeforeDeactivate: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled on IE right before focus is lost.   Saves the selected range.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.customUndo){\r\n\t\t\t\tthis.endEditing(true);\r\n\t\t\t}\r\n\t\t\t//in IE, the selection will be lost when other elements get focus,\r\n\t\t\t//let's save focus before the editor is deactivated\r\n\t\t\tif(e.target.tagName != \"BODY\"){\r\n\t\t\t\tthis._saveSelection();\r\n\t\t\t}\r\n\t\t\t//console.log('onBeforeDeactivate',this);\r\n\t\t},\r\n\r\n\t\t/* beginning of custom undo/redo support */\r\n\r\n\t\t// customUndo: Boolean\r\n\t\t//\t\tWhether we shall use custom undo/redo support instead of the native\r\n\t\t//\t\tbrowser support. By default, we now use custom undo.  It works better\r\n\t\t//\t\tthan native browser support and provides a consistent behavior across\r\n\t\t//\t\tbrowsers with a minimal performance hit.  We already had the hit on\r\n\t\t//\t\tthe slowest browser, IE, anyway.\r\n\t\tcustomUndo: true,\r\n\r\n\t\t// editActionInterval: Integer\r\n\t\t//\t\tWhen using customUndo, not every keystroke will be saved as a step.\r\n\t\t//\t\tInstead typing (including delete) will be grouped together: after\r\n\t\t//\t\ta user stops typing for editActionInterval seconds, a step will be\r\n\t\t//\t\tsaved; if a user resume typing within editActionInterval seconds,\r\n\t\t//\t\tthe timeout will be restarted. By default, editActionInterval is 3\r\n\t\t//\t\tseconds.\r\n\t\teditActionInterval: 3,\r\n\r\n\t\tbeginEditing: function(cmd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled to note that the user has started typing alphanumeric characters, if it's not already noted.\r\n\t\t\t//\t\tDeals with saving undo; see editActionInterval parameter.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!this._inEditing){\r\n\t\t\t\tthis._inEditing = true;\r\n\t\t\t\tthis._beginEditing(cmd);\r\n\t\t\t}\r\n\t\t\tif(this.editActionInterval > 0){\r\n\t\t\t\tif(this._editTimer){\r\n\t\t\t\t\tthis._editTimer.remove();\r\n\t\t\t\t}\r\n\t\t\t\tthis._editTimer = this.defer(\"endEditing\", this._editInterval);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// TODO: declaring these in the prototype is meaningless, just create in the constructor/postCreate\r\n\t\t_steps: [],\r\n\t\t_undoedSteps: [],\r\n\r\n\t\texecCommand: function(cmd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMain handler for executing any commands to the editor, like paste, bold, etc.\r\n\t\t\t//\t\tCalled by plugins, but not meant to be called by end users.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(this.customUndo && (cmd == 'undo' || cmd == 'redo')){\r\n\t\t\t\treturn this[cmd]();\r\n\t\t\t}else{\r\n\t\t\t\tif(this.customUndo){\r\n\t\t\t\t\tthis.endEditing();\r\n\t\t\t\t\tthis._beginEditing();\r\n\t\t\t\t}\r\n\t\t\t\tvar r = this.inherited(arguments);\r\n\t\t\t\tif(this.customUndo){\r\n\t\t\t\t\tthis._endEditing();\r\n\t\t\t\t}\r\n\t\t\t\treturn r;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_pasteImpl: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride of paste command control to make execCommand cleaner\r\n\t\t\t// tags:\r\n\t\t\t//\t\tProtected\r\n\t\t\treturn this._clipboardCommand(\"paste\");\r\n\t\t},\r\n\r\n\t\t_cutImpl: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride of cut command control to make execCommand cleaner\r\n\t\t\t// tags:\r\n\t\t\t//\t\tProtected\r\n\t\t\treturn this._clipboardCommand(\"cut\");\r\n\t\t},\r\n\r\n\t\t_copyImpl: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride of copy command control to make execCommand cleaner\r\n\t\t\t// tags:\r\n\t\t\t//\t\tProtected\r\n\t\t\treturn this._clipboardCommand(\"copy\");\r\n\t\t},\r\n\r\n\t\t_clipboardCommand: function(cmd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to handle processing clipboard commands (or at least try to).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tPrivate\r\n\t\t\tvar r;\r\n\t\t\ttry{\r\n\t\t\t\t// Try to exec the superclass exec-command and see if it works.\r\n\t\t\t\tr = this.document.execCommand(cmd, false, null);\r\n\t\t\t\tif(has(\"webkit\") && !r){ //see #4598: webkit does not guarantee clipboard support from js\r\n\t\t\t\t\tthrow { code: 1011 }; // throw an object like Mozilla's error\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\t//TODO: when else might we get an exception?  Do we need the Mozilla test below?\r\n\t\t\t\tif(e.code == 1011 /* Mozilla: service denied */ ||\r\n\t\t\t\t\t(e.code == 9 && has(\"opera\") /* Opera not supported */)){\r\n\t\t\t\t\t// Warn user of platform limitation.  Cannot programmatically access clipboard. See ticket #4136\r\n\t\t\t\t\tvar sub = string.substitute,\r\n\t\t\t\t\t\taccel = {cut: 'X', copy: 'C', paste: 'V'};\r\n\t\t\t\t\talert(sub(this.commands.systemShortcut,\r\n\t\t\t\t\t\t[this.commands[cmd], sub(this.commands[has(\"mac\") ? 'appleKey' : 'ctrlKey'], [accel[cmd]])]));\r\n\t\t\t\t}\r\n\t\t\t\tr = false;\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t},\r\n\r\n\t\tqueryCommandEnabled: function(cmd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if specified editor command is enabled.\r\n\t\t\t//\t\tUsed by the plugins to know when to highlight/not highlight buttons.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(this.customUndo && (cmd == 'undo' || cmd == 'redo')){\r\n\t\t\t\treturn cmd == 'undo' ? (this._steps.length > 1) : (this._undoedSteps.length > 0);\r\n\t\t\t}else{\r\n\t\t\t\treturn this.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_moveToBookmark: function(b){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSelects the text specified in bookmark b\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar bookmark = b.mark;\r\n\t\t\tvar mark = b.mark;\r\n\t\t\tvar col = b.isCollapsed;\r\n\t\t\tvar r, sNode, eNode, sel;\r\n\t\t\tif(mark){\r\n\t\t\t\tif(has(\"ie\") < 9 || (has(\"ie\") === 9 && has(\"quirks\"))){\r\n\t\t\t\t\tif(lang.isArray(mark)){\r\n\t\t\t\t\t\t// IE CONTROL, have to use the native bookmark.\r\n\t\t\t\t\t\tbookmark = [];\r\n\t\t\t\t\t\tarray.forEach(mark, function(n){\r\n\t\t\t\t\t\t\tbookmark.push(rangeapi.getNode(n, this.editNode));\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tthis.selection.moveToBookmark({mark: bookmark, isCollapsed: col});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(mark.startContainer && mark.endContainer){\r\n\t\t\t\t\t\t\t// Use the pseudo WC3 range API.  This works better for positions\r\n\t\t\t\t\t\t\t// than the IE native bookmark code.\r\n\t\t\t\t\t\t\tsel = rangeapi.getSelection(this.window);\r\n\t\t\t\t\t\t\tif(sel && sel.removeAllRanges){\r\n\t\t\t\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\t\t\t\t\tr = rangeapi.create(this.window);\r\n\t\t\t\t\t\t\t\tsNode = rangeapi.getNode(mark.startContainer, this.editNode);\r\n\t\t\t\t\t\t\t\teNode = rangeapi.getNode(mark.endContainer, this.editNode);\r\n\t\t\t\t\t\t\t\tif(sNode && eNode){\r\n\t\t\t\t\t\t\t\t\t// Okay, we believe we found the position, so add it into the selection\r\n\t\t\t\t\t\t\t\t\t// There are cases where it may not be found, particularly in undo/redo, when\r\n\t\t\t\t\t\t\t\t\t// IE changes the underlying DOM on us (wraps text in a <p> tag or similar.\r\n\t\t\t\t\t\t\t\t\t// So, in those cases, don't bother restoring selection.\r\n\t\t\t\t\t\t\t\t\tr.setStart(sNode, mark.startOffset);\r\n\t\t\t\t\t\t\t\t\tr.setEnd(eNode, mark.endOffset);\r\n\t\t\t\t\t\t\t\t\tsel.addRange(r);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{//w3c range\r\n\t\t\t\t\tsel = rangeapi.getSelection(this.window);\r\n\t\t\t\t\tif(sel && sel.removeAllRanges){\r\n\t\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\t\t\tr = rangeapi.create(this.window);\r\n\t\t\t\t\t\tsNode = rangeapi.getNode(mark.startContainer, this.editNode);\r\n\t\t\t\t\t\teNode = rangeapi.getNode(mark.endContainer, this.editNode);\r\n\t\t\t\t\t\tif(sNode && eNode){\r\n\t\t\t\t\t\t\t// Okay, we believe we found the position, so add it into the selection\r\n\t\t\t\t\t\t\t// There are cases where it may not be found, particularly in undo/redo, when\r\n\t\t\t\t\t\t\t// formatting as been done and so on, so don't restore selection then.\r\n\t\t\t\t\t\t\tr.setStart(sNode, mark.startOffset);\r\n\t\t\t\t\t\t\tr.setEnd(eNode, mark.endOffset);\r\n\t\t\t\t\t\t\tsel.addRange(r);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t_changeToStep: function(from, to){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReverts editor to \"to\" setting, from the undo stack.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.setValue(to.text);\r\n\t\t\tvar b = to.bookmark;\r\n\t\t\tif(!b){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._moveToBookmark(b);\r\n\t\t},\r\n\t\tundo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for editor undo (ex: ctrl-z) operation\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ret = false;\r\n\t\t\tif(!this._undoRedoActive){\r\n\t\t\t\tthis._undoRedoActive = true;\r\n\t\t\t\tthis.endEditing(true);\r\n\t\t\t\tvar s = this._steps.pop();\r\n\t\t\t\tif(s && this._steps.length > 0){\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t\tthis._changeToStep(s, this._steps[this._steps.length - 1]);\r\n\t\t\t\t\tthis._undoedSteps.push(s);\r\n\t\t\t\t\tthis.onDisplayChanged();\r\n\t\t\t\t\tdelete this._undoRedoActive;\r\n\t\t\t\t\tret = true;\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._undoRedoActive;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\tredo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for editor redo (ex: ctrl-y) operation\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ret = false;\r\n\t\t\tif(!this._undoRedoActive){\r\n\t\t\t\tthis._undoRedoActive = true;\r\n\t\t\t\tthis.endEditing(true);\r\n\t\t\t\tvar s = this._undoedSteps.pop();\r\n\t\t\t\tif(s && this._steps.length > 0){\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t\tthis._changeToStep(this._steps[this._steps.length - 1], s);\r\n\t\t\t\t\tthis._steps.push(s);\r\n\t\t\t\t\tthis.onDisplayChanged();\r\n\t\t\t\t\tret = true;\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._undoRedoActive;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\tendEditing: function(ignore_caret){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled to note that the user has stopped typing alphanumeric characters, if it's not already noted.\r\n\t\t\t//\t\tDeals with saving undo; see editActionInterval parameter.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._editTimer){\r\n\t\t\t\tthis._editTimer = this._editTimer.remove();\r\n\t\t\t}\r\n\t\t\tif(this._inEditing){\r\n\t\t\t\tthis._endEditing(ignore_caret);\r\n\t\t\t\tthis._inEditing = false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getBookmark: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the currently selected text\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar b = this.selection.getBookmark();\r\n\t\t\tvar tmp = [];\r\n\t\t\tif(b && b.mark){\r\n\t\t\t\tvar mark = b.mark;\r\n\t\t\t\tif(has(\"ie\") < 9 || (has(\"ie\") === 9 && has(\"quirks\"))){\r\n\t\t\t\t\t// Try to use the pseudo range API on IE for better accuracy.\r\n\t\t\t\t\tvar sel = rangeapi.getSelection(this.window);\r\n\t\t\t\t\tif(!lang.isArray(mark)){\r\n\t\t\t\t\t\tif(sel){\r\n\t\t\t\t\t\t\tvar range;\r\n\t\t\t\t\t\t\tif(sel.rangeCount){\r\n\t\t\t\t\t\t\t\trange = sel.getRangeAt(0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(range){\r\n\t\t\t\t\t\t\t\tb.mark = range.cloneRange();\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tb.mark = this.selection.getBookmark();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// Control ranges (img, table, etc), handle differently.\r\n\t\t\t\t\t\tarray.forEach(b.mark, function(n){\r\n\t\t\t\t\t\t\ttmp.push(rangeapi.getIndex(n, this.editNode).o);\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tb.mark = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttry{\r\n\t\t\t\t\tif(b.mark && b.mark.startContainer){\r\n\t\t\t\t\t\ttmp = rangeapi.getIndex(b.mark.startContainer, this.editNode).o;\r\n\t\t\t\t\t\tb.mark = {startContainer: tmp,\r\n\t\t\t\t\t\t\tstartOffset: b.mark.startOffset,\r\n\t\t\t\t\t\t\tendContainer: b.mark.endContainer === b.mark.startContainer ? tmp : rangeapi.getIndex(b.mark.endContainer, this.editNode).o,\r\n\t\t\t\t\t\t\tendOffset: b.mark.endOffset};\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tb.mark = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn b;\r\n\t\t},\r\n\t\t_beginEditing: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the user starts typing alphanumeric characters.\r\n\t\t\t//\t\tDeals with saving undo; see editActionInterval parameter.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._steps.length === 0){\r\n\t\t\t\t// You want to use the editor content without post filtering\r\n\t\t\t\t// to make sure selection restores right for the 'initial' state.\r\n\t\t\t\t// and undo is called.  So not using this.value, as it was 'processed'\r\n\t\t\t\t// and the line-up for selections may have been altered.\r\n\t\t\t\tthis._steps.push({'text': html.getChildrenHtml(this.editNode), 'bookmark': this._getBookmark()});\r\n\t\t\t}\r\n\t\t},\r\n\t\t_endEditing: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the user stops typing alphanumeric characters.\r\n\t\t\t//\t\tDeals with saving undo; see editActionInterval parameter.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// Avoid filtering to make sure selections restore.\r\n\t\t\tvar v = html.getChildrenHtml(this.editNode);\r\n\r\n\t\t\tthis._undoedSteps = [];//clear undoed steps\r\n\t\t\tthis._steps.push({text: v, bookmark: this._getBookmark()});\r\n\t\t},\r\n\t\tonKeyDown: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for onkeydown event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t//We need to save selection if the user TAB away from this editor\r\n\t\t\t//no need to call _saveSelection for IE, as that will be taken care of in onBeforeDeactivate\r\n\t\t\tif(!has(\"ie\") && !this.iframe && e.keyCode == keys.TAB && !this.tabIndent){\r\n\t\t\t\tthis._saveSelection();\r\n\t\t\t}\r\n\t\t\tif(!this.customUndo){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar k = e.keyCode;\r\n\t\t\tif(e.ctrlKey && !e.shiftKey && !e.altKey){//undo and redo only if the special right Alt + z/y are not pressed #5892\r\n\t\t\t\tif(k == 90 || k == 122){ //z, but also F11 key\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthis.undo();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}else if(k == 89 || k == 121){ //y\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthis.redo();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tswitch(k){\r\n\t\t\t\tcase keys.ENTER:\r\n\t\t\t\tcase keys.BACKSPACE:\r\n\t\t\t\tcase keys.DELETE:\r\n\t\t\t\t\tthis.beginEditing();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 88: //x\r\n\t\t\t\tcase 86: //v\r\n\t\t\t\t\tif(e.ctrlKey && !e.altKey && !e.metaKey){\r\n\t\t\t\t\t\tthis.endEditing();//end current typing step if any\r\n\t\t\t\t\t\tif(e.keyCode == 88){\r\n\t\t\t\t\t\t\tthis.beginEditing('cut');\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.beginEditing('paste');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//use timeout to trigger after the paste is complete\r\n\t\t\t\t\t\tthis.defer(\"endEditing\", 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t//pass through\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!e.ctrlKey && !e.altKey && !e.metaKey && (e.keyCode < keys.F1 || e.keyCode > keys.F15)){\r\n\t\t\t\t\t\tthis.beginEditing();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t//pass through\r\n\t\t\t\tcase keys.ALT:\r\n\t\t\t\t\tthis.endEditing();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\tcase keys.LEFT_ARROW:\r\n\t\t\t\tcase keys.RIGHT_ARROW:\r\n\t\t\t\tcase keys.HOME:\r\n\t\t\t\tcase keys.END:\r\n\t\t\t\tcase keys.PAGE_UP:\r\n\t\t\t\tcase keys.PAGE_DOWN:\r\n\t\t\t\t\tthis.endEditing(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//maybe ctrl+backspace/delete, so don't endEditing when ctrl is pressed\r\n\t\t\t\tcase keys.CTRL:\r\n\t\t\t\tcase keys.SHIFT:\r\n\t\t\t\tcase keys.TAB:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\t_onBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from focus manager when focus has moved away from this editor\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t//this._saveSelection();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.endEditing(true);\r\n\t\t},\r\n\t\t_saveSelection: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSave the currently selected text in _savedSelection attribute\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\ttry{\r\n\t\t\t\tthis._savedSelection = this._getBookmark();\r\n\t\t\t}catch(e){ /* Squelch any errors that occur if selection save occurs due to being hidden simultaneously. */\r\n\t\t\t}\r\n\t\t},\r\n\t\t_restoreSelection: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRe-select the text specified in _savedSelection attribute;\r\n\t\t\t//\t\tsee _saveSelection().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._savedSelection){\r\n\t\t\t\t// Clear off cursor to start, we're deliberately going to a selection.\r\n\t\t\t\tdelete this._cursorToStart;\r\n\t\t\t\t// only restore the selection if the current range is collapsed\r\n\t\t\t\t// if not collapsed, then it means the editor does not lose\r\n\t\t\t\t// selection and there is no need to restore it\r\n\t\t\t\tif(this.selection.isCollapsed()){\r\n\t\t\t\t\tthis._moveToBookmark(this._savedSelection);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._savedSelection;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonClick: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when editor is clicked\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.endEditing(true);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\treplaceValue: function(/*String*/ html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tover-ride of replaceValue to support custom undo and stack maintenance.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(!this.customUndo){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}else{\r\n\t\t\t\tif(this.isClosed){\r\n\t\t\t\t\tthis.setValue(html);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.beginEditing();\r\n\t\t\t\t\tif(!html){\r\n\t\t\t\t\t\thtml = \"&#160;\";\t// &nbsp;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setValue(html);\r\n\t\t\t\t\tthis.endEditing();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\tthis.setValueDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\tif((!this.disabled && value) || (!this._buttonEnabledPlugins && value)){\r\n\t\t\t\t\t// Disable editor: disable all enabled buttons and remember that list\r\n\t\t\t\t\tarray.forEach(this._plugins, function(p){\r\n\t\t\t\t\t\tp.set(\"disabled\", true);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else if(this.disabled && !value){\r\n\t\t\t\t\t// Restore plugins to being active.\r\n\t\t\t\t\tarray.forEach(this._plugins, function(p){\r\n\t\t\t\t\t\tp.set(\"disabled\", false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setStateClass: function(){\r\n\t\t\ttry{\r\n\t\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t\t// Let theme set the editor's text color based on editor enabled/disabled state.\r\n\t\t\t\t// We need to jump through hoops because the main document (where the theme CSS is)\r\n\t\t\t\t// is separate from the iframe's document.\r\n\t\t\t\tif(this.document && this.document.body){\r\n\t\t\t\t\tdomStyle.set(this.document.body, \"color\", domStyle.get(this.iframe, \"color\"));\r\n\t\t\t\t}\r\n\t\t\t}catch(e){ /* Squelch any errors caused by focus change if hidden during a state change */\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Register the \"default plugins\", ie, the built-in editor commands\r\n\tfunction simplePluginFactory(args){\r\n\t\treturn new _Plugin({ command: args.name });\r\n\t}\r\n\r\n\tfunction togglePluginFactory(args){\r\n\t\treturn new _Plugin({ buttonClass: ToggleButton, command: args.name });\r\n\t}\r\n\r\n\tlang.mixin(_Plugin.registry, {\r\n\t\t\"undo\": simplePluginFactory,\r\n\t\t\"redo\": simplePluginFactory,\r\n\t\t\"cut\": simplePluginFactory,\r\n\t\t\"copy\": simplePluginFactory,\r\n\t\t\"paste\": simplePluginFactory,\r\n\t\t\"insertOrderedList\": simplePluginFactory,\r\n\t\t\"insertUnorderedList\": simplePluginFactory,\r\n\t\t\"indent\": simplePluginFactory,\r\n\t\t\"outdent\": simplePluginFactory,\r\n\t\t\"justifyCenter\": simplePluginFactory,\r\n\t\t\"justifyFull\": simplePluginFactory,\r\n\t\t\"justifyLeft\": simplePluginFactory,\r\n\t\t\"justifyRight\": simplePluginFactory,\r\n\t\t\"delete\": simplePluginFactory,\r\n\t\t\"selectAll\": simplePluginFactory,\r\n\t\t\"removeFormat\": simplePluginFactory,\r\n\t\t\"unlink\": simplePluginFactory,\r\n\t\t\"insertHorizontalRule\": simplePluginFactory,\r\n\r\n\t\t\"bold\": togglePluginFactory,\r\n\t\t\"italic\": togglePluginFactory,\r\n\t\t\"underline\": togglePluginFactory,\r\n\t\t\"strikethrough\": togglePluginFactory,\r\n\t\t\"subscript\": togglePluginFactory,\r\n\t\t\"superscript\": togglePluginFactory,\r\n\r\n\t\t\"|\": function(){\r\n\t\t\treturn new _Plugin({\r\n\t\t\t\tsetEditor: function(editor){\r\n\t\t\t\t\tthis.editor = editor;\r\n\t\t\t\t\tthis.button = new ToolbarSeparator({ownerDocument: editor.ownerDocument});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\treturn Editor;\r\n});\r\n\ndefine('dijit/form/_TextBoxMixin',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.byId\r\n\t\"dojo/has\",\r\n\t\"dojo/keys\", // keys.ALT keys.CAPS_LOCK keys.CTRL keys.META keys.SHIFT\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"dojo/on\", // on\r\n\t\"../main\"    // for exporting dijit._setSelectionRange, dijit.selectInputText\r\n], function(array, declare, dom, has, keys, lang, on, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_TextBoxMixin\r\n\r\n\tvar _TextBoxMixin = declare(\"dijit.form._TextBoxMixin\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), null, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin for textbox form input widgets\r\n\r\n\t\t// trim: Boolean\r\n\t\t//\t\tRemoves leading and trailing whitespace if true.  Default is false.\r\n\t\ttrim: false,\r\n\r\n\t\t// uppercase: Boolean\r\n\t\t//\t\tConverts all characters to uppercase if true.  Default is false.\r\n\t\tuppercase: false,\r\n\r\n\t\t// lowercase: Boolean\r\n\t\t//\t\tConverts all characters to lowercase if true.  Default is false.\r\n\t\tlowercase: false,\r\n\r\n\t\t// propercase: Boolean\r\n\t\t//\t\tConverts the first character of each word to uppercase if true.\r\n\t\tpropercase: false,\r\n\r\n\t\t// maxLength: String\r\n\t\t//\t\tHTML INPUT tag maxLength declaration.\r\n\t\tmaxLength: \"\",\r\n\r\n\t\t// selectOnClick: [const] Boolean\r\n\t\t//\t\tIf true, all text will be selected when focused with mouse\r\n\t\tselectOnClick: false,\r\n\r\n\t\t// placeHolder: String\r\n\t\t//\t\tDefines a hint to help users fill out the input field (as defined in HTML 5).\r\n\t\t//\t\tThis should only contain plain text (no html markup).\r\n\t\tplaceHolder: \"\",\r\n\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so get('value') works as we like.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFor `dijit/form/TextBox` this basically returns the value of the `<input>`.\r\n\t\t\t//\r\n\t\t\t//\t\tFor `dijit/form/MappedTextBox` subclasses, which have both\r\n\t\t\t//\t\ta \"displayed value\" and a separate \"submit value\",\r\n\t\t\t//\t\tThis treats the \"displayed value\" as the master value, computing the\r\n\t\t\t//\t\tsubmit value from it via this.parse().\r\n\t\t\treturn this.parse(this.get('displayedValue'), this.constraints);\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(value, /*Boolean?*/ priorityChange, /*String?*/ formattedValue){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', ...) works.\r\n\t\t\t//\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets the value of the widget to \"value\" which can be of\r\n\t\t\t//\t\tany type as determined by the widget.\r\n\t\t\t//\r\n\t\t\t// value:\r\n\t\t\t//\t\tThe visual element value is also set to a corresponding,\r\n\t\t\t//\t\tbut not necessarily the same, value.\r\n\t\t\t//\r\n\t\t\t// formattedValue:\r\n\t\t\t//\t\tIf specified, used to set the visual element value,\r\n\t\t\t//\t\totherwise a computed visual value is used.\r\n\t\t\t//\r\n\t\t\t// priorityChange:\r\n\t\t\t//\t\tIf true, an onChange event is fired immediately instead of\r\n\t\t\t//\t\twaiting for the next blur event.\r\n\r\n\t\t\tvar filteredValue;\r\n\t\t\tif(value !== undefined){\r\n\t\t\t\t// TODO: this is calling filter() on both the display value and the actual value.\r\n\t\t\t\t// I added a comment to the filter() definition about this, but it should be changed.\r\n\t\t\t\tfilteredValue = this.filter(value);\r\n\t\t\t\tif(typeof formattedValue != \"string\"){\r\n\t\t\t\t\tif(filteredValue !== null && ((typeof filteredValue != \"number\") || !isNaN(filteredValue))){\r\n\t\t\t\t\t\tformattedValue = this.filter(this.format(filteredValue, this.constraints));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tformattedValue = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Ensure the filtered value does not change after being formatted. See track #17955.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// This check is only applied when the formatted value is not specified by the caller in order to allow the \r\n\t\t\t\t\t// behavior to be overriden. This is needed whenever value synonyms cannot be determined using parse/compare. For\r\n\t\t\t\t\t// example, dijit/form/FilteringSelect determines the formatted value asynchronously and applies it using a \r\n\t\t\t\t\t// callback to this method.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// TODO: Should developers be warned that they broke the round trip on format?\r\n\t\t\t\t\tif (this.compare(filteredValue, this.filter(this.parse(formattedValue, this.constraints))) != 0){\r\n\t\t\t\t\t\tformattedValue = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(formattedValue != null /* and !undefined */ && ((typeof formattedValue) != \"number\" || !isNaN(formattedValue)) && this.textbox.value != formattedValue){\r\n\t\t\t\tthis.textbox.value = formattedValue;\r\n\t\t\t\tthis._set(\"displayedValue\", this.get(\"displayedValue\"));\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments, [filteredValue, priorityChange]);\r\n\t\t},\r\n\r\n\t\t// displayedValue: String\r\n\t\t//\t\tFor subclasses like ComboBox where the displayed value\r\n\t\t//\t\t(ex: Kentucky) and the serialized value (ex: KY) are different,\r\n\t\t//\t\tthis represents the displayed value.\r\n\t\t//\r\n\t\t//\t\tSetting 'displayedValue' through set('displayedValue', ...)\r\n\t\t//\t\tupdates 'value', and vice-versa.  Otherwise 'value' is updated\r\n\t\t//\t\tfrom 'displayedValue' periodically, like onBlur etc.\r\n\t\t//\r\n\t\t//\t\tTODO: move declaration to MappedTextBox?\r\n\t\t//\t\tProblem is that ComboBox references displayedValue,\r\n\t\t//\t\tfor benefit of FilteringSelect.\r\n\t\tdisplayedValue: \"\",\r\n\r\n\t\t_getDisplayedValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so get('displayedValue') works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tReturns the displayed value (what the user sees on the screen),\r\n\t\t\t//\t\tafter filtering (ie, trimming spaces etc.).\r\n\t\t\t//\r\n\t\t\t//\t\tFor some subclasses of TextBox (like ComboBox), the displayed value\r\n\t\t\t//\t\tis different from the serialized value that's actually\r\n\t\t\t//\t\tsent to the server (see `dijit/form/ValidationTextBox.serialize()`)\r\n\r\n\t\t\t// TODO: maybe we should update this.displayedValue on every keystroke so that we don't need\r\n\t\t\t// this method\r\n\t\t\t// TODO: this isn't really the displayed value when the user is typing\r\n\t\t\treturn this.filter(this.textbox.value);\r\n\t\t},\r\n\r\n\t\t_setDisplayedValueAttr: function(/*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('displayedValue', ...) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets the value of the visual element to the string \"value\".\r\n\t\t\t//\t\tThe widget value is also set to a corresponding,\r\n\t\t\t//\t\tbut not necessarily the same, value.\r\n\r\n\t\t\tif(value == null /* or undefined */){\r\n\t\t\t\tvalue = ''\r\n\t\t\t}\r\n\t\t\telse if(typeof value != \"string\"){\r\n\t\t\t\tvalue = String(value)\r\n\t\t\t}\r\n\r\n\t\t\tthis.textbox.value = value;\r\n\r\n\t\t\t// sets the serialized value to something corresponding to specified displayedValue\r\n\t\t\t// (if possible), and also updates the textbox.value, for example converting \"123\"\r\n\t\t\t// to \"123.00\"\r\n\t\t\tthis._setValueAttr(this.get('value'), undefined);\r\n\r\n\t\t\tthis._set(\"displayedValue\", this.get('displayedValue'));\r\n\t\t},\r\n\r\n\t\tformat: function(value /*=====, constraints =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReplaceable function to convert a value to a properly formatted string.\r\n\t\t\t// value: String\r\n\t\t\t// constraints: Object\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\treturn value == null /* or undefined */ ? \"\" : (value.toString ? value.toString() : value);\r\n\t\t},\r\n\r\n\t\tparse: function(value /*=====, constraints =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReplaceable function to convert a formatted string to a value\r\n\t\t\t// value: String\r\n\t\t\t// constraints: Object\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\r\n\t\t\treturn value;\t// String\r\n\t\t},\r\n\r\n\t\t_refreshState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAfter the user types some characters, etc., this method is\r\n\t\t\t//\t\tcalled to check the field for validity etc.  The base method\r\n\t\t\t//\t\tin `dijit/form/TextBox` does nothing, but subclasses override.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\t onInput: function(/*===== event =====*/){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tConnect to this function to receive notifications of various user data-input events.\r\n\t\t\t //\t\tReturn false to cancel the event and prevent it from being processed.\r\n\t\t\t // event:\r\n\t\t\t //\t\tkeydown | keypress | cut | paste | input\r\n\t\t\t // tags:\r\n\t\t\t //\t\tcallback\r\n\t\t },\r\n\r\n\t\t__skipInputEvent: false,\r\n\t\t_onInput: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled AFTER the input event has happened\r\n\r\n\t\t\tthis._processInput(evt);\r\n\r\n\t\t\tif(this.intermediateChanges){\r\n\t\t\t\t// allow the key to post to the widget input box\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis._handleOnChange(this.get('value'), false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_processInput: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDefault action handler for user input events\r\n\r\n\t\t\tthis._refreshState();\r\n\r\n\t\t\t// In case someone is watch()'ing for changes to displayedValue\r\n\t\t\tthis._set(\"displayedValue\", this.get(\"displayedValue\"));\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// setting the value here is needed since value=\"\" in the template causes \"undefined\"\r\n\t\t\t// and setting in the DOM (instead of the JS object) helps with form reset actions\r\n\t\t\tthis.textbox.setAttribute(\"value\", this.textbox.value); // DOM and JS values should be the same\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// normalize input events to reduce spurious event processing\r\n\t\t\t//\tonkeydown: do not forward modifier keys\r\n\t\t\t//\t\t       set charOrCode to numeric keycode\r\n\t\t\t//\tonkeypress: do not forward numeric charOrCode keys (already sent through onkeydown)\r\n\t\t\t//\tonpaste & oncut: set charOrCode to 229 (IME)\r\n\t\t\t//\toninput: if primary event not already processed, set charOrCode to 229 (IME), else do not forward\r\n\t\t\tfunction handleEvent(e){\r\n\t\t\t\tvar charOrCode;\r\n\t\t\t\tif(e.type == \"keydown\"){\r\n\t\t\t\t\tcharOrCode = e.keyCode;\r\n\t\t\t\t\tswitch(charOrCode){ // ignore state keys\r\n\t\t\t\t\t\tcase keys.SHIFT:\r\n\t\t\t\t\t\tcase keys.ALT:\r\n\t\t\t\t\t\tcase keys.CTRL:\r\n\t\t\t\t\t\tcase keys.META:\r\n\t\t\t\t\t\tcase keys.CAPS_LOCK:\r\n\t\t\t\t\t\tcase keys.NUM_LOCK:\r\n\t\t\t\t\t\tcase keys.SCROLL_LOCK:\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!e.ctrlKey && !e.metaKey && !e.altKey){ // no modifiers\r\n\t\t\t\t\t\tswitch(charOrCode){ // ignore location keys\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_0:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_1:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_2:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_3:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_4:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_5:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_6:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_7:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_8:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_9:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_MULTIPLY:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_PLUS:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_ENTER:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_MINUS:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_PERIOD:\r\n\t\t\t\t\t\t\tcase keys.NUMPAD_DIVIDE:\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif((charOrCode >= 65 && charOrCode <= 90) || (charOrCode >= 48 && charOrCode <= 57) || charOrCode == keys.SPACE){\r\n\t\t\t\t\t\t\treturn; // keypress will handle simple non-modified printable keys\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar named = false;\r\n\t\t\t\t\t\tfor(var i in keys){\r\n\t\t\t\t\t\t\tif(keys[i] === e.keyCode){\r\n\t\t\t\t\t\t\t\tnamed = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!named){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} // only allow named ones through\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcharOrCode = e.charCode >= 32 ? String.fromCharCode(e.charCode) : e.charCode;\r\n\t\t\t\tif(!charOrCode){\r\n\t\t\t\t\tcharOrCode = (e.keyCode >= 65 && e.keyCode <= 90) || (e.keyCode >= 48 && e.keyCode <= 57) || e.keyCode == keys.SPACE ? String.fromCharCode(e.keyCode) : e.keyCode;\r\n\t\t\t\t}\r\n\t\t\t\tif(!charOrCode){\r\n\t\t\t\t\tcharOrCode = 229; // IME\r\n\t\t\t\t}\r\n\t\t\t\tif(e.type == \"keypress\"){\r\n\t\t\t\t\tif(typeof charOrCode != \"string\"){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif((charOrCode >= 'a' && charOrCode <= 'z') || (charOrCode >= 'A' && charOrCode <= 'Z') || (charOrCode >= '0' && charOrCode <= '9') || (charOrCode === ' ')){\r\n\t\t\t\t\t\tif(e.ctrlKey || e.metaKey || e.altKey){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} // can only be stopped reliably in keydown\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(e.type == \"input\"){\r\n\t\t\t\t\tif(this.__skipInputEvent){ // duplicate event\r\n\t\t\t\t\t\tthis.__skipInputEvent = false;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.__skipInputEvent = true;\r\n\t\t\t\t}\r\n\t\t\t\t// create fake event to set charOrCode and to know if preventDefault() was called\r\n\t\t\t\tvar faux = { faux: true }, attr;\r\n\t\t\t\tfor(attr in e){\r\n\t\t\t\t\tif(!/^(layer[XY]|returnValue|keyLocation)$/.test(attr)){ // prevent WebKit warnings\r\n\t\t\t\t\t\tvar v = e[attr];\r\n\t\t\t\t\t\tif(typeof v != \"function\" && typeof v != \"undefined\"){\r\n\t\t\t\t\t\t\tfaux[attr] = v;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlang.mixin(faux, {\r\n\t\t\t\t\tcharOrCode: charOrCode,\r\n\t\t\t\t\t_wasConsumed: false,\r\n\t\t\t\t\tpreventDefault: function(){\r\n\t\t\t\t\t\tfaux._wasConsumed = true;\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstopPropagation: function(){\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// give web page author a chance to consume the event\r\n\t\t\t\t//console.log(faux.type + ', charOrCode = (' + (typeof charOrCode) + ') ' + charOrCode + ', ctrl ' + !!faux.ctrlKey + ', alt ' + !!faux.altKey + ', meta ' + !!faux.metaKey + ', shift ' + !!faux.shiftKey);\r\n\t\t\t\tif(this.onInput(faux) === false){ // return false means stop\r\n\t\t\t\t\tfaux.preventDefault();\r\n\t\t\t\t\tfaux.stopPropagation();\r\n\t\t\t\t}\r\n\t\t\t\tif(faux._wasConsumed){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} // if preventDefault was called\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis._onInput(faux);\r\n\t\t\t\t}); // widget notification after key has posted\r\n\t\t\t}\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.textbox, \"keydown, keypress, paste, cut, input, compositionend\", lang.hitch(this, handleEvent)),\r\n\r\n\t\t\t\t// Allow keypress to bubble to this.domNode, so that TextBox.on(\"keypress\", ...) works,\r\n\t\t\t\t// but prevent it from further propagating, so that typing into a TextBox inside a Toolbar doesn't\r\n\t\t\t\t// trigger the Toolbar's letter key navigation.\r\n\t\t\t\ton(this.domNode, \"keypress\", function(e){ e.stopPropagation(); })\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_blankValue: '', // if the textbox is blank, what value should be reported\r\n\t\tfilter: function(val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAuto-corrections (such as trimming) that are applied to textbox\r\n\t\t\t//\t\tvalue on blur or form submit.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFor MappedTextBox subclasses, this is called twice\r\n\t\t\t//\r\n\t\t\t//\t\t- once with the display value\r\n\t\t\t//\t\t- once the value as set/returned by set('value', ...)\r\n\t\t\t//\r\n\t\t\t//\t\tand get('value'), ex: a Number for NumberTextBox.\r\n\t\t\t//\r\n\t\t\t//\t\tIn the latter case it does corrections like converting null to NaN.  In\r\n\t\t\t//\t\tthe former case the NumberTextBox.filter() method calls this.inherited()\r\n\t\t\t//\t\tto execute standard trimming code in TextBox.filter().\r\n\t\t\t//\r\n\t\t\t//\t\tTODO: break this into two methods in 2.0\r\n\t\t\t//\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\tif(val === null){\r\n\t\t\t\treturn this._blankValue;\r\n\t\t\t}\r\n\t\t\tif(typeof val != \"string\"){\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\tif(this.trim){\r\n\t\t\t\tval = lang.trim(val);\r\n\t\t\t}\r\n\t\t\tif(this.uppercase){\r\n\t\t\t\tval = val.toUpperCase();\r\n\t\t\t}\r\n\t\t\tif(this.lowercase){\r\n\t\t\t\tval = val.toLowerCase();\r\n\t\t\t}\r\n\t\t\tif(this.propercase){\r\n\t\t\t\tval = val.replace(/[^\\s]+/g, function(word){\r\n\t\t\t\t\treturn word.substring(0, 1).toUpperCase() + word.substring(1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\r\n\t\t_setBlurValue: function(){\r\n\t\t\t// Format the displayed value, for example (for NumberTextBox) convert 1.4 to 1.400,\r\n\t\t\t// or (for CurrencyTextBox) 2.50 to $2.50\r\n\r\n\t\t\tthis._setValueAttr(this.get('value'), true);\r\n\t\t},\r\n\r\n\t\t_onBlur: function(e){\r\n\t\t\tif(this.disabled){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._setBlurValue();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_isTextSelected: function(){\r\n\t\t\treturn this.textbox.selectionStart != this.textbox.selectionEnd;\r\n\t\t},\r\n\r\n\t\t_onFocus: function(/*String*/ by){\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Select all text on focus via click if nothing already selected.\r\n\t\t\t// Since mouse-up will clear the selection, need to defer selection until after mouse-up.\r\n\t\t\t// Don't do anything on focus by tabbing into the widget since there's no associated mouse-up event.\r\n\t\t\tif(this.selectOnClick && by == \"mouse\"){\r\n\t\t\t\t// Use on.once() to only select all text on first click only; otherwise users would have no way to clear\r\n\t\t\t\t// the selection.\r\n\t\t\t\tthis._selectOnClickHandle = on.once(this.domNode, \"mouseup, touchend\", lang.hitch(this, function(evt){\r\n\t\t\t\t\t// Check if the user selected some text manually (mouse-down, mouse-move, mouse-up)\r\n\t\t\t\t\t// and if not, then select all the text\r\n\t\t\t\t\tif(!this._isTextSelected()){\r\n\t\t\t\t\t\t_TextBoxMixin.selectInputText(this.textbox);\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tthis.own(this._selectOnClickHandle);\r\n\r\n\t\t\t\t// in case the mouseup never comes\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tif(this._selectOnClickHandle){\r\n\t\t\t\t\t\tthis._selectOnClickHandle.remove();\r\n\t\t\t\t\t\tthis._selectOnClickHandle = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 500); // if mouseup not received soon, then treat it as some gesture\r\n\t\t\t}\r\n\t\t\t// call this.inherited() before refreshState(), since this.inherited() will possibly scroll the viewport\r\n\t\t\t// (to scroll the TextBox into view), which will affect how _refreshState() positions the tooltip\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis._refreshState();\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// Overrides `dijit/_FormWidget/reset()`.\r\n\t\t\t// Additionally resets the displayed textbox value to ''\r\n\t\t\tthis.textbox.value = '';\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\t_TextBoxMixin = declare(\"dijit.form._TextBoxMixin\", _TextBoxMixin, {\r\n\t\t\t_setValueAttr: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.applyTextDir(this.focusNode);\r\n\t\t\t},\r\n\t\t\t_setDisplayedValueAttr: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.applyTextDir(this.focusNode);\r\n\t\t\t},\r\n\t\t\t_onInput: function(){\r\n\t\t\t\tthis.applyTextDir(this.focusNode);\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_TextBoxMixin._setSelectionRange = dijit._setSelectionRange = function(/*DomNode*/ element, /*Number?*/ start, /*Number?*/ stop){\r\n\t\tif(element.setSelectionRange){\r\n\t\t\telement.setSelectionRange(start, stop);\r\n\t\t}\r\n\t};\r\n\r\n\t_TextBoxMixin.selectInputText = dijit.selectInputText = function(/*DomNode*/ element, /*Number?*/ start, /*Number?*/ stop){\r\n\t\t// summary:\r\n\t\t//\t\tSelect text in the input element argument, from start (default 0), to stop (default end).\r\n\r\n\t\t// TODO: use functions in _editor/selection.js?\r\n\t\telement = dom.byId(element);\r\n\t\tif(isNaN(start)){\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif(isNaN(stop)){\r\n\t\t\tstop = element.value ? element.value.length : 0;\r\n\t\t}\r\n\t\ttry{\r\n\t\t\telement.focus();\r\n\t\t\t_TextBoxMixin._setSelectionRange(element, start, stop);\r\n\t\t}catch(e){ /* squelch random errors (esp. on IE) from unexpected focus changes or DOM nodes being hidden */\r\n\t\t}\r\n\t};\r\n\r\n\treturn _TextBoxMixin;\r\n});\r\n\n\ndefine('dijit/form/TextBox',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.create\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"mozilla\")\r\n\t\"./_FormValueWidget\",\r\n\t\"./_TextBoxMixin\",\r\n\t\"dojo/text!./templates/TextBox.html\",\r\n\t\"../main\"\t// to export dijit._setSelectionRange, remove in 2.0\r\n], function(declare, domConstruct, domStyle, kernel, lang, on, has,\r\n\t\t\t_FormValueWidget, _TextBoxMixin, template, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/TextBox\r\n\r\n\tvar TextBox = declare(\"dijit.form.TextBox\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), [_FormValueWidget, _TextBoxMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA base class for textbox form inputs\r\n\r\n\t\ttemplateString: template,\r\n\t\t_singleNodeTemplate: '<input class=\"dijit dijitReset dijitLeft dijitInputField\" data-dojo-attach-point=\"textbox,focusNode\" autocomplete=\"off\" type=\"${type}\" ${!nameAttrSetting} />',\r\n\r\n\t\t_buttonInputDisabled: has(\"ie\") ? \"disabled\" : \"\", // allows IE to disallow focus, but Firefox cannot be disabled for mousedown events\r\n\r\n\t\tbaseClass: \"dijitTextBox\",\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tvar type = this.type.toLowerCase();\r\n\t\t\tif(this.templateString && this.templateString.toLowerCase() == \"input\" || ((type == \"hidden\" || type == \"file\") && this.templateString == this.constructor.prototype.templateString)){\r\n\t\t\t\tthis.templateString = this._singleNodeTemplate;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(has(\"ie\") < 9){\r\n\t\t\t\t// IE INPUT tag fontFamily has to be set directly using STYLE\r\n\t\t\t\t// the defer gives IE a chance to render the TextBox and to deal with font inheritance\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tvar s = domStyle.getComputedStyle(this.domNode); // can throw an exception if widget is immediately destroyed\r\n\t\t\t\t\t\tif(s){\r\n\t\t\t\t\t\t\tvar ff = s.fontFamily;\r\n\t\t\t\t\t\t\tif(ff){\r\n\t\t\t\t\t\t\t\tvar inputs = this.domNode.getElementsByTagName(\"INPUT\");\r\n\t\t\t\t\t\t\t\tif(inputs){\r\n\t\t\t\t\t\t\t\t\tfor(var i=0; i < inputs.length; i++){\r\n\t\t\t\t\t\t\t\t\t\tinputs[i].style.fontFamily = ff;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}catch(e){/*when used in a Dialog, and this is called before the dialog is\r\n\t\t\t\t\t shown, s.fontFamily would trigger \"Invalid Argument\" error.*/}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setPlaceHolderAttr: function(v){\r\n\t\t\tthis._set(\"placeHolder\", v);\r\n\t\t\tif(!this._phspan){\r\n\t\t\t\tthis._attachPoints.push('_phspan');\r\n\t\t\t\tthis._phspan = domConstruct.create('span', {\r\n\t\t\t\t\t// dijitInputField class gives placeHolder same padding as the input field\r\n\t\t\t\t\t// parent node already has dijitInputField class but it doesn't affect this <span>\r\n\t\t\t\t\t// since it's position: absolute.\r\n\t\t\t\t\tclassName: 'dijitPlaceHolder dijitInputField'\r\n\t\t\t\t}, this.textbox, 'after');\r\n\t\t\t\tthis.own(\r\n\t\t\t\t\ton(this._phspan, \"mousedown\", function(evt){ evt.preventDefault(); }),\r\n\t\t\t\t\ton(this._phspan, \"touchend, pointerup, MSPointerUp\", lang.hitch(this, function(){\r\n\t\t\t\t\t\t// If the user clicks placeholder rather than the <input>, need programmatic focus.  Normally this\r\n\t\t\t\t\t\t// is done in _FormWidgetMixin._onFocus() but after [30663] it's done on a delay, which is ineffective.\r\n\t\t\t\t\t\tthis.focus();\r\n\t\t\t\t\t}))\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthis._phspan.innerHTML=\"\";\r\n\t\t\tthis._phspan.appendChild(this._phspan.ownerDocument.createTextNode(v));\r\n\t\t\tthis._updatePlaceHolder();\r\n\t\t},\r\n\r\n\t\t_onInput: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled AFTER the input event has happened\r\n\t\t\t//\t\tSee if the placeHolder text should be removed or added while editing.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._updatePlaceHolder();\r\n\t\t},\r\n\r\n\t\t_updatePlaceHolder: function(){\r\n\t\t\tif(this._phspan){\r\n\t\t\t\tthis._phspan.style.display = (this.placeHolder && !this.textbox.value) ? \"\" : \"none\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(value, /*Boolean?*/ priorityChange, /*String?*/ formattedValue){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._updatePlaceHolder();\r\n\t\t},\r\n\r\n\t\tgetDisplayedValue: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use get('displayedValue') instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(this.declaredClass+\"::getDisplayedValue() is deprecated. Use get('displayedValue') instead.\", \"\", \"2.0\");\r\n\t\t\treturn this.get('displayedValue');\r\n\t\t},\r\n\r\n\t\tsetDisplayedValue: function(/*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('displayedValue', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(this.declaredClass+\"::setDisplayedValue() is deprecated. Use set('displayedValue', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('displayedValue', value);\r\n\t\t},\r\n\r\n\t\t_onBlur: function(e){\r\n\t\t\tif(this.disabled){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._updatePlaceHolder();\r\n\r\n\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\tif(this.selectOnClick){\r\n\t\t\t\t\t// clear selection so that the next mouse click doesn't reselect\r\n\t\t\t\t\tthis.textbox.selectionStart = this.textbox.selectionEnd = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onFocus: function(/*String*/ by){\r\n\t\t\tif(this.disabled || this.readOnly){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._updatePlaceHolder();\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"ie\") < 9){\r\n\t\tTextBox.prototype._isTextSelected = function(){\r\n\t\t\tvar range = this.ownerDocument.selection.createRange();\r\n\t\t\tvar parent = range.parentElement();\r\n\t\t\treturn parent == this.textbox && range.text.length > 0;\r\n\t\t};\r\n\r\n\t\t// Overrides definition of _setSelectionRange from _TextBoxMixin (TODO: move to _TextBoxMixin.js?)\r\n\t\tdijit._setSelectionRange = _TextBoxMixin._setSelectionRange = function(/*DomNode*/ element, /*Number?*/ start, /*Number?*/ stop){\r\n\t\t\tif(element.createTextRange){\r\n\t\t\t\tvar r = element.createTextRange();\r\n\t\t\t\tr.collapse(true);\r\n\t\t\t\tr.moveStart(\"character\", -99999); // move to 0\r\n\t\t\t\tr.moveStart(\"character\", start); // delta from 0 is the correct position\r\n\t\t\t\tr.moveEnd(\"character\", stop-start);\r\n\t\t\t\tr.select();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tTextBox = declare(\"dijit.form.TextBox\", TextBox, {\r\n\t\t\t_setPlaceHolderAttr: function(v){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.applyTextDir(this._phspan);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn TextBox;\r\n});\r\n\n\ndefine('dijit/Tooltip',[\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/fx\", // fx.fadeIn fx.fadeOut\r\n\t\"dojo/dom\", // dom.byId\r\n\t\"dojo/dom-class\", // domClass.add\r\n\t\"dojo/dom-geometry\", // domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.set, domStyle.get\r\n\t\"dojo/_base/lang\", // lang.hitch lang.isArrayLike\r\n\t\"dojo/mouse\",\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\"), has(\"trident\")\r\n\t\"./_base/manager\",\t// manager.defaultDuration\r\n\t\"./place\",\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./BackgroundIframe\",\r\n\t\"dojo/text!./templates/Tooltip.html\",\r\n\t\"./main\"\t\t// sets dijit.showTooltip etc. for back-compat\r\n], function(array, declare, fx, dom, domClass, domGeometry, domStyle, lang, mouse, on, has,\r\n\t\t\tmanager, place, _Widget, _TemplatedMixin, BackgroundIframe, template, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Tooltip\r\n\r\n\r\n\t// TODO: Tooltip should really share more positioning code with TooltipDialog, like:\r\n\t//\t\t- the orient() method\r\n\t//\t\t- the connector positioning code in show()\r\n\t//\t\t- the dijitTooltip[Dialog] class\r\n\t//\r\n\t// The problem is that Tooltip's implementation supplies it's own <iframe> and interacts directly\r\n\t// with dijit/place, rather than going through dijit/popup like TooltipDialog and other popups (ex: Menu).\r\n\r\n\tvar MasterTooltip = declare(\"dijit._MasterTooltip\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tInternal widget that holds the actual tooltip markup,\r\n\t\t//\t\twhich occurs once per page.\r\n\t\t//\t\tCalled by Tooltip widgets which are just containers to hold\r\n\t\t//\t\tthe markup\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\t// duration: Integer\r\n\t\t//\t\tMilliseconds to fade in/fade out\r\n\t\tduration: manager.defaultDuration,\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.ownerDocumentBody.appendChild(this.domNode);\r\n\r\n\t\t\tthis.bgIframe = new BackgroundIframe(this.domNode);\r\n\r\n\t\t\t// Setup fade-in and fade-out functions.\r\n\t\t\tthis.fadeIn = fx.fadeIn({ node: this.domNode, duration: this.duration, onEnd: lang.hitch(this, \"_onShow\") });\r\n\t\t\tthis.fadeOut = fx.fadeOut({ node: this.domNode, duration: this.duration, onEnd: lang.hitch(this, \"_onHide\") });\r\n\t\t},\r\n\r\n\t\tshow: function(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay tooltip w/specified contents to right of specified node\r\n\t\t\t//\t\t(To left if there's no space on the right, or if rtl == true)\r\n\t\t\t// innerHTML: String\r\n\t\t\t//\t\tContents of the tooltip\r\n\t\t\t// aroundNode: DomNode|dijit/place.__Rectangle\r\n\t\t\t//\t\tSpecifies that tooltip should be next to this node / area\r\n\t\t\t// position: String[]?\r\n\t\t\t//\t\tList of positions to try to position tooltip (ex: [\"right\", \"above\"])\r\n\t\t\t// rtl: Boolean?\r\n\t\t\t//\t\tCorresponds to `WidgetBase.dir` attribute, where false means \"ltr\" and true\r\n\t\t\t//\t\tmeans \"rtl\"; specifies GUI direction, not text direction.\r\n\t\t\t// textDir: String?\r\n\t\t\t//\t\tCorresponds to `WidgetBase.textdir` attribute; specifies direction of text.\r\n\t\t\t// onMouseEnter: Function?\r\n\t\t\t//\t\tCallback function for mouse enter on tooltip\r\n\t\t\t// onMouseLeave: Function?\r\n\t\t\t//\t\tCallback function for mouse leave on tooltip\r\n\r\n\t\t\tif(this.aroundNode && this.aroundNode === aroundNode && this.containerNode.innerHTML == innerHTML){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.fadeOut.status() == \"playing\"){\r\n\t\t\t\t// previous tooltip is being hidden; wait until the hide completes then show new one\r\n\t\t\t\tthis._onDeck=arguments;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.containerNode.innerHTML=innerHTML;\r\n\r\n\t\t\tif(textDir){\r\n\t\t\t\tthis.set(\"textDir\", textDir);\r\n\t\t\t}\r\n\r\n\t\t\tthis.containerNode.align = rtl? \"right\" : \"left\"; //fix the text alignment\r\n\r\n\t\t\tvar pos = place.around(this.domNode, aroundNode,\r\n\t\t\t\tposition && position.length ? position : Tooltip.defaultPosition, !rtl, lang.hitch(this, \"orient\"));\r\n\r\n\t\t\t// Position the tooltip connector for middle alignment.\r\n\t\t\t// This could not have been done in orient() since the tooltip wasn't positioned at that time.\r\n\t\t\tvar aroundNodeCoords = pos.aroundNodePos;\r\n\t\t\tif(pos.corner.charAt(0) == 'M' && pos.aroundCorner.charAt(0) == 'M'){\r\n\t\t\t\tthis.connectorNode.style.top = aroundNodeCoords.y + ((aroundNodeCoords.h - this.connectorNode.offsetHeight) >> 1) - pos.y + \"px\";\r\n\t\t\t\tthis.connectorNode.style.left = \"\";\r\n\t\t\t}else if(pos.corner.charAt(1) == 'M' && pos.aroundCorner.charAt(1) == 'M'){\r\n\t\t\t\tthis.connectorNode.style.left = aroundNodeCoords.x + ((aroundNodeCoords.w - this.connectorNode.offsetWidth) >> 1) - pos.x + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\t// Not *-centered, but just above/below/after/before\r\n\t\t\t\tthis.connectorNode.style.left = \"\";\r\n\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// show it\r\n\t\t\tdomStyle.set(this.domNode, \"opacity\", 0);\r\n\t\t\tthis.fadeIn.play();\r\n\t\t\tthis.isShowingNow = true;\r\n\t\t\tthis.aroundNode = aroundNode;\r\n\r\n\t\t\tthis.onMouseEnter = onMouseEnter || noop;\r\n\t\t\tthis.onMouseLeave = onMouseLeave || noop;\r\n\t\t},\r\n\r\n\t\torient: function(/*DomNode*/ node, /*String*/ aroundCorner, /*String*/ tooltipCorner, /*Object*/ spaceAvailable, /*Object*/ aroundNodeCoords){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPrivate function to set CSS for tooltip node based on which position it's in.\r\n\t\t\t//\t\tThis is called by the dijit popup code.   It will also reduce the tooltip's\r\n\t\t\t//\t\twidth to whatever width is available\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.connectorNode.style.top = \"\"; //reset to default\r\n\r\n\t\t\tvar heightAvailable = spaceAvailable.h,\r\n\t\t\t\twidthAvailable = spaceAvailable.w;\r\n\r\n\t\t\tnode.className = \"dijitTooltip \" +\r\n\t\t\t\t{\r\n\t\t\t\t\t\"MR-ML\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"ML-MR\": \"dijitTooltipLeft\",\r\n\t\t\t\t\t\"TM-BM\": \"dijitTooltipAbove\",\r\n\t\t\t\t\t\"BM-TM\": \"dijitTooltipBelow\",\r\n\t\t\t\t\t\"BL-TL\": \"dijitTooltipBelow dijitTooltipABLeft\",\r\n\t\t\t\t\t\"TL-BL\": \"dijitTooltipAbove dijitTooltipABLeft\",\r\n\t\t\t\t\t\"BR-TR\": \"dijitTooltipBelow dijitTooltipABRight\",\r\n\t\t\t\t\t\"TR-BR\": \"dijitTooltipAbove dijitTooltipABRight\",\r\n\t\t\t\t\t\"BR-BL\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"BL-BR\": \"dijitTooltipLeft\"\r\n\t\t\t\t}[aroundCorner + \"-\" + tooltipCorner];\r\n\r\n\t\t\t// reset width; it may have been set by orient() on a previous tooltip show()\r\n\t\t\tthis.domNode.style.width = \"auto\";\r\n\r\n\t\t\t// Reduce tooltip's width to the amount of width available, so that it doesn't overflow screen.\r\n\t\t\t// Note that sometimes widthAvailable is negative, but we guard against setting style.width to a\r\n\t\t\t// negative number since that causes an exception on IE.\r\n\t\t\tvar size = domGeometry.position(this.domNode);\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\t// workaround strange IE bug where setting width to offsetWidth causes words to wrap\r\n\t\t\t\tsize.w += 2;\r\n\t\t\t}\r\n\r\n\t\t\tvar width = Math.min((Math.max(widthAvailable,1)), size.w);\r\n\r\n\t\t\tdomGeometry.setMarginBox(this.domNode, {w: width});\r\n\r\n\t\t\t// Reposition the tooltip connector.\r\n\t\t\tif(tooltipCorner.charAt(0) == 'B' && aroundCorner.charAt(0) == 'B'){\r\n\t\t\t\tvar bb = domGeometry.position(node);\r\n\t\t\t\tvar tooltipConnectorHeight = this.connectorNode.offsetHeight;\r\n\t\t\t\tif(bb.h > heightAvailable){\r\n\t\t\t\t\t// The tooltip starts at the top of the page and will extend past the aroundNode\r\n\t\t\t\t\tvar aroundNodePlacement = heightAvailable - ((aroundNodeCoords.h + tooltipConnectorHeight) >> 1);\r\n\t\t\t\t\tthis.connectorNode.style.top = aroundNodePlacement + \"px\";\r\n\t\t\t\t\tthis.connectorNode.style.bottom = \"\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Align center of connector with center of aroundNode, except don't let bottom\r\n\t\t\t\t\t// of connector extend below bottom of tooltip content, or top of connector\r\n\t\t\t\t\t// extend past top of tooltip content\r\n\t\t\t\t\tthis.connectorNode.style.bottom = Math.min(\r\n\t\t\t\t\t\tMath.max(aroundNodeCoords.h/2 - tooltipConnectorHeight/2, 0),\r\n\t\t\t\t\t\tbb.h - tooltipConnectorHeight) + \"px\";\r\n\t\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// reset the tooltip back to the defaults\r\n\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t\tthis.connectorNode.style.bottom = \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.max(0, size.w - widthAvailable);\r\n\t\t},\r\n\r\n\t\t_onShow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled at end of fade-in operation\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// the arrow won't show up on a node w/an opacity filter\r\n\t\t\t\tthis.domNode.style.filter=\"\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thide: function(aroundNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the tooltip\r\n\r\n\t\t\tif(this._onDeck && this._onDeck[1] == aroundNode){\r\n\t\t\t\t// this hide request is for a show() that hasn't even started yet;\r\n\t\t\t\t// just cancel the pending show()\r\n\t\t\t\tthis._onDeck=null;\r\n\t\t\t}else if(this.aroundNode === aroundNode){\r\n\t\t\t\t// this hide request is for the currently displayed tooltip\r\n\t\t\t\tthis.fadeIn.stop();\r\n\t\t\t\tthis.isShowingNow = false;\r\n\t\t\t\tthis.aroundNode = null;\r\n\t\t\t\tthis.fadeOut.play();\r\n\t\t\t}else{\r\n\t\t\t\t// just ignore the call, it's for a tooltip that has already been erased\r\n\t\t\t}\r\n\r\n\t\t\tthis.onMouseEnter = this.onMouseLeave = noop;\r\n\t\t},\r\n\r\n\t\t_onHide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled at end of fade-out operation\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.domNode.style.cssText=\"\";\t// to position offscreen again\r\n\t\t\tthis.containerNode.innerHTML=\"\";\r\n\t\t\tif(this._onDeck){\r\n\t\t\t\t// a show request has been queued up; do it now\r\n\t\t\t\tthis.show.apply(this, this._onDeck);\r\n\t\t\t\tthis._onDeck=null;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tMasterTooltip.extend({\r\n\t\t\t_setAutoTextDir: function(/*Object*/node){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tResolve \"auto\" text direction for children nodes\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\r\n\t\t\t\tthis.applyTextDir(node);\r\n\t\t\t\tarray.forEach(node.children, function(child){ this._setAutoTextDir(child); }, this);\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(/*String*/ textDir){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSetter for textDir.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tUsers shouldn't call this function; they should be calling\r\n\t\t\t\t//\t\tset('textDir', value)\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\r\n\t\t\t\tthis._set(\"textDir\", textDir);\r\n\r\n\t\t\t\tif (textDir == \"auto\"){\r\n\t\t\t\t\tthis._setAutoTextDir(this.containerNode);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.containerNode.dir = this.textDir;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tdijit.showTooltip = function(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave){\r\n\t\t// summary:\r\n\t\t//\t\tStatic method to display tooltip w/specified contents in specified position.\r\n\t\t//\t\tSee description of dijit/Tooltip.defaultPosition for details on position parameter.\r\n\t\t//\t\tIf position is not specified then dijit/Tooltip.defaultPosition is used.\r\n\t\t// innerHTML: String\r\n\t\t//\t\tContents of the tooltip\r\n\t\t// aroundNode: place.__Rectangle\r\n\t\t//\t\tSpecifies that tooltip should be next to this node / area\r\n\t\t// position: String[]?\r\n\t\t//\t\tList of positions to try to position tooltip (ex: [\"right\", \"above\"])\r\n\t\t// rtl: Boolean?\r\n\t\t//\t\tCorresponds to `WidgetBase.dir` attribute, where false means \"ltr\" and true\r\n\t\t//\t\tmeans \"rtl\"; specifies GUI direction, not text direction.\r\n\t\t// textDir: String?\r\n\t\t//\t\tCorresponds to `WidgetBase.textdir` attribute; specifies direction of text.\r\n\t\t// onMouseEnter: Function?\r\n\t\t//\t\tCallback function for mouse over on tooltip\r\n\t\t// onMouseLeave: Function?\r\n\t\t//\t\tCallback function for mouse leave on tooltip\r\n\r\n\t\t// After/before don't work, but for back-compat convert them to the working after-centered, before-centered.\r\n\t\t// Possibly remove this in 2.0.   Alternately, get before/after to work.\r\n\t\tif(position){\r\n\t\t\tposition = array.map(position, function(val){\r\n\t\t\t\treturn {after: \"after-centered\", before: \"before-centered\"}[val] || val;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(!Tooltip._masterTT){ dijit._masterTT = Tooltip._masterTT = new MasterTooltip(); }\r\n\t\treturn Tooltip._masterTT.show(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave);\r\n\t};\r\n\r\n\tdijit.hideTooltip = function(aroundNode){\r\n\t\t// summary:\r\n\t\t//\t\tStatic method to hide the tooltip displayed via showTooltip()\r\n\t\treturn Tooltip._masterTT && Tooltip._masterTT.hide(aroundNode);\r\n\t};\r\n\r\n\t// Possible states for a tooltip, see Tooltip.state property for definitions\r\n\tvar DORMANT = \"DORMANT\",\r\n\t\tSHOW_TIMER = \"SHOW TIMER\",\r\n\t\tSHOWING = \"SHOWING\",\r\n\t\tHIDE_TIMER = \"HIDE TIMER\";\r\n\r\n\tfunction noop(){}\r\n\r\n\tvar Tooltip = declare(\"dijit.Tooltip\", _Widget, {\r\n\t\t// summary:\r\n\t\t//\t\tPops up a tooltip (a help message) when you hover over a node.\r\n\t\t//\t\tAlso provides static show() and hide() methods that can be used without instantiating a dijit/Tooltip.\r\n\r\n\t\t// label: String\r\n\t\t//\t\tHTML to display in the tooltip.\r\n\t\t//\t\tSpecified as innerHTML when creating the widget from markup.\r\n\t\tlabel: \"\",\r\n\r\n\t\t// showDelay: Integer\r\n\t\t//\t\tNumber of milliseconds to wait after hovering over/focusing on the object, before\r\n\t\t//\t\tthe tooltip is displayed.\r\n\t\tshowDelay: 400,\r\n\r\n\t\t// hideDelay: Integer\r\n\t\t//\t\tNumber of milliseconds to wait after unhovering the object, before\r\n\t\t//\t\tthe tooltip is hidden.  Note that blurring an object hides the tooltip immediately.\r\n\t\thideDelay: 400,\r\n\r\n\t\t// connectId: String|String[]|DomNode|DomNode[]\r\n\t\t//\t\tId of domNode(s) to attach the tooltip to.\r\n\t\t//\t\tWhen user hovers over specified dom node(s), the tooltip will appear.\r\n\t\tconnectId: [],\r\n\r\n\t\t// position: String[]\r\n\t\t//\t\tSee description of `dijit/Tooltip.defaultPosition` for details on position parameter.\r\n\t\tposition: [],\r\n\r\n\t\t// selector: String?\r\n\t\t//\t\tCSS expression to apply this Tooltip to descendants of connectIds, rather than to\r\n\t\t//\t\tthe nodes specified by connectIds themselves.    Useful for applying a Tooltip to\r\n\t\t//\t\ta range of rows in a table, tree, etc.   Use in conjunction with getContent() parameter.\r\n\t\t//\t\tEx: connectId: myTable, selector: \"tr\", getContent: function(node){ return ...; }\r\n\t\t//\r\n\t\t//\t\tThe application must require() an appropriate level of dojo/query to handle the selector.\r\n\t\tselector: \"\",\r\n\r\n\t\t// TODO: in 2.0 remove support for multiple connectIds.   selector gives the same effect.\r\n\t\t// So, change connectId to a \"\", remove addTarget()/removeTarget(), etc.\r\n\r\n\t\t_setConnectIdAttr: function(/*String|String[]|DomNode|DomNode[]*/ newId){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnect to specified node(s)\r\n\r\n\t\t\t// Remove connections to old nodes (if there are any)\r\n\t\t\tarray.forEach(this._connections || [], function(nested){\r\n\t\t\t\tarray.forEach(nested, function(handle){ handle.remove(); });\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Make array of id's to connect to, excluding entries for nodes that don't exist yet, see startup()\r\n\t\t\tthis._connectIds = array.filter(lang.isArrayLike(newId) ? newId : (newId ? [newId] : []),\r\n\t\t\t\t\tfunction(id){ return dom.byId(id, this.ownerDocument); }, this);\r\n\r\n\t\t\t// Make connections\r\n\t\t\tthis._connections = array.map(this._connectIds, function(id){\r\n\t\t\t\tvar node = dom.byId(id, this.ownerDocument),\r\n\t\t\t\t\tselector = this.selector,\r\n\t\t\t\t\tdelegatedEvent = selector ?\r\n\t\t\t\t\t\tfunction(eventType){ return on.selector(selector, eventType); } :\r\n\t\t\t\t\t\tfunction(eventType){ return eventType; },\r\n\t\t\t\t\tself = this;\r\n\t\t\t\treturn [\r\n\t\t\t\t\ton(node, delegatedEvent(mouse.enter), function(){\r\n\t\t\t\t\t\tself._onHover(this);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ton(node, delegatedEvent(\"focusin\"), function(){\r\n\t\t\t\t\t\tself._onHover(this);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ton(node, delegatedEvent(mouse.leave), lang.hitch(self, \"_onUnHover\")),\r\n\t\t\t\t\ton(node, delegatedEvent(\"focusout\"), lang.hitch(self, \"set\", \"state\", DORMANT))\r\n\t\t\t\t];\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._set(\"connectId\", newId);\r\n\t\t},\r\n\r\n\t\taddTarget: function(/*OomNode|String*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach tooltip to specified node if it's not already connected\r\n\r\n\t\t\t// TODO: remove in 2.0 and just use set(\"connectId\", ...) interface\r\n\r\n\t\t\tvar id = node.id || node;\r\n\t\t\tif(array.indexOf(this._connectIds, id) == -1){\r\n\t\t\t\tthis.set(\"connectId\", this._connectIds.concat(id));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveTarget: function(/*DomNode|String*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetach tooltip from specified node\r\n\r\n\t\t\t// TODO: remove in 2.0 and just use set(\"connectId\", ...) interface\r\n\r\n\t\t\tvar id = node.id || node,\t// map from DOMNode back to plain id string\r\n\t\t\t\tidx = array.indexOf(this._connectIds, id);\r\n\t\t\tif(idx >= 0){\r\n\t\t\t\t// remove id (modifies original this._connectIds but that's OK in this case)\r\n\t\t\t\tthis._connectIds.splice(idx, 1);\r\n\t\t\t\tthis.set(\"connectId\", this._connectIds);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.add(this.domNode,\"dijitTooltipData\");\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// If this tooltip was created in a template, or for some other reason the specified connectId[s]\r\n\t\t\t// didn't exist during the widget's initialization, then connect now.\r\n\t\t\tvar ids = this.connectId;\r\n\t\t\tarray.forEach(lang.isArrayLike(ids) ? ids : [ids], this.addTarget, this);\r\n\t\t},\r\n\r\n\t\tgetContent: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser overridable function that return the text to display in the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn this.label || this.domNode.innerHTML;\r\n\t\t},\r\n\r\n\t\t// state: [private readonly] String\r\n\t\t//\t\tOne of:\r\n\t\t//\r\n\t\t//\t\t- DORMANT: tooltip not SHOWING\r\n\t\t//\t\t- SHOW TIMER: tooltip not SHOWING but timer set to show it\r\n\t\t//\t\t- SHOWING: tooltip displayed\r\n\t\t//\t\t- HIDE TIMER: tooltip displayed, but timer set to hide it\r\n\t\tstate: DORMANT,\r\n\t\t_setStateAttr: function(val){\r\n\t\t\tif(this.state == val ||\r\n\t\t\t\t(val == SHOW_TIMER && this.state == SHOWING) ||\r\n\t\t\t\t(val == HIDE_TIMER && this.state == DORMANT)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._hideTimer){\r\n\t\t\t\tthis._hideTimer.remove();\r\n\t\t\t\tdelete this._hideTimer;\r\n\t\t\t}\r\n\t\t\tif(this._showTimer){\r\n\t\t\t\tthis._showTimer.remove();\r\n\t\t\t\tdelete this._showTimer;\r\n\t\t\t}\r\n\r\n\t\t\tswitch(val){\r\n\t\t\t\tcase DORMANT:\r\n\t\t\t\t\tif(this._connectNode){\r\n\t\t\t\t\t\tTooltip.hide(this._connectNode);\r\n\t\t\t\t\t\tdelete this._connectNode;\r\n\t\t\t\t\t\tthis.onHide();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SHOW_TIMER:\t // set timer to show tooltip\r\n\t\t\t\t\t// should only get here from a DORMANT state, i.e. tooltip can't be already SHOWING\r\n\t\t\t\t\tif(this.state != SHOWING){\r\n\t\t\t\t\t\tthis._showTimer = this.defer(function(){ this.set(\"state\", SHOWING); }, this.showDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SHOWING:\t\t// show tooltip and clear timers\r\n\t\t\t\t\tvar content = this.getContent(this._connectNode);\r\n\t\t\t\t\tif(!content){\r\n\t\t\t\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Show tooltip and setup callbacks for mouseenter/mouseleave of tooltip itself\r\n\t\t\t\t\tTooltip.show(content, this._connectNode, this.position, !this.isLeftToRight(), this.textDir,\r\n\t\t\t\t\t\tlang.hitch(this, \"set\", \"state\", SHOWING), lang.hitch(this, \"set\", \"state\", HIDE_TIMER));\r\n\r\n\t\t\t\t\tthis.onShow(this._connectNode, this.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase HIDE_TIMER:\t// set timer set to hide tooltip\r\n\t\t\t\t\tthis._hideTimer = this.defer(function(){ this.set(\"state\", DORMANT); }, this.hideDelay);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis._set(\"state\", val);\r\n\t\t},\r\n\r\n\t\t_onHover: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDespite the name of this method, it actually handles both hover and focus\r\n\t\t\t//\t\tevents on the target node, setting a timer to show the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this._connectNode && target != this._connectNode){\r\n\t\t\t\t// Tooltip is displaying for another node\r\n\t\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\t}\r\n\t\t\tthis._connectNode = target;\t\t// _connectNode means \"tooltip currently displayed for this node\"\r\n\r\n\t\t\tthis.set(\"state\", SHOW_TIMER);\t// no-op if show-timer already set, or if already showing\r\n\t\t},\r\n\r\n\t\t_onUnHover: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles mouseleave event on the target node, hiding the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", HIDE_TIMER);\t\t// no-op if already dormant, or if hide-timer already set\r\n\t\t},\r\n\r\n\t\t// open() and close() aren't used anymore, except from the _BidiSupport/misc/Tooltip test.\r\n\t\t// Should probably remove for 2.0, but leaving for now.\r\n\t\topen: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay the tooltip; usually not called directly.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\tthis._connectNode = target;\t\t// _connectNode means \"tooltip currently displayed for this node\"\r\n\t\t\tthis.set(\"state\", SHOWING);\r\n\t\t},\r\n\r\n\t\tclose: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the tooltip or cancel timer for show of tooltip\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t},\r\n\r\n\t\tonShow: function(/*===== target, position =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the tooltip is shown\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonHide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the tooltip is hidden\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\r\n\t\t\t// Remove connections manually since they aren't registered to be removed by _WidgetBase\r\n\t\t\tarray.forEach(this._connections || [], function(nested){\r\n\t\t\t\tarray.forEach(nested, function(handle){ handle.remove(); });\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tTooltip._MasterTooltip = MasterTooltip;\t\t// for monkey patching\r\n\tTooltip.show = dijit.showTooltip;\t\t// export function through module return value\r\n\tTooltip.hide = dijit.hideTooltip;\t\t// export function through module return value\r\n\r\n\tTooltip.defaultPosition = [\"after-centered\", \"before-centered\"];\r\n\r\n\t/*=====\r\n\tlang.mixin(Tooltip, {\r\n\t\t // defaultPosition: String[]\r\n\t\t //\t\tThis variable controls the position of tooltips, if the position is not specified to\r\n\t\t //\t\tthe Tooltip widget or *TextBox widget itself.  It's an array of strings with the values\r\n\t\t //\t\tpossible for `dijit/place.around()`.   The recommended values are:\r\n\t\t //\r\n\t\t //\t\t- before-centered: centers tooltip to the left of the anchor node/widget, or to the right\r\n\t\t //\t\t  in the case of RTL scripts like Hebrew and Arabic\r\n\t\t //\t\t- after-centered: centers tooltip to the right of the anchor node/widget, or to the left\r\n\t\t //\t\t  in the case of RTL scripts like Hebrew and Arabic\r\n\t\t //\t\t- above-centered: tooltip is centered above anchor node\r\n\t\t //\t\t- below-centered: tooltip is centered above anchor node\r\n\t\t //\r\n\t\t //\t\tThe list is positions is tried, in order, until a position is found where the tooltip fits\r\n\t\t //\t\twithin the viewport.\r\n\t\t //\r\n\t\t //\t\tBe careful setting this parameter.  A value of \"above-centered\" may work fine until the user scrolls\r\n\t\t //\t\tthe screen so that there's no room above the target node.   Nodes with drop downs, like\r\n\t\t //\t\tDropDownButton or FilteringSelect, are especially problematic, in that you need to be sure\r\n\t\t //\t\tthat the drop down and tooltip don't overlap, even when the viewport is scrolled so that there\r\n\t\t //\t\tis only room below (or above) the target node, but not both.\r\n\t });\r\n\t=====*/\r\n\treturn Tooltip;\r\n});\r\n\n\n\ndefine('dijit/form/ValidationTextBox',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"./TextBox\",\r\n\t\"../Tooltip\",\r\n\t\"dojo/text!./templates/ValidationTextBox.html\",\r\n\t\"dojo/i18n!./nls/validate\"\r\n], function(declare, kernel, lang, i18n, TextBox, Tooltip, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/ValidationTextBox\r\n\r\n\r\n\t/*=====\r\n\tvar __Constraints = {\r\n\t\t// locale: String\r\n\t\t//\t\tlocale used for validation, picks up value from this widget's lang attribute\r\n\t\t// _flags_: anything\r\n\t\t//\t\tvarious flags passed to pattern function\r\n\t};\r\n\t=====*/\r\n\r\n\tvar ValidationTextBox;\r\n\treturn ValidationTextBox = declare(\"dijit.form.ValidationTextBox\", TextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for textbox widgets with the ability to validate content of various types and provide user feedback.\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// required: Boolean\r\n\t\t//\t\tUser is required to enter data into this field.\r\n\t\trequired: false,\r\n\r\n\t\t// promptMessage: String\r\n\t\t//\t\tIf defined, display this hint string immediately on focus to the textbox, if empty.\r\n\t\t//\t\tAlso displays if the textbox value is Incomplete (not yet valid but will be with additional input).\r\n\t\t//\t\tThink of this like a tooltip that tells the user what to do, not an error message\r\n\t\t//\t\tthat tells the user what they've done wrong.\r\n\t\t//\r\n\t\t//\t\tMessage disappears when user starts typing.\r\n\t\tpromptMessage: \"\",\r\n\r\n\t\t// invalidMessage: String\r\n\t\t//\t\tThe message to display if value is invalid.\r\n\t\t//\t\tThe translated string value is read from the message file by default.\r\n\t\t//\t\tSet to \"\" to use the promptMessage instead.\r\n\t\tinvalidMessage: \"$_unset_$\",\r\n\r\n\t\t// missingMessage: String\r\n\t\t//\t\tThe message to display if value is empty and the field is required.\r\n\t\t//\t\tThe translated string value is read from the message file by default.\r\n\t\t//\t\tSet to \"\" to use the invalidMessage instead.\r\n\t\tmissingMessage: \"$_unset_$\",\r\n\r\n\t\t// message: String\r\n\t\t//\t\tCurrently error/prompt message.\r\n\t\t//\t\tWhen using the default tooltip implementation, this will only be\r\n\t\t//\t\tdisplayed when the field is focused.\r\n\t\tmessage: \"\",\r\n\r\n\t\t// constraints: __Constraints\r\n\t\t//\t\tuser-defined object needed to pass parameters to the validator functions\r\n\t\tconstraints: {},\r\n\r\n\t\t// pattern: [extension protected] String|Function(constraints) returning a string.\r\n\t\t//\t\tThis defines the regular expression used to validate the input.\r\n\t\t//\t\tDo not add leading ^ or $ characters since the widget adds these.\r\n\t\t//\t\tA function may be used to generate a valid pattern when dependent on constraints or other runtime factors.\r\n\t\t//\t\tset('pattern', String|Function).\r\n\t\tpattern: \".*\",\r\n\r\n\t\t// regExp: Deprecated [extension protected] String.  Use \"pattern\" instead.\r\n\t\tregExp: \"\",\r\n\r\n\t\tregExpGen: function(/*__Constraints*/ /*===== constraints =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('pattern', Function) instead.\r\n\t\t},\r\n\r\n\t\t// state: [readonly] String\r\n\t\t//\t\tShows current state (ie, validation result) of input (\"\"=Normal, Incomplete, or Error)\r\n\t\tstate: \"\",\r\n\r\n\t\t// tooltipPosition: String[]\r\n\t\t//\t\tSee description of `dijit/Tooltip.defaultPosition` for details on this parameter.\r\n\t\ttooltipPosition: [],\r\n\r\n\t\t_deprecateRegExp: function(attr, value){\r\n\t\t\tif(value != ValidationTextBox.prototype[attr]){\r\n\t\t\t\tkernel.deprecated(\"ValidationTextBox id=\"+this.id+\", set('\" + attr + \"', ...) is deprecated.  Use set('pattern', ...) instead.\", \"\", \"2.0\");\r\n\t\t\t\tthis.set('pattern', value);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_setRegExpGenAttr: function(/*Function*/ newFcn){\r\n\t\t\tthis._deprecateRegExp(\"regExpGen\", newFcn);\r\n\t\t\tthis._set(\"regExpGen\", this._computeRegexp); // backward compat with this.regExpGen(this.constraints)\r\n\t\t},\r\n\t\t_setRegExpAttr: function(/*String*/ value){\r\n\t\t\tthis._deprecateRegExp(\"regExp\", value);\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', ...) works.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._refreshState();\r\n\t\t},\r\n\r\n\t\tvalidator: function(/*anything*/ value, /*__Constraints*/ constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function used to validate the text input against the regular expression.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn (new RegExp(\"^(?:\" + this._computeRegexp(constraints) + \")\"+(this.required?\"\":\"?\")+\"$\")).test(value) &&\r\n\t\t\t\t(!this.required || !this._isEmpty(value)) &&\r\n\t\t\t\t(this._isEmpty(value) || this.parse(value, constraints) !== undefined); // Boolean\r\n\t\t},\r\n\r\n\t\t_isValidSubset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if the value is either already valid or could be made valid by appending characters.\r\n\t\t\t//\t\tThis is used for validation while the user [may be] still typing.\r\n\t\t\treturn this.textbox.value.search(this._partialre) == 0;\r\n\t\t},\r\n\r\n\t\tisValid: function(/*Boolean*/ /*===== isFocused =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests if value is valid.\r\n\t\t\t//\t\tCan override with your own routine in a subclass.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this.validator(this.textbox.value, this.get('constraints'));\r\n\t\t},\r\n\r\n\t\t_isEmpty: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChecks for whitespace\r\n\t\t\treturn (this.trim ? /^\\s*$/ : /^$/).test(value); // Boolean\r\n\t\t},\r\n\r\n\t\tgetErrorMessage: function(/*Boolean*/ /*===== isFocused =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn an error message to show if appropriate\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar invalid = this.invalidMessage == \"$_unset_$\" ? this.messages.invalidMessage :\r\n\t\t\t\t!this.invalidMessage ? this.promptMessage : this.invalidMessage;\r\n\t\t\tvar missing = this.missingMessage == \"$_unset_$\" ? this.messages.missingMessage :\r\n\t\t\t\t!this.missingMessage ? invalid : this.missingMessage;\r\n\t\t\treturn (this.required && this._isEmpty(this.textbox.value)) ? missing : invalid; // String\r\n\t\t},\r\n\r\n\t\tgetPromptMessage: function(/*Boolean*/ /*===== isFocused =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn a hint message to show when widget is first focused\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this.promptMessage; // String\r\n\t\t},\r\n\r\n\t\t_maskValidSubsetError: true,\r\n\t\tvalidate: function(/*Boolean*/ isFocused){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled by oninit, onblur, and onkeypress.\r\n\t\t\t// description:\r\n\t\t\t//\t\tShow missing or invalid messages if appropriate, and highlight textbox field.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar message = \"\";\r\n\t\t\tvar isValid = this.disabled || this.isValid(isFocused);\r\n\t\t\tif(isValid){ this._maskValidSubsetError = true; }\r\n\t\t\tvar isEmpty = this._isEmpty(this.textbox.value);\r\n\t\t\tvar isValidSubset = !isValid && isFocused && this._isValidSubset();\r\n\t\t\tthis._set(\"state\", isValid ? \"\" : (((((!this._hasBeenBlurred || isFocused) && isEmpty) || isValidSubset) && (this._maskValidSubsetError || (isValidSubset && !this._hasBeenBlurred && isFocused))) ? \"Incomplete\" : \"Error\"));\r\n\t\t\tthis.focusNode.setAttribute(\"aria-invalid\", this.state == \"Error\" ? \"true\" : \"false\");\r\n\r\n\t\t\tif(this.state == \"Error\"){\r\n\t\t\t\tthis._maskValidSubsetError = isFocused && isValidSubset; // we want the error to show up after a blur and refocus\r\n\t\t\t\tmessage = this.getErrorMessage(isFocused);\r\n\t\t\t}else if(this.state == \"Incomplete\"){\r\n\t\t\t\tmessage = this.getPromptMessage(isFocused); // show the prompt whenever the value is not yet complete\r\n\t\t\t\tthis._maskValidSubsetError = !this._hasBeenBlurred || isFocused; // no Incomplete warnings while focused\r\n\t\t\t}else if(isEmpty){\r\n\t\t\t\tmessage = this.getPromptMessage(isFocused); // show the prompt whenever there's no error and no text\r\n\t\t\t}\r\n\t\t\tthis.set(\"message\", message);\r\n\r\n\t\t\treturn isValid;\r\n\t\t},\r\n\r\n\t\tdisplayMessage: function(/*String*/ message){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable method to display validation errors/hints.\r\n\t\t\t//\t\tBy default uses a tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\tif(message && this.focused){\r\n\t\t\t\tTooltip.show(message, this.domNode, this.tooltipPosition, !this.isLeftToRight());\r\n\t\t\t}else{\r\n\t\t\t\tTooltip.hide(this.domNode);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_refreshState: function(){\r\n\t\t\t// Overrides TextBox._refreshState()\r\n\t\t\tif(this._created){ // should instead be this._started but that would require all programmatic ValidationTextBox instantiations to call startup()\r\n\t\t\t\tthis.validate(this.focused);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t//////////// INITIALIZATION METHODS ///////////////////////////////////////\r\n\r\n\t\tconstructor: function(params /*===== , srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree.\r\n\r\n\t\t\tthis.constraints = lang.clone(this.constraints);\r\n\t\t\tthis.baseClass += ' dijitValidationTextBox';\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._refreshState(); // after all _set* methods have run\r\n\t\t},\r\n\r\n\t\t_setConstraintsAttr: function(/*__Constraints*/ constraints){\r\n\t\t\tif(!constraints.locale && this.lang){\r\n\t\t\t\tconstraints.locale = this.lang;\r\n\t\t\t}\r\n\t\t\tthis._set(\"constraints\", constraints);\r\n\t\t\tthis._refreshState();\r\n\t\t},\r\n\r\n\t\t_setPatternAttr: function(/*String|Function*/ pattern){\r\n\t\t\tthis._set(\"pattern\", pattern); // don't set on INPUT to avoid native HTML5 validation\r\n\t\t\tthis._refreshState();\r\n\t\t},\r\n\r\n\t\t_computeRegexp: function(/*__Constraints*/ constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to get the current regExp and to compute the partial validation RE.\r\n\r\n\t\t\tvar p = this.pattern;\r\n\t\t\tif(typeof p == \"function\"){\r\n\t\t\t\tp = p.call(this, constraints);\r\n\t\t\t}\r\n\t\t\tif(p != this._lastRegExp){\r\n\t\t\t\tvar partialre = \"\";\r\n\t\t\t\tthis._lastRegExp = p;\r\n\t\t\t\t// parse the regexp and produce a new regexp that matches valid subsets\r\n\t\t\t\t// if the regexp is .* then there's no use in matching subsets since everything is valid\r\n\t\t\t\tif(p != \".*\"){\r\n\t\t\t\t\tp.replace(/\\\\.|\\[\\]|\\[.*?[^\\\\]{1}\\]|\\{.*?\\}|\\(\\?[=:!]|./g,\r\n\t\t\t\t\tfunction(re){\r\n\t\t\t\t\t\tswitch(re.charAt(0)){\r\n\t\t\t\t\t\t\tcase '{':\r\n\t\t\t\t\t\t\tcase '+':\r\n\t\t\t\t\t\t\tcase '?':\r\n\t\t\t\t\t\t\tcase '*':\r\n\t\t\t\t\t\t\tcase '^':\r\n\t\t\t\t\t\t\tcase '$':\r\n\t\t\t\t\t\t\tcase '|':\r\n\t\t\t\t\t\t\tcase '(':\r\n\t\t\t\t\t\t\t\tpartialre += re;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \")\":\r\n\t\t\t\t\t\t\t\tpartialre += \"|$)\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t default:\r\n\t\t\t\t\t\t\t\tpartialre += \"(?:\"+re+\"|$)\";\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\ttry{ // this is needed for now since the above regexp parsing needs more test verification\r\n\t\t\t\t\t\"\".search(partialre);\r\n\t\t\t\t}catch(e){ // should never be here unless the original RE is bad or the parsing is bad\r\n\t\t\t\t\tpartialre = this.pattern;\r\n\t\t\t\t\tconsole.warn('RegExp error in ' + this.declaredClass + ': ' + this.pattern);\r\n\t\t\t\t} // should never be here unless the original RE is bad or the parsing is bad\r\n\t\t\t\tthis._partialre = \"^(?:\" + partialre + \")$\";\r\n\t\t\t}\r\n\t\t\treturn p;\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.messages = i18n.getLocalization(\"dijit.form\", \"validate\", this.lang);\r\n\t\t\tthis._setConstraintsAttr(this.constraints); // this needs to happen now (and later) due to codependency on _set*Attr calls attachPoints\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\tthis.inherited(arguments);\t// call FormValueWidget._setDisabledAttr()\r\n\t\t\tthis._refreshState();\r\n\t\t},\r\n\r\n\t\t_setRequiredAttr: function(/*Boolean*/ value){\r\n\t\t\tthis._set(\"required\", value);\r\n\t\t\tthis.focusNode.setAttribute(\"aria-required\", value);\r\n\t\t\tthis._refreshState();\r\n\t\t},\r\n\r\n\t\t_setMessageAttr: function(/*String*/ message){\r\n\t\t\tthis._set(\"message\", message);\r\n\t\t\tthis.displayMessage(message);\r\n\t\t},\r\n\r\n\t\treset:function(){\r\n\t\t\t// Overrides dijit/form/TextBox.reset() by also\r\n\t\t\t// hiding errors about partial matches\r\n\t\t\tthis._maskValidSubsetError = true;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\t// the message still exists but for back-compat, and to erase the tooltip\r\n\t\t\t// (if the message is being displayed as a tooltip), call displayMessage('')\r\n\t\t\tthis.displayMessage('');\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tTooltip.hide(this.domNode);\t// in case tooltip show when ValidationTextBox (or enclosing Dialog) destroyed\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/MappedTextBox',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/sniff\", // has(\"msapp\")\r\n\t\"dojo/dom-construct\", // domConstruct.place\r\n\t\"./ValidationTextBox\"\r\n], function(declare, has, domConstruct, ValidationTextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/MappedTextBox\r\n\r\n\treturn declare(\"dijit.form.MappedTextBox\", ValidationTextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tA dijit/form/ValidationTextBox subclass which provides a base class for widgets that have\r\n\t\t//\t\ta visible formatted display value, and a serializable\r\n\t\t//\t\tvalue in a hidden input field which is actually sent to the server.\r\n\t\t// description:\r\n\t\t//\t\tThe visible display may\r\n\t\t//\t\tbe locale-dependent and interactive.  The value sent to the server is stored in a hidden\r\n\t\t//\t\tinput field which uses the `name` attribute declared by the original widget.  That value sent\r\n\t\t//\t\tto the server is defined by the dijit/form/MappedTextBox.serialize() method and is typically\r\n\t\t//\t\tlocale-neutral.\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// We want the name attribute to go to the hidden <input>, not the displayed <input>,\r\n\t\t\t// so override _FormWidget.postMixInProperties() setting of nameAttrSetting for IE.\r\n\t\t\tthis.nameAttrSetting = \"\";\r\n\t\t},\r\n\r\n\t\t// Remap name attribute to be mapped to hidden node created in buildRendering(), rather than this.focusNode\r\n\t\t_setNameAttr: \"valueNode\",\r\n\r\n\t\tserialize: function(val /*=====, options =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function used to convert the get('value') result to a canonical\r\n\t\t\t//\t\t(non-localized) string.  For example, will print dates in ISO format, and\r\n\t\t\t//\t\tnumbers the same way as they are represented in javascript.\r\n\t\t\t// val: anything\r\n\t\t\t// options: Object?\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\treturn val.toString ? val.toString() : \"\"; // String\r\n\t\t},\r\n\r\n\t\ttoString: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns widget as a printable string using the widget's value\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar val = this.filter(this.get('value')); // call filter in case value is nonstring and filter has been customized\r\n\t\t\treturn val != null ? (typeof val == \"string\" ? val : this.serialize(val, this.constraints)) : \"\"; // String\r\n\t\t},\r\n\r\n\t\tvalidate: function(){\r\n\t\t\t// Overrides `dijit/form/TextBox.validate`\r\n\t\t\tthis.valueNode.value = this.toString();\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// Overrides `dijit/_TemplatedMixin/buildRendering`\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Create a hidden <input> node with the serialized value used for submit\r\n\t\t\t// (as opposed to the displayed value).\r\n\t\t\t// Passing in name as markup rather than relying on _setNameAttr custom setter above\r\n\t\t\t// to make query(input[name=...]) work on IE. (see #8660).\r\n\t\t\t// But not doing that for Windows 8 Store apps because it causes a security exception (see #16452).\r\n\t\t\tthis.valueNode = domConstruct.place(\"<input type='hidden'\" +\r\n\t\t\t\t((this.name && !has(\"msapp\")) ? ' name=\"' + this.name.replace(/\"/g, \"&quot;\") + '\"' : \"\") + \"/>\",\r\n\t\t\t\tthis.textbox, \"after\");\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// Overrides `dijit/form/ValidationTextBox.reset` to\r\n\t\t\t// reset the hidden textbox value to ''\r\n\t\t\tthis.valueNode.value = '';\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/DataList',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.byId\r\n\t\"dojo/_base/lang\", // lang.trim\r\n\t\"dojo/query\", // query\r\n\t\"dojo/store/Memory\",\r\n\t\"../registry\"\t// registry.add registry.remove\r\n], function(declare, dom, lang, query, MemoryStore, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/DataList\r\n\r\n\tfunction toItem(/*DOMNode*/ option){\r\n\t\t// summary:\r\n\t\t//\t\tConvert `<option>` node to hash\r\n\t\treturn {\r\n\t\t\tid: option.value,\r\n\t\t\tvalue: option.value,\r\n\t\t\tname: lang.trim(option.innerText || option.textContent || '')\r\n\t\t};\r\n\t}\r\n\r\n\treturn declare(\"dijit.form.DataList\", MemoryStore, {\r\n\t\t// summary:\r\n\t\t//\t\tInefficient but small data store specialized for inlined data via OPTION tags\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tProvides a store for inlined data like:\r\n\t\t//\r\n\t\t//\t|\t<datalist>\r\n\t\t//\t|\t\t<option value=\"AL\">Alabama</option>\r\n\t\t//\t|\t\t...\r\n\r\n\t\tconstructor: function(params, srcNodeRef){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String\r\n\t\t\t//\t\tAttach widget to this DOM node.\r\n\r\n\t\t\t// store pointer to original DOM tree\r\n\t\t\tthis.domNode = dom.byId(srcNodeRef);\r\n\r\n\t\t\tlang.mixin(this, params);\r\n\t\t\tif(this.id){\r\n\t\t\t\tregistry.add(this); // add to registry so it can be easily found by id\r\n\t\t\t}\r\n\t\t\tthis.domNode.style.display = \"none\";\r\n\r\n\t\t\tthis.inherited(arguments, [{\r\n\t\t\t\tdata: query(\"option\", this.domNode).map(toItem)\r\n\t\t\t}]);\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tregistry.remove(this.id);\r\n\t\t},\r\n\r\n\t\tfetchSelectedItem: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the option marked as selected, like `<option selected>`.\r\n\t\t\t//\t\tNot part of dojo.data API.\r\n\t\t\tvar option = query(\"> option[selected]\", this.domNode)[0] || query(\"> option\", this.domNode)[0];\r\n\t\t\treturn option && toItem(option);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_SearchMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.clone lang.hitch\r\n\t\"dojo/query\", // query\r\n\t\"dojo/string\", // string.substitute\r\n\t\"dojo/when\",\r\n\t\"../registry\"\t// registry.byId\r\n], function(declare, keys, lang, query, string, when, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_SearchMixin\r\n\r\n\r\n\treturn declare(\"dijit.form._SearchMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin that implements the base functionality to search a store based upon user-entered text such as\r\n\t\t//\t\twith `dijit/form/ComboBox` or `dijit/form/FilteringSelect`\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\t// pageSize: Integer\r\n\t\t//\t\tArgument to data provider.\r\n\t\t//\t\tSpecifies maximum number of search results to return per query\r\n\t\tpageSize: Infinity,\r\n\r\n\t\t// store: [const] dojo/store/api/Store\r\n\t\t//\t\tReference to data provider object used by this ComboBox.\r\n\t\t//\t\tThe store must accept an object hash of properties for its query. See `query` and `queryExpr` for details.\r\n\t\tstore: null,\r\n\r\n\t\t// fetchProperties: Object\r\n\t\t//\t\tMixin to the store's fetch.\r\n\t\t//\t\tFor example, to set the sort order of the ComboBox menu, pass:\r\n\t\t//\t|\t{ sort: [{attribute:\"name\",descending: true}] }\r\n\t\t//\t\tTo override the default queryOptions so that deep=false, do:\r\n\t\t//\t|\t{ queryOptions: {ignoreCase: true, deep: false} }\r\n\t\tfetchProperties:{},\r\n\r\n\t\t// query: Object\r\n\t\t//\t\tA query that can be passed to `store` to initially filter the items.\r\n\t\t//\t\tComboBox overwrites any reference to the `searchAttr` and sets it to the `queryExpr` with the user's input substituted.\r\n\t\tquery: {},\r\n\r\n\t\t// list: [const] String\r\n\t\t//\t\tAlternate to specifying a store.  Id of a dijit/form/DataList widget.\r\n\t\tlist: \"\",\r\n\t\t_setListAttr: function(list){\r\n\t\t\t// Avoid having list applied to the DOM node, since it has native meaning in modern browsers\r\n\t\t\tthis._set(\"list\", list);\r\n\t\t},\r\n\r\n\t\t// searchDelay: Integer\r\n\t\t//\t\tDelay in milliseconds between when user types something and we start\r\n\t\t//\t\tsearching based on that value\r\n\t\tsearchDelay: 200,\r\n\r\n\t\t// searchAttr: String\r\n\t\t//\t\tSearch for items in the data store where this attribute (in the item)\r\n\t\t//\t\tmatches what the user typed\r\n\t\tsearchAttr: \"name\",\r\n\r\n\t\t// queryExpr: String\r\n\t\t//\t\tThis specifies what query is sent to the data store,\r\n\t\t//\t\tbased on what the user has typed.  Changing this expression will modify\r\n\t\t//\t\twhether the results are only exact matches, a \"starting with\" match,\r\n\t\t//\t\tetc.\r\n\t\t//\t\t`${0}` will be substituted for the user text.\r\n\t\t//\t\t`*` is used for wildcards.\r\n\t\t//\t\t`${0}*` means \"starts with\", `*${0}*` means \"contains\", `${0}` means \"is\"\r\n\t\tqueryExpr: \"${0}*\",\r\n\r\n\t\t// ignoreCase: Boolean\r\n\t\t//\t\tSet true if the query should ignore case when matching possible items\r\n\t\tignoreCase: true,\r\n\r\n\t\t_patternToRegExp: function(pattern){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function to convert a simple pattern to a regular expression for matching.\r\n\t\t\t// description:\r\n\t\t\t//\t\tReturns a regular expression object that conforms to the defined conversion rules.\r\n\t\t\t//\t\tFor example:\r\n\t\t\t//\r\n\t\t\t//\t\t- ca*   -> /^ca.*$/\r\n\t\t\t//\t\t- *ca*  -> /^.*ca.*$/\r\n\t\t\t//\t\t- *c\\*a*  -> /^.*c\\*a.*$/\r\n\t\t\t//\t\t- *c\\*a?*  -> /^.*c\\*a..*$/\r\n\t\t\t//\r\n\t\t\t//\t\tand so on.\r\n\t\t\t// pattern: string\r\n\t\t\t//\t\tA simple matching pattern to convert that follows basic rules:\r\n\t\t\t//\r\n\t\t\t//\t\t- * Means match anything, so ca* means match anything starting with ca\r\n\t\t\t//\t\t- ? Means match single character.  So, b?b will match to bob and bab, and so on.\r\n\t\t\t//\t\t- \\ is an escape character.  So for example, \\* means do not treat * as a match, but literal character *.\r\n\t\t\t//\r\n\t\t\t//\t\tTo use a \\ as a character in the string, it must be escaped.  So in the pattern it should be\r\n\t\t\t//\t\trepresented by \\\\ to be treated as an ordinary \\ character instead of an escape.\r\n\r\n\t\t\treturn new RegExp(\"^\" + pattern.replace(/(\\\\.)|(\\*)|(\\?)|\\W/g, function(str, literal, star, question){\r\n\t\t\t\treturn star ? \".*\" : question ? \".\" : literal ? literal : \"\\\\\" + str;\r\n\t\t\t}) + \"$\", this.ignoreCase ? \"mi\" : \"m\");\r\n\t\t},\r\n\r\n\t\t_abortQuery: function(){\r\n\t\t\t// stop in-progress query\r\n\t\t\tif(this.searchTimer){\r\n\t\t\t\tthis.searchTimer = this.searchTimer.remove();\r\n\t\t\t}\r\n\t\t\tif(this._queryDeferHandle){\r\n\t\t\t\tthis._queryDeferHandle = this._queryDeferHandle.remove();\r\n\t\t\t}\r\n\t\t\tif(this._fetchHandle){\r\n\t\t\t\tif(this._fetchHandle.abort){\r\n\t\t\t\t\tthis._cancelingQuery = true;\r\n\t\t\t\t\tthis._fetchHandle.abort();\r\n\t\t\t\t\tthis._cancelingQuery = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(this._fetchHandle.cancel){\r\n\t\t\t\t\tthis._cancelingQuery = true;\r\n\t\t\t\t\tthis._fetchHandle.cancel();\r\n\t\t\t\t\tthis._cancelingQuery = false;\r\n\t\t\t\t}\r\n\t\t\t\tthis._fetchHandle = null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_processInput: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles input (keyboard/paste) events\r\n\t\t\tif(this.disabled || this.readOnly){ return; }\r\n\t\t\tvar key = evt.charOrCode;\r\n\r\n\t\t\t// except for cutting/pasting case - ctrl + x/v\r\n\t\t\tif(\"type\" in evt && evt.type.substring(0,3) == \"key\" && (evt.altKey || ((evt.ctrlKey || evt.metaKey) && (key != 'x' && key != 'v')) || key == keys.SHIFT)){\r\n\t\t\t\treturn; // throw out weird key combinations and spurious events\r\n\t\t\t}\r\n\r\n\t\t\tvar doSearch = false;\r\n\t\t\tthis._prev_key_backspace = false;\r\n\r\n\t\t\tswitch(key){\r\n\t\t\t\tcase keys.DELETE:\r\n\t\t\t\tcase keys.BACKSPACE:\r\n\t\t\t\t\tthis._prev_key_backspace = true;\r\n\t\t\t\t\tthis._maskValidSubsetError = true;\r\n\t\t\t\t\tdoSearch = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Non char keys (F1-F12 etc..) shouldn't start a search..\r\n\t\t\t\t\t// Ascii characters and IME input (Chinese, Japanese etc.) should.\r\n\t\t\t\t\t//IME input produces keycode == 229.\r\n\t\t\t\t\tdoSearch = typeof key == 'string' || key == 229;\r\n\t\t\t}\r\n\t\t\tif(doSearch){\r\n\t\t\t\t// need to wait a tad before start search so that the event\r\n\t\t\t\t// bubbles through DOM and we have value visible\r\n\t\t\t\tif(!this.store){\r\n\t\t\t\t\tthis.onSearch();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.searchTimer = this.defer(\"_startSearchFromInput\", 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonSearch: function(/*===== results, query, options =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when a search completes.\r\n\t\t\t//\r\n\t\t\t// results: Object\r\n\t\t\t//\t\tAn array of items from the originating _SearchMixin's store.\r\n\t\t\t//\r\n\t\t\t// query: Object\r\n\t\t\t//\t\tA copy of the originating _SearchMixin's query property.\r\n\t\t\t//\r\n\t\t\t// options: Object\r\n\t\t\t//\t\tThe additional parameters sent to the originating _SearchMixin's store, including: start, count, queryOptions.\r\n\t\t\t//\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_startSearchFromInput: function(){\r\n\t\t\tthis._startSearch(this.focusNode.value);\r\n\t\t},\r\n\r\n\t\t_startSearch: function(/*String*/ text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStarts a search for elements matching text (text==\"\" means to return all items),\r\n\t\t\t//\t\tand calls onSearch(...) when the search completes, to display the results.\r\n\r\n\t\t\tthis._abortQuery();\r\n\t\t\tvar\r\n\t\t\t\t_this = this,\r\n\t\t\t\t// Setup parameters to be passed to store.query().\r\n\t\t\t\t// Create a new query to prevent accidentally querying for a hidden\r\n\t\t\t\t// value from FilteringSelect's keyField\r\n\t\t\t\tquery = lang.clone(this.query), // #5970\r\n\t\t\t\toptions = {\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tcount: this.pageSize,\r\n\t\t\t\t\tqueryOptions: {\t\t// remove for 2.0\r\n\t\t\t\t\t\tignoreCase: this.ignoreCase,\r\n\t\t\t\t\t\tdeep: true\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tqs = string.substitute(this.queryExpr, [text.replace(/([\\\\\\*\\?])/g, \"\\\\$1\")]),\r\n\t\t\t\tq,\r\n\t\t\t\tstartQuery = function(){\r\n\t\t\t\t\tvar resPromise = _this._fetchHandle = _this.store.query(query, options);\r\n\t\t\t\t\tif(_this.disabled || _this.readOnly || (q !== _this._lastQuery)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} // avoid getting unwanted notify\r\n\t\t\t\t\twhen(resPromise, function(res){\r\n\t\t\t\t\t\t_this._fetchHandle = null;\r\n\t\t\t\t\t\tif(!_this.disabled && !_this.readOnly && (q === _this._lastQuery)){ // avoid getting unwanted notify\r\n\t\t\t\t\t\t\twhen(resPromise.total, function(total){\r\n\t\t\t\t\t\t\t\tres.total = total;\r\n\t\t\t\t\t\t\t\tvar pageSize = _this.pageSize;\r\n\t\t\t\t\t\t\t\tif(isNaN(pageSize) || pageSize > res.total){ pageSize = res.total; }\r\n\t\t\t\t\t\t\t\t// Setup method to fetching the next page of results\r\n\t\t\t\t\t\t\t\tres.nextPage = function(direction){\r\n\t\t\t\t\t\t\t\t\t//\ttell callback the direction of the paging so the screen\r\n\t\t\t\t\t\t\t\t\t//\treader knows which menu option to shout\r\n\t\t\t\t\t\t\t\t\toptions.direction = direction = direction !== false;\r\n\t\t\t\t\t\t\t\t\toptions.count = pageSize;\r\n\t\t\t\t\t\t\t\t\tif(direction){\r\n\t\t\t\t\t\t\t\t\t\toptions.start += res.length;\r\n\t\t\t\t\t\t\t\t\t\tif(options.start >= res.total){\r\n\t\t\t\t\t\t\t\t\t\t\toptions.count = 0;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\toptions.start -= pageSize;\r\n\t\t\t\t\t\t\t\t\t\tif(options.start < 0){\r\n\t\t\t\t\t\t\t\t\t\t\toptions.count = Math.max(pageSize + options.start, 0);\r\n\t\t\t\t\t\t\t\t\t\t\toptions.start = 0;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(options.count <= 0){\r\n\t\t\t\t\t\t\t\t\t\tres.length = 0;\r\n\t\t\t\t\t\t\t\t\t\t_this.onSearch(res, query, options);\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tstartQuery();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t_this.onSearch(res, query, options);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, function(err){\r\n\t\t\t\t\t\t_this._fetchHandle = null;\r\n\t\t\t\t\t\tif(!_this._cancelingQuery){\t// don't treat canceled query as an error\r\n\t\t\t\t\t\t\tconsole.error(_this.declaredClass + ' ' + err.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\tlang.mixin(options, this.fetchProperties);\r\n\r\n\t\t\t// Generate query\r\n\t\t\tif(this.store._oldAPI){\r\n\t\t\t\t// remove this branch for 2.0\r\n\t\t\t\tq = qs;\r\n\t\t\t}else{\r\n\t\t\t\t// Query on searchAttr is a regex for benefit of dojo/store/Memory,\r\n\t\t\t\t// but with a toString() method to help dojo/store/JsonRest.\r\n\t\t\t\t// Search string like \"Co*\" converted to regex like /^Co.*$/i.\r\n\t\t\t\tq = this._patternToRegExp(qs);\r\n\t\t\t\tq.toString = function(){ return qs; };\r\n\t\t\t}\r\n\r\n\t\t\t// set _lastQuery, *then* start the timeout\r\n\t\t\t// otherwise, if the user types and the last query returns before the timeout,\r\n\t\t\t// _lastQuery won't be set and their input gets rewritten\r\n\t\t\tthis._lastQuery = query[this.searchAttr] = q;\r\n\t\t\tthis._queryDeferHandle = this.defer(startQuery, this.searchDelay);\r\n\t\t},\r\n\r\n\t\t//////////// INITIALIZATION METHODS ///////////////////////////////////////\r\n\r\n\t\tconstructor: function(){\r\n\t\t\tthis.query={};\r\n\t\t\tthis.fetchProperties={};\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tif(!this.store){\r\n\t\t\t\tvar list = this.list;\r\n\t\t\t\tif(list){\r\n\t\t\t\t\tthis.store = registry.byId(list);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_AutoCompleterMixin',[\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.get\r\n\t\"dojo/keys\",\r\n\t\"dojo/_base/lang\", // lang.clone lang.hitch\r\n\t\"dojo/query\", // query\r\n\t\"dojo/regexp\", // regexp.escapeString\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"./DataList\",\r\n\t\"./_TextBoxMixin\", // defines _TextBoxMixin.selectInputText\r\n\t\"./_SearchMixin\"\r\n], function(aspect, declare, domAttr, keys, lang, query, regexp, has, DataList, _TextBoxMixin, SearchMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_AutoCompleterMixin\r\n\r\n\tvar AutoCompleterMixin = declare(\"dijit.form._AutoCompleterMixin\", SearchMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin that implements the base functionality for `dijit/form/ComboBox`/`dijit/form/FilteringSelect`\r\n\t\t// description:\r\n\t\t//\t\tAll widgets that mix in dijit/form/_AutoCompleterMixin must extend `dijit/form/_FormValueWidget`.\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\t// item: Object\r\n\t\t//\t\tThis is the item returned by the dojo/store/api/Store implementation that\r\n\t\t//\t\tprovides the data for this ComboBox, it's the currently selected item.\r\n\t\titem: null,\r\n\r\n\t\t// autoComplete: Boolean\r\n\t\t//\t\tIf user types in a partial string, and then tab out of the `<input>` box,\r\n\t\t//\t\tautomatically copy the first entry displayed in the drop down list to\r\n\t\t//\t\tthe `<input>` field\r\n\t\tautoComplete: true,\r\n\r\n\t\t// highlightMatch: String\r\n\t\t//\t\tOne of: \"first\", \"all\" or \"none\".\r\n\t\t//\r\n\t\t//\t\tIf the ComboBox/FilteringSelect opens with the search results and the searched\r\n\t\t//\t\tstring can be found, it will be highlighted.  If set to \"all\"\r\n\t\t//\t\tthen will probably want to change `queryExpr` parameter to '*${0}*'\r\n\t\t//\r\n\t\t//\t\tHighlighting is only performed when `labelType` is \"text\", so as to not\r\n\t\t//\t\tinterfere with any HTML markup an HTML label might contain.\r\n\t\thighlightMatch: \"first\",\r\n\r\n\t\t// labelAttr: String?\r\n\t\t//\t\tThe entries in the drop down list come from this attribute in the\r\n\t\t//\t\tdojo.data items.\r\n\t\t//\t\tIf not specified, the searchAttr attribute is used instead.\r\n\t\tlabelAttr: \"\",\r\n\r\n\t\t// labelType: String\r\n\t\t//\t\tSpecifies how to interpret the labelAttr in the data store items.\r\n\t\t//\t\tCan be \"html\" or \"text\".\r\n\t\tlabelType: \"text\",\r\n\r\n\t\t// Flags to _HasDropDown to limit height of drop down to make it fit in viewport\r\n\t\tmaxHeight: -1,\r\n\r\n\t\t// For backwards compatibility let onClick events propagate, even clicks on the down arrow button\r\n\t\t_stopClickEvents: false,\r\n\r\n\t\t_getCaretPos: function(/*DomNode*/ element){\r\n\t\t\t// khtml 3.5.2 has selection* methods as does webkit nightlies from 2005-06-22\r\n\t\t\tvar pos = 0;\r\n\t\t\tif(typeof(element.selectionStart) == \"number\"){\r\n\t\t\t\t// FIXME: this is totally borked on Moz < 1.3. Any recourse?\r\n\t\t\t\tpos = element.selectionStart;\r\n\t\t\t}else if(has(\"ie\")){\r\n\t\t\t\t// in the case of a mouse click in a popup being handled,\r\n\t\t\t\t// then the document.selection is not the textarea, but the popup\r\n\t\t\t\t// var r = document.selection.createRange();\r\n\t\t\t\t// hack to get IE 6 to play nice. What a POS browser.\r\n\t\t\t\tvar tr = element.ownerDocument.selection.createRange().duplicate();\r\n\t\t\t\tvar ntr = element.createTextRange();\r\n\t\t\t\ttr.move(\"character\", 0);\r\n\t\t\t\tntr.move(\"character\", 0);\r\n\t\t\t\ttry{\r\n\t\t\t\t\t// If control doesn't have focus, you get an exception.\r\n\t\t\t\t\t// Seems to happen on reverse-tab, but can also happen on tab (seems to be a race condition - only happens sometimes).\r\n\t\t\t\t\t// There appears to be no workaround for this - googled for quite a while.\r\n\t\t\t\t\tntr.setEndPoint(\"EndToEnd\", tr);\r\n\t\t\t\t\tpos = String(ntr.text).replace(/\\r/g, \"\").length;\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t// If focus has shifted, 0 is fine for caret pos.\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\r\n\t\t_setCaretPos: function(/*DomNode*/ element, /*Number*/ location){\r\n\t\t\tlocation = parseInt(location);\r\n\t\t\t_TextBoxMixin.selectInputText(element, location, location);\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\t// Additional code to set disabled state of ComboBox node.\r\n\t\t\t// Overrides _FormValueWidget._setDisabledAttr() or ValidationTextBox._setDisabledAttr().\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.domNode.setAttribute(\"aria-disabled\", value ? \"true\" : \"false\");\r\n\t\t},\r\n\r\n\t\t_onKey: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles keyboard events\r\n\r\n\t\t\tif(evt.charCode >= 32){\r\n\t\t\t\treturn;\r\n\t\t\t} // alphanumeric reserved for searching\r\n\r\n\t\t\tvar key = evt.charCode || evt.keyCode;\r\n\r\n\t\t\t// except for cutting/pasting case - ctrl + x/v\r\n\t\t\tif(key == keys.ALT || key == keys.CTRL || key == keys.META || key == keys.SHIFT){\r\n\t\t\t\treturn; // throw out spurious events\r\n\t\t\t}\r\n\r\n\t\t\tvar pw = this.dropDown;\r\n\t\t\tvar highlighted = null;\r\n\t\t\tthis._abortQuery();\r\n\r\n\t\t\t// _HasDropDown will do some of the work:\r\n\t\t\t//\r\n\t\t\t//\t1. when drop down is not yet shown:\r\n\t\t\t//\t\t- if user presses the down arrow key, call loadDropDown()\r\n\t\t\t//\t2. when drop down is already displayed:\r\n\t\t\t//\t\t- on ESC key, call closeDropDown()\r\n\t\t\t//\t\t- otherwise, call dropDown.handleKey() to process the keystroke\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(evt.altKey || evt.ctrlKey || evt.metaKey){\r\n\t\t\t\treturn;\r\n\t\t\t} // don't process keys with modifiers  - but we want shift+TAB\r\n\r\n\t\t\tif(this._opened){\r\n\t\t\t\thighlighted = pw.getHighlightedOption();\r\n\t\t\t}\r\n\t\t\tswitch(key){\r\n\t\t\t\tcase keys.PAGE_DOWN:\r\n\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\tcase keys.PAGE_UP:\r\n\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\t\t// Keystroke caused ComboBox_menu to move to a different item.\r\n\t\t\t\t\t// Copy new item to <input> box.\r\n\t\t\t\t\tif(this._opened){\r\n\t\t\t\t\t\tthis._announceOption(highlighted);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase keys.ENTER:\r\n\t\t\t\t\t// prevent submitting form if user presses enter. Also\r\n\t\t\t\t\t// prevent accepting the value if either Next or Previous\r\n\t\t\t\t\t// are selected\r\n\t\t\t\t\tif(highlighted){\r\n\t\t\t\t\t\t// only stop event on prev/next\r\n\t\t\t\t\t\tif(highlighted == pw.nextButton){\r\n\t\t\t\t\t\t\tthis._nextSearch(1);\r\n\t\t\t\t\t\t\t// prevent submit\r\n\t\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}else if(highlighted == pw.previousButton){\r\n\t\t\t\t\t\t\tthis._nextSearch(-1);\r\n\t\t\t\t\t\t\t// prevent submit\r\n\t\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// prevent submit if ENTER was to choose an item\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// Update 'value' (ex: KY) according to currently displayed text\r\n\t\t\t\t\t\tthis._setBlurValue(); // set value if needed\r\n\t\t\t\t\t\tthis._setCaretPos(this.focusNode, this.focusNode.value.length); // move cursor to end and cancel highlighting\r\n\t\t\t\t\t}\r\n\t\t\t\t// fall through\r\n\r\n\t\t\t\tcase keys.TAB:\r\n\t\t\t\t\tvar newvalue = this.get('displayedValue');\r\n\t\t\t\t\t//\tif the user had More Choices selected fall into the\r\n\t\t\t\t\t//\t_onBlur handler\r\n\t\t\t\t\tif(pw && (newvalue == pw._messages[\"previousMessage\"] || newvalue == pw._messages[\"nextMessage\"])){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(highlighted){\r\n\t\t\t\t\t\tthis._selectOption(highlighted);\r\n\t\t\t\t\t}\r\n\t\t\t\t// fall through\r\n\r\n\t\t\t\tcase keys.ESCAPE:\r\n\t\t\t\t\tif(this._opened){\r\n\t\t\t\t\t\tthis._lastQuery = null; // in case results come back later\r\n\t\t\t\t\t\tthis.closeDropDown();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_autoCompleteText: function(/*String*/ text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFill in the textbox with the first item from the drop down\r\n\t\t\t//\t\tlist, and highlight the characters that were\r\n\t\t\t//\t\tauto-completed. For example, if user typed \"CA\" and the\r\n\t\t\t//\t\tdrop down list appeared, the textbox would be changed to\r\n\t\t\t//\t\t\"California\" and \"ifornia\" would be highlighted.\r\n\r\n\t\t\tvar fn = this.focusNode;\r\n\r\n\t\t\t// IE7: clear selection so next highlight works all the time\r\n\t\t\t_TextBoxMixin.selectInputText(fn, fn.value.length);\r\n\t\t\t// does text autoComplete the value in the textbox?\r\n\t\t\tvar caseFilter = this.ignoreCase ? 'toLowerCase' : 'substr';\r\n\t\t\tif(text[caseFilter](0).indexOf(this.focusNode.value[caseFilter](0)) == 0){\r\n\t\t\t\tvar cpos = this.autoComplete ? this._getCaretPos(fn) : fn.value.length;\r\n\t\t\t\t// only try to extend if we added the last character at the end of the input\r\n\t\t\t\tif((cpos + 1) > fn.value.length){\r\n\t\t\t\t\t// only add to input node as we would overwrite Capitalisation of chars\r\n\t\t\t\t\t// actually, that is ok\r\n\t\t\t\t\tfn.value = text;//.substr(cpos);\r\n\t\t\t\t\t// visually highlight the autocompleted characters\r\n\t\t\t\t\t_TextBoxMixin.selectInputText(fn, cpos);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// text does not autoComplete; replace the whole value and highlight\r\n\t\t\t\tfn.value = text;\r\n\t\t\t\t_TextBoxMixin.selectInputText(fn);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_openResultList: function(/*Object*/ results, /*Object*/ query, /*Object*/ options){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when a search completes.\r\n\t\t\t// description:\r\n\t\t\t//\t\t1. generates drop-down list and calls _showResultList() to display it\r\n\t\t\t//\t\t2. if this result list is from user pressing \"more choices\"/\"previous choices\"\r\n\t\t\t//\t\t\tthen tell screen reader to announce new option\r\n\t\t\tvar wasSelected = this.dropDown.getHighlightedOption();\r\n\t\t\tthis.dropDown.clearResultList();\r\n\t\t\tif(!results.length && options.start == 0){ // if no results and not just the previous choices button\r\n\t\t\t\tthis.closeDropDown();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._nextSearch = this.dropDown.onPage = lang.hitch(this, function(direction){\r\n\t\t\t\tresults.nextPage(direction !== -1);\r\n\t\t\t\tthis.focus();\r\n\t\t\t});\r\n\r\n\t\t\t// Fill in the textbox with the first item from the drop down list,\r\n\t\t\t// and highlight the characters that were auto-completed. For\r\n\t\t\t// example, if user typed \"CA\" and the drop down list appeared, the\r\n\t\t\t// textbox would be changed to \"California\" and \"ifornia\" would be\r\n\t\t\t// highlighted.\r\n\r\n\t\t\tthis.dropDown.createOptions(\r\n\t\t\t\tresults,\r\n\t\t\t\toptions,\r\n\t\t\t\tlang.hitch(this, \"_getMenuLabelFromItem\")\r\n\t\t\t);\r\n\r\n\t\t\t// show our list (only if we have content, else nothing)\r\n\t\t\tthis._showResultList();\r\n\r\n\t\t\t// #4091:\r\n\t\t\t//\t\ttell the screen reader that the paging callback finished by\r\n\t\t\t//\t\tshouting the next choice\r\n\t\t\tif(\"direction\" in options){\r\n\t\t\t\tif(options.direction){\r\n\t\t\t\t\tthis.dropDown.highlightFirstOption();\r\n\t\t\t\t}else if(!options.direction){\r\n\t\t\t\t\tthis.dropDown.highlightLastOption();\r\n\t\t\t\t}\r\n\t\t\t\tif(wasSelected){\r\n\t\t\t\t\tthis._announceOption(this.dropDown.getHighlightedOption());\r\n\t\t\t\t}\r\n\t\t\t}else if(this.autoComplete && !this._prev_key_backspace\r\n\t\t\t\t// when the user clicks the arrow button to show the full list,\r\n\t\t\t\t// startSearch looks for \"*\".\r\n\t\t\t\t// it does not make sense to autocomplete\r\n\t\t\t\t// if they are just previewing the options available.\r\n\t\t\t\t&& !/^[*]+$/.test(query[this.searchAttr].toString())){\r\n\t\t\t\tthis._announceOption(this.dropDown.containerNode.firstChild.nextSibling); // 1st real item\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_showResultList: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay the drop down if not already displayed, or if it is displayed, then\r\n\t\t\t//\t\treposition it if necessary (reposition may be necessary if drop down's height changed).\r\n\t\t\tthis.closeDropDown(true);\r\n\t\t\tthis.openDropDown();\r\n\t\t\tthis.domNode.setAttribute(\"aria-expanded\", \"true\");\r\n\t\t},\r\n\r\n\t\tloadDropDown: function(/*Function*/ /*===== callback =====*/){\r\n\t\t\t// Overrides _HasDropDown.loadDropDown().\r\n\t\t\t// This is called when user has pressed button icon or pressed the down arrow key\r\n\t\t\t// to open the drop down.\r\n\t\t\tthis._startSearchAll();\r\n\t\t},\r\n\r\n\t\tisLoaded: function(){\r\n\t\t\t// signal to _HasDropDown that it needs to call loadDropDown() to load the\r\n\t\t\t// drop down asynchronously before displaying it\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tcloseDropDown: function(){\r\n\t\t\t// Overrides _HasDropDown.closeDropDown().  Closes the drop down (assuming that it's open).\r\n\t\t\t// This method is the callback when the user types ESC or clicking\r\n\t\t\t// the button icon while the drop down is open.  It's also called by other code.\r\n\t\t\tthis._abortQuery();\r\n\t\t\tif(this._opened){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.domNode.setAttribute(\"aria-expanded\", \"false\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setBlurValue: function(){\r\n\t\t\t// if the user clicks away from the textbox OR tabs away, set the\r\n\t\t\t// value to the textbox value\r\n\t\t\t// #4617:\r\n\t\t\t//\t\tif value is now more choices or previous choices, revert\r\n\t\t\t//\t\tthe value\r\n\t\t\tvar newvalue = this.get('displayedValue');\r\n\t\t\tvar pw = this.dropDown;\r\n\t\t\tif(pw && (newvalue == pw._messages[\"previousMessage\"] || newvalue == pw._messages[\"nextMessage\"])){\r\n\t\t\t\tthis._setValueAttr(this._lastValueReported, true);\r\n\t\t\t}else if(typeof this.item == \"undefined\"){\r\n\t\t\t\t// Update 'value' (ex: KY) according to currently displayed text\r\n\t\t\t\tthis.item = null;\r\n\t\t\t\tthis.set('displayedValue', newvalue);\r\n\t\t\t}else{\r\n\t\t\t\tif(this.value != this._lastValueReported){\r\n\t\t\t\t\tthis._handleOnChange(this.value, true);\r\n\t\t\t\t}\r\n\t\t\t\tthis._refreshState();\r\n\t\t\t}\r\n\t\t\t// Remove aria-activedescendant since it may not be removed if they select with arrows then blur with mouse\r\n\t\t\tthis.focusNode.removeAttribute(\"aria-activedescendant\");\r\n\t\t},\r\n\r\n\t\t_setItemAttr: function(/*item*/ item, /*Boolean?*/ priorityChange, /*String?*/ displayedValue){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the displayed valued in the input box, and the hidden value\r\n\t\t\t//\t\tthat gets submitted, based on a dojo.data store item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tUsers shouldn't call this function; they should be calling\r\n\t\t\t//\t\tset('item', value)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar value = '';\r\n\t\t\tif(item){\r\n\t\t\t\tif(!displayedValue){\r\n\t\t\t\t\tdisplayedValue = this.store._oldAPI ? // remove getValue() for 2.0 (old dojo.data API)\r\n\t\t\t\t\t\tthis.store.getValue(item, this.searchAttr) : item[this.searchAttr];\r\n\t\t\t\t}\r\n\t\t\t\tvalue = this._getValueField() != this.searchAttr ? this.store.getIdentity(item) : displayedValue;\r\n\t\t\t}\r\n\t\t\tthis.set('value', value, priorityChange, displayedValue, item);\r\n\t\t},\r\n\r\n\t\t_announceOption: function(/*Node*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta11y code that puts the highlighted option in the textbox.\r\n\t\t\t//\t\tThis way screen readers will know what is happening in the\r\n\t\t\t//\t\tmenu.\r\n\r\n\t\t\tif(!node){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// pull the text value from the item attached to the DOM node\r\n\t\t\tvar newValue;\r\n\t\t\tif(node == this.dropDown.nextButton ||\r\n\t\t\t\tnode == this.dropDown.previousButton){\r\n\t\t\t\tnewValue = node.innerHTML;\r\n\t\t\t\tthis.item = undefined;\r\n\t\t\t\tthis.value = '';\r\n\t\t\t}else{\r\n\t\t\t\tvar item = this.dropDown.items[node.getAttribute(\"item\")];\r\n\t\t\t\tnewValue = (this.store._oldAPI ? // remove getValue() for 2.0 (old dojo.data API)\r\n\t\t\t\t\tthis.store.getValue(item, this.searchAttr) : item[this.searchAttr]).toString();\r\n\t\t\t\tthis.set('item', item, false, newValue);\r\n\t\t\t}\r\n\t\t\t// get the text that the user manually entered (cut off autocompleted text)\r\n\t\t\tthis.focusNode.value = this.focusNode.value.substring(0, this._lastInput.length);\r\n\t\t\t// set up ARIA activedescendant\r\n\t\t\tthis.focusNode.setAttribute(\"aria-activedescendant\", domAttr.get(node, \"id\"));\r\n\t\t\t// autocomplete the rest of the option to announce change\r\n\t\t\tthis._autoCompleteText(newValue);\r\n\t\t},\r\n\r\n\t\t_selectOption: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMenu callback function, called when an item in the menu is selected.\r\n\t\t\tthis.closeDropDown();\r\n\t\t\tif(target){\r\n\t\t\t\tthis._announceOption(target);\r\n\t\t\t}\r\n\t\t\tthis._setCaretPos(this.focusNode, this.focusNode.value.length);\r\n\t\t\tthis._handleOnChange(this.value, true);\r\n\t\t\t// Remove aria-activedescendant since the drop down is no loner visible\r\n\t\t\t// after closeDropDown() but _announceOption() adds it back in\r\n\t\t\tthis.focusNode.removeAttribute(\"aria-activedescendant\");\r\n\t\t},\r\n\r\n\t\t_startSearchAll: function(){\r\n\t\t\tthis._startSearch('');\r\n\t\t},\r\n\r\n\t\t_startSearchFromInput: function(){\r\n\t\t\tthis.item = undefined; // undefined means item needs to be set\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_startSearch: function(/*String*/ key){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStarts a search for elements matching key (key==\"\" means to return all items),\r\n\t\t\t//\t\tand calls _openResultList() when the search completes, to display the results.\r\n\t\t\tif(!this.dropDown){\r\n\t\t\t\tvar popupId = this.id + \"_popup\",\r\n\t\t\t\t\tdropDownConstructor = lang.isString(this.dropDownClass) ?\r\n\t\t\t\t\t\tlang.getObject(this.dropDownClass, false) : this.dropDownClass;\r\n\t\t\t\tthis.dropDown = new dropDownConstructor({\r\n\t\t\t\t\tonChange: lang.hitch(this, this._selectOption),\r\n\t\t\t\t\tid: popupId,\r\n\t\t\t\t\tdir: this.dir,\r\n\t\t\t\t\ttextDir: this.textDir\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis._lastInput = key; // Store exactly what was entered by the user.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_getValueField: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper for postMixInProperties() to set this.value based on data inlined into the markup.\r\n\t\t\t//\t\tReturns the attribute name in the item (in dijit/form/_ComboBoxDataStore) to use as the value.\r\n\t\t\treturn this.searchAttr;\r\n\t\t},\r\n\r\n\t\t//////////// INITIALIZATION METHODS ///////////////////////////////////////\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.store && this.srcNodeRef){\r\n\t\t\t\tvar srcNodeRef = this.srcNodeRef;\r\n\t\t\t\t// if user didn't specify store, then assume there are option tags\r\n\t\t\t\tthis.store = new DataList({}, srcNodeRef);\r\n\r\n\t\t\t\t// if there is no value set and there is an option list, set\r\n\t\t\t\t// the value to the first value to be consistent with native Select\r\n\t\t\t\t// Firefox and Safari set value\r\n\t\t\t\t// IE6 and Opera set selectedIndex, which is automatically set\r\n\t\t\t\t// by the selected attribute of an option tag\r\n\t\t\t\t// IE6 does not set value, Opera sets value = selectedIndex\r\n\t\t\t\tif(!(\"value\" in this.params)){\r\n\t\t\t\t\tvar item = (this.item = this.store.fetchSelectedItem());\r\n\t\t\t\t\tif(item){\r\n\t\t\t\t\t\tvar valueField = this._getValueField();\r\n\t\t\t\t\t\t// remove getValue() for 2.0 (old dojo.data API)\r\n\t\t\t\t\t\tthis.value = this.store._oldAPI ? this.store.getValue(item, valueField) : item[valueField];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSubclasses must call this method from their postCreate() methods\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// find any associated label element and add to ComboBox node.\r\n\t\t\tvar label = query('label[for=\"' + this.id + '\"]');\r\n\t\t\tif(label.length){\r\n\t\t\t\tif(!label[0].id){\r\n\t\t\t\t\tlabel[0].id = this.id + \"_label\";\r\n\t\t\t\t}\r\n\t\t\t\tthis.domNode.setAttribute(\"aria-labelledby\", label[0].id);\r\n\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\taspect.after(this, \"onSearch\", lang.hitch(this, \"_openResultList\"), true);\r\n\t\t},\r\n\r\n\t\t_getMenuLabelFromItem: function(/*Item*/ item){\r\n\t\t\tvar label = this.labelFunc(item, this.store),\r\n\t\t\t\tlabelType = this.labelType;\r\n\t\t\t// If labelType is not \"text\" we don't want to screw any markup ot whatever.\r\n\t\t\tif(this.highlightMatch != \"none\" && this.labelType == \"text\" && this._lastInput){\r\n\t\t\t\tlabel = this.doHighlight(label, this._lastInput);\r\n\t\t\t\tlabelType = \"html\";\r\n\t\t\t}\r\n\t\t\treturn {html: labelType == \"html\", label: label};\r\n\t\t},\r\n\r\n\t\tdoHighlight: function(/*String*/ label, /*String*/ find){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHighlights the string entered by the user in the menu.  By default this\r\n\t\t\t//\t\thighlights the first occurrence found. Override this method\r\n\t\t\t//\t\tto implement your custom highlighting.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar\r\n\t\t\t// Add (g)lobal modifier when this.highlightMatch == \"all\" and (i)gnorecase when this.ignoreCase == true\r\n\t\t\t\tmodifiers = (this.ignoreCase ? \"i\" : \"\") + (this.highlightMatch == \"all\" ? \"g\" : \"\"),\r\n\t\t\t\ti = this.queryExpr.indexOf(\"${0}\");\r\n\t\t\tfind = regexp.escapeString(find); // escape regexp special chars\r\n\t\t\t//If < appears in label, and user presses t, we don't want to highlight the t in the escaped \"&lt;\"\r\n\t\t\t//first find out every occurrences of \"find\", wrap each occurrence in a pair of \"\\uFFFF\" characters (which\r\n\t\t\t//should not appear in any string). then html escape the whole string, and replace '\\uFFFF\" with the\r\n\t\t\t//HTML highlight markup.\r\n\t\t\treturn this._escapeHtml(label.replace(\r\n\t\t\t\tnew RegExp((i == 0 ? \"^\" : \"\") + \"(\" + find + \")\" + (i == (this.queryExpr.length - 4) ? \"$\" : \"\"), modifiers),\r\n\t\t\t\t'\\uFFFF$1\\uFFFF')).replace(\r\n\t\t\t\t/\\uFFFF([^\\uFFFF]+)\\uFFFF/g, '<span class=\"dijitComboBoxHighlightMatch\">$1</span>'\r\n\t\t\t); // returns String, (almost) valid HTML (entities encoded)\r\n\t\t},\r\n\r\n\t\t_escapeHtml: function(/*String*/ str){\r\n\t\t\t// TODO Should become dojo.html.entities(), when exists use instead\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds escape sequences for special characters in XML: `&<>\"'`\r\n\t\t\tstr = String(str).replace(/&/gm, \"&amp;\").replace(/</gm, \"&lt;\")\r\n\t\t\t\t.replace(/>/gm, \"&gt;\").replace(/\"/gm, \"&quot;\"); //balance\"\r\n\t\t\treturn str; // string\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// Overrides the _FormWidget.reset().\r\n\t\t\t// Additionally reset the .item (to clean up).\r\n\t\t\tthis.item = null;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tlabelFunc: function(item, store){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tComputes the label to display based on the dojo.data store item.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tThe item from the store\r\n\t\t\t// store: dojo/store/api/Store\r\n\t\t\t//\t\tThe store.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe label that the ComboBox should display\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// Use toString() because XMLStore returns an XMLItem whereas this\r\n\t\t\t// method is expected to return a String (#9354).\r\n\t\t\t// Remove getValue() for 2.0 (old dojo.data API)\r\n\t\t\treturn (store._oldAPI ? store.getValue(item, this.labelAttr || this.searchAttr) :\r\n\t\t\t\titem[this.labelAttr || this.searchAttr]).toString(); // String\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*String*/ value, /*Boolean?*/ priorityChange, /*String?*/ displayedValue, /*item?*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', value) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets the value of the select.\r\n\t\t\tthis._set(\"item\", item || null); // value not looked up in store\r\n\t\t\tif(value == null /* or undefined */){\r\n\t\t\t\tvalue = '';\r\n\t\t\t} // null translates to blank\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tAutoCompleterMixin.extend({\r\n\t\t\t_setTextDirAttr: function(/*String*/ textDir){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSetter for textDir, needed for the dropDown's textDir update.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tUsers shouldn't call this function; they should be calling\r\n\t\t\t\t//\t\tset('textDir', value)\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\t// update the drop down also (_ComboBoxMenuMixin)\r\n\t\t\t\tif(this.dropDown){\r\n\t\t\t\t\tthis.dropDown._set(\"textDir\", textDir);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn AutoCompleterMixin;\r\n});\r\n\n\ndefine('dijit/form/_ComboBoxMenuMixin',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/has\",\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/i18n!./nls/ComboBox\"\r\n], function(array, declare, domAttr, has, i18n){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ComboBoxMenuMixin\r\n\r\n\tvar ComboBoxMenuMixin = declare(\"dijit.form._ComboBoxMenuMixin\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), null, {\r\n\t\t// summary:\r\n\t\t//\t\tFocus-less menu for internal use in `dijit/form/ComboBox`\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// _messages: Object\r\n\t\t//\t\tHolds \"next\" and \"previous\" text for paging buttons on drop down\r\n\t\t_messages: null,\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._messages = i18n.getLocalization(\"dijit.form\", \"ComboBox\", this.lang);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// fill in template with i18n messages\r\n\t\t\tthis.previousButton.innerHTML = this._messages[\"previousMessage\"];\r\n\t\t\tthis.nextButton.innerHTML = this._messages[\"nextMessage\"];\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Object*/ value){\r\n\t\t\tthis._set(\"value\", value);\r\n\t\t\tthis.onChange(value);\r\n\t\t},\r\n\r\n\t\tonClick: function(/*DomNode*/ node){\r\n\t\t\tif(node == this.previousButton){\r\n\t\t\t\tthis._setSelectedAttr(null);\r\n\t\t\t\tthis.onPage(-1);\r\n\t\t\t}else if(node == this.nextButton){\r\n\t\t\t\tthis._setSelectedAttr(null);\r\n\t\t\t\tthis.onPage(1);\r\n\t\t\t}else{\r\n\t\t\t\tthis.onChange(node);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// stubs\r\n\t\tonChange: function(/*Number*/ /*===== direction =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tNotifies ComboBox/FilteringSelect that user selected an option.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonPage: function(/*Number*/ /*===== direction =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tNotifies ComboBox/FilteringSelect that user clicked to advance to next/previous page.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonClose: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback from dijit.popup code to this widget, notifying it that it closed\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._setSelectedAttr(null);\r\n\t\t},\r\n\r\n\t\t_createOption: function(/*Object*/ item, labelFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates an option to appear on the popup menu subclassed by\r\n\t\t\t//\t\t`dijit/form/FilteringSelect`.\r\n\r\n\t\t\tvar menuitem = this._createMenuItem();\r\n\t\t\tvar labelObject = labelFunc(item);\r\n\t\t\tif(labelObject.html){\r\n\t\t\t\tmenuitem.innerHTML = labelObject.label;\r\n\t\t\t}else{\r\n\t\t\t\tmenuitem.appendChild(\r\n\t\t\t\t\tmenuitem.ownerDocument.createTextNode(labelObject.label)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// #3250: in blank options, assign a normal height\r\n\t\t\tif(menuitem.innerHTML == \"\"){\r\n\t\t\t\tmenuitem.innerHTML = \"&#160;\";\t// &nbsp;\r\n\t\t\t}\r\n\r\n\t\t\treturn menuitem;\r\n\t\t},\r\n\r\n\t\tcreateOptions: function(results, options, labelFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFills in the items in the drop down list\r\n\t\t\t// results:\r\n\t\t\t//\t\tArray of items\r\n\t\t\t// options:\r\n\t\t\t//\t\tThe options to the query function of the store\r\n\t\t\t//\r\n\t\t\t// labelFunc:\r\n\t\t\t//\t\tFunction to produce a label in the drop down list from a dojo.data item\r\n\r\n\t\t\tthis.items = results;\r\n\r\n\t\t\t// display \"Previous . . .\" button\r\n\t\t\tthis.previousButton.style.display = (options.start == 0) ? \"none\" : \"\";\r\n\t\t\tdomAttr.set(this.previousButton, \"id\", this.id + \"_prev\");\r\n\t\t\t// create options using _createOption function defined by parent\r\n\t\t\t// ComboBox (or FilteringSelect) class\r\n\t\t\t// #2309:\r\n\t\t\t//\t\titerate over cache nondestructively\r\n\t\t\tarray.forEach(results, function(item, i){\r\n\t\t\t\tvar menuitem = this._createOption(item, labelFunc);\r\n\t\t\t\tmenuitem.setAttribute(\"item\", i);\t// index to this.items; use indirection to avoid mem leak\r\n\t\t\t\tdomAttr.set(menuitem, \"id\", this.id + i);\r\n\t\t\t\tthis.nextButton.parentNode.insertBefore(menuitem, this.nextButton);\r\n\t\t\t}, this);\r\n\t\t\t// display \"Next . . .\" button\r\n\t\t\tvar displayMore = false;\r\n\t\t\t// Try to determine if we should show 'more'...\r\n\t\t\tif(results.total && !results.total.then && results.total != -1){\r\n\t\t\t\tif((options.start + options.count) < results.total){\r\n\t\t\t\t\tdisplayMore = true;\r\n\t\t\t\t}else if((options.start + options.count) > results.total && options.count == results.length){\r\n\t\t\t\t\t// Weird return from a data store, where a start + count > maxOptions\r\n\t\t\t\t\t// implies maxOptions isn't really valid and we have to go into faking it.\r\n\t\t\t\t\t// And more or less assume more if count == results.length\r\n\t\t\t\t\tdisplayMore = true;\r\n\t\t\t\t}\r\n\t\t\t}else if(options.count == results.length){\r\n\t\t\t\t//Don't know the size, so we do the best we can based off count alone.\r\n\t\t\t\t//So, if we have an exact match to count, assume more.\r\n\t\t\t\tdisplayMore = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.nextButton.style.display = displayMore ? \"\" : \"none\";\r\n\t\t\tdomAttr.set(this.nextButton, \"id\", this.id + \"_next\");\r\n\t\t},\r\n\r\n\t\tclearResultList: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClears the entries in the drop down list, but of course keeps the previous and next buttons.\r\n\t\t\tvar container = this.containerNode;\r\n\t\t\twhile(container.childNodes.length > 2){\r\n\t\t\t\tcontainer.removeChild(container.childNodes[container.childNodes.length - 2]);\r\n\t\t\t}\r\n\t\t\tthis._setSelectedAttr(null);\r\n\t\t},\r\n\r\n\t\thighlightFirstOption: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHighlight the first real item in the list (not Previous Choices).\r\n\t\t\tthis.selectFirstNode();\r\n\t\t},\r\n\r\n\t\thighlightLastOption: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHighlight the last real item in the list (not More Choices).\r\n\t\t\tthis.selectLastNode();\r\n\t\t},\r\n\r\n\t\tselectFirstNode: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.getHighlightedOption() == this.previousButton){\r\n\t\t\t\tthis.selectNextNode();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tselectLastNode: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.getHighlightedOption() == this.nextButton){\r\n\t\t\t\tthis.selectPreviousNode();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetHighlightedOption: function(){\r\n\t\t\treturn this.selected;\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tComboBoxMenuMixin = declare(\"dijit.form._ComboBoxMenuMixin\", ComboBoxMenuMixin, {\r\n\t\t\t_createOption: function(){\r\n\t\t\t\tvar menuitem = this.inherited(arguments);\r\n\r\n\t\t\t\t// update menuitem.dir if BidiSupport was required\r\n\t\t\t\tthis.applyTextDir(menuitem);\r\n\r\n\t\t\t\treturn menuitem;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn ComboBoxMenuMixin;\r\n});\r\n\ndefine('dijit/form/_ListBase',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/on\",\r\n\t\"dojo/window\" // winUtils.scrollIntoView\r\n], function(declare, on, winUtils){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ListBase\r\n\r\n\treturn declare(\"dijit.form._ListBase\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tFocus-less menu to handle UI events consistently.\r\n\t\t//\t\tAbstract methods that must be defined externally:\r\n\t\t//\r\n\t\t//\t\t- onSelect: item is active (mousedown but not yet mouseup, or keyboard arrow selected but no Enter)\r\n\t\t//\t\t- onDeselect:  cancels onSelect\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// selected: DOMNode\r\n\t\t//\t\tcurrently selected node\r\n\t\tselected: null,\r\n\r\n\t\t_listConnect: function(/*String|Function*/ eventType, /*String*/ callbackFuncName){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnects 'containerNode' to specified method of this object\r\n\t\t\t//\t\tand automatically registers for 'disconnect' on widget destroy.\r\n\t\t\t// description:\r\n\t\t\t//\t\tProvide widget-specific analog to 'connect'.\r\n\t\t\t//\t\tThe callback function is called with the normal event object,\r\n\t\t\t//\t\tbut also a second parameter is passed that indicates which list item\r\n\t\t\t//\t\tactually received the event.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle that can be passed to `disconnect` in order to disconnect\r\n\t\t\t//\t\tbefore the widget is destroyed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar self = this;\r\n\t\t\treturn self.own(on(self.containerNode,\r\n\t\t\t\ton.selector(\r\n\t\t\t\t\tfunction(eventTarget, selector, target){\r\n\t\t\t\t\t\treturn eventTarget.parentNode == target;\r\n\t\t\t\t\t},\r\n\t\t\t\t\teventType\r\n\t\t\t\t),\r\n\t\t\t\tfunction(evt){\r\n\t\t\t\t\tself[callbackFuncName](evt, this);\r\n\t\t\t\t}\r\n\t\t\t));\r\n\t\t},\r\n\r\n\t\tselectFirstNode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSelect the first displayed item in the list.\r\n\t\t\tvar first = this.containerNode.firstChild;\r\n\t\t\twhile(first && first.style.display == \"none\"){\r\n\t\t\t\tfirst = first.nextSibling;\r\n\t\t\t}\r\n\t\t\tthis._setSelectedAttr(first, true);\r\n\t\t},\r\n\r\n\t\tselectLastNode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSelect the last displayed item in the list\r\n\t\t\tvar last = this.containerNode.lastChild;\r\n\t\t\twhile(last && last.style.display == \"none\"){\r\n\t\t\t\tlast = last.previousSibling;\r\n\t\t\t}\r\n\t\t\tthis._setSelectedAttr(last, true);\r\n\t\t},\r\n\r\n\t\tselectNextNode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSelect the item just below the current selection.\r\n\t\t\t//\t\tIf nothing selected, select first node.\r\n\t\t\tvar selectedNode = this.selected;\r\n\t\t\tif(!selectedNode){\r\n\t\t\t\tthis.selectFirstNode();\r\n\t\t\t}else{\r\n\t\t\t\tvar next = selectedNode.nextSibling;\r\n\t\t\t\twhile(next && next.style.display == \"none\"){\r\n\t\t\t\t\tnext = next.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t\tif(!next){\r\n\t\t\t\t\tthis.selectFirstNode();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._setSelectedAttr(next, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tselectPreviousNode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSelect the item just above the current selection.\r\n\t\t\t//\t\tIf nothing selected, select last node (if\r\n\t\t\t//\t\tyou select Previous and try to keep scrolling up the list).\r\n\t\t\tvar selectedNode = this.selected;\r\n\t\t\tif(!selectedNode){\r\n\t\t\t\tthis.selectLastNode();\r\n\t\t\t}else{\r\n\t\t\t\tvar prev = selectedNode.previousSibling;\r\n\t\t\t\twhile(prev && prev.style.display == \"none\"){\r\n\t\t\t\t\tprev = prev.previousSibling;\r\n\t\t\t\t}\r\n\t\t\t\tif(!prev){\r\n\t\t\t\t\tthis.selectLastNode();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._setSelectedAttr(prev, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setSelectedAttr: function(/*DomNode*/ node, /*Boolean*/ scroll){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDoes the actual select.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe option to select\r\n\t\t\t// scroll:\r\n\t\t\t//\t\tIf necessary, scroll node into view.  Set to false for mouse/touch to\r\n\t\t\t//\t\tavoid jumping problems on mobile/RTL, see https://bugs.dojotoolkit.org/ticket/17739.\r\n\t\t\tif(this.selected != node){\r\n\t\t\t\tvar selectedNode = this.selected;\r\n\t\t\t\tif(selectedNode){\r\n\t\t\t\t\tthis.onDeselect(selectedNode);\r\n\t\t\t\t}\r\n\t\t\t\tif(node){\r\n\t\t\t\t\tif(scroll){\r\n\t\t\t\t\t\twinUtils.scrollIntoView(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.onSelect(node);\r\n\t\t\t\t}\r\n\t\t\t\tthis._set(\"selected\", node);\r\n\t\t\t}else if(node){\r\n\t\t\t\tthis.onSelect(node);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_ListMouseMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"./_ListBase\"\r\n], function(declare, on, touch, _ListBase){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ListMouseMixin\r\n\r\n\treturn declare(\"dijit.form._ListMouseMixin\", _ListBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin to handle mouse or touch events for a focus-less menu\r\n\t\t//\t\tAbstract methods that must be defined externally:\r\n\t\t//\r\n\t\t//\t\t- onClick: item was chosen (mousedown somewhere on the menu and mouseup somewhere on the menu)\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Add flag to use normalized click handling from dojo/touch\r\n\t\t\tthis.domNode.dojoClick = true;\r\n\r\n\t\t\tthis._listConnect(\"click\", \"_onClick\");\r\n\t\t\tthis._listConnect(\"mousedown\", \"_onMouseDown\");\r\n\t\t\tthis._listConnect(\"mouseup\", \"_onMouseUp\");\r\n\t\t\tthis._listConnect(\"mouseover\", \"_onMouseOver\");\r\n\t\t\tthis._listConnect(\"mouseout\", \"_onMouseOut\");\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tthis._setSelectedAttr(target, false);\r\n\t\t\tif(this._deferredClick){\r\n\t\t\t\tthis._deferredClick.remove();\r\n\t\t\t}\r\n\t\t\tthis._deferredClick = this.defer(function(){\r\n\t\t\t\tthis._deferredClick = null;\r\n\t\t\t\tthis.onClick(target);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onMouseDown: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tif(this._hoveredNode){\r\n\t\t\t\tthis.onUnhover(this._hoveredNode);\r\n\t\t\t\tthis._hoveredNode = null;\r\n\t\t\t}\r\n\t\t\tthis._isDragging = true;\r\n\t\t\tthis._setSelectedAttr(target, false);\r\n\t\t},\r\n\r\n\t\t_onMouseUp: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tthis._isDragging = false;\r\n\t\t\tvar selectedNode = this.selected;\r\n\t\t\tvar hoveredNode = this._hoveredNode;\r\n\t\t\tif(selectedNode && target == selectedNode){\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis._onClick(evt, selectedNode);\r\n\t\t\t\t});\r\n\t\t\t}else if(hoveredNode){ // drag to select\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis._onClick(evt, hoveredNode);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onMouseOut: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tif(this._hoveredNode){\r\n\t\t\t\tthis.onUnhover(this._hoveredNode);\r\n\t\t\t\tthis._hoveredNode = null;\r\n\t\t\t}\r\n\t\t\tif(this._isDragging){\r\n\t\t\t\tthis._cancelDrag = (new Date()).getTime() + 1000; // cancel in 1 second if no _onMouseOver fires\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onMouseOver: function(/*Event*/ evt, /*DomNode*/ target){\r\n\t\t\tif(this._cancelDrag){\r\n\t\t\t\tvar time = (new Date()).getTime();\r\n\t\t\t\tif(time > this._cancelDrag){\r\n\t\t\t\t\tthis._isDragging = false;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cancelDrag = null;\r\n\t\t\t}\r\n\t\t\tthis._hoveredNode = target;\r\n\t\t\tthis.onHover(target);\r\n\t\t\tif(this._isDragging){\r\n\t\t\t\tthis._setSelectedAttr(target, false);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_ComboBoxMenu',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove\r\n\t\"dojo/dom-style\", // domStyle.get\r\n\t\"dojo/keys\", // keys.DOWN_ARROW keys.PAGE_DOWN keys.PAGE_UP keys.UP_ARROW\r\n\t\"../_WidgetBase\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"./_ComboBoxMenuMixin\",\r\n\t\"./_ListMouseMixin\"\r\n], function(declare, domClass, domStyle, keys,\r\n\t\t\t_WidgetBase, _TemplatedMixin, _ComboBoxMenuMixin, _ListMouseMixin){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ComboBoxMenu\r\n\r\n\treturn declare(\"dijit.form._ComboBoxMenu\",[_WidgetBase, _TemplatedMixin, _ListMouseMixin, _ComboBoxMenuMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tFocus-less menu for internal use in `dijit/form/ComboBox`\r\n\t\t//\t\tAbstract methods that must be defined externally:\r\n\t\t//\r\n\t\t//\t\t- onChange: item was explicitly chosen (mousedown somewhere on the menu and mouseup somewhere on the menu)\r\n\t\t//\t\t- onPage: next(1) or previous(-1) button pressed\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// TODO for 2.0 or earlier: stop putting stuff inside this.containerNode.   Switch to using this.domNode\r\n\t\t// or a different attach point.    See _TemplatedMixin::searchContainerNode.\r\n\t\ttemplateString: \"<div class='dijitReset dijitMenu' data-dojo-attach-point='containerNode' style='overflow: auto; overflow-x: hidden;' role='listbox'>\"\r\n\t\t\t\t+\"<div class='dijitMenuItem dijitMenuPreviousButton' data-dojo-attach-point='previousButton' role='option'></div>\"\r\n\t\t\t\t+\"<div class='dijitMenuItem dijitMenuNextButton' data-dojo-attach-point='nextButton' role='option'></div>\"\r\n\t\t\t\t+\"</div>\",\r\n\r\n\t\tbaseClass: \"dijitComboBoxMenu\",\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.isLeftToRight()){\r\n\t\t\t\tdomClass.add(this.previousButton, \"dijitMenuItemRtl\");\r\n\t\t\t\tdomClass.add(this.nextButton, \"dijitMenuItemRtl\");\r\n\t\t\t}\r\n\t\t\tthis.containerNode.setAttribute(\"role\",\"listbox\");\r\n\t\t},\r\n\r\n\t\t_createMenuItem: function(){\r\n\t\t\t// note: not using domConstruct.create() because need to specify document\r\n\t\t\tvar item = this.ownerDocument.createElement(\"div\");\r\n\t\t\titem.className = \"dijitReset dijitMenuItem\" +(this.isLeftToRight() ? \"\" : \" dijitMenuItemRtl\");\r\n\t\t\titem.setAttribute(\"role\", \"option\");\r\n\t\t\treturn item;\r\n\t\t},\r\n\r\n\t\tonHover: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd hover CSS\r\n\t\t\tdomClass.add(node, \"dijitMenuItemHover\");\r\n\t\t},\r\n\r\n\t\tonUnhover: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove hover CSS\r\n\t\t\tdomClass.remove(node, \"dijitMenuItemHover\");\r\n\t\t},\r\n\r\n\t\tonSelect: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd selected CSS\r\n\t\t\tdomClass.add(node, \"dijitMenuItemSelected\");\r\n\t\t},\r\n\r\n\t\tonDeselect: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove selected CSS\r\n\t\t\tdomClass.remove(node, \"dijitMenuItemSelected\");\r\n\t\t},\r\n\r\n\t\t_page: function(/*Boolean*/ up){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles page-up and page-down keypresses\r\n\r\n\t\t\tvar scrollamount = 0;\r\n\t\t\tvar oldscroll = this.domNode.scrollTop;\r\n\t\t\tvar height = domStyle.get(this.domNode, \"height\");\r\n\t\t\t// if no item is highlighted, highlight the first option\r\n\t\t\tif(!this.getHighlightedOption()){\r\n\t\t\t\tthis.selectNextNode();\r\n\t\t\t}\r\n\t\t\twhile(scrollamount<height){\r\n\t\t\t\tvar highlighted_option = this.getHighlightedOption();\r\n\t\t\t\tif(up){\r\n\t\t\t\t\t// stop at option 1\r\n\t\t\t\t\tif(!highlighted_option.previousSibling ||\r\n\t\t\t\t\t\thighlighted_option.previousSibling.style.display == \"none\"){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.selectPreviousNode();\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// stop at last option\r\n\t\t\t\t\tif(!highlighted_option.nextSibling ||\r\n\t\t\t\t\t\thighlighted_option.nextSibling.style.display == \"none\"){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.selectNextNode();\r\n\t\t\t\t}\r\n\t\t\t\t// going backwards\r\n\t\t\t\tvar newscroll = this.domNode.scrollTop;\r\n\t\t\t\tscrollamount += (newscroll-oldscroll)*(up ? -1:1);\r\n\t\t\t\toldscroll = newscroll;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleKey: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandle keystroke event forwarded from ComboBox, returning false if it's\r\n\t\t\t//\t\ta keystroke I recognize and process, true otherwise.\r\n\t\t\tswitch(evt.keyCode){\r\n\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\t\tthis.selectNextNode();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase keys.PAGE_DOWN:\r\n\t\t\t\t\tthis._page(false);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\t\tthis.selectPreviousNode();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase keys.PAGE_UP:\r\n\t\t\t\t\tthis._page(true);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/_HasDropDown',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/Deferred\",\r\n\t\"dojo/dom\", // dom.isDescendant\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains domClass.remove\r\n\t\"dojo/dom-geometry\", // domGeometry.marginBox domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/has\", // has(\"touch\")\r\n\t\"dojo/keys\", // keys.DOWN_ARROW keys.ENTER keys.ESCAPE\r\n\t\"dojo/_base/lang\", // lang.hitch lang.isFunction\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"./registry\", // registry.byNode()\r\n\t\"./focus\",\r\n\t\"./popup\",\r\n\t\"./_FocusMixin\"\r\n], function(declare, Deferred, dom, domAttr, domClass, domGeometry, domStyle, has, keys, lang, on, touch,\r\n\t\t\tregistry, focus, popup, _FocusMixin){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/_HasDropDown\r\n\r\n\treturn declare(\"dijit._HasDropDown\", _FocusMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets that need drop down ability.\r\n\r\n\t\t// _buttonNode: [protected] DomNode\r\n\t\t//\t\tThe button/icon/node to click to display the drop down.\r\n\t\t//\t\tCan be set via a data-dojo-attach-point assignment.\r\n\t\t//\t\tIf missing, then either focusNode or domNode (if focusNode is also missing) will be used.\r\n\t\t_buttonNode: null,\r\n\r\n\t\t// _arrowWrapperNode: [protected] DomNode\r\n\t\t//\t\tWill set CSS class dijitUpArrow, dijitDownArrow, dijitRightArrow etc. on this node depending\r\n\t\t//\t\ton where the drop down is set to be positioned.\r\n\t\t//\t\tCan be set via a data-dojo-attach-point assignment.\r\n\t\t//\t\tIf missing, then _buttonNode will be used.\r\n\t\t_arrowWrapperNode: null,\r\n\r\n\t\t// _popupStateNode: [protected] DomNode\r\n\t\t//\t\tThe node to set the aria-expanded class on.\r\n\t\t//\t\tAlso sets popupActive class but that will be removed in 2.0.\r\n\t\t//\t\tCan be set via a data-dojo-attach-point assignment.\r\n\t\t//\t\tIf missing, then focusNode or _buttonNode (if focusNode is missing) will be used.\r\n\t\t_popupStateNode: null,\r\n\r\n\t\t// _aroundNode: [protected] DomNode\r\n\t\t//\t\tThe node to display the popup around.\r\n\t\t//\t\tCan be set via a data-dojo-attach-point assignment.\r\n\t\t//\t\tIf missing, then domNode will be used.\r\n\t\t_aroundNode: null,\r\n\r\n\t\t// dropDown: [protected] Widget\r\n\t\t//\t\tThe widget to display as a popup.  This widget *must* be\r\n\t\t//\t\tdefined before the startup function is called.\r\n\t\tdropDown: null,\r\n\r\n\t\t// autoWidth: [protected] Boolean\r\n\t\t//\t\tSet to true to make the drop down at least as wide as this\r\n\t\t//\t\twidget.  Set to false if the drop down should just be its\r\n\t\t//\t\tdefault width.\r\n\t\tautoWidth: true,\r\n\r\n\t\t// forceWidth: [protected] Boolean\r\n\t\t//\t\tSet to true to make the drop down exactly as wide as this\r\n\t\t//\t\twidget.  Overrides autoWidth.\r\n\t\tforceWidth: false,\r\n\r\n\t\t// maxHeight: [protected] Integer\r\n\t\t//\t\tThe max height for our dropdown.\r\n\t\t//\t\tAny dropdown taller than this will have scrollbars.\r\n\t\t//\t\tSet to 0 for no max height, or -1 to limit height to available space in viewport\r\n\t\tmaxHeight: -1,\r\n\r\n\t\t// dropDownPosition: [const] String[]\r\n\t\t//\t\tThis variable controls the position of the drop down.\r\n\t\t//\t\tIt's an array of strings with the following values:\r\n\t\t//\r\n\t\t//\t\t- before: places drop down to the left of the target node/widget, or to the right in\r\n\t\t//\t\t  the case of RTL scripts like Hebrew and Arabic\r\n\t\t//\t\t- after: places drop down to the right of the target node/widget, or to the left in\r\n\t\t//\t\t  the case of RTL scripts like Hebrew and Arabic\r\n\t\t//\t\t- above: drop down goes above target node\r\n\t\t//\t\t- below: drop down goes below target node\r\n\t\t//\r\n\t\t//\t\tThe list is positions is tried, in order, until a position is found where the drop down fits\r\n\t\t//\t\twithin the viewport.\r\n\t\t//\r\n\t\tdropDownPosition: [\"below\", \"above\"],\r\n\r\n\t\t// _stopClickEvents: Boolean\r\n\t\t//\t\tWhen set to false, the click events will not be stopped, in\r\n\t\t//\t\tcase you want to use them in your subclass\r\n\t\t_stopClickEvents: true,\r\n\r\n\t\t_onDropDownMouseDown: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when the user mousedown/touchstart on the arrow icon.\r\n\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Prevent default to stop things like text selection, but don't stop propagation, so that:\r\n\t\t\t//\t\t1. TimeTextBox etc. can focus the <input> on mousedown\r\n\t\t\t//\t\t2. dropDownButtonActive class applied by _CssStateMixin (on button depress)\r\n\t\t\t//\t\t3. user defined onMouseDown handler fires\r\n\t\t\t//\r\n\t\t\t// Also, don't call preventDefault() on MSPointerDown event (on IE10) because that prevents the button\r\n\t\t\t// from getting focus, and then the focus manager doesn't know what's going on (#17262)\r\n\t\t\tif(e.type != \"MSPointerDown\" && e.type != \"pointerdown\"){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tthis.own(on.once(this.ownerDocument, touch.release, lang.hitch(this, \"_onDropDownMouseUp\")));\r\n\r\n\t\t\tthis.toggleDropDown();\r\n\t\t},\r\n\r\n\t\t_onDropDownMouseUp: function(/*Event?*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback on mouseup/touchend after mousedown/touchstart on the arrow icon.\r\n\t\t\t//\t\tNote that this function is called regardless of what node the event occurred on (but only after\r\n\t\t\t//\t\ta mousedown/touchstart on the arrow).\r\n\t\t\t//\r\n\t\t\t//\t\tIf the drop down is a simple menu and the cursor is over the menu, we execute it, otherwise, we focus our\r\n\t\t\t//\t\tdrop down widget.  If the event is missing, then we are not\r\n\t\t\t//\t\ta mouseup event.\r\n\t\t\t//\r\n\t\t\t//\t\tThis is useful for the common mouse movement pattern\r\n\t\t\t//\t\twith native browser `<select>` nodes:\r\n\t\t\t//\r\n\t\t\t//\t\t1. mouse down on the select node (probably on the arrow)\r\n\t\t\t//\t\t2. move mouse to a menu item while holding down the mouse button\r\n\t\t\t//\t\t3. mouse up.  this selects the menu item as though the user had clicked it.\r\n\r\n\t\t\tvar dropDown = this.dropDown, overMenu = false;\r\n\r\n\t\t\tif(e && this._opened){\r\n\t\t\t\t// This code deals with the corner-case when the drop down covers the original widget,\r\n\t\t\t\t// because it's so large.  In that case mouse-up shouldn't select a value from the menu.\r\n\t\t\t\t// Find out if our target is somewhere in our dropdown widget,\r\n\t\t\t\t// but not over our _buttonNode (the clickable node)\r\n\t\t\t\tvar c = domGeometry.position(this._buttonNode, true);\r\n\t\t\t\tif(!(e.pageX >= c.x && e.pageX <= c.x + c.w) || !(e.pageY >= c.y && e.pageY <= c.y + c.h)){\r\n\t\t\t\t\tvar t = e.target;\r\n\t\t\t\t\twhile(t && !overMenu){\r\n\t\t\t\t\t\tif(domClass.contains(t, \"dijitPopup\")){\r\n\t\t\t\t\t\t\toverMenu = true;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tt = t.parentNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(overMenu){\r\n\t\t\t\t\t\tt = e.target;\r\n\t\t\t\t\t\tif(dropDown.onItemClick){\r\n\t\t\t\t\t\t\tvar menuItem;\r\n\t\t\t\t\t\t\twhile(t && !(menuItem = registry.byNode(t))){\r\n\t\t\t\t\t\t\t\tt = t.parentNode;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(menuItem && menuItem.onClick && menuItem.getParent){\r\n\t\t\t\t\t\t\t\tmenuItem.getParent().onItemClick(menuItem, e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._opened){\r\n\t\t\t\t// Focus the dropdown widget unless it's a menu (in which case autoFocus is set to false).\r\n\t\t\t\t// Even if it's a menu, we need to focus it if this is a fake mouse event caused by the user typing\r\n\t\t\t\t// SPACE/ENTER while using JAWS.  Jaws converts the SPACE/ENTER key into mousedown/mouseup events.\r\n\t\t\t\t// If this.hovering is false then it's presumably actually a keyboard event.\r\n\t\t\t\tif(dropDown.focus && (dropDown.autoFocus !== false || (e.type == \"mouseup\" && !this.hovering))){\r\n\t\t\t\t\t// Do it on a delay so that we don't steal back focus from the dropdown.\r\n\t\t\t\t\tthis._focusDropDownTimer = this.defer(function(){\r\n\t\t\t\t\t\tdropDown.focus();\r\n\t\t\t\t\t\tdelete this._focusDropDownTimer;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// The drop down arrow icon probably can't receive focus, but widget itself should get focus.\r\n\t\t\t\t// defer() needed to make it work on IE (test DateTextBox)\r\n\t\t\t\tif(this.focus){\r\n\t\t\t\t\tthis.defer(\"focus\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDropDownClick: function(/*Event*/ e){\r\n\t\t\t// The drop down was already opened on mousedown/keydown; just need to stop the event\r\n\t\t\tif(this._stopClickEvents){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis._buttonNode = this._buttonNode || this.focusNode || this.domNode;\r\n\t\t\tthis._popupStateNode = this._popupStateNode || this.focusNode || this._buttonNode;\r\n\r\n\t\t\t// Add a class to the \"dijitDownArrowButton\" type class to _buttonNode so theme can set direction of arrow\r\n\t\t\t// based on where drop down will normally appear\r\n\t\t\tvar defaultPos = {\r\n\t\t\t\t\"after\": this.isLeftToRight() ? \"Right\" : \"Left\",\r\n\t\t\t\t\"before\": this.isLeftToRight() ? \"Left\" : \"Right\",\r\n\t\t\t\t\"above\": \"Up\",\r\n\t\t\t\t\"below\": \"Down\",\r\n\t\t\t\t\"left\": \"Left\",\r\n\t\t\t\t\"right\": \"Right\"\r\n\t\t\t}[this.dropDownPosition[0]] || this.dropDownPosition[0] || \"Down\";\r\n\t\t\tdomClass.add(this._arrowWrapperNode || this._buttonNode, \"dijit\" + defaultPos + \"ArrowButton\");\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset up nodes and connect our mouse and keyboard events\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar keyboardEventNode = this.focusNode || this.domNode;\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this._buttonNode, touch.press, lang.hitch(this, \"_onDropDownMouseDown\")),\r\n\t\t\t\ton(this._buttonNode, \"click\", lang.hitch(this, \"_onDropDownClick\")),\r\n\t\t\t\ton(keyboardEventNode, \"keydown\", lang.hitch(this, \"_onKey\")),\r\n\t\t\t\ton(keyboardEventNode, \"keyup\", lang.hitch(this, \"_onKeyUp\"))\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// If dropdown is open, close it, to avoid leaving dijit/focus in a strange state.\r\n\t\t\t// Put focus back on me to avoid the focused node getting destroyed, which flummoxes IE.\r\n\t\t\tif(this._opened){\r\n\t\t\t\tthis.closeDropDown(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\t// Destroy the drop down, unless it's already been destroyed.  This can happen because\r\n\t\t\t\t// the drop down is a direct child of <body> even though it's logically my child.\r\n\t\t\t\tif(!this.dropDown._destroyed){\r\n\t\t\t\t\tthis.dropDown.destroyRecursive();\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.dropDown;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onKey: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when the user presses a key while focused on the button node\r\n\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar d = this.dropDown, target = e.target;\r\n\t\t\tif(d && this._opened && d.handleKey){\r\n\t\t\t\tif(d.handleKey(e) === false){\r\n\t\t\t\t\t/* false return code means that the drop down handled the key */\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && this._opened && e.keyCode == keys.ESCAPE){\r\n\t\t\t\tthis.closeDropDown();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}else if(!this._opened &&\r\n\t\t\t\t(e.keyCode == keys.DOWN_ARROW ||\r\n\t\t\t\t\t// ignore unmodified SPACE if _KeyNavMixin has active searching in progress\r\n\t\t\t\t\t( (e.keyCode == keys.ENTER || (e.keyCode == keys.SPACE && (!this._searchTimer || (e.ctrlKey || e.altKey || e.metaKey)))) &&\r\n\t\t\t\t\t\t//ignore enter and space if the event is for a text input\r\n\t\t\t\t\t\t((target.tagName || \"\").toLowerCase() !== 'input' ||\r\n\t\t\t\t\t\t\t(target.type && target.type.toLowerCase() !== 'text'))))){\r\n\t\t\t\t// Toggle the drop down, but wait until keyup so that the drop down doesn't\r\n\t\t\t\t// get a stray keyup event, or in the case of key-repeat (because user held\r\n\t\t\t\t// down key for too long), stray keydown events\r\n\t\t\t\tthis._toggleOnKeyUp = true;\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onKeyUp: function(){\r\n\t\t\tif(this._toggleOnKeyUp){\r\n\t\t\t\tdelete this._toggleOnKeyUp;\r\n\t\t\t\tthis.toggleDropDown();\r\n\t\t\t\tvar d = this.dropDown;\t// drop down may not exist until toggleDropDown() call\r\n\t\t\t\tif(d && d.focus){\r\n\t\t\t\t\tthis.defer(lang.hitch(d, \"focus\"), 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled magically when focus has shifted away from this widget and it's dropdown\r\n\r\n\t\t\t// Close dropdown but don't focus my <input>.  User may have focused somewhere else (ex: clicked another\r\n\t\t\t// input), and even if they just clicked a blank area of the screen, focusing my <input> will unwantedly\r\n\t\t\t// popup the keyboard on mobile.\r\n\t\t\tthis.closeDropDown(false);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tisLoaded: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if the dropdown exists and it's data is loaded.  This can\r\n\t\t\t//\t\tbe overridden in order to force a call to loadDropDown().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tloadDropDown: function(/*Function*/ loadCallback){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the drop down if it doesn't exist, loads the data\r\n\t\t\t//\t\tif there's an href and it hasn't been loaded yet, and then calls\r\n\t\t\t//\t\tthe given callback.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// TODO: for 2.0, change API to return a Deferred, instead of calling loadCallback?\r\n\t\t\tloadCallback();\r\n\t\t},\r\n\r\n\t\tloadAndOpenDropDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the drop down if it doesn't exist, loads the data\r\n\t\t\t//\t\tif there's an href and it hasn't been loaded yet, and\r\n\t\t\t//\t\tthen opens the drop down.  This is basically a callback when the\r\n\t\t\t//\t\tuser presses the down arrow button to open the drop down.\r\n\t\t\t// returns: Deferred\r\n\t\t\t//\t\tDeferred for the drop down widget that\r\n\t\t\t//\t\tfires when drop down is created and loaded\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar d = new Deferred(),\r\n\t\t\t\tafterLoad = lang.hitch(this, function(){\r\n\t\t\t\t\tthis.openDropDown();\r\n\t\t\t\t\td.resolve(this.dropDown);\r\n\t\t\t\t});\r\n\t\t\tif(!this.isLoaded()){\r\n\t\t\t\tthis.loadDropDown(afterLoad);\r\n\t\t\t}else{\r\n\t\t\t\tafterLoad();\r\n\t\t\t}\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\ttoggleDropDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when the user presses the down arrow button or presses\r\n\t\t\t//\t\tthe down arrow key to open/close the drop down.\r\n\t\t\t//\t\tToggle the drop-down widget; if it is up, close it, if not, open it\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this._opened){\r\n\t\t\t\tthis.loadAndOpenDropDown();\r\n\t\t\t}else{\r\n\t\t\t\tthis.closeDropDown(true);\t// refocus button to avoid hiding node w/focus\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\topenDropDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOpens the dropdown for this widget.   To be called only when this.dropDown\r\n\t\t\t//\t\thas been created and is ready to display (ie, it's data is loaded).\r\n\t\t\t// returns:\r\n\t\t\t//\t\treturn value of dijit/popup.open()\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar dropDown = this.dropDown,\r\n\t\t\t\tddNode = dropDown.domNode,\r\n\t\t\t\taroundNode = this._aroundNode || this.domNode,\r\n\t\t\t\tself = this;\r\n\r\n\t\t\tvar retVal = popup.open({\r\n\t\t\t\tparent: this,\r\n\t\t\t\tpopup: dropDown,\r\n\t\t\t\taround: aroundNode,\r\n\t\t\t\torient: this.dropDownPosition,\r\n\t\t\t\tmaxHeight: this.maxHeight,\r\n\t\t\t\tonExecute: function(){\r\n\t\t\t\t\tself.closeDropDown(true);\r\n\t\t\t\t},\r\n\t\t\t\tonCancel: function(){\r\n\t\t\t\t\tself.closeDropDown(true);\r\n\t\t\t\t},\r\n\t\t\t\tonClose: function(){\r\n\t\t\t\t\tdomAttr.set(self._popupStateNode, \"popupActive\", false);\r\n\t\t\t\t\tdomClass.remove(self._popupStateNode, \"dijitHasDropDownOpen\");\r\n\t\t\t\t\tself._set(\"_opened\", false);\t// use set() because _CssStateMixin is watching\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Set width of drop down if necessary, so that dropdown width + width of scrollbar (from popup wrapper)\r\n\t\t\t// matches width of aroundNode\r\n\t\t\tif(this.forceWidth || (this.autoWidth && aroundNode.offsetWidth > dropDown._popupWrapper.offsetWidth)){\r\n\t\t\t\tvar widthAdjust = aroundNode.offsetWidth - dropDown._popupWrapper.offsetWidth;\r\n\t\t\t\tvar resizeArgs = {\r\n\t\t\t\t\tw: dropDown.domNode.offsetWidth + widthAdjust\r\n\t\t\t\t};\r\n\t\t\t\tif(lang.isFunction(dropDown.resize)){\r\n\t\t\t\t\tdropDown.resize(resizeArgs);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomGeometry.setMarginBox(ddNode, resizeArgs);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If dropdown is right-aligned then compensate for width change by changing horizontal position\r\n\t\t\t\tif(retVal.corner[1] == \"R\"){\r\n\t\t\t\t\tdropDown._popupWrapper.style.left =\r\n\t\t\t\t\t\t(dropDown._popupWrapper.style.left.replace(\"px\", \"\") - widthAdjust) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdomAttr.set(this._popupStateNode, \"popupActive\", \"true\");\r\n\t\t\tdomClass.add(this._popupStateNode, \"dijitHasDropDownOpen\");\r\n\t\t\tthis._set(\"_opened\", true);\t// use set() because _CssStateMixin is watching\r\n\r\n\t\t\tthis._popupStateNode.setAttribute(\"aria-expanded\", \"true\");\r\n\t\t\tthis._popupStateNode.setAttribute(\"aria-owns\", dropDown.id);\r\n\r\n\t\t\t// Set aria-labelledby on dropdown if it's not already set to something more meaningful\r\n\t\t\tif(ddNode.getAttribute(\"role\") !== \"presentation\" && !ddNode.getAttribute(\"aria-labelledby\")){\r\n\t\t\t\tddNode.setAttribute(\"aria-labelledby\", this.id);\r\n\t\t\t}\r\n\r\n\t\t\treturn retVal;\r\n\t\t},\r\n\r\n\t\tcloseDropDown: function(/*Boolean*/ focus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCloses the drop down on this widget\r\n\t\t\t// focus:\r\n\t\t\t//\t\tIf true, refocuses the button widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this._focusDropDownTimer){\r\n\t\t\t\tthis._focusDropDownTimer.remove();\r\n\t\t\t\tdelete this._focusDropDownTimer;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._opened){\r\n\t\t\t\tthis._popupStateNode.setAttribute(\"aria-expanded\", \"false\");\r\n\t\t\t\tif(focus && this.focus){\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t}\r\n\t\t\t\tpopup.close(this.dropDown);\r\n\t\t\t\tthis._opened = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n});\r\n\n\ndefine('dijit/form/ComboBoxMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/Deferred\",\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"dojo/store/util/QueryResults\",\r\n\t\"./_AutoCompleterMixin\",\r\n\t\"./_ComboBoxMenu\",\r\n\t\"../_HasDropDown\",\r\n\t\"dojo/text!./templates/DropDownBox.html\"\r\n], function(declare, Deferred, kernel, lang, QueryResults, _AutoCompleterMixin, _ComboBoxMenu, _HasDropDown, template){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/ComboBoxMixin\r\n\r\n\treturn declare(\"dijit.form.ComboBoxMixin\", [_HasDropDown, _AutoCompleterMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tProvides main functionality of ComboBox widget\r\n\r\n\t\t// dropDownClass: [protected extension] Function String\r\n\t\t//\t\tDropdown widget class used to select a date/time.\r\n\t\t//\t\tSubclasses should specify this.\r\n\t\tdropDownClass: _ComboBoxMenu,\r\n\r\n\t\t// hasDownArrow: Boolean\r\n\t\t//\t\tSet this textbox to have a down arrow button, to display the drop down list.\r\n\t\t//\t\tDefaults to true.\r\n\t\thasDownArrow: true,\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitComboBox\",\r\n\r\n\t\t/*=====\r\n\t\t// store: [const] dojo/store/api/Store|dojo/data/api/Read\r\n\t\t//\t\tReference to data provider object used by this ComboBox.\r\n\t\t//\r\n\t\t//\t\tShould be dojo/store/api/Store, but dojo/data/api/Read supported\r\n\t\t//\t\tfor backwards compatibility.\r\n\t\tstore: null,\r\n\t\t=====*/\r\n\r\n\t\t// Set classes like dijitDownArrowButtonHover depending on\r\n\t\t// mouse action over button node\r\n\t\tcssStateNodes: {\r\n\t\t\t\"_buttonNode\": \"dijitDownArrowButton\"\r\n\t\t},\r\n\r\n\t\t_setHasDownArrowAttr: function(/*Boolean*/ val){\r\n\t\t\tthis._set(\"hasDownArrow\", val);\r\n\t\t\tthis._buttonNode.style.display = val ? \"\" : \"none\";\r\n\t\t},\r\n\r\n\t\t_showResultList: function(){\r\n\t\t\t// hide the tooltip\r\n\t\t\tthis.displayMessage(\"\");\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setStoreAttr: function(store){\r\n\t\t\t// For backwards-compatibility, accept dojo.data store in addition to dojo/store/api/Store.  Remove in 2.0.\r\n\t\t\tif(!store.get){\r\n\t\t\t\tlang.mixin(store, {\r\n\t\t\t\t\t_oldAPI: true,\r\n\t\t\t\t\tget: function(id){\r\n\t\t\t\t\t\t// summary:\r\n\t\t\t\t\t\t//\t\tRetrieves an object by it's identity. This will trigger a fetchItemByIdentity.\r\n\t\t\t\t\t\t//\t\tLike dojo/store/DataStore.get() except returns native item.\r\n\t\t\t\t\t\tvar deferred = new Deferred();\r\n\t\t\t\t\t\tthis.fetchItemByIdentity({\r\n\t\t\t\t\t\t\tidentity: id,\r\n\t\t\t\t\t\t\tonItem: function(object){\r\n\t\t\t\t\t\t\t\tdeferred.resolve(object);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonError: function(error){\r\n\t\t\t\t\t\t\t\tdeferred.reject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn deferred.promise;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tquery: function(query, options){\r\n\t\t\t\t\t\t// summary:\r\n\t\t\t\t\t\t//\t\tQueries the store for objects.   Like dojo/store/DataStore.query()\r\n\t\t\t\t\t\t//\t\texcept returned Deferred contains array of native items.\r\n\t\t\t\t\t\tvar deferred = new Deferred(function(){ fetchHandle.abort && fetchHandle.abort(); });\r\n\t\t\t\t\t\tdeferred.total = new Deferred();\r\n\t\t\t\t\t\tvar fetchHandle = this.fetch(lang.mixin({\r\n\t\t\t\t\t\t\tquery: query,\r\n\t\t\t\t\t\t\tonBegin: function(count){\r\n\t\t\t\t\t\t\t\tdeferred.total.resolve(count);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonComplete: function(results){\r\n\t\t\t\t\t\t\t\tdeferred.resolve(results);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonError: function(error){\r\n\t\t\t\t\t\t\t\tdeferred.reject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, options));\r\n\t\t\t\t\t\treturn QueryResults(deferred);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis._set(\"store\", store);\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// Since _setValueAttr() depends on this.store, _setStoreAttr() needs to execute first.\r\n\t\t\t// Unfortunately, without special code, it ends up executing second.\r\n\t\t\tvar store = this.params.store || this.store;\r\n\t\t\tif(store){\r\n\t\t\t\tthis._setStoreAttr(store);\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// User may try to access this.store.getValue() etc.  in a custom labelFunc() function.\r\n\t\t\t// It's not available with the new data store for handling inline <option> tags, so add it.\r\n\t\t\tif(!this.params.store && this.store && !this.store._oldAPI){\r\n\t\t\t\tvar clazz = this.declaredClass;\r\n\t\t\t\tlang.mixin(this.store, {\r\n\t\t\t\t\tgetValue: function(item, attr){\r\n\t\t\t\t\t\tkernel.deprecated(clazz + \".store.getValue(item, attr) is deprecated for builtin store.  Use item.attr directly\", \"\", \"2.0\");\r\n\t\t\t\t\t\treturn item[attr];\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetLabel: function(item){\r\n\t\t\t\t\t\tkernel.deprecated(clazz + \".store.getLabel(item) is deprecated for builtin store.  Use item.label directly\", \"\", \"2.0\");\r\n\t\t\t\t\t\treturn item.name;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfetch: function(args){\r\n\t\t\t\t\t\tkernel.deprecated(clazz + \".store.fetch() is deprecated for builtin store.\", \"Use store.query()\", \"2.0\");\r\n\t\t\t\t\t\tvar shim = [\"dojo/data/ObjectStore\"];\t// indirection so it doesn't get rolled into a build\r\n\t\t\t\t\t\trequire(shim, lang.hitch(this, function(ObjectStore){\r\n\t\t\t\t\t\t\tnew ObjectStore({objectStore: this}).fetch(args);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis.focusNode.setAttribute(\"aria-autocomplete\", this.autoComplete ? \"both\" : \"list\");\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/FilteringSelect',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"dojo/when\",\r\n\t\"./MappedTextBox\",\r\n\t\"./ComboBoxMixin\"\r\n], function(declare, lang, when, MappedTextBox, ComboBoxMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/FilteringSelect\r\n\r\n\treturn declare(\"dijit.form.FilteringSelect\", [MappedTextBox, ComboBoxMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tAn enhanced version of the HTML SELECT tag, populated dynamically\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tAn enhanced version of the HTML SELECT tag, populated dynamically. It works\r\n\t\t//\t\tvery nicely with very large data sets because it can load and page data as needed.\r\n\t\t//\t\tIt also resembles ComboBox, but does not allow values outside of the provided ones.\r\n\t\t//\t\tIf OPTION tags are used as the data provider via markup, then the\r\n\t\t//\t\tOPTION tag's child text node is used as the displayed value when selected\r\n\t\t//\t\twhile the OPTION tag's value attribute is used as the widget value on form submit.\r\n\t\t//\t\tTo set the default value when using OPTION tags, specify the selected\r\n\t\t//\t\tattribute on 1 of the child OPTION tags.\r\n\t\t//\r\n\t\t//\t\tSimilar features:\r\n\t\t//\r\n\t\t//\t\t- There is a drop down list of possible values.\r\n\t\t//\t\t- You can only enter a value from the drop down list.  (You can't\r\n\t\t//\t\t\tenter an arbitrary value.)\r\n\t\t//\t\t- The value submitted with the form is the hidden value (ex: CA),\r\n\t\t//\t\t\tnot the displayed value a.k.a. label (ex: California)\r\n\t\t//\r\n\t\t//\t\tEnhancements over plain HTML version:\r\n\t\t//\r\n\t\t//\t\t- If you type in some text then it will filter down the list of\r\n\t\t//\t\t\tpossible values in the drop down list.\r\n\t\t//\t\t- List can be specified either as a static list or via a javascript\r\n\t\t//\t\t\tfunction (that can get the list from a server)\r\n\r\n\t\t// required: Boolean\r\n\t\t//\t\tTrue (default) if user is required to enter a value into this field.\r\n\t\trequired: true,\r\n\r\n\t\t_lastDisplayedValue: \"\",\r\n\r\n\t\t_isValidSubset: function(){\r\n\t\t\treturn this._opened;\r\n\t\t},\r\n\r\n\t\tisValid: function(){\r\n\t\t\t// Overrides ValidationTextBox.isValid()\r\n\t\t\treturn !!this.item || (!this.required && this.get('displayedValue') == \"\"); // #5974\r\n\t\t},\r\n\r\n\t\t_refreshState: function(){\r\n\t\t\tif(!this.searchTimer){ // state will be refreshed after results are returned\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_callbackSetLabel: function(\r\n\t\t\t\t\t\t/*Array*/ result,\r\n\t\t\t\t\t\t/*Object*/ query,\r\n\t\t\t\t\t\t/*Object*/ options,\r\n\t\t\t\t\t\t/*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback from dojo.store after lookup of user entered value finishes\r\n\r\n\t\t\t// setValue does a synchronous lookup,\r\n\t\t\t// so it calls _callbackSetLabel directly,\r\n\t\t\t// and so does not pass dataObject\r\n\t\t\t// still need to test against _lastQuery in case it came too late\r\n\t\t\tif((query && query[this.searchAttr] !== this._lastQuery) || (!query && result.length && this.store.getIdentity(result[0]) != this._lastQuery)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!result.length){\r\n\t\t\t\t//#3268: don't modify display value on bad input\r\n\t\t\t\t//#3285: change CSS to indicate error\r\n\t\t\t\tthis.set(\"value\", '', priorityChange || (priorityChange === undefined && !this.focused), this.textbox.value, null);\r\n\t\t\t}else{\r\n\t\t\t\tthis.set('item', result[0], priorityChange);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_openResultList: function(/*Object*/ results, /*Object*/ query, /*Object*/ options){\r\n\t\t\t// Callback when a data store query completes.\r\n\t\t\t// Overrides ComboBox._openResultList()\r\n\r\n\t\t\t// #3285: tap into search callback to see if user's query resembles a match\r\n\t\t\tif(query[this.searchAttr] !== this._lastQuery){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this.item === undefined){ // item == undefined for keyboard search\r\n\t\t\t\t// If the search returned no items that means that the user typed\r\n\t\t\t\t// in something invalid (and they can't make it valid by typing more characters),\r\n\t\t\t\t// so flag the FilteringSelect as being in an invalid state\r\n\t\t\t\tthis.validate(true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for get('value') to work.\r\n\r\n\t\t\t// don't get the textbox value but rather the previously set hidden value.\r\n\t\t\t// Use this.valueNode.value which isn't always set for other MappedTextBox widgets until blur\r\n\t\t\treturn this.valueNode.value;\r\n\t\t},\r\n\r\n\t\t_getValueField: function(){\r\n\t\t\t// Overrides ComboBox._getValueField()\r\n\t\t\treturn \"value\";\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*String*/ value, /*Boolean?*/ priorityChange, /*String?*/ displayedValue, /*item?*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', value) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets the value of the select.\r\n\t\t\t//\t\tAlso sets the label to the corresponding value by reverse lookup.\r\n\t\t\tif(!this._onChangeActive){ priorityChange = null; }\r\n\r\n\t\t\tif(item === undefined){\r\n\t\t\t\tif(value === null || value === ''){\r\n\t\t\t\t\tvalue = '';\r\n\t\t\t\t\tif(!lang.isString(displayedValue)){\r\n\t\t\t\t\t\tthis._setDisplayedValueAttr(displayedValue||'', priorityChange);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tthis._lastQuery = value;\r\n\t\t\t\twhen(this.store.get(value), function(item){\r\n\t\t\t\t\tself._callbackSetLabel(item? [item] : [], undefined, undefined, priorityChange);\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tthis.valueNode.value = value;\r\n\t\t\t\tthis.inherited(arguments, [value, priorityChange, displayedValue, item]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setItemAttr: function(/*item*/ item, /*Boolean?*/ priorityChange, /*String?*/ displayedValue){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the displayed valued in the input box, and the hidden value\r\n\t\t\t//\t\tthat gets submitted, based on a dojo.data store item.\r\n\t\t\t// description:\r\n\t\t\t//\t\tUsers shouldn't call this function; they should be calling\r\n\t\t\t//\t\tset('item', value)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._lastDisplayedValue = this.textbox.value;\r\n\t\t},\r\n\r\n\t\t_getDisplayQueryString: function(/*String*/ text){\r\n\t\t\treturn text.replace(/([\\\\\\*\\?])/g, \"\\\\$1\");\r\n\t\t},\r\n\r\n\t\t_setDisplayedValueAttr: function(/*String*/ label, /*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('displayedValue', label) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets textbox to display label. Also performs reverse lookup\r\n\t\t\t//\t\tto set the hidden value.  label should corresponding to item.searchAttr.\r\n\r\n\t\t\tif(label == null){ label = ''; }\r\n\r\n\t\t\t// This is called at initialization along with every custom setter.\r\n\t\t\t// Usually (or always?) the call can be ignored.   If it needs to be\r\n\t\t\t// processed then at least make sure that the XHR request doesn't trigger an onChange()\r\n\t\t\t// event, even if it returns after creation has finished\r\n\t\t\tif(!this._created){\r\n\t\t\t\tif(!(\"displayedValue\" in this.params)){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tpriorityChange = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Do a reverse lookup to map the specified displayedValue to the hidden value.\r\n\t\t\t// Note that if there's a custom labelFunc() this code\r\n\t\t\tif(this.store){\r\n\t\t\t\tthis.closeDropDown();\r\n\t\t\t\tvar query = lang.clone(this.query); // #6196: populate query with user-specifics\r\n\r\n\t\t\t\t// Generate query\r\n\t\t\t\tvar qs = this._getDisplayQueryString(label), q;\r\n\t\t\t\tif(this.store._oldAPI){\r\n\t\t\t\t\t// remove this branch for 2.0\r\n\t\t\t\t\tq = qs;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Query on searchAttr is a regex for benefit of dojo/store/Memory,\r\n\t\t\t\t\t// but with a toString() method to help dojo/store/JsonRest.\r\n\t\t\t\t\t// Search string like \"Co*\" converted to regex like /^Co.*$/i.\r\n\t\t\t\t\tq = this._patternToRegExp(qs);\r\n\t\t\t\t\tq.toString = function(){ return qs; };\r\n\t\t\t\t}\r\n\t\t\t\tthis._lastQuery = query[this.searchAttr] = q;\r\n\r\n\t\t\t\t// If the label is not valid, the callback will never set it,\r\n\t\t\t\t// so the last valid value will get the warning textbox.   Set the\r\n\t\t\t\t// textbox value now so that the impending warning will make\r\n\t\t\t\t// sense to the user\r\n\t\t\t\tthis.textbox.value = label;\r\n\t\t\t\tthis._lastDisplayedValue = label;\r\n\t\t\t\tthis._set(\"displayedValue\", label);\t// for watch(\"displayedValue\") notification\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar options = {\r\n\t\t\t\t\tqueryOptions: {\r\n\t\t\t\t\t\tignoreCase: this.ignoreCase,\r\n\t\t\t\t\t\tdeep: true\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tlang.mixin(options, this.fetchProperties);\r\n\t\t\t\tthis._fetchHandle = this.store.query(query, options);\r\n\t\t\t\twhen(this._fetchHandle, function(result){\r\n\t\t\t\t\t_this._fetchHandle = null;\r\n\t\t\t\t\t_this._callbackSetLabel(result || [], query, options, priorityChange);\r\n\t\t\t\t}, function(err){\r\n\t\t\t\t\t_this._fetchHandle = null;\r\n\t\t\t\t\tif(!_this._cancelingQuery){\t// don't treat canceled query as an error\r\n\t\t\t\t\t\tconsole.error('dijit.form.FilteringSelect: ' + err.toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tundo: function(){\r\n\t\t\tthis.set('displayedValue', this._lastDisplayedValue);\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/_editor/plugins/FontChoice',[\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.indexOf array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.place\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/_base/lang\", // lang.delegate lang.hitch lang.isString\r\n\t\"dojo/store/Memory\", // MemoryStore\r\n\t\"../../registry\", // registry.getUniqueId\r\n\t\"../../_Widget\",\r\n\t\"../../_TemplatedMixin\",\r\n\t\"../../_WidgetsInTemplateMixin\",\r\n\t\"../../form/FilteringSelect\",\r\n\t\"../_Plugin\",\r\n\t\"../range\",\r\n\t\"dojo/i18n!../nls/FontChoice\"\r\n], function(require, array, declare, domConstruct, i18n, lang, MemoryStore,\r\n\tregistry, _Widget, _TemplatedMixin, _WidgetsInTemplateMixin, FilteringSelect, _Plugin, rangeapi){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/FontChoice\r\n\r\n\tvar _FontDropDown = declare(\"dijit._editor.plugins._FontDropDown\",\r\n\t\t[_Widget, _TemplatedMixin, _WidgetsInTemplateMixin], {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tBase class for widgets that contains a label (like \"Font:\")\r\n\t\t\t//\t\tand a FilteringSelect drop down to pick a value.\r\n\t\t\t//\t\tUsed as Toolbar entry.\r\n\r\n\t\t\t// label: [public] String\r\n\t\t\t//\t\tThe label to apply to this particular FontDropDown.\r\n\t\t\tlabel: \"\",\r\n\r\n\t\t\t// plainText: [public] boolean\r\n\t\t\t//\t\tFlag to indicate that the returned label should be plain text\r\n\t\t\t//\t\tinstead of an example.\r\n\t\t\tplainText: false,\r\n\r\n\t\t\t// templateString: [public] String\r\n\t\t\t//\t\tThe template used to construct the labeled dropdown.\r\n\t\t\ttemplateString: \"<span style='white-space: nowrap' class='dijit dijitReset dijitInline'>\" +\r\n\t\t\t\t\"<label class='dijitLeft dijitInline' for='${selectId}'>${label}</label>\" +\r\n\t\t\t\t\"<input data-dojo-type='../../form/FilteringSelect' required='false' \" +\r\n\t\t\t\t\"data-dojo-props='labelType:\\\"html\\\", labelAttr:\\\"label\\\", searchAttr:\\\"name\\\"' \" +\r\n\t\t\t\t\"class='${comboClass}' \" +\r\n\t\t\t\t\"tabIndex='-1' id='${selectId}' data-dojo-attach-point='select' value=''/>\" +\r\n\t\t\t\t\"</span>\",\r\n\r\n\t\t\t// contextRequire: [public] Function\r\n\t\t\t//\t\tThe context require that is used to resolve modules in template.\r\n\t\t\tcontextRequire: require,\r\n\r\n\t\t\tpostMixInProperties: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tOver-ride to set specific properties.\r\n\t\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t\tthis.strings = i18n.getLocalization(\"dijit._editor\", \"FontChoice\");\r\n\r\n\t\t\t\t// Set some substitution variables used in the template\r\n\t\t\t\tthis.label = this.strings[this.command];\r\n\r\n\t\t\t\t// _WidgetBase sets the id after postMixInProperties(), but we need it now.\r\n\t\t\t\t// Alternative is to have a buildRendering() method and move this.selectId setting there,\r\n\t\t\t\t// or alternately get rid of selectId variable and just access ${id} in template?\r\n\t\t\t\tthis.id = registry.getUniqueId(this.declaredClass.replace(/\\./g, \"_\"));\r\n\r\n\t\t\t\tthis.selectId = this.id + \"_select\";\t// used in template\r\n\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t},\r\n\r\n\t\t\tpostCreate: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tOver-ride for the default postCreate action\r\n\t\t\t\t//\t\tThis establishes the filtering selects and the like.\r\n\r\n\t\t\t\t// Initialize the list of items in the drop down by creating data store with items like:\r\n\t\t\t\t// {value: 1, name: \"xx-small\", label: \"<font size=1>xx-small</font-size>\" }\r\n\t\t\t\tthis.select.set(\"store\", new MemoryStore({\r\n\t\t\t\t\tidProperty: \"value\",\r\n\t\t\t\t\tdata: array.map(this.values, function(value){\r\n\t\t\t\t\t\tvar name = this.strings[value] || value;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tlabel: this.getLabel(value, name),\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}, this)\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tthis.select.set(\"value\", \"\", false);\r\n\t\t\t\tthis.disabled = this.select.get(\"disabled\");\r\n\t\t\t},\r\n\r\n\t\t\t_setValueAttr: function(value, priorityChange){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tOver-ride for the default action of setting the\r\n\t\t\t\t//\t\twidget value, maps the input to known values\r\n\t\t\t\t// value: Object|String\r\n\t\t\t\t//\t\tThe value to set in the select.\r\n\t\t\t\t// priorityChange:\r\n\t\t\t\t//\t\tOptional parameter used to tell the select whether or not to fire\r\n\t\t\t\t//\t\tonChange event.\r\n\r\n\t\t\t\t// if the value is not a permitted value, just set empty string to prevent showing the warning icon\r\n\t\t\t\tpriorityChange = priorityChange !== false;\r\n\t\t\t\tthis.select.set('value', array.indexOf(this.values, value) < 0 ? \"\" : value, priorityChange);\r\n\t\t\t\tif(!priorityChange){\r\n\t\t\t\t\t// Clear the last state in case of updateState calls.  Ref: #10466\r\n\t\t\t\t\tthis.select._lastValueReported = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_getValueAttr: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tAllow retrieving the value from the composite select on\r\n\t\t\t\t//\t\tcall to button.get(\"value\");\r\n\t\t\t\treturn this.select.get('value');\r\n\t\t\t},\r\n\r\n\t\t\tfocus: function(){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tOver-ride for focus control of this widget.  Delegates focus down to the\r\n\t\t\t\t//\t\tfiltering select.\r\n\t\t\t\tthis.select.focus();\r\n\t\t\t},\r\n\r\n\t\t\t_setDisabledAttr: function(value){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tOver-ride for the button's 'disabled' attribute so that it can be\r\n\t\t\t\t//\t\tdisabled programmatically.\r\n\r\n\t\t\t\t// Save off ths disabled state so the get retrieves it correctly\r\n\t\t\t\t//without needing to have a function proxy it.\r\n\t\t\t\tthis._set(\"disabled\", value);\r\n\t\t\t\tthis.select.set(\"disabled\", value);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\tvar _FontNameDropDown = declare(\"dijit._editor.plugins._FontNameDropDown\", _FontDropDown, {\r\n\t\t// summary:\r\n\t\t//\t\tDropdown to select a font; goes in editor toolbar.\r\n\r\n\t\t// generic: [const] Boolean\r\n\t\t//\t\tUse generic (web standard) font names\r\n\t\tgeneric: false,\r\n\r\n\t\t// command: [public] String\r\n\t\t//\t\tThe editor 'command' implemented by this plugin.\r\n\t\tcommand: \"fontName\",\r\n\r\n\t\tcomboClass: \"dijitFontNameCombo\",\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for the default posr mixin control\r\n\t\t\tif(!this.values){\r\n\t\t\t\tthis.values = this.generic ?\r\n\t\t\t\t\t[\"serif\", \"sans-serif\", \"monospace\", \"cursive\", \"fantasy\"] : // CSS font-family generics\r\n\t\t\t\t\t[\"Arial\", \"Times New Roman\", \"Comic Sans MS\", \"Courier New\"];\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tgetLabel: function(value, name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction used to generate the labels of the format dropdown\r\n\t\t\t//\t\twill return a formatted, or plain label based on the value\r\n\t\t\t//\t\tof the plainText option.\r\n\t\t\t// value: String\r\n\t\t\t//\t\tThe 'insert value' associated with a name\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe text name of the value\r\n\t\t\tif(this.plainText){\r\n\t\t\t\treturn name;\r\n\t\t\t}else{\r\n\t\t\t\treturn \"<div style='font-family: \" + value + \"'>\" + name + \"</div>\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(value, priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for the default action of setting the\r\n\t\t\t//\t\twidget value, maps the input to known values\r\n\r\n\t\t\tpriorityChange = priorityChange !== false;\r\n\t\t\tif(this.generic){\r\n\t\t\t\tvar map = {\r\n\t\t\t\t\t\"Arial\": \"sans-serif\",\r\n\t\t\t\t\t\"Helvetica\": \"sans-serif\",\r\n\t\t\t\t\t\"Myriad\": \"sans-serif\",\r\n\t\t\t\t\t\"Times\": \"serif\",\r\n\t\t\t\t\t\"Times New Roman\": \"serif\",\r\n\t\t\t\t\t\"Comic Sans MS\": \"cursive\",\r\n\t\t\t\t\t\"Apple Chancery\": \"cursive\",\r\n\t\t\t\t\t\"Courier\": \"monospace\",\r\n\t\t\t\t\t\"Courier New\": \"monospace\",\r\n\t\t\t\t\t\"Papyrus\": \"fantasy\",\r\n\t\t\t\t\t\"Estrangelo Edessa\": \"cursive\", // Windows 7\r\n\t\t\t\t\t\"Gabriola\": \"fantasy\" // Windows 7\r\n\t\t\t\t};\r\n\t\t\t\tvalue = map[value] || value;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments, [value, priorityChange]);\r\n\t\t}\r\n\t});\r\n\r\n\tvar _FontSizeDropDown = declare(\"dijit._editor.plugins._FontSizeDropDown\", _FontDropDown, {\r\n\t\t// summary:\r\n\t\t//\t\tDropdown to select a font size; goes in editor toolbar.\r\n\r\n\t\t// command: [public] String\r\n\t\t//\t\tThe editor 'command' implemented by this plugin.\r\n\t\tcommand: \"fontSize\",\r\n\r\n\t\tcomboClass: \"dijitFontSizeCombo\",\r\n\r\n\t\t// values: [public] Number[]\r\n\t\t//\t\tThe HTML font size values supported by this plugin\r\n\t\tvalues: [1, 2, 3, 4, 5, 6, 7], // sizes according to the old HTML FONT SIZE\r\n\r\n\t\tgetLabel: function(value, name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction used to generate the labels of the format dropdown\r\n\t\t\t//\t\twill return a formatted, or plain label based on the value\r\n\t\t\t//\t\tof the plainText option.\r\n\t\t\t//\t\tWe're stuck using the deprecated FONT tag to correspond\r\n\t\t\t//\t\twith the size measurements used by the editor\r\n\t\t\t// value: String\r\n\t\t\t//\t\tThe 'insert value' associated with a name\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe text name of the value\r\n\t\t\tif(this.plainText){\r\n\t\t\t\treturn name;\r\n\t\t\t}else{\r\n\t\t\t\treturn \"<font size=\" + value + \"'>\" + name + \"</font>\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(value, priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for the default action of setting the\r\n\t\t\t//\t\twidget value, maps the input to known values\r\n\t\t\tpriorityChange = priorityChange !== false;\r\n\t\t\tif(value.indexOf && value.indexOf(\"px\") != -1){\r\n\t\t\t\tvar pixels = parseInt(value, 10);\r\n\t\t\t\tvalue = {10: 1, 13: 2, 16: 3, 18: 4, 24: 5, 32: 6, 48: 7}[pixels] || value;\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments, [value, priorityChange]);\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tvar _FormatBlockDropDown = declare(\"dijit._editor.plugins._FormatBlockDropDown\", _FontDropDown, {\r\n\t\t// summary:\r\n\t\t//\t\tDropdown to select a format (like paragraph or heading); goes in editor toolbar.\r\n\r\n\t\t// command: [public] String\r\n\t\t//\t\tThe editor 'command' implemented by this plugin.\r\n\t\tcommand: \"formatBlock\",\r\n\r\n\t\tcomboClass: \"dijitFormatBlockCombo\",\r\n\r\n\t\t// values: [public] Array\r\n\t\t//\t\tThe HTML format tags supported by this plugin\r\n\t\tvalues: [\"noFormat\", \"p\", \"h1\", \"h2\", \"h3\", \"pre\"],\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// Init and set the default value to no formatting.  Update state will adjust it\r\n\t\t\t// as needed.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.set(\"value\", \"noFormat\", false);\r\n\t\t},\r\n\r\n\t\tgetLabel: function(value, name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction used to generate the labels of the format dropdown\r\n\t\t\t//\t\twill return a formatted, or plain label based on the value\r\n\t\t\t//\t\tof the plainText option.\r\n\t\t\t// value: String\r\n\t\t\t//\t\tThe 'insert value' associated with a name\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe text name of the value\r\n\t\t\tif(this.plainText || value == \"noFormat\"){\r\n\t\t\t\treturn name;\r\n\t\t\t}else{\r\n\t\t\t\treturn \"<\" + value + \">\" + name + \"</\" + value + \">\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_execCommand: function(editor, command, choice){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for default exec-command label.\r\n\t\t\t//\t\tAllows us to treat 'none' as special.\r\n\t\t\tif(choice === \"noFormat\"){\r\n\t\t\t\tvar start;\r\n\t\t\t\tvar end;\r\n\t\t\t\tvar sel = rangeapi.getSelection(editor.window);\r\n\t\t\t\tif(sel && sel.rangeCount > 0){\r\n\t\t\t\t\tvar range = sel.getRangeAt(0);\r\n\t\t\t\t\tvar node, tag;\r\n\t\t\t\t\tif(range){\r\n\t\t\t\t\t\tstart = range.startContainer;\r\n\t\t\t\t\t\tend = range.endContainer;\r\n\r\n\t\t\t\t\t\t// find containing nodes of start/end.\r\n\t\t\t\t\t\twhile(start && start !== editor.editNode &&\r\n\t\t\t\t\t\t\tstart !== editor.document.body &&\r\n\t\t\t\t\t\t\tstart.nodeType !== 1){\r\n\t\t\t\t\t\t\tstart = start.parentNode;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twhile(end && end !== editor.editNode &&\r\n\t\t\t\t\t\t\tend !== editor.document.body &&\r\n\t\t\t\t\t\t\tend.nodeType !== 1){\r\n\t\t\t\t\t\t\tend = end.parentNode;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar processChildren = lang.hitch(this, function(node, ary){\r\n\t\t\t\t\t\t\tif(node.childNodes && node.childNodes.length){\r\n\t\t\t\t\t\t\t\tvar i;\r\n\t\t\t\t\t\t\t\tfor(i = 0; i < node.childNodes.length; i++){\r\n\t\t\t\t\t\t\t\t\tvar c = node.childNodes[i];\r\n\t\t\t\t\t\t\t\t\tif(c.nodeType == 1){\r\n\t\t\t\t\t\t\t\t\t\tif(editor.selection.inSelection(c)){\r\n\t\t\t\t\t\t\t\t\t\t\tvar tag = c.tagName ? c.tagName.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\t\t\t\t\tif(array.indexOf(this.values, tag) !== -1){\r\n\t\t\t\t\t\t\t\t\t\t\t\tary.push(c);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tprocessChildren(c, ary);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tvar unformatNodes = lang.hitch(this, function(nodes){\r\n\t\t\t\t\t\t\t// summary:\r\n\t\t\t\t\t\t\t//\t\tInternal function to clear format nodes.\r\n\t\t\t\t\t\t\t// nodes:\r\n\t\t\t\t\t\t\t//\t\tThe array of nodes to strip formatting from.\r\n\t\t\t\t\t\t\tif(nodes && nodes.length){\r\n\t\t\t\t\t\t\t\teditor.beginEditing();\r\n\t\t\t\t\t\t\t\twhile(nodes.length){\r\n\t\t\t\t\t\t\t\t\tthis._removeFormat(editor, nodes.pop());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\teditor.endEditing();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tvar clearNodes = [];\r\n\t\t\t\t\t\tif(start == end){\r\n\t\t\t\t\t\t\t//Contained within the same block, may be collapsed, but who cares, see if we\r\n\t\t\t\t\t\t\t// have a block element to remove.\r\n\t\t\t\t\t\t\tvar block;\r\n\t\t\t\t\t\t\tnode = start;\r\n\t\t\t\t\t\t\twhile(node && node !== editor.editNode && node !== editor.document.body){\r\n\t\t\t\t\t\t\t\tif(node.nodeType == 1){\r\n\t\t\t\t\t\t\t\t\ttag = node.tagName ? node.tagName.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\t\t\tif(array.indexOf(this.values, tag) !== -1){\r\n\t\t\t\t\t\t\t\t\t\tblock = node;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnode = node.parentNode;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//Also look for all child nodes in the selection that may need to be\r\n\t\t\t\t\t\t\t//cleared of formatting\r\n\t\t\t\t\t\t\tprocessChildren(start, clearNodes);\r\n\t\t\t\t\t\t\tif(block){\r\n\t\t\t\t\t\t\t\tclearNodes = [block].concat(clearNodes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tunformatNodes(clearNodes);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// Probably a multi select, so we have to process it.  Whee.\r\n\t\t\t\t\t\t\tnode = start;\r\n\t\t\t\t\t\t\twhile(editor.selection.inSelection(node)){\r\n\t\t\t\t\t\t\t\tif(node.nodeType == 1){\r\n\t\t\t\t\t\t\t\t\ttag = node.tagName ? node.tagName.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\t\t\tif(array.indexOf(this.values, tag) !== -1){\r\n\t\t\t\t\t\t\t\t\t\tclearNodes.push(node);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tprocessChildren(node, clearNodes);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnode = node.nextSibling;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tunformatNodes(clearNodes);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\teditor.onDisplayChanged();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\teditor.execCommand(command, choice);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_removeFormat: function(editor, node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tfunction to remove the block format node.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe block format node to remove (and leave the contents behind)\r\n\t\t\tif(editor.customUndo){\r\n\t\t\t\t// So of course IE doesn't work right with paste-overs.\r\n\t\t\t\t// We have to do this manually, which is okay since IE already uses\r\n\t\t\t\t// customUndo and we turned it on for WebKit.  WebKit pasted funny,\r\n\t\t\t\t// so couldn't use the execCommand approach\r\n\t\t\t\twhile(node.firstChild){\r\n\t\t\t\t\tdomConstruct.place(node.firstChild, node, \"before\");\r\n\t\t\t\t}\r\n\t\t\t\tnode.parentNode.removeChild(node);\r\n\t\t\t}else{\r\n\t\t\t\t// Everyone else works fine this way, a paste-over and is native\r\n\t\t\t\t// undo friendly.\r\n\t\t\t\teditor.selection.selectElementChildren(node);\r\n\t\t\t\tvar html = editor.selection.getSelectedHtml();\r\n\t\t\t\teditor.selection.selectElement(node);\r\n\t\t\t\teditor.execCommand(\"inserthtml\", html || \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// TODO: for 2.0, split into FontChoice plugin into three separate classes,\r\n\t// one for each command (and change registry below)\r\n\tvar FontChoice = declare(\"dijit._editor.plugins.FontChoice\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin provides three drop downs for setting style in the editor\r\n\t\t//\t\t(font, font size, and format block), as controlled by command.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tThe commands provided by this plugin are:\r\n\t\t//\r\n\t\t//\t\t- fontName: Provides a drop down to select from a list of font names\r\n\t\t//\t\t- fontSize: Provides a drop down to select from a list of font sizes\r\n\t\t//\t\t- formatBlock: Provides a drop down to select from a list of block styles\r\n\t\t//\t\t  which can easily be added to an editor by including one or more of the above commands\r\n\t\t//\t\t  in the `plugins` attribute as follows:\r\n\t\t//\r\n\t\t//\t|\tplugins=\"['fontName','fontSize',...]\"\r\n\t\t//\r\n\t\t//\t\tIt is possible to override the default dropdown list by providing an Array for the `custom` property when\r\n\t\t//\t\tinstantiating this plugin, e.g.\r\n\t\t//\r\n\t\t//\t|\tplugins=\"[{name:'dijit._editor.plugins.FontChoice', command:'fontName', values:['Verdana','Myriad','Garamond']},...]\"\r\n\t\t//\r\n\t\t//\t\tAlternatively, for `fontName` only, `generic:true` may be specified to provide a dropdown with\r\n\t\t//\t\t[CSS generic font families](http://www.w3.org/TR/REC-CSS2/fonts.html#generic-font-families).\r\n\t\t//\r\n\t\t//\t\tNote that the editor is often unable to properly handle font styling information defined outside\r\n\t\t//\t\tthe context of the current editor instance, such as pre-populated HTML.\r\n\r\n\t\t// useDefaultCommand: [protected] Boolean\r\n\t\t//\t\tOverride _Plugin.useDefaultCommand...\r\n\t\t//\t\tprocessing is handled by this plugin, not by dijit/Editor.\r\n\t\tuseDefaultCommand: false,\r\n\r\n\t\t_initButton: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides _Plugin._initButton(), to initialize the FilteringSelect+label in toolbar,\r\n\t\t\t//\t\trather than a simple button.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// Create the widget to go into the toolbar (the so-called \"button\")\r\n\t\t\tvar clazz = {\r\n\t\t\t\t\tfontName: _FontNameDropDown,\r\n\t\t\t\t\tfontSize: _FontSizeDropDown,\r\n\t\t\t\t\tformatBlock: _FormatBlockDropDown\r\n\t\t\t\t}[this.command],\r\n\t\t\t\tparams = this.params;\r\n\r\n\t\t\t// For back-compat reasons support setting custom values via \"custom\" parameter\r\n\t\t\t// rather than \"values\" parameter.   Remove in 2.0.\r\n\t\t\tif(this.params.custom){\r\n\t\t\t\tparams.values = this.params.custom;\r\n\t\t\t}\r\n\r\n\t\t\tvar editor = this.editor;\r\n\t\t\tthis.button = new clazz(lang.delegate({dir: editor.dir, lang: editor.lang}, params));\r\n\r\n\t\t\t// Reflect changes to the drop down in the editor\r\n\t\t\tthis.own(this.button.select.on(\"change\", lang.hitch(this, function(choice){\r\n\t\t\t\t// User invoked change, since all internal updates set priorityChange to false and will\r\n\t\t\t\t// not trigger an onChange event.\r\n\r\n\t\t\t\tif(this.editor.focused){\r\n\t\t\t\t\t// put focus back in the iframe, unless focus has somehow been shifted out of the editor completely\r\n\t\t\t\t\tthis.editor.focus();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.command == \"fontName\" && choice.indexOf(\" \") != -1){\r\n\t\t\t\t\tchoice = \"'\" + choice + \"'\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Invoke, the editor already normalizes commands called through its\r\n\t\t\t\t// execCommand.\r\n\t\t\t\tif(this.button._execCommand){\r\n\t\t\t\t\tthis.button._execCommand(this.editor, this.command, choice);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.editor.execCommand(this.command, choice);\r\n\t\t\t\t}\r\n\t\t\t})));\r\n\t\t},\r\n\r\n\t\tupdateState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides _Plugin.updateState().  This controls updating the menu\r\n\t\t\t//\t\toptions to the right values on state changes in the document (that trigger a\r\n\t\t\t//\t\ttest of the actions.)\r\n\t\t\t//\t\tIt set value of drop down in toolbar to reflect font/font size/format block\r\n\t\t\t//\t\tof text at current caret position.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar _e = this.editor;\r\n\t\t\tvar _c = this.command;\r\n\t\t\tif(!_e || !_e.isLoaded || !_c.length){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.button){\r\n\t\t\t\tvar disabled = this.get(\"disabled\");\r\n\t\t\t\tthis.button.set(\"disabled\", disabled);\r\n\t\t\t\tif(disabled){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar value;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvalue = _e.queryCommandValue(_c) || \"\";\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t//Firefox may throw error above if the editor is just loaded, ignore it\r\n\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// strip off single quotes, if any\r\n\t\t\t\tvar quoted = lang.isString(value) && (value.match(/'([^']*)'/) || value.match(/\"([^\"]*)\"/));\r\n\t\t\t\tif(quoted){\r\n\t\t\t\t\tvalue = quoted[1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_c === \"formatBlock\"){\r\n\t\t\t\t\tif(!value || value == \"p\"){\r\n\t\t\t\t\t\t// Some browsers (WebKit) doesn't actually get the tag info right.\r\n\t\t\t\t\t\t// and IE returns paragraph when in a DIV!, so incorrect a lot,\r\n\t\t\t\t\t\t// so we have double-check it.\r\n\t\t\t\t\t\tvalue = null;\r\n\t\t\t\t\t\tvar elem;\r\n\t\t\t\t\t\t// Try to find the current element where the caret is.\r\n\t\t\t\t\t\tvar sel = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\t\t\tif(sel && sel.rangeCount > 0){\r\n\t\t\t\t\t\t\tvar range = sel.getRangeAt(0);\r\n\t\t\t\t\t\t\tif(range){\r\n\t\t\t\t\t\t\t\telem = range.endContainer;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Okay, now see if we can find one of the formatting types we're in.\r\n\t\t\t\t\t\twhile(elem && elem !== _e.editNode && elem !== _e.document){\r\n\t\t\t\t\t\t\tvar tg = elem.tagName ? elem.tagName.toLowerCase() : \"\";\r\n\t\t\t\t\t\t\tif(tg && array.indexOf(this.button.values, tg) > -1){\r\n\t\t\t\t\t\t\t\tvalue = tg;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telem = elem.parentNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!value){\r\n\t\t\t\t\t\t\t// Still no value, so lets select 'none'.\r\n\t\t\t\t\t\t\tvalue = \"noFormat\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// Check that the block format is one allowed, if not,\r\n\t\t\t\t\t\t// null it so that it gets set to empty.\r\n\t\t\t\t\t\tif(array.indexOf(this.button.values, value) < 0){\r\n\t\t\t\t\t\t\tvalue = \"noFormat\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(value !== this.button.get(\"value\")){\r\n\t\t\t\t\t// Set the value, but denote it is not a priority change, so no\r\n\t\t\t\t\t// onchange fires.\r\n\t\t\t\t\tthis.button.set('value', value, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Register these plugins\r\n\tarray.forEach([\"fontName\", \"fontSize\", \"formatBlock\"], function(name){\r\n\t\t_Plugin.registry[name] = function(args){\r\n\t\t\treturn new FontChoice({\r\n\t\t\t\tcommand: name,\r\n\t\t\t\tplainText: args.plainText\r\n\t\t\t});\r\n\t\t};\r\n\t});\r\n\r\n\t// Make all classes available through AMD, and return main class\r\n\tFontChoice._FontDropDown = _FontDropDown;\r\n\tFontChoice._FontNameDropDown = _FontNameDropDown;\r\n\tFontChoice._FontSizeDropDown = _FontSizeDropDown;\r\n\tFontChoice._FormatBlockDropDown = _FormatBlockDropDown;\r\n\treturn FontChoice;\r\n\r\n});\r\n\n\ndefine('dijit/form/DropDownButton',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // hitch\r\n\t\"dojo/query\", // query\r\n\t\"../registry\", // registry.byNode\r\n\t\"../popup\", // dijit.popup2.hide\r\n\t\"./Button\",\r\n\t\"../_Container\",\r\n\t\"../_HasDropDown\",\r\n\t\"dojo/text!./templates/DropDownButton.html\",\r\n\t\"../a11yclick\"\t// template uses ondijitclick\r\n], function(declare, lang, query, registry, popup, Button, _Container, _HasDropDown, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/DropDownButton\r\n\r\n\treturn declare(\"dijit.form.DropDownButton\", [Button, _Container, _HasDropDown], {\r\n\t\t// summary:\r\n\t\t//\t\tA button with a drop down\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\t<button data-dojo-type=\"dijit/form/DropDownButton\">\r\n\t\t// |\t\tHello world\r\n\t\t// |\t\t<div data-dojo-type=\"dijit/Menu\">...</div>\r\n\t\t// |\t</button>\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\tvar button1 = new DropDownButton({ label: \"hi\", dropDown: new dijit.Menu(...) });\r\n\t\t// |\twin.body().appendChild(button1);\r\n\t\t//\r\n\r\n\t\tbaseClass: \"dijitDropDownButton\",\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t_fillContent: function(){\r\n\t\t\t// Overrides Button._fillContent().\r\n\t\t\t//\r\n\t\t\t// My inner HTML contains both the button contents and a drop down widget, like\r\n\t\t\t// <DropDownButton>  <span>push me</span>  <Menu> ... </Menu> </DropDownButton>\r\n\t\t\t// The first node is assumed to be the button content. The widget is the popup.\r\n\r\n\t\t\tif(this.srcNodeRef){ // programatically created buttons might not define srcNodeRef\r\n\t\t\t\t//FIXME: figure out how to filter out the widget and use all remaining nodes as button\r\n\t\t\t\t//\tcontent, not just nodes[0]\r\n\t\t\t\tvar nodes = query(\"*\", this.srcNodeRef);\r\n\t\t\t\tthis.inherited(arguments, [nodes[0]]);\r\n\r\n\t\t\t\t// save pointer to srcNode so we can grab the drop down widget after it's instantiated\r\n\t\t\t\tthis.dropDownContainer = this.srcNodeRef;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// the child widget from srcNodeRef is the dropdown widget.  Insert it in the page DOM,\r\n\t\t\t// make it invisible, and store a reference to pass to the popup code.\r\n\t\t\tif(!this.dropDown && this.dropDownContainer){\r\n\t\t\t\tvar dropDownNode = query(\"[widgetId]\", this.dropDownContainer)[0];\r\n\t\t\t\tif(dropDownNode){\r\n\t\t\t\t\tthis.dropDown = registry.byNode(dropDownNode);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.dropDownContainer;\r\n\t\t\t}\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\tpopup.hide(this.dropDown);\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tisLoaded: function(){\r\n\t\t\t// Returns whether or not we are loaded - if our dropdown has an href,\r\n\t\t\t// then we want to check that.\r\n\t\t\tvar dropDown = this.dropDown;\r\n\t\t\treturn (!!dropDown && (!dropDown.href || dropDown.isLoaded));\r\n\t\t},\r\n\r\n\t\tloadDropDown: function(/*Function*/ callback){\r\n\t\t\t// Default implementation assumes that drop down already exists,\r\n\t\t\t// but hasn't loaded it's data (ex: ContentPane w/href).\r\n\t\t\t// App must override if the drop down is lazy-created.\r\n\t\t\tvar dropDown = this.dropDown;\r\n\t\t\tvar handler = dropDown.on(\"load\", lang.hitch(this, function(){\r\n\t\t\t\thandler.remove();\r\n\t\t\t\tcallback();\r\n\t\t\t}));\r\n\t\t\tdropDown.refresh();\t\t// tell it to load\r\n\t\t},\r\n\r\n\t\tisFocusable: function(){\r\n\t\t\t// Overridden so that focus is handled by the _HasDropDown mixin, not by\r\n\t\t\t// the _FormWidget mixin.\r\n\t\t\treturn this.inherited(arguments) && !this._mouseDown;\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/_editor/plugins/LinkDialog',[\r\n\t\"require\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.get\r\n\t\"dojo/keys\", // keys.ENTER\r\n\t\"dojo/_base/lang\", // lang.delegate lang.hitch lang.trim\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"dojo/query\", // query\r\n\t\"dojo/string\", // string.substitute\r\n\t\"../_Plugin\",\r\n\t\"../../form/DropDownButton\",\r\n\t\"../range\"\r\n], function(require, declare, domAttr, keys, lang, on, has, query, string,\r\n\t_Plugin, DropDownButton, rangeapi){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/LinkDialog\r\n\r\n\tvar LinkDialog = declare(\"dijit._editor.plugins.LinkDialog\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin provides the basis for an 'anchor' (link) dialog and an extension of it\r\n\t\t//\t\tprovides the image link dialog.\r\n\t\t// description:\r\n\t\t//\t\tThe command provided by this plugin is:\r\n\t\t//\r\n\t\t//\t\t- createLink\r\n\r\n\t\t// Override _Plugin.buttonClass.   This plugin is controlled by a DropDownButton\r\n\t\t// (which triggers a TooltipDialog).\r\n\t\tbuttonClass: DropDownButton,\r\n\r\n\t\t// Override _Plugin.useDefaultCommand... processing is handled by this plugin, not by dijit/Editor.\r\n\t\tuseDefaultCommand: false,\r\n\r\n\t\t// urlRegExp: [protected] String\r\n\t\t//\t\tUsed for validating input as correct URL.  While file:// urls are not terribly\r\n\t\t//\t\tuseful, they are technically valid.\r\n\t\turlRegExp: \"((https?|ftps?|file)\\\\://|\\./|\\.\\./|/|)(/[a-zA-Z]{1,1}:/|)(((?:(?:[\\\\da-zA-Z](?:[-\\\\da-zA-Z]{0,61}[\\\\da-zA-Z])?)\\\\.)*(?:[a-zA-Z](?:[-\\\\da-zA-Z]{0,80}[\\\\da-zA-Z])?)\\\\.?)|(((\\\\d|[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])\\\\.){3}(\\\\d|[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])|(0[xX]0*[\\\\da-fA-F]?[\\\\da-fA-F]\\\\.){3}0[xX]0*[\\\\da-fA-F]?[\\\\da-fA-F]|(0+[0-3][0-7][0-7]\\\\.){3}0+[0-3][0-7][0-7]|(0|[1-9]\\\\d{0,8}|[1-3]\\\\d{9}|4[01]\\\\d{8}|42[0-8]\\\\d{7}|429[0-3]\\\\d{6}|4294[0-8]\\\\d{5}|42949[0-5]\\\\d{4}|429496[0-6]\\\\d{3}|4294967[01]\\\\d{2}|42949672[0-8]\\\\d|429496729[0-5])|0[xX]0*[\\\\da-fA-F]{1,8}|([\\\\da-fA-F]{1,4}\\\\:){7}[\\\\da-fA-F]{1,4}|([\\\\da-fA-F]{1,4}\\\\:){6}((\\\\d|[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])\\\\.){3}(\\\\d|[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])))(\\\\:\\\\d+)?(/(?:[^?#\\\\s/]+/)*(?:[^?#\\\\s/]{0,}(?:\\\\?[^?#\\\\s/]*)?(?:#.*)?)?)?\",\r\n\r\n\t\t// emailRegExp: [protected] String\r\n\t\t//\t\tUsed for validating input as correct email address.  Taken from dojox.validate\r\n\t\temailRegExp: \"<?(mailto\\\\:)([!#-'*+\\\\-\\\\/-9=?A-Z^-~]+[.])*[!#-'*+\\\\-\\\\/-9=?A-Z^-~]+\" /*username*/ + \"@\" +\r\n\t\t\t\"((?:(?:[\\\\da-zA-Z](?:[-\\\\da-zA-Z]{0,61}[\\\\da-zA-Z])?)\\\\.)+(?:[a-zA-Z](?:[-\\\\da-zA-Z]{0,6}[\\\\da-zA-Z])?)\\\\.?)|localhost|^[^-][a-zA-Z0-9_-]*>?\", // host.\r\n\r\n\t\t// htmlTemplate: [protected] String\r\n\t\t//\t\tString used for templating the HTML to insert at the desired point.\r\n\t\thtmlTemplate: \"<a href=\\\"${urlInput}\\\" _djrealurl=\\\"${urlInput}\\\"\" +\r\n\t\t\t\" target=\\\"${targetSelect}\\\"\" +\r\n\t\t\t\">${textInput}</a>\",\r\n\r\n\t\t// tag: [protected] String\r\n\t\t//\t\tTag used for the link type.\r\n\t\ttag: \"a\",\r\n\r\n\t\t// _hostRxp [private] RegExp\r\n\t\t//\t\tRegular expression used to validate url fragments (ip address, hostname, etc)\r\n\t\t_hostRxp: /^((([^\\[:]+):)?([^@]+)@)?(\\[([^\\]]+)\\]|([^\\[:]*))(:([0-9]+))?$/,\r\n\r\n\t\t// _userAtRxp [private] RegExp\r\n\t\t//\t\tRegular expression used to validate e-mail address fragment.\r\n\t\t_userAtRxp: /^([!#-'*+\\-\\/-9=?A-Z^-~]+[.])*[!#-'*+\\-\\/-9=?A-Z^-~]+@/i,\r\n\r\n\t\t// linkDialogTemplate: [protected] String\r\n\t\t//\t\tTemplate for contents of TooltipDialog to pick URL\r\n\t\tlinkDialogTemplate: [\r\n\t\t\t\"<table role='presentation'><tr><td>\",\r\n\t\t\t\"<label for='${id}_urlInput'>${url}</label>\",\r\n\t\t\t\"</td><td>\",\r\n\t\t\t\"<input data-dojo-type='dijit.form.ValidationTextBox' required='true' \" +\r\n\t\t\t\t\"id='${id}_urlInput' name='urlInput' data-dojo-props='intermediateChanges:true'/>\",\r\n\t\t\t\"</td></tr><tr><td>\",\r\n\t\t\t\"<label for='${id}_textInput'>${text}</label>\",\r\n\t\t\t\"</td><td>\",\r\n\t\t\t\"<input data-dojo-type='dijit.form.ValidationTextBox' required='true' id='${id}_textInput' \" +\r\n\t\t\t\t\"name='textInput' data-dojo-props='intermediateChanges:true'/>\",\r\n\t\t\t\"</td></tr><tr><td>\",\r\n\t\t\t\"<label for='${id}_targetSelect'>${target}</label>\",\r\n\t\t\t\"</td><td>\",\r\n\t\t\t\"<select id='${id}_targetSelect' name='targetSelect' data-dojo-type='dijit.form.Select'>\",\r\n\t\t\t\"<option selected='selected' value='_self'>${currentWindow}</option>\",\r\n\t\t\t\"<option value='_blank'>${newWindow}</option>\",\r\n\t\t\t\"<option value='_top'>${topWindow}</option>\",\r\n\t\t\t\"<option value='_parent'>${parentWindow}</option>\",\r\n\t\t\t\"</select>\",\r\n\t\t\t\"</td></tr><tr><td colspan='2'>\",\r\n\t\t\t\"<button data-dojo-type='dijit.form.Button' type='submit' id='${id}_setButton'>${set}</button>\",\r\n\t\t\t\"<button data-dojo-type='dijit.form.Button' type='button' id='${id}_cancelButton'>${buttonCancel}</button>\",\r\n\t\t\t\"</td></tr></table>\"\r\n\t\t].join(\"\"),\r\n\r\n\t\t_initButton: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Setup to lazy create TooltipDialog first time the button is clicked\r\n\t\t\tthis.button.loadDropDown = lang.hitch(this, \"_loadDropDown\");\r\n\r\n\t\t\tthis._connectTagEvents();\r\n\t\t},\r\n\t\t_loadDropDown: function(callback){\r\n\t\t\t// Called the first time the button is pressed.  Initialize TooltipDialog.\r\n\t\t\trequire([\r\n\t\t\t\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\t\t\t\"../../TooltipDialog\",\r\n\t\t\t\t\"../../registry\", // registry.byId, registry.getUniqueId\r\n\t\t\t\t\"../../form/Button\", // used by template\r\n\t\t\t\t\"../../form/Select\", // used by template\r\n\t\t\t\t\"../../form/ValidationTextBox\", // used by template\r\n\t\t\t\t\"dojo/i18n!../../nls/common\",\r\n\t\t\t\t\"dojo/i18n!../nls/LinkDialog\"\r\n\t\t\t], lang.hitch(this, function(i18n, TooltipDialog, registry){\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tthis.tag = this.command == 'insertImage' ? 'img' : 'a';\r\n\t\t\t\tvar messages = lang.delegate(i18n.getLocalization(\"dijit\", \"common\", this.lang),\r\n\t\t\t\t\ti18n.getLocalization(\"dijit._editor\", \"LinkDialog\", this.lang));\r\n\t\t\t\tvar dropDown = (this.dropDown = this.button.dropDown = new TooltipDialog({\r\n\t\t\t\t\ttitle: messages[this.command + \"Title\"],\r\n\t\t\t\t\townerDocument: this.editor.ownerDocument,\r\n\t\t\t\t\tdir: this.editor.dir,\r\n\t\t\t\t\texecute: lang.hitch(this, \"setValue\"),\r\n\t\t\t\t\tonOpen: function(){\r\n\t\t\t\t\t\t_this._onOpenDialog();\r\n\t\t\t\t\t\tTooltipDialog.prototype.onOpen.apply(this, arguments);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonCancel: function(){\r\n\t\t\t\t\t\tsetTimeout(lang.hitch(_this, \"_onCloseDialog\"), 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tmessages.urlRegExp = this.urlRegExp;\r\n\t\t\t\tmessages.id = registry.getUniqueId(this.editor.id);\r\n\t\t\t\tthis._uniqueId = messages.id;\r\n\t\t\t\tthis._setContent(dropDown.title +\r\n\t\t\t\t\t\"<div style='border-bottom: 1px black solid;padding-bottom:2pt;margin-bottom:4pt'></div>\" +\r\n\t\t\t\t\tstring.substitute(this.linkDialogTemplate, messages));\r\n\t\t\t\tdropDown.startup();\r\n\t\t\t\tthis._urlInput = registry.byId(this._uniqueId + \"_urlInput\");\r\n\t\t\t\tthis._textInput = registry.byId(this._uniqueId + \"_textInput\");\r\n\t\t\t\tthis._setButton = registry.byId(this._uniqueId + \"_setButton\");\r\n\t\t\t\tthis.own(registry.byId(this._uniqueId + \"_cancelButton\").on(\"click\", lang.hitch(this.dropDown, \"onCancel\")));\r\n\t\t\t\tif(this._urlInput){\r\n\t\t\t\t\tthis.own(this._urlInput.on(\"change\", lang.hitch(this, \"_checkAndFixInput\")));\r\n\t\t\t\t}\r\n\t\t\t\tif(this._textInput){\r\n\t\t\t\t\tthis.own(this._textInput.on(\"change\", lang.hitch(this, \"_checkAndFixInput\")));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build up the dual check for http/https/file:, and mailto formats.\r\n\t\t\t\tthis._urlRegExp = new RegExp(\"^\" + this.urlRegExp + \"$\", \"i\");\r\n\t\t\t\tthis._emailRegExp = new RegExp(\"^\" + this.emailRegExp + \"$\", \"i\");\r\n\t\t\t\tthis._urlInput.isValid = lang.hitch(this, function(){\r\n\t\t\t\t\t// Function over-ride of isValid to test if the input matches a url or a mailto style link.\r\n\t\t\t\t\tvar value = this._urlInput.get(\"value\");\r\n\t\t\t\t\treturn this._urlRegExp.test(value) || this._emailRegExp.test(value);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Listen for enter and execute if valid.\r\n\t\t\t\tthis.own(on(dropDown.domNode, \"keydown\", lang.hitch(this, lang.hitch(this, function(e){\r\n\t\t\t\t\tif(e && e.keyCode == keys.ENTER && !e.shiftKey && !e.metaKey && !e.ctrlKey && !e.altKey){\r\n\t\t\t\t\t\tif(!this._setButton.get(\"disabled\")){\r\n\t\t\t\t\t\t\tdropDown.onExecute();\r\n\t\t\t\t\t\t\tdropDown.execute(dropDown.get('value'));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}))));\r\n\r\n\t\t\t\tcallback();\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_checkAndFixInput: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA function to listen for onChange events and test the input contents\r\n\t\t\t//\t\tfor valid information, such as valid urls with http/https/ftp and if\r\n\t\t\t//\t\tnot present, try and guess if the input url is relative or not, and if\r\n\t\t\t//\t\tnot, append http:// to it.  Also validates other fields as determined by\r\n\t\t\t//\t\tthe internal _isValid function.\r\n\t\t\tvar self = this;\r\n\t\t\tvar url = this._urlInput.get(\"value\");\r\n\t\t\tvar fixupUrl = function(url){\r\n\t\t\t\tvar appendHttp = false;\r\n\t\t\t\tvar appendMailto = false;\r\n\t\t\t\tif(url && url.length > 1){\r\n\t\t\t\t\turl = lang.trim(url);\r\n\t\t\t\t\tif(url.indexOf(\"mailto:\") !== 0){\r\n\t\t\t\t\t\tif(url.indexOf(\"/\") > 0){\r\n\t\t\t\t\t\t\tif(url.indexOf(\"://\") === -1){\r\n\t\t\t\t\t\t\t\t// Check that it doesn't start with /, ./, or ../, which would\r\n\t\t\t\t\t\t\t\t// imply 'target server relativeness'\r\n\t\t\t\t\t\t\t\tif(url.charAt(0) !== '/' && url.indexOf(\"./\") && url.indexOf(\"../\") !== 0){\r\n\t\t\t\t\t\t\t\t\tif(self._hostRxp.test(url)){\r\n\t\t\t\t\t\t\t\t\t\tappendHttp = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(self._userAtRxp.test(url)){\r\n\t\t\t\t\t\t\t// If it looks like a foo@, append a mailto.\r\n\t\t\t\t\t\t\tappendMailto = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(appendHttp){\r\n\t\t\t\t\tself._urlInput.set(\"value\", \"http://\" + url);\r\n\t\t\t\t}\r\n\t\t\t\tif(appendMailto){\r\n\t\t\t\t\tself._urlInput.set(\"value\", \"mailto:\" + url);\r\n\t\t\t\t}\r\n\t\t\t\tself._setButton.set(\"disabled\", !self._isValid());\r\n\t\t\t};\r\n\t\t\tif(this._delayedCheck){\r\n\t\t\t\tclearTimeout(this._delayedCheck);\r\n\t\t\t\tthis._delayedCheck = null;\r\n\t\t\t}\r\n\t\t\tthis._delayedCheck = setTimeout(function(){\r\n\t\t\t\tfixupUrl(url);\r\n\t\t\t}, 250);\r\n\t\t},\r\n\r\n\t\t_connectTagEvents: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ridable function that connects tag specific events.\r\n\t\t\tthis.editor.onLoadDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\tthis.own(on(this.editor.editNode, \"dblclick\", lang.hitch(this, \"_onDblClick\")));\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_isValid: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to allow validating of the inputs\r\n\t\t\t//\t\tfor a link to determine if set should be disabled or not\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this._urlInput.isValid() && this._textInput.isValid();\r\n\t\t},\r\n\r\n\t\t_setContent: function(staticPanel){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper for _initButton above.   Not sure why it's a separate method.\r\n\t\t\tthis.dropDown.set({\r\n\t\t\t\tparserScope: \"dojo\", // make parser search for dojoType/data-dojo-type even if page is multi-version\r\n\t\t\t\tcontent: staticPanel\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_checkValues: function(args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to check the values in args and 'fix' them up as needed.\r\n\t\t\t// args: Object\r\n\t\t\t//\t\tContent being set.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(args && args.urlInput){\r\n\t\t\t\targs.urlInput = args.urlInput.replace(/\"/g, \"&quot;\");\r\n\t\t\t}\r\n\t\t\treturn args;\r\n\t\t},\r\n\r\n\t\tsetValue: function(args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback from the dialog when user presses \"set\" button.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// TODO: prevent closing popup if the text is empty\r\n\t\t\tthis._onCloseDialog();\r\n\t\t\tif(has(\"ie\") < 9){ //see #4151\r\n\t\t\t\tvar sel = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\tvar range = sel.getRangeAt(0);\r\n\t\t\t\tvar a = range.endContainer;\r\n\t\t\t\tif(a.nodeType === 3){\r\n\t\t\t\t\t// Text node, may be the link contents, so check parent.\r\n\t\t\t\t\t// This plugin doesn't really support nested HTML elements\r\n\t\t\t\t\t// in the link, it assumes all link content is text.\r\n\t\t\t\t\ta = a.parentNode;\r\n\t\t\t\t}\r\n\t\t\t\tif(a && (a.nodeName && a.nodeName.toLowerCase() !== this.tag)){\r\n\t\t\t\t\t// Still nothing, one last thing to try on IE, as it might be 'img'\r\n\t\t\t\t\t// and thus considered a control.\r\n\t\t\t\t\ta = this.editor.selection.getSelectedElement(this.tag);\r\n\t\t\t\t}\r\n\t\t\t\tif(a && (a.nodeName && a.nodeName.toLowerCase() === this.tag)){\r\n\t\t\t\t\t// Okay, we do have a match.  IE, for some reason, sometimes pastes before\r\n\t\t\t\t\t// instead of removing the targeted paste-over element, so we unlink the\r\n\t\t\t\t\t// old one first.  If we do not the <a> tag remains, but it has no content,\r\n\t\t\t\t\t// so isn't readily visible (but is wrong for the action).\r\n\t\t\t\t\tif(this.editor.queryCommandEnabled(\"unlink\")){\r\n\t\t\t\t\t\t// Select all the link children, then unlink.  The following insert will\r\n\t\t\t\t\t\t// then replace the selected text.\r\n\t\t\t\t\t\tthis.editor.selection.selectElementChildren(a);\r\n\t\t\t\t\t\tthis.editor.execCommand(\"unlink\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// make sure values are properly escaped, etc.\r\n\t\t\targs = this._checkValues(args);\r\n\t\t\tthis.editor.execCommand('inserthtml',\r\n\t\t\t\tstring.substitute(this.htmlTemplate, args));\r\n\r\n\t\t\t// IE sometimes leaves a blank link, so we need to fix it up.\r\n\t\t\t// Go ahead and do this for everyone just to avoid blank links\r\n\t\t\t// in the page.\r\n\t\t\tquery(\"a\", this.editor.document).forEach(function(a){\r\n\t\t\t\tif(!a.innerHTML && !domAttr.has(a, \"name\")){\r\n\t\t\t\t\t// Remove empty anchors that do not have \"name\" set.\r\n\t\t\t\t\t// Empty ones with a name set could be a hidden hash\r\n\t\t\t\t\t// anchor.\r\n\t\t\t\t\ta.parentNode.removeChild(a);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_onCloseDialog: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for close event on the dialog\r\n\r\n\t\t\tif(this.editor.focused){\r\n\t\t\t\t// put focus back in the edit area, unless the dialog closed because the user clicked somewhere else\r\n\t\t\t\tthis.editor.focus();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getCurrentValues: function(a){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for getting the values to set in the dropdown.\r\n\t\t\t// a:\r\n\t\t\t//\t\tThe anchor/link to process for data for the dropdown.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar url, text, target;\r\n\t\t\tif(a && a.tagName.toLowerCase() === this.tag){\r\n\t\t\t\turl = a.getAttribute('_djrealurl') || a.getAttribute('href');\r\n\t\t\t\ttarget = a.getAttribute('target') || \"_self\";\r\n\t\t\t\ttext = a.textContent || a.innerText;\r\n\t\t\t\tthis.editor.selection.selectElement(a, true);\r\n\t\t\t}else{\r\n\t\t\t\ttext = this.editor.selection.getSelectedText();\r\n\t\t\t}\r\n\t\t\treturn {urlInput: url || '', textInput: text || '', targetSelect: target || ''}; //Object;\r\n\t\t},\r\n\r\n\t\t_onOpenDialog: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when the dialog is opened.\r\n\t\t\t//\t\tIf the caret is currently in a URL then populate the URL's info into the dialog.\r\n\t\t\tvar a, b, fc;\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// IE, even IE10, is difficult to select the element in, using the range unified\r\n\t\t\t\t// API seems to work reasonably well.\r\n\t\t\t\tvar sel = rangeapi.getSelection(this.editor.window);\r\n\t\t\t\tif(sel.rangeCount){\r\n\t\t\t\t\tvar range = sel.getRangeAt(0);\r\n\t\t\t\t\ta = range.endContainer;\r\n\t\t\t\t\tif(a.nodeType === 3){\r\n\t\t\t\t\t\t// Text node, may be the link contents, so check parent.\r\n\t\t\t\t\t\t// This plugin doesn't really support nested HTML elements\r\n\t\t\t\t\t\t// in the link, it assumes all link content is text.\r\n\t\t\t\t\t\ta = a.parentNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(a && (a.nodeName && a.nodeName.toLowerCase() !== this.tag)){\r\n\t\t\t\t\t\t// Still nothing, one last thing to try on IE, as it might be 'img'\r\n\t\t\t\t\t\t// and thus considered a control.\r\n\t\t\t\t\t\ta = this.editor.selection.getSelectedElement(this.tag);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!a || (a.nodeName && a.nodeName.toLowerCase() !== this.tag)){\r\n\t\t\t\t\t\t// Try another lookup, IE's selection is just terrible.\r\n\t\t\t\t\t\tb = this.editor.selection.getAncestorElement(this.tag);\r\n\t\t\t\t\t\tif(b && (b.nodeName && b.nodeName.toLowerCase() == this.tag)){\r\n\t\t\t\t\t\t\t// Looks like we found an A tag, use it and make sure just it is\r\n\t\t\t\t\t\t\t// selected.\r\n\t\t\t\t\t\t\ta = b;\r\n\t\t\t\t\t\t\tthis.editor.selection.selectElement(a);\r\n\t\t\t\t\t\t}else if(range.startContainer === range.endContainer){\r\n\t\t\t\t\t\t\t// STILL nothing.  Trying one more thing.  Lets look at the first child.\r\n\t\t\t\t\t\t\t// It might be an anchor tag in a div by itself or the like.  If it is,\r\n\t\t\t\t\t\t\t// we'll use it otherwise we give up.  The selection is not easily\r\n\t\t\t\t\t\t\t// determinable to be on an existing anchor tag.\r\n\t\t\t\t\t\t\tfc = range.startContainer.firstChild;\r\n\t\t\t\t\t\t\tif(fc && (fc.nodeName && fc.nodeName.toLowerCase() == this.tag)){\r\n\t\t\t\t\t\t\t\ta = fc;\r\n\t\t\t\t\t\t\t\tthis.editor.selection.selectElement(a);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\ta = this.editor.selection.getAncestorElement(this.tag);\r\n\t\t\t}\r\n\t\t\tthis.dropDown.reset();\r\n\t\t\tthis._setButton.set(\"disabled\", true);\r\n\t\t\tthis.dropDown.set(\"value\", this._getCurrentValues(a));\r\n\t\t},\r\n\r\n\t\t_onDblClick: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to define a behavior on double clicks on the element\r\n\t\t\t//\t\ttype this dialog edits to select it and pop up the editor\r\n\t\t\t//\t\tdialog.\r\n\t\t\t// e: Object\r\n\t\t\t//\t\tThe double-click event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected.\r\n\t\t\tif(e && e.target){\r\n\t\t\t\tvar t = e.target;\r\n\t\t\t\tvar tg = t.tagName ? t.tagName.toLowerCase() : \"\";\r\n\t\t\t\tif(tg === this.tag && domAttr.get(t, \"href\")){\r\n\t\t\t\t\tvar editor = this.editor;\r\n\r\n\t\t\t\t\tthis.editor.selection.selectElement(t);\r\n\t\t\t\t\teditor.onDisplayChanged();\r\n\r\n\t\t\t\t\t// Call onNormalizedDisplayChange() now, rather than on timer.\r\n\t\t\t\t\t// On IE, when focus goes to the first <input> in the TooltipDialog, the editor loses it's selection.\r\n\t\t\t\t\t// Later if onNormalizedDisplayChange() gets called via the timer it will disable the LinkDialog button\r\n\t\t\t\t\t// (actually, all the toolbar buttons), at which point clicking the <input> will close the dialog,\r\n\t\t\t\t\t// since (for unknown reasons) focus.js ignores disabled controls.\r\n\t\t\t\t\tif(editor._updateTimer){\r\n\t\t\t\t\t\teditor._updateTimer.remove();\r\n\t\t\t\t\t\tdelete editor._updateTimer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\teditor.onNormalizedDisplayChanged();\r\n\r\n\t\t\t\t\tvar button = this.button;\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t// Focus shift outside the event handler.\r\n\t\t\t\t\t\t// IE doesn't like focus changes in event handles.\r\n\t\t\t\t\t\tbutton.set(\"disabled\", false);\r\n\t\t\t\t\t\tbutton.loadAndOpenDropDown().then(function(){\r\n\t\t\t\t\t\t\tif(button.dropDown.focus){\r\n\t\t\t\t\t\t\t\tbutton.dropDown.focus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tvar ImgLinkDialog = declare(\"dijit._editor.plugins.ImgLinkDialog\", [LinkDialog], {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin extends LinkDialog and adds in a plugin for handling image links.\r\n\t\t//\t\tprovides the image link dialog.\r\n\t\t// description:\r\n\t\t//\t\tThe command provided by this plugin is:\r\n\t\t//\r\n\t\t//\t\t- insertImage\r\n\r\n\t\t// linkDialogTemplate: [protected] String\r\n\t\t//\t\tOver-ride for template since img dialog doesn't need target that anchor tags may.\r\n\t\tlinkDialogTemplate: [\r\n\t\t\t\"<table role='presentation'><tr><td>\",\r\n\t\t\t\"<label for='${id}_urlInput'>${url}</label>\",\r\n\t\t\t\"</td><td>\",\r\n\t\t\t\"<input dojoType='dijit.form.ValidationTextBox' regExp='${urlRegExp}' \" +\r\n\t\t\t\t\"required='true' id='${id}_urlInput' name='urlInput' data-dojo-props='intermediateChanges:true'/>\",\r\n\t\t\t\"</td></tr><tr><td>\",\r\n\t\t\t\"<label for='${id}_textInput'>${text}</label>\",\r\n\t\t\t\"</td><td>\",\r\n\t\t\t\"<input data-dojo-type='dijit.form.ValidationTextBox' required='false' id='${id}_textInput' \" +\r\n\t\t\t\t\"name='textInput' data-dojo-props='intermediateChanges:true'/>\",\r\n\t\t\t\"</td></tr><tr><td>\",\r\n\t\t\t\"</td><td>\",\r\n\t\t\t\"</td></tr><tr><td colspan='2'>\",\r\n\t\t\t\"<button data-dojo-type='dijit.form.Button' type='submit' id='${id}_setButton'>${set}</button>\",\r\n\t\t\t\"<button data-dojo-type='dijit.form.Button' type='button' id='${id}_cancelButton'>${buttonCancel}</button>\",\r\n\t\t\t\"</td></tr></table>\"\r\n\t\t].join(\"\"),\r\n\r\n\t\t// htmlTemplate: [protected] String\r\n\t\t//\t\tString used for templating the `<img>` HTML to insert at the desired point.\r\n\t\thtmlTemplate: \"<img src=\\\"${urlInput}\\\" _djrealurl=\\\"${urlInput}\\\" alt=\\\"${textInput}\\\" />\",\r\n\r\n\t\t// tag: [protected] String\r\n\t\t//\t\tTag used for the link type (img).\r\n\t\ttag: \"img\",\r\n\r\n\t\t_getCurrentValues: function(img){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for getting the values to set in the dropdown.\r\n\t\t\t// a:\r\n\t\t\t//\t\tThe anchor/link to process for data for the dropdown.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar url, text;\r\n\t\t\tif(img && img.tagName.toLowerCase() === this.tag){\r\n\t\t\t\turl = img.getAttribute('_djrealurl') || img.getAttribute('src');\r\n\t\t\t\ttext = img.getAttribute('alt');\r\n\t\t\t\tthis.editor.selection.selectElement(img, true);\r\n\t\t\t}else{\r\n\t\t\t\ttext = this.editor.selection.getSelectedText();\r\n\t\t\t}\r\n\t\t\treturn {urlInput: url || '', textInput: text || ''}; //Object\r\n\t\t},\r\n\r\n\t\t_isValid: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for images.  You can have alt text of blank, it is valid.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this._urlInput.isValid();\r\n\t\t},\r\n\r\n\t\t_connectTagEvents: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ridable function that connects tag specific events.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.editor.onLoadDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\t// Use onmousedown instead of onclick.  Seems that IE eats the first onclick\r\n\t\t\t\t// to wrap it in a selector box, then the second one acts as onclick.  See #10420\r\n\t\t\t\tthis.own(on(this.editor.editNode, \"mousedown\", lang.hitch(this, \"_selectTag\")));\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_selectTag: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA simple event handler that lets me select an image if it is clicked on.\r\n\t\t\t//\t\tmakes it easier to select images in a standard way across browsers.  Otherwise\r\n\t\t\t//\t\tselecting an image for edit becomes difficult.\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tThe mousedown event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(e && e.target){\r\n\t\t\t\tvar t = e.target;\r\n\t\t\t\tvar tg = t.tagName ? t.tagName.toLowerCase() : \"\";\r\n\t\t\t\tif(tg === this.tag){\r\n\t\t\t\t\tthis.editor.selection.selectElement(t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_checkValues: function(args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to check the values in args and 'fix' them up as needed\r\n\t\t\t//\t\t(special characters in the url or alt text)\r\n\t\t\t// args: Object\r\n\t\t\t//\t\tContent being set.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(args && args.urlInput){\r\n\t\t\t\targs.urlInput = args.urlInput.replace(/\"/g, \"&quot;\");\r\n\t\t\t}\r\n\t\t\tif(args && args.textInput){\r\n\t\t\t\targs.textInput = args.textInput.replace(/\"/g, \"&quot;\");\r\n\t\t\t}\r\n\t\t\treturn args;\r\n\t\t},\r\n\r\n\t\t_onDblClick: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to define a behavior on double clicks on the element\r\n\t\t\t//\t\ttype this dialog edits to select it and pop up the editor\r\n\t\t\t//\t\tdialog.\r\n\t\t\t// e: Object\r\n\t\t\t//\t\tThe double-click event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected.\r\n\t\t\tif(e && e.target){\r\n\t\t\t\tvar t = e.target;\r\n\t\t\t\tvar tg = t.tagName ? t.tagName.toLowerCase() : \"\";\r\n\t\t\t\tif(tg === this.tag && domAttr.get(t, \"src\")){\r\n\t\t\t\t\tvar editor = this.editor;\r\n\r\n\t\t\t\t\tthis.editor.selection.selectElement(t);\r\n\t\t\t\t\teditor.onDisplayChanged();\r\n\r\n\t\t\t\t\t// Call onNormalizedDisplayChange() now, rather than on timer.\r\n\t\t\t\t\t// On IE, when focus goes to the first <input> in the TooltipDialog, the editor loses it's selection.\r\n\t\t\t\t\t// Later if onNormalizedDisplayChange() gets called via the timer it will disable the LinkDialog button\r\n\t\t\t\t\t// (actually, all the toolbar buttons), at which point clicking the <input> will close the dialog,\r\n\t\t\t\t\t// since (for unknown reasons) focus.js ignores disabled controls.\r\n\t\t\t\t\tif(editor._updateTimer){\r\n\t\t\t\t\t\teditor._updateTimer.remove();\r\n\t\t\t\t\t\tdelete editor._updateTimer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\teditor.onNormalizedDisplayChanged();\r\n\r\n\t\t\t\t\tvar button = this.button;\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t// Focus shift outside the event handler.\r\n\t\t\t\t\t\t// IE doesn't like focus changes in event handles.\r\n\t\t\t\t\t\tbutton.set(\"disabled\", false);\r\n\t\t\t\t\t\tbutton.loadAndOpenDropDown().then(function(){\r\n\t\t\t\t\t\t\tif(button.dropDown.focus){\r\n\t\t\t\t\t\t\t\tbutton.dropDown.focus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Register these plugins\r\n\t_Plugin.registry[\"createLink\"] = function(){\r\n\t\treturn new LinkDialog({command: \"createLink\"});\r\n\t};\r\n\t_Plugin.registry[\"insertImage\"] = function(){\r\n\t\treturn new ImgLinkDialog({command: \"insertImage\"});\r\n\t};\r\n\r\n\r\n\t// Export both LinkDialog and ImgLinkDialog\r\n\t// TODO for 2.0: either return both classes in a hash, or split this file into two separate files.\r\n\t// Then the documentation for the module can be applied to the hash, and will show up in the API doc.\r\n\tLinkDialog.ImgLinkDialog = ImgLinkDialog;\r\n\treturn LinkDialog;\r\n});\r\n\n\ndefine('dijit/_MenuBase',[\r\n\t\"dojo/_base/array\", // array.indexOf\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.isDescendant domClass.replace\r\n\t\"dojo/dom-attr\",\r\n\t\"dojo/dom-class\", // domClass.replace\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/mouse\", // mouse.enter, mouse.leave\r\n\t\"dojo/on\",\r\n\t\"dojo/window\",\r\n\t\"./a11yclick\",\r\n\t\"./registry\",\r\n\t\"./_Widget\",\r\n\t\"./_CssStateMixin\",\r\n\t\"./_KeyNavContainer\",\r\n\t\"./_TemplatedMixin\"\r\n], function(array, declare, dom, domAttr, domClass, lang, mouse, on, winUtils, a11yclick,\r\n\t\t\tregistry, _Widget, _CssStateMixin, _KeyNavContainer, _TemplatedMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_MenuBase\r\n\r\n\treturn declare(\"dijit._MenuBase\", [_Widget, _TemplatedMixin, _KeyNavContainer, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tAbstract base class for Menu and MenuBar.\r\n\t\t//\t\tSubclass should implement _onUpArrow(), _onDownArrow(), _onLeftArrow(), and _onRightArrow().\r\n\r\n\t\t// selected: dijit/MenuItem\r\n\t\t//\t\tCurrently selected (a.k.a. highlighted) MenuItem, or null if no MenuItem is selected.\r\n\t\t//\t\tIf a submenu is open, will be set to MenuItem that displayed the submenu.   OTOH, if\r\n\t\t//\t\tthis Menu is in passive mode (i.e. hasn't been clicked yet), will be null, because\r\n\t\t//\t\t\"selected\" is not merely \"hovered\".\r\n\t\tselected: null,\r\n\t\t_setSelectedAttr: function(item){\r\n\t\t\tif(this.selected != item){\r\n\t\t\t\tif(this.selected){\r\n\t\t\t\t\tthis.selected._setSelected(false);\r\n\t\t\t\t\tthis._onChildDeselect(this.selected);\r\n\t\t\t\t}\r\n\t\t\t\tif(item){\r\n\t\t\t\t\titem._setSelected(true);\r\n\t\t\t\t}\r\n\t\t\t\tthis._set(\"selected\", item);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// activated: [readonly] Boolean\r\n\t\t//\t\tThis Menu has been clicked (mouse or via space/arrow key) or opened as a submenu,\r\n\t\t//\t\tso mere mouseover will open submenus.  Focusing a menu via TAB does NOT automatically make it active\r\n\t\t//\t\tsince TAB is a navigation operation and not a selection one.\r\n\t\t//\t\tFor Windows apps, pressing the ALT key focuses the menubar menus (similar to TAB navigation) but the\r\n\t\t//\t\tmenu is not active (ie no dropdown) until an item is clicked.\r\n\t\tactivated: false,\r\n\t\t_setActivatedAttr: function(val){\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitMenuActive\", val);\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitMenuPassive\", !val);\r\n\t\t\tthis._set(\"activated\", val);\r\n\t\t},\r\n\r\n\t\t// parentMenu: [readonly] Widget\r\n\t\t//\t\tpointer to menu that displayed me\r\n\t\tparentMenu: null,\r\n\r\n\t\t// popupDelay: Integer\r\n\t\t//\t\tAfter a menu has been activated (by clicking on it etc.), number of milliseconds before hovering\r\n\t\t//\t\t(without clicking) another MenuItem causes that MenuItem's popup to automatically open.\r\n\t\tpopupDelay: 500,\r\n\r\n\t\t// passivePopupDelay: Integer\r\n\t\t//\t\tFor a passive (unclicked) Menu, number of milliseconds before hovering (without clicking) will cause\r\n\t\t//\t\tthe popup to open.  Default is Infinity, meaning you need to click the menu to open it.\r\n\t\tpassivePopupDelay: Infinity,\r\n\r\n\t\t// autoFocus: Boolean\r\n\t\t//\t\tA toggle to control whether or not a Menu gets focused when opened as a drop down from a MenuBar\r\n\t\t//\t\tor DropDownButton/ComboButton.   Note though that it always get focused when opened via the keyboard.\r\n\t\tautoFocus: false,\r\n\r\n\t\tchildSelector: function(/*DOMNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSelector (passed to on.selector()) used to identify MenuItem child widgets, but exclude inert children\r\n\t\t\t//\t\tlike MenuSeparator.  If subclass overrides to a string (ex: \"> *\"), the subclass must require dojo/query.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar widget = registry.byNode(node);\r\n\t\t\treturn node.parentNode == this.containerNode && widget && widget.focus;\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tvar self = this,\r\n\t\t\t\tmatches = typeof this.childSelector == \"string\" ? this.childSelector : lang.hitch(this, \"childSelector\");\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.containerNode, on.selector(matches, mouse.enter), function(){\r\n\t\t\t\t\tself.onItemHover(registry.byNode(this));\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.containerNode, on.selector(matches, mouse.leave), function(){\r\n\t\t\t\t\tself.onItemUnhover(registry.byNode(this));\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.containerNode, on.selector(matches, a11yclick), function(evt){\r\n\t\t\t\t\tself.onItemClick(registry.byNode(this), evt);\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.containerNode, on.selector(matches, \"focusin\"), function(){\r\n\t\t\t\t\tself._onItemFocus(registry.byNode(this));\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tonKeyboardSearch: function(/*MenuItem*/ item, /*Event*/ evt, /*String*/ searchString, /*Number*/ numMatches){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach point for notification about when a menu item has been searched for\r\n\t\t\t//\t\tvia the keyboard search mechanism.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!!item && (numMatches == -1 || (!!item.popup && numMatches == 1))){\r\n\t\t\t\tthis.onItemClick(item, evt);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_keyboardSearchCompare: function(/*dijit/_WidgetBase*/ item, /*String*/ searchString){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCompares the searchString to the widget's text label, returning:\r\n\t\t\t//\t\t-1: a high priority match and stop searching\r\n\t\t\t//\t\t 0: no match\r\n\t\t\t//\t\t 1: a match but keep looking for a higher priority match\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!!item.shortcutKey){\r\n\t\t\t\t// accessKey matches have priority\r\n\t\t\t\treturn searchString == item.shortcutKey.toLowerCase() ? -1 : 0;\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments) ? 1 : 0; // change return value of -1 to 1 so that searching continues\r\n\t\t},\r\n\r\n\t\tonExecute: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach point for notification about when a menu item has been executed.\r\n\t\t\t//\t\tThis is an internal mechanism used for Menus to signal to their parent to\r\n\t\t\t//\t\tclose them, because they are about to execute the onClick handler.  In\r\n\t\t\t//\t\tgeneral developers should not attach to or override this method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tonCancel: function(/*Boolean*/ /*===== closeAll =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach point for notification about when the user cancels the current menu\r\n\t\t\t//\t\tThis is an internal mechanism used for Menus to signal to their parent to\r\n\t\t\t//\t\tclose them.  In general developers should not attach to or override this method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\t_moveToPopup: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis handles the right arrow key (left arrow key on RTL systems),\r\n\t\t\t//\t\twhich will either open a submenu, or move to the next item in the\r\n\t\t\t//\t\tancestor MenuBar\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.focusedChild && this.focusedChild.popup && !this.focusedChild.disabled){\r\n\t\t\t\tthis.onItemClick(this.focusedChild, evt);\r\n\t\t\t}else{\r\n\t\t\t\tvar topMenu = this._getTopMenu();\r\n\t\t\t\tif(topMenu && topMenu._isMenuBar){\r\n\t\t\t\t\ttopMenu.focusNext();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onPopupHover: function(/*Event*/ /*===== evt =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis handler is called when the mouse moves over the popup.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// if the mouse hovers over a menu popup that is in pending-close state,\r\n\t\t\t// then stop the close operation.\r\n\t\t\t// This can't be done in onItemHover since some popup targets don't have MenuItems (e.g. ColorPicker)\r\n\r\n\t\t\t// highlight the parent menu item pointing to this popup (in case user temporarily moused over another MenuItem)\r\n\t\t\tthis.set(\"selected\", this.currentPopupItem);\r\n\r\n\t\t\t// cancel the pending close (if there is one) (in case user temporarily moused over another MenuItem)\r\n\t\t\tthis._stopPendingCloseTimer();\r\n\t\t},\r\n\r\n\t\tonItemHover: function(/*MenuItem*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when cursor is over a MenuItem.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// Don't do anything unless user has \"activated\" the menu by:\r\n\t\t\t//\t\t1) clicking it\r\n\t\t\t//\t\t2) opening it from a parent menu (which automatically activates it)\r\n\r\n\t\t\tif(this.activated){\r\n\t\t\t\tthis.set(\"selected\", item);\r\n\t\t\t\tif(item.popup && !item.disabled && !this.hover_timer){\r\n\t\t\t\t\tthis.hover_timer = this.defer(function(){\r\n\t\t\t\t\t\tthis._openItemPopup(item);\r\n\t\t\t\t\t}, this.popupDelay);\r\n\t\t\t\t}\r\n\t\t\t}else if(this.passivePopupDelay < Infinity){\r\n\t\t\t\tif(this.passive_hover_timer){\r\n\t\t\t\t\tthis.passive_hover_timer.remove();\r\n\t\t\t\t}\r\n\t\t\t\tthis.passive_hover_timer = this.defer(function(){\r\n\t\t\t\t\tthis.onItemClick(item, {type: \"click\"});\r\n\t\t\t\t}, this.passivePopupDelay);\r\n\t\t\t}\r\n\r\n\t\t\tthis._hoveredChild = item;\r\n\r\n\t\t\titem._set(\"hovering\", true);\r\n\t\t},\r\n\r\n\t\t_onChildDeselect: function(item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when a child MenuItem becomes deselected.   Setup timer to close its popup.\r\n\r\n\t\t\tthis._stopPopupTimer();\r\n\r\n\t\t\t// Setup timer to close all popups that are open and descendants of this menu.\r\n\t\t\t// Will be canceled if user quickly moves the mouse over the popup.\r\n\t\t\tif(this.currentPopupItem == item){\r\n\t\t\t\tthis._stopPendingCloseTimer();\r\n\t\t\t\tthis._pendingClose_timer = this.defer(function(){\r\n\t\t\t\t\tthis._pendingClose_timer = null;\r\n\t\t\t\t\tthis.currentPopupItem = null;\r\n\t\t\t\t\titem._closePopup(); // this calls onClose\r\n\t\t\t\t}, this.popupDelay);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonItemUnhover: function(/*MenuItem*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback fires when mouse exits a MenuItem\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this._hoveredChild == item){\r\n\t\t\t\tthis._hoveredChild = null;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.passive_hover_timer){\r\n\t\t\t\tthis.passive_hover_timer.remove();\r\n\t\t\t\tthis.passive_hover_timer = null;\r\n\t\t\t}\r\n\r\n\t\t\titem._set(\"hovering\", false);\r\n\t\t},\r\n\r\n\t\t_stopPopupTimer: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCancels the popup timer because the user has stop hovering\r\n\t\t\t//\t\ton the MenuItem, etc.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.hover_timer){\r\n\t\t\t\tthis.hover_timer = this.hover_timer.remove();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_stopPendingCloseTimer: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCancels the pending-close timer because the close has been preempted\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this._pendingClose_timer){\r\n\t\t\t\tthis._pendingClose_timer = this._pendingClose_timer.remove();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getTopMenu: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the top menu in this chain of Menus\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tfor(var top = this; top.parentMenu; top = top.parentMenu){}\r\n\t\t\treturn top;\r\n\t\t},\r\n\r\n\t\tonItemClick: function(/*dijit/_WidgetBase*/ item, /*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandle clicks on an item.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.passive_hover_timer){\r\n\t\t\t\tthis.passive_hover_timer.remove();\r\n\t\t\t}\r\n\r\n\t\t\tthis.focusChild(item);\r\n\r\n\t\t\tif(item.disabled){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(item.popup){\r\n\t\t\t\tthis.set(\"selected\", item);\r\n\t\t\t\tthis.set(\"activated\", true);\r\n\t\t\t\tvar byKeyboard = /^key/.test(evt._origType || evt.type) ||\r\n\t\t\t\t\t(evt.clientX == 0 && evt.clientY == 0);\t// detects accessKey like ALT+SHIFT+F, where type is \"click\"\r\n\t\t\t\tthis._openItemPopup(item, byKeyboard);\r\n\t\t\t}else{\r\n\t\t\t\t// before calling user defined handler, close hierarchy of menus\r\n\t\t\t\t// and restore focus to place it was when menu was opened\r\n\t\t\t\tthis.onExecute();\r\n\r\n\t\t\t\t// user defined handler for click\r\n\t\t\t\titem._onClick ? item._onClick(evt) : item.onClick(evt);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_openItemPopup: function(/*dijit/MenuItem*/ from_item, /*Boolean*/ focus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOpen the popup to the side of/underneath the current menu item, and optionally focus first item\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(from_item == this.currentPopupItem){\r\n\t\t\t\t// Specified popup is already being shown, so just return\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.currentPopupItem){\r\n\t\t\t\t// If another popup is currently shown, then close it\r\n\t\t\t\tthis._stopPendingCloseTimer();\r\n\t\t\t\tthis.currentPopupItem._closePopup();\r\n\t\t\t}\r\n\t\t\tthis._stopPopupTimer();\r\n\r\n\t\t\tvar popup = from_item.popup;\r\n\t\t\tpopup.parentMenu = this;\r\n\r\n\t\t\t// detect mouseover of the popup to handle lazy mouse movements that temporarily focus other menu items\\c\r\n\t\t\tthis.own(this._mouseoverHandle = on.once(popup.domNode, \"mouseover\", lang.hitch(this, \"_onPopupHover\")));\r\n\r\n\t\t\tvar self = this;\r\n\t\t\tfrom_item._openPopup({\r\n\t\t\t\tparent: this,\r\n\t\t\t\torient: this._orient || [\"after\", \"before\"],\r\n\t\t\t\tonCancel: function(){ // called when the child menu is canceled\r\n\t\t\t\t\tif(focus){\r\n\t\t\t\t\t\t// put focus back on my node before focused node is hidden\r\n\t\t\t\t\t\tself.focusChild(from_item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// close the submenu (be sure this is done _after_ focus is moved)\r\n\t\t\t\t\tself._cleanUp();\r\n\t\t\t\t},\r\n\t\t\t\tonExecute: lang.hitch(this, \"_cleanUp\", true),\r\n\t\t\t\tonClose: function(){\r\n\t\t\t\t\t// Remove handler created by onItemHover\r\n\t\t\t\t\tif(self._mouseoverHandle){\r\n\t\t\t\t\t\tself._mouseoverHandle.remove();\r\n\t\t\t\t\t\tdelete self._mouseoverHandle;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, focus);\r\n\r\n\t\t\tthis.currentPopupItem = from_item;\r\n\r\n\t\t\t// TODO: focusing a popup should clear tabIndex on Menu (and it's child MenuItems), so that neither\r\n\t\t\t// TAB nor SHIFT-TAB returns to the menu.  Only ESC or ENTER should return to the menu.\r\n\t\t},\r\n\r\n\t\tonOpen: function(/*Event*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when this menu is opened.\r\n\t\t\t//\t\tThis is called by the popup manager as notification that the menu\r\n\t\t\t//\t\twas opened.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.isShowingNow = true;\r\n\t\t\tthis.set(\"activated\", true);\r\n\t\t},\r\n\r\n\t\tonClose: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when this menu is closed.\r\n\t\t\t//\t\tThis is called by the popup manager as notification that the menu\r\n\t\t\t//\t\twas closed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"activated\", false);\r\n\t\t\tthis.set(\"selected\", null);\r\n\t\t\tthis.isShowingNow = false;\r\n\t\t\tthis.parentMenu = null;\r\n\t\t},\r\n\r\n\t\t_closeChild: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when submenu is clicked or focus is lost.  Close hierarchy of menus.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._stopPopupTimer();\r\n\r\n\t\t\tif(this.currentPopupItem){\r\n\t\t\t\t// If focus is on a descendant MenuItem then move focus to me,\r\n\t\t\t\t// because IE doesn't like it when you display:none a node with focus,\r\n\t\t\t\t// and also so keyboard users don't lose control.\r\n\t\t\t\t// Likely, immediately after a user defined onClick handler will move focus somewhere\r\n\t\t\t\t// else, like a Dialog.\r\n\t\t\t\tif(this.focused){\r\n\t\t\t\t\tdomAttr.set(this.selected.focusNode, \"tabIndex\", this.tabIndex);\r\n\t\t\t\t\tthis.selected.focusNode.focus();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Close all popups that are open and descendants of this menu\r\n\t\t\t\tthis.currentPopupItem._closePopup();\r\n\t\t\t\tthis.currentPopupItem = null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onItemFocus: function(/*MenuItem*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when child of this Menu gets focus from:\r\n\t\t\t//\r\n\t\t\t//\t\t1. clicking it\r\n\t\t\t//\t\t2. tabbing into it\r\n\t\t\t//\t\t3. being opened by a parent menu.\r\n\t\t\t//\r\n\t\t\t//\t\tThis is not called just from mouse hover.\r\n\r\n\t\t\tif(this._hoveredChild && this._hoveredChild != item){\r\n\t\t\t\tthis.onItemUnhover(this._hoveredChild);\t// any previous mouse movement is trumped by focus selection\r\n\t\t\t}\r\n\t\t\tthis.set(\"selected\", item);\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when focus is moved away from this Menu and it's submenus.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis._cleanUp(true);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_cleanUp: function(/*Boolean*/ clearSelectedItem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the user is done with this menu.  Closes hierarchy of menus.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis._closeChild(); // don't call this.onClose since that's incorrect for MenuBar's that never close\r\n\t\t\tif(typeof this.isShowingNow == 'undefined'){ // non-popup menu doesn't call onClose\r\n\t\t\t\tthis.set(\"activated\", false);\r\n\t\t\t}\r\n\r\n\t\t\tif(clearSelectedItem){\r\n\t\t\t\tthis.set(\"selected\", null);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/DropDownMenu',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/text!./templates/Menu.html\",\r\n\t\"./_MenuBase\"\r\n], function(declare, keys, template, _MenuBase){\r\n\r\n\t// module:\r\n\t//\t\tdijit/DropDownMenu\r\n\r\n\treturn declare(\"dijit.DropDownMenu\", _MenuBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA menu, without features for context menu (Meaning, drop down menu)\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitMenu\",\r\n\r\n\t\t// Arrow key navigation\r\n\t\t_onUpArrow: function(){\r\n\t\t\tthis.focusPrev();\r\n\t\t},\r\n\t\t_onDownArrow: function(){\r\n\t\t\tthis.focusNext();\r\n\t\t},\r\n\t\t_onRightArrow: function(/*Event*/ evt){\r\n\t\t\tthis._moveToPopup(evt);\r\n\t\t\tevt.stopPropagation();\r\n\t\t\tevt.preventDefault();\r\n\t\t},\r\n\t\t_onLeftArrow: function(/*Event*/ evt){\r\n\t\t\tif(this.parentMenu){\r\n\t\t\t\tif(this.parentMenu._isMenuBar){\r\n\t\t\t\t\tthis.parentMenu.focusPrev();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.onCancel(false);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/Menu',[\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.byId dom.isDescendant\r\n\t\"dojo/dom-attr\", // domAttr.get domAttr.set domAttr.has domAttr.remove\r\n\t\"dojo/dom-geometry\", // domStyle.getComputedStyle domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/keys\", // keys.F10\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\"), has(\"quirks\")\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"dojo/window\", // winUtils.get\r\n\t\"./popup\",\r\n\t\"./DropDownMenu\",\r\n\t\"dojo/ready\"\r\n], function(require, array, declare, dom, domAttr, domGeometry, domStyle, keys, lang, on, has, win, winUtils, pm, DropDownMenu, ready){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Menu\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/MenuItem\", \"dijit/PopupMenuItem\", \"dijit/CheckedMenuItem\", \"dijit/MenuSeparator\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\treturn declare(\"dijit.Menu\", DropDownMenu, {\r\n\t\t// summary:\r\n\t\t//\t\tA context menu you can assign to multiple elements\r\n\r\n\t\tconstructor: function(/*===== params, srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified:\r\n\t\t\t//\r\n\t\t\t//\t\t- use srcNodeRef.innerHTML as my contents\r\n\t\t\t//\t\t- replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t\tthis._bindings = [];\r\n\t\t},\r\n\r\n\t\t// targetNodeIds: [const] String[]\r\n\t\t//\t\tArray of dom node ids of nodes to attach to.\r\n\t\t//\t\tFill this with nodeIds upon widget creation and it becomes context menu for those nodes.\r\n\t\ttargetNodeIds: [],\r\n\r\n\t\t// selector: String?\r\n\t\t//\t\tCSS expression to apply this Menu to descendants of targetNodeIds, rather than to\r\n\t\t//\t\tthe nodes specified by targetNodeIds themselves.  Useful for applying a Menu to\r\n\t\t//\t\ta range of rows in a table, tree, etc.\r\n\t\t//\r\n\t\t//\t\tThe application must require() an appropriate level of dojo/query to handle the selector.\r\n\t\tselector: \"\",\r\n\r\n\t\t// TODO: in 2.0 remove support for multiple targetNodeIds.   selector gives the same effect.\r\n\t\t// So, change targetNodeIds to a targetNodeId: \"\", remove bindDomNode()/unBindDomNode(), etc.\r\n\r\n\t\t/*=====\r\n\t\t// currentTarget: [readonly] DOMNode\r\n\t\t//\t\tFor context menus, set to the current node that the Menu is being displayed for.\r\n\t\t//\t\tUseful so that the menu actions can be tailored according to the node\r\n\t\tcurrentTarget: null,\r\n\t\t=====*/\r\n\r\n\t\t// contextMenuForWindow: [const] Boolean\r\n\t\t//\t\tIf true, right clicking anywhere on the window will cause this context menu to open.\r\n\t\t//\t\tIf false, must specify targetNodeIds.\r\n\t\tcontextMenuForWindow: false,\r\n\r\n\t\t// leftClickToOpen: [const] Boolean\r\n\t\t//\t\tIf true, menu will open on left click instead of right click, similar to a file menu.\r\n\t\tleftClickToOpen: false,\r\n\t\t// TODO: remove in 2.0, we have better ways of opening a menu with a left click, by extending _HasDropDown.\r\n\r\n\t\t// refocus: Boolean\r\n\t\t//\t\tWhen this menu closes, re-focus the element which had focus before it was opened.\r\n\t\trefocus: true,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tif(this.contextMenuForWindow){\r\n\t\t\t\tthis.bindDomNode(this.ownerDocumentBody);\r\n\t\t\t}else{\r\n\t\t\t\tarray.forEach(this.targetNodeIds, this.bindDomNode, this);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t// thanks burstlib!\r\n\t\t_iframeContentWindow: function(/* HTMLIFrameElement */iframe_el){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the window reference of the passed iframe\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn winUtils.get(this._iframeContentDocument(iframe_el)) ||\r\n\t\t\t\t// Moz. TODO: is this available when defaultView isn't?\r\n\t\t\t\tthis._iframeContentDocument(iframe_el)['__parent__'] ||\r\n\t\t\t\t(iframe_el.name && document.frames[iframe_el.name]) || null;\t//\tWindow\r\n\t\t},\r\n\r\n\t\t_iframeContentDocument: function(/* HTMLIFrameElement */iframe_el){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a reference to the document object inside iframe_el\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn iframe_el.contentDocument // W3\r\n\t\t\t\t|| (iframe_el.contentWindow && iframe_el.contentWindow.document) // IE\r\n\t\t\t\t|| (iframe_el.name && document.frames[iframe_el.name] && document.frames[iframe_el.name].document)\r\n\t\t\t\t|| null;\t//\tHTMLDocument\r\n\t\t},\r\n\r\n\t\tbindDomNode: function(/*String|DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach menu to given node\r\n\t\t\tnode = dom.byId(node, this.ownerDocument);\r\n\r\n\t\t\tvar cn;\t// Connect node\r\n\r\n\t\t\t// Support context menus on iframes.  Rather than binding to the iframe itself we need\r\n\t\t\t// to bind to the <body> node inside the iframe.\r\n\t\t\tif(node.tagName.toLowerCase() == \"iframe\"){\r\n\t\t\t\tvar iframe = node,\r\n\t\t\t\t\twindow = this._iframeContentWindow(iframe);\r\n\t\t\t\tcn = win.body(window.document);\r\n\t\t\t}else{\r\n\t\t\t\t// To capture these events at the top level, attach to <html>, not <body>.\r\n\t\t\t\t// Otherwise right-click context menu just doesn't work.\r\n\t\t\t\tcn = (node == win.body(this.ownerDocument) ? this.ownerDocument.documentElement : node);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// \"binding\" is the object to track our connection to the node (ie, the parameter to bindDomNode())\r\n\t\t\tvar binding = {\r\n\t\t\t\tnode: node,\r\n\t\t\t\tiframe: iframe\r\n\t\t\t};\r\n\r\n\t\t\t// Save info about binding in _bindings[], and make node itself record index(+1) into\r\n\t\t\t// _bindings[] array.  Prefix w/_dijitMenu to avoid setting an attribute that may\r\n\t\t\t// start with a number, which fails on FF/safari.\r\n\t\t\tdomAttr.set(node, \"_dijitMenu\" + this.id, this._bindings.push(binding));\r\n\r\n\t\t\t// Setup the connections to monitor click etc., unless we are connecting to an iframe which hasn't finished\r\n\t\t\t// loading yet, in which case we need to wait for the onload event first, and then connect\r\n\t\t\t// On linux Shift-F10 produces the oncontextmenu event, but on Windows it doesn't, so\r\n\t\t\t// we need to monitor keyboard events in addition to the oncontextmenu event.\r\n\t\t\tvar doConnects = lang.hitch(this, function(cn){\r\n\t\t\t\tvar selector = this.selector,\r\n\t\t\t\t\tdelegatedEvent = selector ?\r\n\t\t\t\t\t\tfunction(eventType){\r\n\t\t\t\t\t\t\treturn on.selector(selector, eventType);\r\n\t\t\t\t\t\t} :\r\n\t\t\t\t\t\tfunction(eventType){\r\n\t\t\t\t\t\t\treturn eventType;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\tself = this;\r\n\t\t\t\treturn [\r\n\t\t\t\t\ton(cn, delegatedEvent(this.leftClickToOpen ? \"click\" : \"contextmenu\"), function(evt){\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\r\n\t\t\t\t\t\tif((new Date()).getTime() < this._lastKeyDown + 500){\r\n\t\t\t\t\t\t\t// Ignore contextmenu/click events that were already processed in keydown handler below.\r\n\t\t\t\t\t\t\t// But still call preventDefault() (above) so system context menu doesn't appear.\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Schedule context menu to be opened.\r\n\t\t\t\t\t\t// Note that this won't work will if the click was generated by the keyboard, while\r\n\t\t\t\t\t\t// focused on a <button> etc.   In that case evt.pageX and evt.pageY are either (0,0) or\r\n\t\t\t\t\t\t// wherever the mouse cursor is.  See keydown handler below.\r\n\t\t\t\t\t\tself._scheduleOpen(this, iframe, {x: evt.pageX, y: evt.pageY}, evt.target);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ton(cn, delegatedEvent(\"keydown\"), function(evt){\r\n\t\t\t\t\t\tif(evt.keyCode == 93 ||\t\t\t\t\t\t\t\t\t// context menu key\r\n\t\t\t\t\t\t\t(evt.shiftKey && evt.keyCode == keys.F10) ||\t\t// shift-F10\r\n\t\t\t\t\t\t\t(this.leftClickToOpen && evt.keyCode == keys.SPACE)\t// space key\r\n\t\t\t\t\t\t){\r\n\t\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\t\tevt.preventDefault();\r\n\r\n\t\t\t\t\t\t\t// Open the menu around evt.target.  Note that \"this\" and evt.target\r\n\t\t\t\t\t\t\t// are likely different, especially for global context menu, where \"this\" is <body>.\r\n\t\t\t\t\t\t\tself._scheduleOpen(this, iframe, null, evt.target);\t// no coords - open near evt.target\r\n\r\n\t\t\t\t\t\t\tthis._lastKeyDown = (new Date()).getTime();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t];\r\n\t\t\t});\r\n\t\t\tbinding.connects = cn ? doConnects(cn) : [];\r\n\r\n\t\t\tif(iframe){\r\n\t\t\t\t// Setup handler to [re]bind to the iframe when the contents are initially loaded,\r\n\t\t\t\t// and every time the contents change.\r\n\t\t\t\t// Need to do this b/c we are actually binding to the iframe's <body> node.\r\n\t\t\t\t// Note: can't use connect.connect(), see #9609.\r\n\r\n\t\t\t\tbinding.onloadHandler = lang.hitch(this, function(){\r\n\t\t\t\t\t// want to remove old connections, but IE throws exceptions when trying to\r\n\t\t\t\t\t// access the <body> node because it's already gone, or at least in a state of limbo\r\n\r\n\t\t\t\t\tvar window = this._iframeContentWindow(iframe),\r\n\t\t\t\t\t\tcn = win.body(window.document);\r\n\t\t\t\t\tbinding.connects = doConnects(cn);\r\n\t\t\t\t});\r\n\t\t\t\tif(iframe.addEventListener){\r\n\t\t\t\t\tiframe.addEventListener(\"load\", binding.onloadHandler, false);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tiframe.attachEvent(\"onload\", binding.onloadHandler);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tunBindDomNode: function(/*String|DomNode*/ nodeName){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetach menu from given node\r\n\r\n\t\t\tvar node;\r\n\t\t\ttry{\r\n\t\t\t\tnode = dom.byId(nodeName, this.ownerDocument);\r\n\t\t\t}catch(e){\r\n\t\t\t\t// On IE the dom.byId() call will get an exception if the attach point was\r\n\t\t\t\t// the <body> node of an <iframe> that has since been reloaded (and thus the\r\n\t\t\t\t// <body> node is in a limbo state of destruction.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// node[\"_dijitMenu\" + this.id] contains index(+1) into my _bindings[] array\r\n\t\t\tvar attrName = \"_dijitMenu\" + this.id;\r\n\t\t\tif(node && domAttr.has(node, attrName)){\r\n\t\t\t\tvar bid = domAttr.get(node, attrName) - 1, b = this._bindings[bid], h;\r\n\t\t\t\twhile((h = b.connects.pop())){\r\n\t\t\t\t\th.remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove listener for iframe onload events\r\n\t\t\t\tvar iframe = b.iframe;\r\n\t\t\t\tif(iframe){\r\n\t\t\t\t\tif(iframe.removeEventListener){\r\n\t\t\t\t\t\tiframe.removeEventListener(\"load\", b.onloadHandler, false);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tiframe.detachEvent(\"onload\", b.onloadHandler);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdomAttr.remove(node, attrName);\r\n\t\t\t\tdelete this._bindings[bid];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_scheduleOpen: function(delegatedTarget, iframe, coords, target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet timer to display myself.  Using a timer rather than displaying immediately solves\r\n\t\t\t//\t\tIE problem: without the delay, focus work in \"open\" causes the system\r\n\t\t\t//\t\tcontext menu to appear in spite of evt.preventDefault().\r\n\t\t\t// delegatedTarget: Element\r\n\t\t\t//\t\tThe node specified in targetNodeIds or matching selector that the menu is being opened for.\r\n\t\t\t// iframe: HTMLIframeElement?\r\n\t\t\t//\t\tSet if target is inside the specified iframe.\r\n\t\t\t// coords: Object\r\n\t\t\t//\t\tx/y position to center the menu around.  Undefined if menu was opened via keyboard.\r\n\t\t\t// target: Element\r\n\t\t\t//\t\tThe actual clicked node, either delegatedTarget or a descendant.\r\n\r\n\t\t\tif(!this._openTimer){\r\n\t\t\t\tthis._openTimer = this.defer(function(){\r\n\t\t\t\t\tdelete this._openTimer;\r\n\t\t\t\t\tthis._openMyself({\r\n\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\tdelegatedTarget: delegatedTarget,\r\n\t\t\t\t\t\tiframe: iframe,\r\n\t\t\t\t\t\tcoords: coords\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_openMyself: function(args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function for opening myself when the user does a right-click or something similar.\r\n\t\t\t// args:\r\n\t\t\t//\t\tThis is an Object containing:\r\n\t\t\t//\r\n\t\t\t//\t\t- target: The node that is being clicked.\r\n\t\t\t//\t\t- delegatedTarget: The node from this.targetNodeIds or matching this.selector,\r\n\t\t\t//\t\t  either the same as target or an ancestor of target.\r\n\t\t\t//\t\t- iframe: If an `<iframe>` is being clicked, iframe points to that iframe\r\n\t\t\t//\t\t- coords: Mouse cursor x/y coordinates.  Null when opened via keyboard.\r\n\t\t\t//\t\t  Put menu at specified position in iframe (if iframe specified) or otherwise in viewport.\r\n\t\t\t//\r\n\t\t\t//\t\t_openMyself() formerly took the event object, and since various code references\r\n\t\t\t//\t\tevt.target (after connecting to _openMyself()), using an Object for parameters\r\n\t\t\t//\t\t(so that old code still works).\r\n\r\n\t\t\tvar target = args.target,\r\n\t\t\t\tiframe = args.iframe,\r\n\t\t\t\tcoords = args.coords,\r\n\t\t\t\tbyKeyboard = !coords;\r\n\r\n\t\t\t// To be used by MenuItem event handlers to tell which node the menu was opened on\r\n\t\t\tthis.currentTarget = args.delegatedTarget;\r\n\r\n\t\t\t// Get coordinates to open menu, either at specified (mouse) position or (if triggered via keyboard)\r\n\t\t\t// then near the node the menu is assigned to.\r\n\t\t\tif(coords){\r\n\t\t\t\tif(iframe){\r\n\t\t\t\t\t// Specified coordinates are on <body> node of an <iframe>, convert to match main document\r\n\t\t\t\t\tvar ifc = domGeometry.position(iframe, true),\r\n\t\t\t\t\t\twindow = this._iframeContentWindow(iframe),\r\n\t\t\t\t\t\tscroll = domGeometry.docScroll(window.document);\r\n\r\n\t\t\t\t\tvar cs = domStyle.getComputedStyle(iframe),\r\n\t\t\t\t\t\ttp = domStyle.toPixelValue,\r\n\t\t\t\t\t\tleft = (has(\"ie\") && has(\"quirks\") ? 0 : tp(iframe, cs.paddingLeft)) + (has(\"ie\") && has(\"quirks\") ? tp(iframe, cs.borderLeftWidth) : 0),\r\n\t\t\t\t\t\ttop = (has(\"ie\") && has(\"quirks\") ? 0 : tp(iframe, cs.paddingTop)) + (has(\"ie\") && has(\"quirks\") ? tp(iframe, cs.borderTopWidth) : 0);\r\n\r\n\t\t\t\t\tcoords.x += ifc.x + left - scroll.x;\r\n\t\t\t\t\tcoords.y += ifc.y + top - scroll.y;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tcoords = domGeometry.position(target, true);\r\n\t\t\t\tcoords.x += 10;\r\n\t\t\t\tcoords.y += 10;\r\n\t\t\t}\r\n\r\n\t\t\tvar self = this;\r\n\t\t\tvar prevFocusNode = this._focusManager.get(\"prevNode\");\r\n\t\t\tvar curFocusNode = this._focusManager.get(\"curNode\");\r\n\t\t\tvar savedFocusNode = !curFocusNode || (dom.isDescendant(curFocusNode, this.domNode)) ? prevFocusNode : curFocusNode;\r\n\r\n\t\t\tfunction closeAndRestoreFocus(){\r\n\t\t\t\t// user has clicked on a menu or popup\r\n\t\t\t\tif(self.refocus && savedFocusNode){\r\n\t\t\t\t\tsavedFocusNode.focus();\r\n\t\t\t\t}\r\n\t\t\t\tpm.close(self);\r\n\t\t\t}\r\n\r\n\t\t\tpm.open({\r\n\t\t\t\tpopup: this,\r\n\t\t\t\tx: coords.x,\r\n\t\t\t\ty: coords.y,\r\n\t\t\t\tonExecute: closeAndRestoreFocus,\r\n\t\t\t\tonCancel: closeAndRestoreFocus,\r\n\t\t\t\torient: this.isLeftToRight() ? 'L' : 'R'\r\n\t\t\t});\r\n\r\n\t\t\t// Focus the menu even when opened by mouse, so that a click on blank area of screen will close it\r\n\t\t\tthis.focus();\r\n\t\t\tif(!byKeyboard){\r\n\t\t\t\t// But then (when opened by mouse), mark Menu as passive, so that the first item isn't highlighted.\r\n\t\t\t\t// On IE9+ this needs to be on a delay because the focus is asynchronous.\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis._cleanUp(true);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._onBlur = function(){\r\n\t\t\t\tthis.inherited('_onBlur', arguments);\r\n\t\t\t\t// Usually the parent closes the child widget but if this is a context\r\n\t\t\t\t// menu then there is no parent\r\n\t\t\t\tpm.close(this);\r\n\t\t\t\t// don't try to restore focus; user has clicked another part of the screen\r\n\t\t\t\t// and set focus there\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tarray.forEach(this._bindings, function(b){\r\n\t\t\t\tif(b){\r\n\t\t\t\t\tthis.unBindDomNode(b.node);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/MenuItem',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_Contained\",\r\n\t\"./_CssStateMixin\",\r\n\t\"dojo/text!./templates/MenuItem.html\"\r\n], function(declare, dom, domAttr, domClass, kernel, has, lang,\r\n\t\t\t_Widget, _TemplatedMixin, _Contained, _CssStateMixin, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/MenuItem\r\n\r\n\tvar MenuItem = declare(\"dijit.MenuItem\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"),\r\n\t\t[_Widget, _TemplatedMixin, _Contained, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA line item in a Menu Widget\r\n\r\n\t\t// Make 3 columns\r\n\t\t// icon, label, and expand arrow (BiDi-dependent) indicating sub-menu\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitMenuItem\",\r\n\r\n\t\t// label: String\r\n\t\t//\t\tMenu text as HTML\r\n\t\tlabel: \"\",\r\n\t\t_setLabelAttr: function(val){\r\n\t\t\tthis._set(\"label\", val);\r\n\t\t\tvar shortcutKey = \"\";\r\n\t\t\tvar text;\r\n\t\t\tvar ndx = val.search(/{\\S}/);\r\n\t\t\tif(ndx >= 0){\r\n\t\t\t\tshortcutKey = val.charAt(ndx + 1);\r\n\t\t\t\tvar prefix = val.substr(0, ndx);\r\n\t\t\t\tvar suffix = val.substr(ndx + 3);\r\n\t\t\t\ttext = prefix + shortcutKey + suffix;\r\n\t\t\t\tval = prefix + '<span class=\"dijitMenuItemShortcutKey\">' + shortcutKey + '</span>' + suffix;\r\n\t\t\t}else{\r\n\t\t\t\ttext = val;\r\n\t\t\t}\r\n\t\t\tthis.domNode.setAttribute(\"aria-label\", text + \" \" + this.accelKey);\r\n\t\t\tthis.containerNode.innerHTML = val;\r\n\t\t\tthis._set('shortcutKey', shortcutKey);\r\n\t\t},\r\n\r\n\t\t/*=====\r\n\t\t// shortcutKey: [readonly] String\r\n\t\t//\t\tSingle character (underlined when the parent Menu is focused) used to navigate directly to this widget,\r\n\t\t//\t\talso known as [a mnemonic](http://en.wikipedia.org/wiki/Mnemonics_(keyboard%29).\r\n\t\t//\t\tThis is denoted in the label by surrounding the single character with {}.\r\n\t\t//\t\tFor example, if label=\"{F}ile\", then shortcutKey=\"F\".\r\n\t\tshortcutKey: \"\",\r\n\t\t=====*/\r\n\r\n\t\t// iconClass: String\r\n\t\t//\t\tClass to apply to DOMNode to make it display an icon.\r\n\t\ticonClass: \"dijitNoIcon\",\r\n\t\t_setIconClassAttr: { node: \"iconNode\", type: \"class\" },\r\n\r\n\t\t// accelKey: String\r\n\t\t//\t\tText for the accelerator (shortcut) key combination, a control, alt, etc. modified keystroke meant to\r\n\t\t//\t\texecute the menu item regardless of where the focus is on the page.\r\n\t\t//\r\n\t\t//\t\tNote that although Menu can display accelerator keys, there is no infrastructure to actually catch and\r\n\t\t//\t\texecute those accelerators.\r\n\t\taccelKey: \"\",\r\n\r\n\t\t// disabled: Boolean\r\n\t\t//\t\tIf true, the menu item is disabled.\r\n\t\t//\t\tIf false, the menu item is enabled.\r\n\t\tdisabled: false,\r\n\r\n\t\t_fillContent: function(/*DomNode*/ source){\r\n\t\t\t// If button label is specified as srcNodeRef.innerHTML rather than\r\n\t\t\t// this.params.label, handle it here.\r\n\t\t\tif(source && !(\"label\" in this.params)){\r\n\t\t\t\tthis._set('label', source.innerHTML);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar label = this.id + \"_text\";\r\n\t\t\tdomAttr.set(this.containerNode, \"id\", label); // only needed for backward compat\r\n\t\t\tif(this.accelKeyNode){\r\n\t\t\t\tdomAttr.set(this.accelKeyNode, \"id\", this.id + \"_accel\"); // only needed for backward compat\r\n\t\t\t}\r\n\t\t\tdom.setSelectable(this.domNode, false);\r\n\t\t},\r\n\r\n\t\tonClick: function(/*Event*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser defined function to handle clicks\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus on this MenuItem\r\n\t\t\ttry{\r\n\t\t\t\tif(has(\"ie\") == 8){\r\n\t\t\t\t\t// needed for IE8 which won't scroll TR tags into view on focus yet calling scrollIntoView creates flicker (#10275)\r\n\t\t\t\t\tthis.containerNode.focus();\r\n\t\t\t\t}\r\n\t\t\t\tthis.focusNode.focus();\r\n\t\t\t}catch(e){\r\n\t\t\t\t// this throws on IE (at least) in some scenarios\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setSelected: function(selected){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIndicate that this node is the currently selected one\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitMenuItemSelected\", selected);\r\n\t\t},\r\n\r\n\t\tsetLabel: function(/*String*/ content){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('label', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.MenuItem.setLabel() is deprecated.  Use set('label', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set(\"label\", content);\r\n\t\t},\r\n\r\n\t\tsetDisabled: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('disabled', bool) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.Menu.setDisabled() is deprecated.  Use set('disabled', bool) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('disabled', disabled);\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for attr('disabled', ...) to work.\r\n\t\t\t//\t\tEnable or disable this menu item.\r\n\r\n\t\t\tthis.focusNode.setAttribute('aria-disabled', value ? 'true' : 'false');\r\n\t\t\tthis._set(\"disabled\", value);\r\n\t\t},\r\n\r\n\t\t_setAccelKeyAttr: function(/*String*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for attr('accelKey', ...) to work.\r\n\t\t\t//\t\tSet accelKey on this menu item.\r\n\r\n\t\t\tif(this.accelKeyNode){\r\n\t\t\t\tthis.accelKeyNode.style.display = value ? \"\" : \"none\";\r\n\t\t\t\tthis.accelKeyNode.innerHTML = value;\r\n\t\t\t\t//have to use colSpan to make it work in IE\r\n\t\t\t\tdomAttr.set(this.containerNode, 'colSpan', value ? \"1\" : \"2\");\r\n\t\t\t}\r\n\t\t\tthis._set(\"accelKey\", value);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tMenuItem = declare(\"dijit.MenuItem\", MenuItem, {\r\n\t\t\t_setLabelAttr: function(val){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tif(this.textDir === \"auto\"){\r\n\t\t\t\t\tthis.applyTextDir(this.textDirNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn MenuItem;\r\n});\r\n\ndefine('dijit/PopupMenuItem',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/_base/lang\",\r\n\t\"dojo/query\", // query\r\n\t\"./popup\",\r\n\t\"./registry\",\t// registry.byNode\r\n\t\"./MenuItem\",\r\n\t\"./hccss\"\r\n], function(declare, domStyle, lang, query, pm, registry, MenuItem){\r\n\r\n\t// module:\r\n\t//\t\tdijit/PopupMenuItem\r\n\r\n\treturn declare(\"dijit.PopupMenuItem\", MenuItem, {\r\n\t\t// summary:\r\n\t\t//\t\tAn item in a Menu that spawn a drop down (usually a drop down menu)\r\n\r\n\t\tbaseClass: \"dijitMenuItem dijitPopupMenuItem\",\r\n\r\n\t\t_fillContent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen Menu is declared in markup, this code gets the menu label and\r\n\t\t\t//\t\tthe popup widget from the srcNodeRef.\r\n\t\t\t// description:\r\n\t\t\t//\t\tsrcNodeRef.innerHTML contains both the menu item text and a popup widget\r\n\t\t\t//\t\tThe first part holds the menu item text and the second part is the popup\r\n\t\t\t// example:\r\n\t\t\t// |\t<div data-dojo-type=\"dijit/PopupMenuItem\">\r\n\t\t\t// |\t\t<span>pick me</span>\r\n\t\t\t// |\t\t<popup> ... </popup>\r\n\t\t\t// |\t</div>\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.srcNodeRef){\r\n\t\t\t\tvar nodes = query(\"*\", this.srcNodeRef);\r\n\t\t\t\tthis.inherited(arguments, [nodes[0]]);\r\n\r\n\t\t\t\t// save pointer to srcNode so we can grab the drop down widget after it's instantiated\r\n\t\t\t\tthis.dropDownContainer = this.srcNodeRef;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_openPopup: function(/*Object*/ params, /*Boolean*/ focus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOpen the popup to the side of/underneath this MenuItem, and optionally focus first item\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar popup = this.popup;\r\n\r\n\t\t\tpm.open(lang.delegate(params, {\r\n\t\t\t\tpopup: this.popup,\r\n\t\t\t\taround: this.domNode\r\n\t\t\t}));\r\n\r\n\t\t\tif(focus && popup.focus){\r\n\t\t\t\tpopup.focus();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_closePopup: function(){\r\n\t\t\tpm.close(this.popup);\r\n\t\t\tthis.popup.parentMenu = null;\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// We didn't copy the dropdown widget from the this.srcNodeRef, so it's in no-man's\r\n\t\t\t// land now.  Move it to <body>.\r\n\t\t\tif(!this.popup){\r\n\t\t\t\tvar node = query(\"[widgetId]\", this.dropDownContainer)[0];\r\n\t\t\t\tthis.popup = registry.byNode(node);\r\n\t\t\t}\r\n\t\t\tthis.ownerDocumentBody.appendChild(this.popup.domNode);\r\n\t\t\tthis.popup.domNode.setAttribute(\"aria-labelledby\", this.containerNode.id);\r\n\t\t\tthis.popup.startup();\r\n\r\n\t\t\tthis.popup.domNode.style.display=\"none\";\r\n\t\t\tif(this.arrowWrapper){\r\n\t\t\t\tdomStyle.set(this.arrowWrapper, \"visibility\", \"\");\r\n\t\t\t}\r\n\t\t\tthis.focusNode.setAttribute(\"aria-haspopup\", \"true\");\r\n\t\t},\r\n\r\n\t\tdestroyDescendants: function(/*Boolean*/ preserveDom){\r\n\t\t\tif(this.popup){\r\n\t\t\t\t// Destroy the popup, unless it's already been destroyed.  This can happen because\r\n\t\t\t\t// the popup is a direct child of <body> even though it's logically my child.\r\n\t\t\t\tif(!this.popup._destroyed){\r\n\t\t\t\t\tthis.popup.destroyRecursive(preserveDom);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.popup;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/CheckedMenuItem',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"./MenuItem\",\r\n\t\"dojo/text!./templates/CheckedMenuItem.html\",\r\n\t\"./hccss\"\r\n], function(declare, domClass, MenuItem, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/CheckedMenuItem\r\n\r\n\treturn declare(\"dijit.CheckedMenuItem\", MenuItem, {\r\n\t\t// summary:\r\n\t\t//\t\tA checkbox-like menu item for toggling on and off\r\n\r\n\t\t// Use both base classes so we get styles like dijitMenuItemDisabled\r\n\t\tbaseClass: \"dijitMenuItem dijitCheckedMenuItem\",\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// checked: Boolean\r\n\t\t//\t\tOur checked state\r\n\t\tchecked: false,\r\n\t\t_setCheckedAttr: function(/*Boolean*/ checked){\r\n\t\t\tthis.domNode.setAttribute(\"aria-checked\", checked ? \"true\" : \"false\");\r\n\t\t\tthis._set(\"checked\", checked);\t// triggers CSS update via _CssStateMixin\r\n\t\t},\r\n\r\n\t\ticonClass: \"\",\t// override dijitNoIcon\r\n\r\n\t\trole: \"menuitemcheckbox\",\r\n\r\n\t\t// checkedChar: String\r\n\t\t//\t\tCharacter (or string) used in place of checkbox icon when display in high contrast mode\r\n\t\tcheckedChar: \"&#10003;\",\r\n\r\n\t\tonChange: function(/*Boolean*/ /*===== checked =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser defined function to handle check/uncheck events\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_onClick: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClicking this item just toggles its state\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!this.disabled){\r\n\t\t\t\tthis.set(\"checked\", !this.checked);\r\n\t\t\t\tthis.onChange(this.checked);\r\n\t\t\t}\r\n\t\t\tthis.onClick(evt);\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/MenuBar',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys.DOWN_ARROW\r\n\t\"./_MenuBase\",\r\n\t\"dojo/text!./templates/MenuBar.html\"\r\n], function(declare, keys, _MenuBase, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/MenuBar\r\n\r\n\treturn declare(\"dijit.MenuBar\", _MenuBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA menu bar, listing menu choices horizontally, like the \"File\" menu in most desktop applications\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitMenuBar\",\r\n\r\n\t\t// By default open popups for MenuBar instantly\r\n\t\tpopupDelay: 0,\r\n\r\n\t\t// _isMenuBar: [protected] Boolean\r\n\t\t//\t\tThis is a MenuBar widget, not a (vertical) Menu widget.\r\n\t\t_isMenuBar: true,\r\n\r\n\t\t// parameter to dijit.popup.open() about where to put popup (relative to this.domNode)\r\n\t\t_orient: [\"below\"],\r\n\r\n\t\t_moveToPopup: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis handles the down arrow key, opening a submenu if one exists.\r\n\t\t\t//\t\tUnlike _MenuBase._moveToPopup(), will never move to the next item in the MenuBar.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.focusedChild && this.focusedChild.popup && !this.focusedChild.disabled){\r\n\t\t\t\tthis.onItemClick(this.focusedChild, evt);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocusChild: function(item){\r\n\t\t\t// Overload focusChild so that whenever a new item is focused and the menu is active, open its submenu immediately.\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.activated && item.popup && !item.disabled){\r\n\t\t\t\tthis._openItemPopup(item, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onChildDeselect: function(item){\r\n\t\t\t// override _MenuBase._onChildDeselect() to close submenu immediately\r\n\r\n\t\t\tif(this.currentPopupItem == item){\r\n\t\t\t\tthis.currentPopupItem = null;\r\n\t\t\t\titem._closePopup(); // this calls onClose\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t// Arrow key navigation\r\n\t\t_onLeftArrow: function(){\r\n\t\t\tthis.focusPrev();\r\n\t\t},\r\n\t\t_onRightArrow: function(){\r\n\t\t\tthis.focusNext();\r\n\t\t},\r\n\t\t_onDownArrow: function(/*Event*/ evt){\r\n\t\t\tthis._moveToPopup(evt);\r\n\t\t},\r\n\t\t_onUpArrow: function(){\r\n\t\t},\r\n\r\n\t\tonItemClick: function(/*dijit/_WidgetBase*/ item, /*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandle clicks on an item.   Also called by _moveToPopup() due to a down-arrow key on the item.\r\n\t\t\t//\t\tCancels a dropdown if already open and click is either mouse or space/enter.\r\n\t\t\t//\t\tDon't close dropdown due to down arrow.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(item.popup && item.popup.isShowingNow && (!/^key/.test(evt.type) || evt.keyCode !== keys.DOWN_ARROW)){\r\n\t\t\t\titem.focusNode.focus();\r\n\t\t\t\tthis._cleanUp(true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/MenuBarItem',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./MenuItem\",\r\n\t\"dojo/text!./templates/MenuBarItem.html\"\r\n], function(declare, MenuItem, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/MenuBarItem\r\n\r\n\tvar _MenuBarItemMixin = declare(\"dijit._MenuBarItemMixin\", null, {\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Map widget attributes to DOMNode attributes.\r\n\t\t_setIconClassAttr: null\t// cancel MenuItem setter because we don't have a place for an icon\r\n\t});\r\n\r\n\tvar MenuBarItem = declare(\"dijit.MenuBarItem\", [MenuItem, _MenuBarItemMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tItem in a MenuBar that's clickable, and doesn't spawn a submenu when pressed (or hovered)\r\n\r\n\t});\r\n\tMenuBarItem._MenuBarItemMixin = _MenuBarItemMixin;\t// dojox.mobile is accessing this\r\n\r\n\r\n\treturn MenuBarItem;\r\n});\r\n\ndefine('dijit/PopupMenuBarItem',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./PopupMenuItem\",\r\n\t\"./MenuBarItem\"\r\n], function(declare, PopupMenuItem, MenuBarItem){\r\n\r\n\t// module:\r\n\t//\t\tdijit/PopupMenuBarItem\r\n\r\n\tvar _MenuBarItemMixin = MenuBarItem._MenuBarItemMixin;\r\n\r\n\treturn declare(\"dijit.PopupMenuBarItem\", [PopupMenuItem, _MenuBarItemMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tItem in a MenuBar like \"File\" or \"Edit\", that spawns a submenu when pressed (or hovered)\r\n\t});\r\n});\r\n\n\ndefine('dijit/MenuSeparator',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"./_WidgetBase\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_Contained\",\r\n\t\"dojo/text!./templates/MenuSeparator.html\"\r\n], function(declare, dom, _WidgetBase, _TemplatedMixin, _Contained, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/MenuSeparator\r\n\r\n\treturn declare(\"dijit.MenuSeparator\", [_WidgetBase, _TemplatedMixin, _Contained], {\r\n\t\t// summary:\r\n\t\t//\t\tA line between two menu items\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdom.setSelectable(this.domNode, false);\r\n\t\t},\r\n\r\n\t\tisFocusable: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverride to always return false\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\treturn false; // Boolean\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/ProgressBar',[\r\n\t\"require\", // require.toUrl\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"dojo/number\", // number.format\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"dojo/text!./templates/ProgressBar.html\"\r\n], function(require, declare, domClass, lang, number, _Widget, _TemplatedMixin, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/ProgressBar\r\n\r\n\treturn declare(\"dijit.ProgressBar\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA progress indication widget, showing the amount completed\r\n\t\t//\t\t(often the percentage completed) of a task.\r\n\r\n\t\t// progress: [const] String (Percentage or Number)\r\n\t\t//\t\tNumber or percentage indicating amount of task completed.\r\n\t\t//\t\tDeprecated.   Use \"value\" instead.\r\n\t\tprogress: \"0\",\r\n\r\n\t\t// value: String (Percentage or Number)\r\n\t\t//\t\tNumber or percentage indicating amount of task completed.\r\n\t\t//\t\tWith \"%\": percentage value, 0% <= progress <= 100%, or\r\n\t\t//\t\twithout \"%\": absolute value, 0 <= progress <= maximum.\r\n\t\t//\t\tInfinity means that the progress bar is indeterminate.\r\n\t\tvalue: \"\",\r\n\r\n\t\t// maximum: [const] Float\r\n\t\t//\t\tMax sample number\r\n\t\tmaximum: 100,\r\n\r\n\t\t// places: [const] Number\r\n\t\t//\t\tNumber of places to show in values; 0 by default\r\n\t\tplaces: 0,\r\n\r\n\t\t// indeterminate: [const] Boolean\r\n\t\t//\t\tIf false: show progress value (number or percentage).\r\n\t\t//\t\tIf true: show that a process is underway but that the amount completed is unknown.\r\n\t\t//\t\tDeprecated.   Use \"value\" instead.\r\n\t\tindeterminate: false,\r\n\r\n\t\t// label: String?\r\n\t\t//\t\tHTML label on progress bar.   Defaults to percentage for determinate progress bar and\r\n\t\t//\t\tblank for indeterminate progress bar.\r\n\t\tlabel: \"\",\r\n\r\n\t\t// name: String\r\n\t\t//\t\tthis is the field name (for a form) if set. This needs to be set if you want to use\r\n\t\t//\t\tthis widget in a dijit/form/Form widget (such as dijit/Dialog)\r\n\t\tname: '',\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// _indeterminateHighContrastImagePath: [private] URL\r\n\t\t//\t\tURL to image to use for indeterminate progress bar when display is in high contrast mode\r\n\t\t_indeterminateHighContrastImagePath: require.toUrl(\"./themes/a11y/indeterminate_progress.gif\"),\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Back-compat for when constructor specifies indeterminate or progress, rather than value.   Remove for 2.0.\r\n\t\t\tif(!(this.params && \"value\" in this.params)){\r\n\t\t\t\tthis.value = this.indeterminate ? Infinity : this.progress;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.indeterminateHighContrastImage.setAttribute(\"src\",\r\n\t\t\t\tthis._indeterminateHighContrastImagePath.toString());\r\n\t\t\tthis.update();\r\n\t\t},\r\n\r\n\t\t_setDirAttr: function(val){\r\n\t\t\t// Normally _CssStateMixin takes care of this, but we aren't extending it\r\n\t\t\tvar rtl = val.toLowerCase() == \"rtl\";\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitProgressBarRtl\", rtl);\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitProgressBarIndeterminateRtl\", this.indeterminate && rtl);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tupdate: function(/*Object?*/attributes){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal method to change attributes of ProgressBar, similar to set(hash).  Users should call\r\n\t\t\t//\t\tset(\"value\", ...) rather than calling this method directly.\r\n\t\t\t// attributes:\r\n\t\t\t//\t\tMay provide progress and/or maximum properties on this parameter;\r\n\t\t\t//\t\tsee attribute specs for details.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tmyProgressBar.update({'indeterminate': true});\r\n\t\t\t//\t|\tmyProgressBar.update({'progress': 80});\r\n\t\t\t//\t|\tmyProgressBar.update({'indeterminate': true, label:\"Loading ...\" })\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// TODO: deprecate this method and use set() instead\r\n\r\n\t\t\tlang.mixin(this, attributes || {});\r\n\t\t\tvar tip = this.internalProgress, ap = this.domNode;\r\n\t\t\tvar percent = 1;\r\n\t\t\tif(this.indeterminate){\r\n\t\t\t\tap.removeAttribute(\"aria-valuenow\");\r\n\t\t\t}else{\r\n\t\t\t\tif(String(this.progress).indexOf(\"%\") != -1){\r\n\t\t\t\t\tpercent = Math.min(parseFloat(this.progress) / 100, 1);\r\n\t\t\t\t\tthis.progress = percent * this.maximum;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.progress = Math.min(this.progress, this.maximum);\r\n\t\t\t\t\tpercent = this.maximum ? this.progress / this.maximum : 0;\r\n\t\t\t\t}\r\n\t\t\t\tap.setAttribute(\"aria-valuenow\", this.progress);\r\n\t\t\t}\r\n\r\n\t\t\t// Even indeterminate ProgressBars should have these attributes\r\n\t\t\tap.setAttribute(\"aria-labelledby\", this.labelNode.id);\r\n\t\t\tap.setAttribute(\"aria-valuemin\", 0);\r\n\t\t\tap.setAttribute(\"aria-valuemax\", this.maximum);\r\n\r\n\t\t\tthis.labelNode.innerHTML = this.report(percent);\r\n\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitProgressBarIndeterminate\", this.indeterminate);\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitProgressBarIndeterminateRtl\", this.indeterminate && !this.isLeftToRight());\r\n\r\n\t\t\ttip.style.width = (percent * 100) + \"%\";\r\n\t\t\tthis.onChange();\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(v){\r\n\t\t\tthis._set(\"value\", v);\r\n\t\t\tif(v == Infinity){\r\n\t\t\t\tthis.update({indeterminate: true});\r\n\t\t\t}else{\r\n\t\t\t\tthis.update({indeterminate: false, progress: v});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setLabelAttr: function(label){\r\n\t\t\tthis._set(\"label\", label);\r\n\t\t\tthis.update();\r\n\t\t},\r\n\r\n\t\t_setIndeterminateAttr: function(indeterminate){\r\n\t\t\t// Deprecated, use set(\"value\", ...) instead\r\n\t\t\tthis._set(\"indeterminate\", indeterminate);\r\n\t\t\tthis.update();\r\n\t\t},\r\n\r\n\t\treport: function(/*float*/percent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGenerates HTML message to show inside progress bar (normally indicating amount of task completed).\r\n\t\t\t//\t\tMay be overridden.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\treturn this.label ? this.label :\r\n\t\t\t\t(this.indeterminate ? \"&#160;\" : number.format(percent, { type: \"percent\", places: this.places, locale: this.lang }));\r\n\t\t},\r\n\r\n\t\tonChange: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback fired when progress updates.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/TitlePane',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-attr\", // domAttr.set or get domAttr.remove\r\n\t\"dojo/dom-class\", // domClass.replace\r\n\t\"dojo/dom-geometry\", // domGeometry.setMarginBox domGeometry.getMarginBox\r\n\t\"dojo/fx\", // fxUtils.wipeIn fxUtils.wipeOut\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/keys\", // keys.DOWN_ARROW keys.ENTER\r\n\t\"./_CssStateMixin\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./layout/ContentPane\",\r\n\t\"dojo/text!./templates/TitlePane.html\",\r\n\t\"./_base/manager\",    // defaultDuration\r\n\t\"./a11yclick\"\t// template uses ondijitclick\r\n], function(array, declare, dom, domAttr, domClass, domGeometry, fxUtils, has, kernel, keys,\r\n\t\t\t_CssStateMixin, _TemplatedMixin, ContentPane, template, manager){\r\n\r\n\t// module:\r\n\t//\t\tdijit/TitlePane\r\n\r\n\tvar TitlePane = declare(\"dijit.TitlePane\", [ContentPane, _TemplatedMixin, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA pane with a title on top, that can be expanded or collapsed.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tAn accessible container with a title Heading, and a content\r\n\t\t//\t\tsection that slides open and closed. TitlePane is an extension to\r\n\t\t//\t\t`dijit/layout/ContentPane`, providing all the useful content-control aspects from it.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// load a TitlePane from remote file:\r\n\t\t//\t|\tvar foo = new dijit.TitlePane({ href: \"foobar.html\", title:\"Title\" });\r\n\t\t//\t|\tfoo.startup();\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<!-- markup href example: -->\r\n\t\t//\t|\t<div data-dojo-type=\"dijit/TitlePane\" data-dojo-props=\"href: 'foobar.html', title: 'Title'\"></div>\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<!-- markup with inline data -->\r\n\t\t//\t|\t<div data-dojo-type=\"dijit/TitlePane\" title=\"Title\">\r\n\t\t//\t|\t\t<p>I am content</p>\r\n\t\t//\t|\t</div>\r\n\r\n\t\t// title: String\r\n\t\t//\t\tTitle of the pane\r\n\t\ttitle: \"\",\r\n\t\t_setTitleAttr: { node: \"titleNode\", type: \"innerHTML\" }, // override default where title becomes a hover tooltip\r\n\r\n\t\t// open: Boolean\r\n\t\t//\t\tWhether pane is opened or closed.\r\n\t\topen: true,\r\n\r\n\t\t// toggleable: Boolean\r\n\t\t//\t\tWhether pane can be opened or closed by clicking the title bar.\r\n\t\ttoggleable: true,\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tTabindex setting for the title (so users can tab to the title then\r\n\t\t//\t\tuse space/enter to open/close the title pane)\r\n\t\ttabIndex: \"0\",\r\n\r\n\t\t// duration: Integer\r\n\t\t//\t\tTime in milliseconds to fade in/fade out\r\n\t\tduration: manager.defaultDuration,\r\n\r\n\t\t// baseClass: [protected] String\r\n\t\t//\t\tThe root className to be placed on this widget's domNode.\r\n\t\tbaseClass: \"dijitTitlePane\",\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// doLayout: [protected] Boolean\r\n\t\t//\t\tDon't change this parameter from the default value.\r\n\t\t//\t\tThis ContentPane parameter doesn't make sense for TitlePane, since TitlePane\r\n\t\t//\t\tis never a child of a layout container, nor should TitlePane try to control\r\n\t\t//\t\tthe size of an inner widget.\r\n\t\tdoLayout: false,\r\n\r\n\t\t// Tooltip is defined in _WidgetBase but we need to handle the mapping to DOM here\r\n\t\t_setTooltipAttr: {node: \"focusNode\", type: \"attribute\", attribute: \"title\"}, // focusNode spans the entire width, titleNode doesn't\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdom.setSelectable(this.titleNode, false);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Hover and focus effect on title bar, except for non-toggleable TitlePanes\r\n\t\t\t// This should really be controlled from _setToggleableAttr() but _CssStateMixin\r\n\t\t\t// doesn't provide a way to disconnect a previous _trackMouseState() call\r\n\t\t\tif(this.toggleable){\r\n\t\t\t\tthis._trackMouseState(this.titleBarNode, this.baseClass + \"Title\");\r\n\t\t\t}\r\n\r\n\t\t\t// setup open/close animations\r\n\t\t\tvar hideNode = this.hideNode, wipeNode = this.wipeNode;\r\n\t\t\tthis._wipeIn = fxUtils.wipeIn({\r\n\t\t\t\tnode: wipeNode,\r\n\t\t\t\tduration: this.duration,\r\n\t\t\t\tbeforeBegin: function(){\r\n\t\t\t\t\thideNode.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._wipeOut = fxUtils.wipeOut({\r\n\t\t\t\tnode: wipeNode,\r\n\t\t\t\tduration: this.duration,\r\n\t\t\t\tonEnd: function(){\r\n\t\t\t\t\thideNode.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_setOpenAttr: function(/*Boolean*/ open, /*Boolean*/ animate){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to make set(\"open\", boolean) control the open/closed state of the pane.\r\n\t\t\t// open: Boolean\r\n\t\t\t//\t\tTrue if you want to open the pane, false if you want to close it.\r\n\r\n\t\t\tarray.forEach([this._wipeIn, this._wipeOut], function(animation){\r\n\t\t\t\tif(animation && animation.status() == \"playing\"){\r\n\t\t\t\t\tanimation.stop();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(animate){\r\n\t\t\t\tvar anim = this[open ? \"_wipeIn\" : \"_wipeOut\"];\r\n\t\t\t\tanim.play();\r\n\t\t\t}else{\r\n\t\t\t\tthis.hideNode.style.display = this.wipeNode.style.display = open ? \"\" : \"none\";\r\n\t\t\t}\r\n\r\n\t\t\t// load content (if this is the first time we are opening the TitlePane\r\n\t\t\t// and content is specified as an href, or href was set when hidden)\r\n\t\t\tif(this._started){\r\n\t\t\t\tif(open){\r\n\t\t\t\t\tthis._onShow();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.onHide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.containerNode.setAttribute(\"aria-hidden\", open ? \"false\" : \"true\");\r\n\t\t\tthis.focusNode.setAttribute(\"aria-pressed\", open ? \"true\" : \"false\");\r\n\r\n\t\t\tthis._set(\"open\", open);\r\n\r\n\t\t\tthis._setCss();\r\n\t\t},\r\n\r\n\t\t_setToggleableAttr: function(/*Boolean*/ canToggle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to make set(\"toggleable\", boolean) work.\r\n\t\t\t// canToggle: Boolean\r\n\t\t\t//\t\tTrue to allow user to open/close pane by clicking title bar.\r\n\r\n\t\t\tthis.focusNode.setAttribute(\"role\", canToggle ? \"button\" : \"heading\");\r\n\t\t\tif(canToggle){\r\n\t\t\t\tthis.focusNode.setAttribute(\"aria-controls\", this.id + \"_pane\");\r\n\t\t\t\tthis.focusNode.setAttribute(\"tabIndex\", this.tabIndex);\r\n\t\t\t\tthis.focusNode.setAttribute(\"aria-pressed\", this.open);\r\n\t\t\t}else{\r\n\t\t\t\tdomAttr.remove(this.focusNode, \"aria-controls\");\r\n\t\t\t\tdomAttr.remove(this.focusNode, \"tabIndex\");\r\n\t\t\t\tdomAttr.remove(this.focusNode, \"aria-pressed\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._set(\"toggleable\", canToggle);\r\n\r\n\t\t\tthis._setCss();\r\n\t\t},\r\n\r\n\t\t_setContentAttr: function(/*String|DomNode|Nodelist*/ content){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to make set(\"content\", ...) work.\r\n\t\t\t//\t\tTypically called when an href is loaded.  Our job is to make the animation smooth.\r\n\r\n\t\t\tif(!this.open || !this._wipeOut || this._wipeOut.status() == \"playing\"){\r\n\t\t\t\t// we are currently *closing* the pane (or the pane is closed), so just let that continue\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}else{\r\n\t\t\t\tif(this._wipeIn && this._wipeIn.status() == \"playing\"){\r\n\t\t\t\t\tthis._wipeIn.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// freeze container at current height so that adding new content doesn't make it jump\r\n\t\t\t\tdomGeometry.setMarginBox(this.wipeNode, { h: domGeometry.getMarginBox(this.wipeNode).h });\r\n\r\n\t\t\t\t// add the new content (erasing the old content, if any)\r\n\t\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t\t// call _wipeIn.play() to animate from current height to new height\r\n\t\t\t\tif(this._wipeIn){\r\n\t\t\t\t\tthis._wipeIn.play();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.hideNode.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoggle: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSwitches between opened and closed state\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis._setOpenAttr(!this.open, true);\r\n\t\t},\r\n\r\n\t\t_setCss: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the open/close css state for the TitlePane\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar node = this.titleBarNode || this.focusNode;\r\n\t\t\tvar oldCls = this._titleBarClass;\r\n\t\t\tthis._titleBarClass = this.baseClass + \"Title\" + (this.toggleable ? \"\" : \"Fixed\") + (this.open ? \"Open\" : \"Closed\");\r\n\t\t\tdomClass.replace(node, this._titleBarClass, oldCls || \"\");\r\n\r\n\t\t\t// Back compat, remove for 2.0\r\n\t\t\tdomClass.replace(node, this._titleBarClass.replace(\"TitlePaneTitle\", \"\"), (oldCls || \"\").replace(\"TitlePaneTitle\", \"\"));\r\n\r\n\t\t\tthis.arrowNodeInner.innerHTML = this.open ? \"-\" : \"+\";\r\n\t\t},\r\n\r\n\t\t_onTitleKey: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when user hits a key\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(e.keyCode == keys.DOWN_ARROW && this.open){\r\n\t\t\t\tthis.containerNode.focus();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onTitleClick: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler when user clicks the title bar\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.toggleable){\r\n\t\t\t\tthis.toggle();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetTitle: function(/*String*/ title){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Use set('title', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.TitlePane.setTitle() is deprecated.  Use set('title', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set(\"title\", title);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tTitlePane.extend({\r\n\t\t\t_setTitleAttr: function(/*String*/ title){\r\n\t\t\t\t// Override default where title becomes a hover tooltip\r\n\t\t\t\tthis._set(\"title\", title);\r\n\t\t\t\tthis.titleNode.innerHTML = title;\r\n\t\t\t\tthis.applyTextDir(this.titleNode);\r\n\t\t\t},\r\n\r\n\t\t\t_setTooltipAttr: function(/*String*/ tooltip){\r\n\t\t\t\tthis._set(\"tooltip\", tooltip);\r\n\t\t\t\tif(this.textDir){\r\n\t\t\t\t\ttooltip = this.enforceTextDirWithUcc(null, tooltip);\r\n\t\t\t\t}\r\n\t\t\t\tdomAttr.set(this.focusNode, \"title\", tooltip);\t\t\t// focusNode spans the entire width, titleNode doesn't\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(textDir){\r\n\t\t\t\tif(this._created && this.textDir != textDir){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tthis.set(\"title\", this.title);\r\n\t\t\t\t\tthis.set(\"tooltip\", this.tooltip);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn TitlePane;\r\n});\r\n\n\n\ndefine('dijit/tree/TreeStoreModel',[\r\n\t\"dojo/_base/array\", // array.filter array.forEach array.indexOf array.some\r\n\t\"dojo/aspect\", // aspect.after\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\" // lang.hitch\r\n], function(array, aspect, declare, lang){\r\n\r\n\t// module:\r\n\t//\t\tdijit/tree/TreeStoreModel\r\n\r\n\treturn declare(\"dijit.tree.TreeStoreModel\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tImplements dijit/Tree/model connecting to a dojo.data store with a single\r\n\t\t//\t\troot item.  Any methods passed into the constructor will override\r\n\t\t//\t\tthe ones defined here.\r\n\r\n\t\t// store: dojo/data/api/Read\r\n\t\t//\t\tUnderlying store\r\n\t\tstore: null,\r\n\r\n\t\t// childrenAttrs: String[]\r\n\t\t//\t\tOne or more attribute names (attributes in the dojo.data item) that specify that item's children\r\n\t\tchildrenAttrs: [\"children\"],\r\n\r\n\t\t// newItemIdAttr: String\r\n\t\t//\t\tName of attribute in the Object passed to newItem() that specifies the id.\r\n\t\t//\r\n\t\t//\t\tIf newItemIdAttr is set then it's used when newItem() is called to see if an\r\n\t\t//\t\titem with the same id already exists, and if so just links to the old item\r\n\t\t//\t\t(so that the old item ends up with two parents).\r\n\t\t//\r\n\t\t//\t\tSetting this to null or \"\" will make every drop create a new item.\r\n\t\tnewItemIdAttr: \"id\",\r\n\r\n\t\t// labelAttr: String\r\n\t\t//\t\tIf specified, get label for tree node from this attribute, rather\r\n\t\t//\t\tthan by calling store.getLabel()\r\n\t\tlabelAttr: \"\",\r\n\r\n\t\t// root: [readonly] dojo/data/Item\r\n\t\t//\t\tPointer to the root item (read only, not a parameter)\r\n\t\troot: null,\r\n\r\n\t\t// query: anything\r\n\t\t//\t\tSpecifies datastore query to return the root item for the tree.\r\n\t\t//\t\tMust only return a single item.   Alternately can just pass in pointer\r\n\t\t//\t\tto root item.\r\n\t\t// example:\r\n\t\t//\t|\t{id:'ROOT'}\r\n\t\tquery: null,\r\n\r\n\t\t// deferItemLoadingUntilExpand: Boolean\r\n\t\t//\t\tSetting this to true will cause the TreeStoreModel to defer calling loadItem on nodes\r\n\t\t//\t\tuntil they are expanded. This allows for lazying loading where only one\r\n\t\t//\t\tloadItem (and generally one network call, consequently) per expansion\r\n\t\t//\t\t(rather than one for each child).\r\n\t\t//\t\tThis relies on partial loading of the children items; each children item of a\r\n\t\t//\t\tfully loaded item should contain the label and info about having children.\r\n\t\tdeferItemLoadingUntilExpand: false,\r\n\r\n\t\tconstructor: function(/* Object */ args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPassed the arguments listed above (store, etc)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tlang.mixin(this, args);\r\n\r\n\t\t\tthis.connects = [];\r\n\r\n\t\t\tvar store = this.store;\r\n\t\t\tif(!store.getFeatures()['dojo.data.api.Identity']){\r\n\t\t\t\tthrow new Error(\"dijit.tree.TreeStoreModel: store must support dojo.data.Identity\");\r\n\t\t\t}\r\n\r\n\t\t\t// if the store supports Notification, subscribe to the notification events\r\n\t\t\tif(store.getFeatures()['dojo.data.api.Notification']){\r\n\t\t\t\tthis.connects = this.connects.concat([\r\n\t\t\t\t\taspect.after(store, \"onNew\", lang.hitch(this, \"onNewItem\"), true),\r\n\t\t\t\t\taspect.after(store, \"onDelete\", lang.hitch(this, \"onDeleteItem\"), true),\r\n\t\t\t\t\taspect.after(store, \"onSet\", lang.hitch(this, \"onSetItem\"), true)\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this.connects.pop()){ h.remove(); }\r\n\t\t\t// TODO: should cancel any in-progress processing of getRoot(), getChildren()\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Methods for traversing hierarchy\r\n\r\n\t\tgetRoot: function(onItem, onError){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalls onItem with the root item for the tree, possibly a fabricated item.\r\n\t\t\t//\t\tCalls onError on error.\r\n\t\t\tif(this.root){\r\n\t\t\t\tonItem(this.root);\r\n\t\t\t}else{\r\n\t\t\t\tthis.store.fetch({\r\n\t\t\t\t\tquery: this.query,\r\n\t\t\t\t\tonComplete: lang.hitch(this, function(items){\r\n\t\t\t\t\t\tif(items.length != 1){\r\n\t\t\t\t\t\t\tthrow new Error(\"dijit.tree.TreeStoreModel: root query returned \" + items.length +\r\n\t\t\t\t\t\t\t\t\" items, but must return exactly one\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.root = items[0];\r\n\t\t\t\t\t\tonItem(this.root);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tonError: onError\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmayHaveChildren: function(/*dojo/data/Item*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTells if an item has or may have children.  Implementing logic here\r\n\t\t\t//\t\tavoids showing +/- expando icon for nodes that we know don't have children.\r\n\t\t\t//\t\t(For efficiency reasons we may not want to check if an element actually\r\n\t\t\t//\t\thas children until user clicks the expando node)\r\n\t\t\treturn array.some(this.childrenAttrs, function(attr){\r\n\t\t\t\treturn this.store.hasAttribute(item, attr);\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tgetChildren: function(/*dojo/data/Item*/ parentItem, /*function(items)*/ onComplete, /*function*/ onError){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalls onComplete() with array of child items of given parent item, all loaded.\r\n\r\n\t\t\tvar store = this.store;\r\n\t\t\tif(!store.isItemLoaded(parentItem)){\r\n\t\t\t\t// The parent is not loaded yet, we must be in deferItemLoadingUntilExpand\r\n\t\t\t\t// mode, so we will load it and just return the children (without loading each\r\n\t\t\t\t// child item)\r\n\t\t\t\tvar getChildren = lang.hitch(this, arguments.callee);\r\n\t\t\t\tstore.loadItem({\r\n\t\t\t\t\titem: parentItem,\r\n\t\t\t\t\tonItem: function(parentItem){\r\n\t\t\t\t\t\tgetChildren(parentItem, onComplete, onError);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonError: onError\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// get children of specified item\r\n\t\t\tvar childItems = [];\r\n\t\t\tfor(var i=0; i<this.childrenAttrs.length; i++){\r\n\t\t\t\tvar vals = store.getValues(parentItem, this.childrenAttrs[i]);\r\n\t\t\t\tchildItems = childItems.concat(vals);\r\n\t\t\t}\r\n\r\n\t\t\t// count how many items need to be loaded\r\n\t\t\tvar _waitCount = 0;\r\n\t\t\tif(!this.deferItemLoadingUntilExpand){\r\n\t\t\t\tarray.forEach(childItems, function(item){ if(!store.isItemLoaded(item)){ _waitCount++; } });\r\n\t\t\t}\r\n\r\n\t\t\tif(_waitCount == 0){\r\n\t\t\t\t// all items are already loaded (or we aren't loading them).  proceed...\r\n\t\t\t\tonComplete(childItems);\r\n\t\t\t}else{\r\n\t\t\t\t// still waiting for some or all of the items to load\r\n\t\t\t\tarray.forEach(childItems, function(item, idx){\r\n\t\t\t\t\tif(!store.isItemLoaded(item)){\r\n\t\t\t\t\t\tstore.loadItem({\r\n\t\t\t\t\t\t\titem: item,\r\n\t\t\t\t\t\t\tonItem: function(item){\r\n\t\t\t\t\t\t\t\tchildItems[idx] = item;\r\n\t\t\t\t\t\t\t\tif(--_waitCount == 0){\r\n\t\t\t\t\t\t\t\t\t// all nodes have been loaded, send them to the tree\r\n\t\t\t\t\t\t\t\t\tonComplete(childItems);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tonError: onError\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Inspecting items\r\n\r\n\t\tisItem: function(/* anything */ something){\r\n\t\t\treturn this.store.isItem(something);\t// Boolean\r\n\t\t},\r\n\r\n\t\tfetchItemByIdentity: function(/* object */ keywordArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGiven the identity of an item, this method returns the item that has\r\n\t\t\t//\t\tthat identity through the onItem callback.  Conforming implementations\r\n\t\t\t//\t\tshould return null if there is no item with the given identity.\r\n\t\t\t//\t\tImplementations of fetchItemByIdentity() may sometimes return an item\r\n\t\t\t//\t\tfrom a local cache and may sometimes fetch an item from a remote server.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\tthis.store.fetchItemByIdentity(keywordArgs);\r\n\t\t},\r\n\r\n\t\tgetIdentity: function(/* item */ item){\r\n\t\t\treturn this.store.getIdentity(item);\t// Object\r\n\t\t},\r\n\r\n\t\tgetLabel: function(/*dojo/data/Item*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the label for an item\r\n\t\t\tif(this.labelAttr){\r\n\t\t\t\treturn this.store.getValue(item,this.labelAttr);\t// String\r\n\t\t\t}else{\r\n\t\t\t\treturn this.store.getLabel(item);\t// String\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Write interface\r\n\r\n\t\tnewItem: function(/* dijit/tree/dndSource.__Item */ args, /*dojo/data/api/Item*/ parent, /*int?*/ insertIndex){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new item.   See `dojo/data/api/Write` for details on args.\r\n\t\t\t//\t\tUsed in drag & drop when item from external source dropped onto tree.\r\n\t\t\t// description:\r\n\t\t\t//\t\tDevelopers will need to override this method if new items get added\r\n\t\t\t//\t\tto parents with multiple children attributes, in order to define which\r\n\t\t\t//\t\tchildren attribute points to the new item.\r\n\r\n\t\t\tvar pInfo = {parent: parent, attribute: this.childrenAttrs[0]}, LnewItem;\r\n\r\n\t\t\tif(this.newItemIdAttr && args[this.newItemIdAttr]){\r\n\t\t\t\t// Maybe there's already a corresponding item in the store; if so, reuse it.\r\n\t\t\t\tthis.fetchItemByIdentity({identity: args[this.newItemIdAttr], scope: this, onItem: function(item){\r\n\t\t\t\t\tif(item){\r\n\t\t\t\t\t\t// There's already a matching item in store, use it\r\n\t\t\t\t\t\tthis.pasteItem(item, null, parent, true, insertIndex);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// Create new item in the tree, based on the drag source.\r\n\t\t\t\t\t\tLnewItem=this.store.newItem(args, pInfo);\r\n\t\t\t\t\t\tif(LnewItem && (insertIndex!=undefined)){\r\n\t\t\t\t\t\t\t// Move new item to desired position\r\n\t\t\t\t\t\t\tthis.pasteItem(LnewItem, parent, parent, false, insertIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}});\r\n\t\t\t}else{\r\n\t\t\t\t// [as far as we know] there is no id so we must assume this is a new item\r\n\t\t\t\tLnewItem=this.store.newItem(args, pInfo);\r\n\t\t\t\tif(LnewItem && (insertIndex!=undefined)){\r\n\t\t\t\t\t// Move new item to desired position\r\n\t\t\t\t\tthis.pasteItem(LnewItem, parent, parent, false, insertIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpasteItem: function(/*Item*/ childItem, /*Item*/ oldParentItem, /*Item*/ newParentItem, /*Boolean*/ bCopy, /*int?*/ insertIndex){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMove or copy an item from one parent item to another.\r\n\t\t\t//\t\tUsed in drag & drop\r\n\t\t\tvar store = this.store,\r\n\t\t\t\tparentAttr = this.childrenAttrs[0];\t// name of \"children\" attr in parent item\r\n\r\n\t\t\t// remove child from source item, and record the attribute that child occurred in\r\n\t\t\tif(oldParentItem){\r\n\t\t\t\tarray.forEach(this.childrenAttrs, function(attr){\r\n\t\t\t\t\tif(store.containsValue(oldParentItem, attr, childItem)){\r\n\t\t\t\t\t\tif(!bCopy){\r\n\t\t\t\t\t\t\tvar values = array.filter(store.getValues(oldParentItem, attr), function(x){\r\n\t\t\t\t\t\t\t\treturn x != childItem;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tstore.setValues(oldParentItem, attr, values);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tparentAttr = attr;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// modify target item's children attribute to include this item\r\n\t\t\tif(newParentItem){\r\n\t\t\t\tif(typeof insertIndex == \"number\"){\r\n\t\t\t\t\t// call slice() to avoid modifying the original array, confusing the data store\r\n\t\t\t\t\tvar childItems = store.getValues(newParentItem, parentAttr).slice();\r\n\t\t\t\t\tchildItems.splice(insertIndex, 0, childItem);\r\n\t\t\t\t\tstore.setValues(newParentItem, parentAttr, childItems);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstore.setValues(newParentItem, parentAttr,\r\n\t\t\t\t\t\tstore.getValues(newParentItem, parentAttr).concat(childItem));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Callbacks\r\n\r\n\t\tonChange: function(/*dojo/data/Item*/ /*===== item =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback whenever an item has changed, so that Tree\r\n\t\t\t//\t\tcan update the label, icon, etc.   Note that changes\r\n\t\t\t//\t\tto an item's children or parent(s) will trigger an\r\n\t\t\t//\t\tonChildrenChange() so you can ignore those changes here.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonChildrenChange: function(/*===== parent, newChildrenList =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback to do notifications about new, updated, or deleted items.\r\n\t\t\t// parent: dojo/data/Item\r\n\t\t\t// newChildrenList: dojo/data/Item[]\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonDelete: function(/*dojo/data/Item*/ /*===== item =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when an item has been deleted.\r\n\t\t\t// description:\r\n\t\t\t//\t\tNote that there will also be an onChildrenChange() callback for the parent\r\n\t\t\t//\t\tof this item.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Events from data store\r\n\r\n\t\tonNewItem: function(/* dojo/data/Item */ item, /* Object */ parentInfo){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when new items appear in the store, either from a drop operation\r\n\t\t\t//\t\tor some other way.   Updates the tree view (if necessary).\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf the new item is a child of an existing item,\r\n\t\t\t//\t\tcalls onChildrenChange() with the new list of children\r\n\t\t\t//\t\tfor that existing item.\r\n\t\t\t//\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\t// We only care about the new item if it has a parent that corresponds to a TreeNode\r\n\t\t\t// we are currently displaying\r\n\t\t\tif(!parentInfo){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Call onChildrenChange() on parent (ie, existing) item with new list of children\r\n\t\t\t// In the common case, the new list of children is simply parentInfo.newValue or\r\n\t\t\t// [ parentInfo.newValue ], although if items in the store has multiple\r\n\t\t\t// child attributes (see `childrenAttr`), then it's a superset of parentInfo.newValue,\r\n\t\t\t// so call getChildren() to be sure to get right answer.\r\n\t\t\tthis.getChildren(parentInfo.item, lang.hitch(this, function(children){\r\n\t\t\t\tthis.onChildrenChange(parentInfo.item, children);\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\tonDeleteItem: function(/*Object*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for delete notifications from underlying store\r\n\t\t\tthis.onDelete(item);\r\n\t\t},\r\n\r\n\t\tonSetItem: function(item, attribute /*===== , oldValue, newValue =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates the tree view according to changes in the data store.\r\n\t\t\t// description:\r\n\t\t\t//\t\tHandles updates to an item's children by calling onChildrenChange(), and\r\n\t\t\t//\t\tother updates to an item by calling onChange().\r\n\t\t\t//\r\n\t\t\t//\t\tSee `onNewItem` for more details on handling updates to an item's children.\r\n\t\t\t// item: Item\r\n\t\t\t// attribute: attribute-name-string\r\n\t\t\t// oldValue: Object|Array\r\n\t\t\t// newValue: Object|Array\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\tif(array.indexOf(this.childrenAttrs, attribute) != -1){\r\n\t\t\t\t// item's children list changed\r\n\t\t\t\tthis.getChildren(item, lang.hitch(this, function(children){\r\n\t\t\t\t\t// See comments in onNewItem() about calling getChildren()\r\n\t\t\t\t\tthis.onChildrenChange(item, children);\r\n\t\t\t\t}));\r\n\t\t\t}else{\r\n\t\t\t\t// item's label/icon/etc. changed.\r\n\t\t\t\tthis.onChange(item);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/tree/ForestStoreModel',[\r\n\t\"dojo/_base/array\", // array.indexOf array.some\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/kernel\", // global\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"./TreeStoreModel\"\r\n], function(array, declare, kernel, lang, TreeStoreModel){\r\n\r\n// module:\r\n//\t\tdijit/tree/ForestStoreModel\r\n\r\nreturn declare(\"dijit.tree.ForestStoreModel\", TreeStoreModel, {\r\n\t// summary:\r\n\t//\t\tInterface between a dijit.Tree and a dojo.data store that doesn't have a root item,\r\n\t//\t\ta.k.a. a store that has multiple \"top level\" items.\r\n\t//\r\n\t// description:\r\n\t//\t\tUse this class to wrap a dojo.data store, making all the items matching the specified query\r\n\t//\t\tappear as children of a fabricated \"root item\".  If no query is specified then all the\r\n\t//\t\titems returned by fetch() on the underlying store become children of the root item.\r\n\t//\t\tThis class allows dijit.Tree to assume a single root item, even if the store doesn't have one.\r\n\t//\r\n\t//\t\tWhen using this class the developer must override a number of methods according to their app and\r\n\t//\t\tdata, including:\r\n\t//\r\n\t//\t\t- onNewRootItem\r\n\t//\t\t- onAddToRoot\r\n\t//\t\t- onLeaveRoot\r\n\t//\t\t- onNewItem\r\n\t//\t\t- onSetItem\r\n\r\n\t// Parameters to constructor\r\n\r\n\t// rootId: String\r\n\t//\t\tID of fabricated root item\r\n\trootId: \"$root$\",\r\n\r\n\t// rootLabel: String\r\n\t//\t\tLabel of fabricated root item\r\n\trootLabel: \"ROOT\",\r\n\r\n\t// query: String\r\n\t//\t\tSpecifies the set of children of the root item.\r\n\t// example:\r\n\t//\t|\t{type:'continent'}\r\n\tquery: null,\r\n\r\n\t// End of parameters to constructor\r\n\r\n\tconstructor: function(params){\r\n\t\t// summary:\r\n\t\t//\t\tSets up variables, etc.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// Make dummy root item\r\n\t\tthis.root = {\r\n\t\t\tstore: this,\r\n\t\t\troot: true,\r\n\t\t\tid: params.rootId,\r\n\t\t\tlabel: params.rootLabel,\r\n\t\t\tchildren: params.rootChildren\t// optional param\r\n\t\t};\r\n\t},\r\n\r\n\t// =======================================================================\r\n\t// Methods for traversing hierarchy\r\n\r\n\tmayHaveChildren: function(/*dojo/data/Item*/ item){\r\n\t\t// summary:\r\n\t\t//\t\tTells if an item has or may have children.  Implementing logic here\r\n\t\t//\t\tavoids showing +/- expando icon for nodes that we know don't have children.\r\n\t\t//\t\t(For efficiency reasons we may not want to check if an element actually\r\n\t\t//\t\thas children until user clicks the expando node)\r\n\t\t// tags:\r\n\t\t//\t\textension\r\n\t\treturn item === this.root || this.inherited(arguments);\r\n\t},\r\n\r\n\tgetChildren: function(/*dojo/data/Item*/ parentItem, /*function(items)*/ callback, /*function*/ onError){\r\n\t\t// summary:\r\n\t\t//\t\tCalls onComplete() with array of child items of given parent item, all loaded.\r\n\t\tif(parentItem === this.root){\r\n\t\t\tif(this.root.children){\r\n\t\t\t\t// already loaded, just return\r\n\t\t\t\tcallback(this.root.children);\r\n\t\t\t}else{\r\n\t\t\t\tthis.store.fetch({\r\n\t\t\t\t\tquery: this.query,\r\n\t\t\t\t\tonComplete: lang.hitch(this, function(items){\r\n\t\t\t\t\t\tthis.root.children = items;\r\n\t\t\t\t\t\tcallback(items);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tonError: onError\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t},\r\n\r\n\t// =======================================================================\r\n\t// Inspecting items\r\n\r\n\tisItem: function(/* anything */ something){\r\n\t\treturn (something === this.root) ? true : this.inherited(arguments);\r\n\t},\r\n\r\n\tfetchItemByIdentity: function(/* object */ keywordArgs){\r\n\t\tif(keywordArgs.identity == this.root.id){\r\n\t\t\tvar scope = keywordArgs.scope || kernel.global;\r\n\t\t\tif(keywordArgs.onItem){\r\n\t\t\t\tkeywordArgs.onItem.call(scope, this.root);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t},\r\n\r\n\tgetIdentity: function(/* item */ item){\r\n\t\treturn (item === this.root) ? this.root.id : this.inherited(arguments);\r\n\t},\r\n\r\n\tgetLabel: function(/* item */ item){\r\n\t\treturn\t(item === this.root) ? this.root.label : this.inherited(arguments);\r\n\t},\r\n\r\n\t// =======================================================================\r\n\t// Write interface\r\n\r\n\tnewItem: function(/* dijit/tree/dndSource.__Item */ args, /*Item*/ parent, /*int?*/ insertIndex){\r\n\t\t// summary:\r\n\t\t//\t\tCreates a new item.   See dojo/data/api/Write for details on args.\r\n\t\t//\t\tUsed in drag & drop when item from external source dropped onto tree.\r\n\t\tif(parent === this.root){\r\n\t\t\tthis.onNewRootItem(args);\r\n\t\t\treturn this.store.newItem(args);\r\n\t\t}else{\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t}\r\n\t},\r\n\r\n\tonNewRootItem: function(/* dijit/tree/dndSource.__Item */ /*===== args =====*/){\r\n\t\t// summary:\r\n\t\t//\t\tUser can override this method to modify a new element that's being\r\n\t\t//\t\tadded to the root of the tree, for example to add a flag like root=true\r\n\t},\r\n\r\n\tpasteItem: function(/*Item*/ childItem, /*Item*/ oldParentItem, /*Item*/ newParentItem, /*Boolean*/ bCopy, /*int?*/ insertIndex){\r\n\t\t// summary:\r\n\t\t//\t\tMove or copy an item from one parent item to another.\r\n\t\t//\t\tUsed in drag & drop\r\n\t\tif(oldParentItem === this.root){\r\n\t\t\tif(!bCopy){\r\n\t\t\t\t// It's onLeaveRoot()'s responsibility to modify the item so it no longer matches\r\n\t\t\t\t// this.query... thus triggering an onChildrenChange() event to notify the Tree\r\n\t\t\t\t// that this element is no longer a child of the root node\r\n\t\t\t\tthis.onLeaveRoot(childItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.inherited(arguments, [childItem,\r\n\t\t\toldParentItem === this.root ? null : oldParentItem,\r\n\t\t\tnewParentItem === this.root ? null : newParentItem,\r\n\t\t\tbCopy,\r\n\t\t\tinsertIndex\r\n\t\t]);\r\n\t\tif(newParentItem === this.root){\r\n\t\t\t// It's onAddToRoot()'s responsibility to modify the item so it matches\r\n\t\t\t// this.query... thus triggering an onChildrenChange() event to notify the Tree\r\n\t\t\t// that this element is now a child of the root node\r\n\t\t\tthis.onAddToRoot(childItem);\r\n\t\t}\r\n\t},\r\n\r\n\t// =======================================================================\r\n\t// Handling for top level children\r\n\r\n\tonAddToRoot: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when item added to root of tree; user must override this method\r\n\t\t//\t\tto modify the item so that it matches the query for top level items\r\n\t\t// example:\r\n\t\t//\t|\tstore.setValue(item, \"root\", true);\r\n\t\t// tags:\r\n\t\t//\t\textension\r\n\t\tconsole.log(this, \": item \", item, \" added to root\");\r\n\t},\r\n\r\n\tonLeaveRoot: function(/* item */ item){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when item removed from root of tree; user must override this method\r\n\t\t//\t\tto modify the item so it doesn't match the query for top level items\r\n\t\t// example:\r\n\t\t//\t|\tstore.unsetAttribute(item, \"root\");\r\n\t\t// tags:\r\n\t\t//\t\textension\r\n\t\tconsole.log(this, \": item \", item, \" removed from root\");\r\n\t},\r\n\r\n\t// =======================================================================\r\n\t// Events from data store\r\n\r\n\t_requeryTop: function(){\r\n\t\t// reruns the query for the children of the root node,\r\n\t\t// sending out an onSet notification if those children have changed\r\n\t\tvar oldChildren = this.root.children || [];\r\n\t\tthis.store.fetch({\r\n\t\t\tquery: this.query,\r\n\t\t\tonComplete: lang.hitch(this, function(newChildren){\r\n\t\t\t\tthis.root.children = newChildren;\r\n\r\n\t\t\t\t// If the list of children or the order of children has changed...\r\n\t\t\t\tif(oldChildren.length != newChildren.length ||\r\n\t\t\t\t\tarray.some(oldChildren, function(item, idx){ return newChildren[idx] != item;})){\r\n\t\t\t\t\tthis.onChildrenChange(this.root, newChildren);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t},\r\n\r\n\tonNewItem: function(/* dojo/data/api/Item */ item, /* Object */ parentInfo){\r\n\t\t// summary:\r\n\t\t//\t\tHandler for when new items appear in the store.  Developers should override this\r\n\t\t//\t\tmethod to be more efficient based on their app/data.\r\n\t\t// description:\r\n\t\t//\t\tNote that the default implementation requeries the top level items every time\r\n\t\t//\t\ta new item is created, since any new item could be a top level item (even in\r\n\t\t//\t\taddition to being a child of another item, since items can have multiple parents).\r\n\t\t//\r\n\t\t//\t\tIf developers can detect which items are possible top level items (based on the item and the\r\n\t\t//\t\tparentInfo parameters), they should override this method to only call _requeryTop() for top\r\n\t\t//\t\tlevel items.  Often all top level items have parentInfo==null, but\r\n\t\t//\t\tthat will depend on which store you use and what your data is like.\r\n\t\t// tags:\r\n\t\t//\t\textension\r\n\t\tthis._requeryTop();\r\n\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\tonDeleteItem: function(/*Object*/ item){\r\n\t\t// summary:\r\n\t\t//\t\tHandler for delete notifications from underlying store\r\n\r\n\t\t// check if this was a child of root, and if so send notification that root's children\r\n\t\t// have changed\r\n\t\tif(array.indexOf(this.root.children, item) != -1){\r\n\t\t\tthis._requeryTop();\r\n\t\t}\r\n\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\tonSetItem: function(/* item */ item,\r\n\t\t\t\t\t/* attribute-name-string */ attribute,\r\n\t\t\t\t\t/* Object|Array */ oldValue,\r\n\t\t\t\t\t/* Object|Array */ newValue){\r\n\t\t// summary:\r\n\t\t//\t\tUpdates the tree view according to changes to an item in the data store.\r\n\t\t//\t\tDevelopers should override this method to be more efficient based on their app/data.\r\n\t\t// description:\r\n\t\t//\t\tHandles updates to an item's children by calling onChildrenChange(), and\r\n\t\t//\t\tother updates to an item by calling onChange().\r\n\t\t//\r\n\t\t//\t\tAlso, any change to any item re-executes the query for the tree's top-level items,\r\n\t\t//\t\tsince this modified item may have started/stopped matching the query for top level items.\r\n\t\t//\r\n\t\t//\t\tIf possible, developers should override this function to only call _requeryTop() when\r\n\t\t//\t\tthe change to the item has caused it to stop/start being a top level item in the tree.\r\n\t\t// tags:\r\n\t\t//\t\textension\r\n\r\n\t\tthis._requeryTop();\r\n\t\tthis.inherited(arguments);\r\n\t}\r\n\r\n});\r\n\r\n});\r\n\ndefine('dijit/tree/_dndContainer',[\r\n\t\"dojo/aspect\", // aspect.after\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove domClass.replace\r\n\t\"dojo/_base/lang\", // lang.mixin lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\"\r\n], function(aspect, declare, domClass, lang, on, touch){\r\n\r\n\t// module:\r\n\t//\t\tdijit/tree/_dndContainer\r\n\r\n\t/*=====\r\n\t var __Args = {\r\n\t // summary:\r\n\t //\t\tA dict of parameters for Tree source configuration.\r\n\t // isSource: Boolean?\r\n\t //\t\tCan be used as a DnD source. Defaults to true.\r\n\t // accept: String[]\r\n\t //\t\tList of accepted types (text strings) for a target; defaults to\r\n\t //\t\t[\"text\", \"treeNode\"]\r\n\t // copyOnly: Boolean?\r\n\t //\t\tCopy items, if true, use a state of Ctrl key otherwise,\r\n\t // dragThreshold: Number\r\n\t //\t\tThe move delay in pixels before detecting a drag; 0 by default\r\n\t // betweenThreshold: Integer\r\n\t //\t\tDistance from upper/lower edge of node to allow drop to reorder nodes\r\n\t };\r\n\t =====*/\r\n\r\n\treturn declare(\"dijit.tree._dndContainer\", null, {\r\n\r\n\t\t// summary:\r\n\t\t//\t\tThis is a base class for `dijit/tree/_dndSelector`, and isn't meant to be used directly.\r\n\t\t//\t\tIt's modeled after `dojo/dnd/Container`.\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\t/*=====\r\n\t\t // current: TreeNode\r\n\t\t //\t\tThe currently hovered TreeNode.  Not set to anything for keyboard operation.  (TODO: change?)\r\n\t\t current: null,\r\n\t\t =====*/\r\n\r\n\t\tconstructor: function(tree, params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA constructor of the Container\r\n\t\t\t// tree: Node\r\n\t\t\t//\t\tNode or node's id to build the container on\r\n\t\t\t// params: __Args\r\n\t\t\t//\t\tA dict of parameters, which gets mixed into the object\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.tree = tree;\r\n\t\t\tthis.node = tree.domNode;\t// TODO: rename; it's not a TreeNode but the whole Tree\r\n\t\t\tlang.mixin(this, params);\r\n\r\n\t\t\t// states\r\n\t\t\tthis.containerState = \"\";\r\n\t\t\tdomClass.add(this.node, \"dojoDndContainer\");\r\n\r\n\t\t\t// set up events\r\n\t\t\tthis.events = [\r\n\t\t\t\t// Mouse (or touch) enter/leave on Tree itself\r\n\t\t\t\ton(this.node, touch.enter, lang.hitch(this, \"onOverEvent\")),\r\n\t\t\t\ton(this.node, touch.leave, lang.hitch(this, \"onOutEvent\")),\r\n\r\n\t\t\t\t// switching between TreeNodes\r\n\t\t\t\taspect.after(this.tree, \"_onNodeMouseEnter\", lang.hitch(this, \"onMouseOver\"), true),\r\n\t\t\t\taspect.after(this.tree, \"_onNodeMouseLeave\", lang.hitch(this, \"onMouseOut\"), true),\r\n\r\n\t\t\t\t// cancel text selection and text dragging\r\n\t\t\t\ton(this.node, \"dragstart, selectstart\", function(evt){\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t})\r\n\t\t\t];\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPrepares this object to be garbage-collected\r\n\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this.events.pop()){\r\n\t\t\t\th.remove();\r\n\t\t\t}\r\n\r\n\t\t\t// this.clearItems();\r\n\t\t\tthis.node = this.parent = null;\r\n\t\t},\r\n\r\n\t\t// mouse events\r\n\t\tonMouseOver: function(widget /*===== , evt =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when mouse is moved over a TreeNode\r\n\t\t\t// widget: TreeNode\r\n\t\t\t// evt: Event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.current = widget;\r\n\t\t},\r\n\r\n\t\tonMouseOut: function(/*===== widget, evt =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when mouse is moved away from a TreeNode\r\n\t\t\t// widget: TreeNode\r\n\t\t\t// evt: Event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.current = null;\r\n\t\t},\r\n\r\n\t\t_changeState: function(type, newState){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChanges a named state to new state value\r\n\t\t\t// type: String\r\n\t\t\t//\t\tA name of the state to change\r\n\t\t\t// newState: String\r\n\t\t\t//\t\tnew state\r\n\t\t\tvar prefix = \"dojoDnd\" + type;\r\n\t\t\tvar state = type.toLowerCase() + \"State\";\r\n\t\t\t//domClass.replace(this.node, prefix + newState, prefix + this[state]);\r\n\t\t\tdomClass.replace(this.node, prefix + newState, prefix + this[state]);\r\n\t\t\tthis[state] = newState;\r\n\t\t},\r\n\r\n\t\t_addItemClass: function(node, type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds a class with prefix \"dojoDndItem\"\r\n\t\t\t// node: Node\r\n\t\t\t//\t\tA node\r\n\t\t\t// type: String\r\n\t\t\t//\t\tA variable suffix for a class name\r\n\t\t\tdomClass.add(node, \"dojoDndItem\" + type);\r\n\t\t},\r\n\r\n\t\t_removeItemClass: function(node, type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves a class with prefix \"dojoDndItem\"\r\n\t\t\t// node: Node\r\n\t\t\t//\t\tA node\r\n\t\t\t// type: String\r\n\t\t\t//\t\tA variable suffix for a class name\r\n\t\t\tdomClass.remove(node, \"dojoDndItem\" + type);\r\n\t\t},\r\n\r\n\t\tonOverEvent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function is called once, when mouse is over our container\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis._changeState(\"Container\", \"Over\");\r\n\t\t},\r\n\r\n\t\tonOutEvent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function is called once, when mouse is out of our container\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis._changeState(\"Container\", \"\");\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/tree/_dndSelector',[\r\n\t\"dojo/_base/array\", // array.filter array.forEach array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/kernel\",\t// global\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/dnd/common\",\r\n\t\"dojo/dom\", // isDescendant\r\n\t\"dojo/mouse\", // mouse.isLeft\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"../a11yclick\",\r\n\t\"./_dndContainer\"\r\n], function(array, declare, kernel, lang, dndCommon, dom, mouse, on, touch, a11yclick, _dndContainer){\r\n\r\n\t// module:\r\n\t//\t\tdijit/tree/_dndSelector\r\n\r\n\treturn declare(\"dijit.tree._dndSelector\", _dndContainer, {\r\n\t\t// summary:\r\n\t\t//\t\tThis is a base class for `dijit/tree/dndSource`, and isn't meant to be used directly.\r\n\t\t//\t\tIt's based on `dojo/dnd/Selector`.\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\t/*=====\r\n\t\t// selection: Object\r\n\t\t//\t\t(id to DomNode) map for every TreeNode that's currently selected.\r\n\t\t//\t\tThe DOMNode is the TreeNode.rowNode.\r\n\t\tselection: {},\r\n\t\t=====*/\r\n\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitialization\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.selection={};\r\n\t\t\tthis.anchor = null;\r\n\r\n\t\t\tthis.events.push(\r\n\t\t\t\t// listeners setup here but no longer used (left for backwards compatibility\r\n\t\t\t\ton(this.tree.domNode, touch.press, lang.hitch(this,\"onMouseDown\")),\r\n\t\t\t\ton(this.tree.domNode, touch.release, lang.hitch(this,\"onMouseUp\")),\r\n\r\n\t\t\t\t// listeners used in this module\r\n\t\t\t\ton(this.tree.domNode, touch.move, lang.hitch(this,\"onMouseMove\")),\r\n\t\t\t\ton(this.tree.domNode, a11yclick.press, lang.hitch(this,\"onClickPress\")),\r\n\t\t\t\ton(this.tree.domNode, a11yclick.release, lang.hitch(this,\"onClickRelease\"))\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t// singular: Boolean\r\n\t\t//\t\tAllows selection of only one element, if true.\r\n\t\t//\t\tTree hasn't been tested in singular=true mode, unclear if it works.\r\n\t\tsingular: false,\r\n\r\n\t\t// methods\r\n\t\tgetSelectedTreeNodes: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a list of selected node(s).\r\n\t\t\t//\t\tUsed by dndSource on the start of a drag.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar nodes=[], sel = this.selection;\r\n\t\t\tfor(var i in sel){\r\n\t\t\t\tnodes.push(sel[i]);\r\n\t\t\t}\r\n\t\t\treturn nodes;\r\n\t\t},\r\n\r\n\t\tselectNone: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUnselects all items\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.setSelection([]);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPrepares the object to be garbage-collected\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.selection = this.anchor = null;\r\n\t\t},\r\n\t\taddTreeNode: function(/*dijit/Tree._TreeNode*/ node, /*Boolean?*/isAnchor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadd node to current selection\r\n\t\t\t// node: Node\r\n\t\t\t//\t\tnode to add\r\n\t\t\t// isAnchor: Boolean\r\n\t\t\t//\t\tWhether the node should become anchor.\r\n\r\n\t\t\tthis.setSelection(this.getSelectedTreeNodes().concat( [node] ));\r\n\t\t\tif(isAnchor){ this.anchor = node; }\r\n\t\t\treturn node;\r\n\t\t},\r\n\t\tremoveTreeNode: function(/*dijit/Tree._TreeNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremove node and it's descendants from current selection\r\n\t\t\t// node: Node\r\n\t\t\t//\t\tnode to remove\r\n\t\t\tvar newSelection = array.filter(this.getSelectedTreeNodes(), function(selectedNode){\r\n\t\t\t\treturn !dom.isDescendant(selectedNode.domNode, node.domNode); // also matches when selectedNode == node\r\n\t\t\t});\r\n\t\t\tthis.setSelection(newSelection);\r\n\t\t\treturn node;\r\n\t\t},\r\n\t\tisTreeNodeSelected: function(/*dijit/Tree._TreeNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturn true if node is currently selected\r\n\t\t\t// node: Node\r\n\t\t\t//\t\tthe node to check whether it's in the current selection\r\n\r\n\t\t\treturn node.id && !!this.selection[node.id];\r\n\t\t},\r\n\t\tsetSelection: function(/*dijit/Tree._TreeNode[]*/ newSelection){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the list of selected nodes to be exactly newSelection. All changes to the\r\n\t\t\t//\t\tselection should be passed through this function, which ensures that derived\r\n\t\t\t//\t\tattributes are kept up to date. Anchor will be deleted if it has been removed\r\n\t\t\t//\t\tfrom the selection, but no new anchor will be added by this function.\r\n\t\t\t// newSelection: Node[]\r\n\t\t\t//\t\tlist of tree nodes to make selected\r\n\t\t\tvar oldSelection = this.getSelectedTreeNodes();\r\n\t\t\tarray.forEach(this._setDifference(oldSelection, newSelection), lang.hitch(this, function(node){\r\n\t\t\t\tnode.setSelected(false);\r\n\t\t\t\tif(this.anchor == node){\r\n\t\t\t\t\tdelete this.anchor;\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.selection[node.id];\r\n\t\t\t}));\r\n\t\t\tarray.forEach(this._setDifference(newSelection, oldSelection), lang.hitch(this, function(node){\r\n\t\t\t\tnode.setSelected(true);\r\n\t\t\t\tthis.selection[node.id] = node;\r\n\t\t\t}));\r\n\t\t\tthis._updateSelectionProperties();\r\n\t\t},\r\n\t\t_setDifference: function(xs,ys){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a copy of xs which lacks any objects\r\n\t\t\t//\t\toccurring in ys. Checks for membership by\r\n\t\t\t//\t\tmodifying and then reading the object, so it will\r\n\t\t\t//\t\tnot properly handle sets of numbers or strings.\r\n\r\n\t\t\tarray.forEach(ys, function(y){ y.__exclude__ = true; });\r\n\t\t\tvar ret = array.filter(xs, function(x){ return !x.__exclude__; });\r\n\r\n\t\t\t// clean up after ourselves.\r\n\t\t\tarray.forEach(ys, function(y){ delete y['__exclude__'] });\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t_updateSelectionProperties: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate the following tree properties from the current selection:\r\n\t\t\t//\t\tpath[s], selectedItem[s], selectedNode[s]\r\n\r\n\t\t\tvar selected = this.getSelectedTreeNodes();\r\n\t\t\tvar paths = [], nodes = [];\r\n\t\t\tarray.forEach(selected, function(node){\r\n\t\t\t\tvar ary = node.getTreePath();\r\n\t\t\t\tnodes.push(node);\r\n\t\t\t\tpaths.push(ary);\r\n\t\t\t}, this);\r\n\t\t\tvar items = array.map(nodes,function(node){ return node.item; });\r\n\t\t\tthis.tree._set(\"paths\", paths);\r\n\t\t\tthis.tree._set(\"path\", paths[0] || []);\r\n\t\t\tthis.tree._set(\"selectedNodes\", nodes);\r\n\t\t\tthis.tree._set(\"selectedNode\", nodes[0] || null);\r\n\t\t\tthis.tree._set(\"selectedItems\", items);\r\n\t\t\tthis.tree._set(\"selectedItem\", items[0] || null);\r\n\t\t},\r\n\r\n\t\t// selection related events\r\n\t\tonClickPress: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent processor for onmousedown/ontouchstart/onkeydown corresponding to a click event\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tonmousedown/ontouchstart/onkeydown event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// ignore mouse or touch on expando node\r\n\t\t\tif(this.current && this.current.isExpandable && this.tree.isExpandoNode(e.target, this.current)){ return; }\r\n\r\n\t\t\tif(e.type == \"mousedown\" && mouse.isLeft(e)){\r\n\t\t\t\t// Prevent text selection while dragging on desktop, see #16328.   But don't call preventDefault()\r\n\t\t\t\t// for mobile because it will break things completely, see #15838.  Also, don't preventDefault() on\r\n\t\t\t\t// MSPointerDown or pointerdown events, because that stops the mousedown event from being generated,\r\n\t\t\t\t// see #17709.\r\n\t\t\t\t// TODO: remove this completely in 2.0.  It shouldn't be needed since dojo/dnd/Manager already\r\n\t\t\t\t// calls preventDefault() for the \"selectstart\" event.  It can also be achieved via CSS:\r\n\t\t\t\t// http://stackoverflow.com/questions/826782/css-rule-to-disable-text-selection-highlighting\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tvar treeNode = e.type == \"keydown\" ? this.tree.focusedChild : this.current;\r\n\r\n\t\t\tif(!treeNode){\r\n\t\t\t\t// Click must be on the Tree but not on a TreeNode, happens especially when Tree is stretched to fill\r\n\t\t\t\t// a pane of a BorderContainer, etc.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar copy = dndCommon.getCopyKeyState(e), id = treeNode.id;\r\n\r\n\t\t\t// if shift key is not pressed, and the node is already in the selection,\r\n\t\t\t// delay deselection until onmouseup so in the case of DND, deselection\r\n\t\t\t// will be canceled by onmousemove.\r\n\t\t\tif(!this.singular && !e.shiftKey && this.selection[id]){\r\n\t\t\t\tthis._doDeselect = true;\r\n\t\t\t\treturn;\r\n\t\t\t}else{\r\n\t\t\t\tthis._doDeselect = false;\r\n\t\t\t}\r\n\t\t\tthis.userSelect(treeNode, copy, e.shiftKey);\r\n\t\t},\r\n\r\n\t\tonClickRelease: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent processor for onmouseup/ontouchend/onkeyup corresponding to a click event\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tonmouseup/ontouchend/onkeyup event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// _doDeselect is the flag to indicate that the user wants to either ctrl+click on\r\n\t\t\t// an already selected item (to deselect the item), or click on a not-yet selected item\r\n\t\t\t// (which should remove all current selection, and add the clicked item). This can not\r\n\t\t\t// be done in onMouseDown, because the user may start a drag after mousedown. By moving\r\n\t\t\t// the deselection logic here, the user can drag an already selected item.\r\n\t\t\tif(!this._doDeselect){ return; }\r\n\t\t\tthis._doDeselect = false;\r\n\t\t\tthis.userSelect(e.type == \"keyup\" ? this.tree.focusedChild : this.current, dndCommon.getCopyKeyState(e), e.shiftKey);\r\n\t\t},\r\n\t\tonMouseMove: function(/*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tevent processor for onmousemove/ontouchmove\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tonmousemove/ontouchmove event\r\n\t\t\tthis._doDeselect = false;\r\n\t\t},\r\n\r\n\t\t// mouse/touch events that are no longer used\r\n\t\tonMouseDown: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent processor for onmousedown/ontouchstart\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tonmousedown/ontouchstart event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\t\tonMouseUp: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent processor for onmouseup/ontouchend\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tonmouseup/ontouchend event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\t_compareNodes: function(n1, n2){\r\n\t\t\tif(n1 === n2){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif('sourceIndex' in document.documentElement){ //IE\r\n\t\t\t\t//TODO: does not yet work if n1 and/or n2 is a text node\r\n\t\t\t\treturn n1.sourceIndex - n2.sourceIndex;\r\n\t\t\t}else if('compareDocumentPosition' in document.documentElement){ //FF, Opera\r\n\t\t\t\treturn n1.compareDocumentPosition(n2) & 2 ? 1: -1;\r\n\t\t\t}else if(document.createRange){ //Webkit\r\n\t\t\t\tvar r1 = doc.createRange();\r\n\t\t\t\tr1.setStartBefore(n1);\r\n\r\n\t\t\t\tvar r2 = doc.createRange();\r\n\t\t\t\tr2.setStartBefore(n2);\r\n\r\n\t\t\t\treturn r1.compareBoundaryPoints(r1.END_TO_END, r2);\r\n\t\t\t}else{\r\n\t\t\t\tthrow Error(\"dijit.tree._compareNodes don't know how to compare two different nodes in this browser\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tuserSelect: function(node, multi, range){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd or remove the given node from selection, responding\r\n\t\t\t//\t\tto a user action such as a click or keypress.\r\n\t\t\t// multi: Boolean\r\n\t\t\t//\t\tIndicates whether this is meant to be a multi-select action (e.g. ctrl-click)\r\n\t\t\t// range: Boolean\r\n\t\t\t//\t\tIndicates whether this is meant to be a ranged action (e.g. shift-click)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.singular){\r\n\t\t\t\tif(this.anchor == node && multi){\r\n\t\t\t\t\tthis.selectNone();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setSelection([node]);\r\n\t\t\t\t\tthis.anchor = node;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(range && this.anchor){\r\n\t\t\t\t\tvar cr = this._compareNodes(this.anchor.rowNode, node.rowNode),\r\n\t\t\t\t\tbegin, end, anchor = this.anchor;\r\n\r\n\t\t\t\t\tif(cr < 0){ //current is after anchor\r\n\t\t\t\t\t\tbegin = anchor;\r\n\t\t\t\t\t\tend = node;\r\n\t\t\t\t\t}else{ //current is before anchor\r\n\t\t\t\t\t\tbegin = node;\r\n\t\t\t\t\t\tend = anchor;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar nodes = [];\r\n\t\t\t\t\t//add everything betweeen begin and end inclusively\r\n\t\t\t\t\twhile(begin != end){\r\n\t\t\t\t\t\tnodes.push(begin);\r\n\t\t\t\t\t\tbegin = this.tree._getNext(begin);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes.push(end);\r\n\r\n\t\t\t\t\tthis.setSelection(nodes);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif( this.selection[ node.id ] && multi ){\r\n\t\t\t\t\t\tthis.removeTreeNode( node );\r\n\t\t\t\t\t}else if(multi){\r\n\t\t\t\t\t\tthis.addTreeNode(node, true);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.setSelection([node]);\r\n\t\t\t\t\t\tthis.anchor = node;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItem: function(/*String*/ key){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the dojo/dnd/Container._Item (representing a dragged node) by it's key (id).\r\n\t\t\t//\t\tCalled by dojo/dnd/Source.checkAcceptance().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar widget = this.selection[key];\r\n\t\t\treturn {\r\n\t\t\t\tdata: widget,\r\n\t\t\t\ttype: [\"treeNode\"]\r\n\t\t\t}; // dojo/dnd/Container._Item\r\n\t\t},\r\n\r\n\t\tforInSelectedItems: function(/*Function*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIterates over selected items;\r\n\t\t\t//\t\tsee `dojo/dnd/Container.forInItems()` for details\r\n\t\t\to = o || kernel.global;\r\n\t\t\tfor(var id in this.selection){\r\n\t\t\t\t// console.log(\"selected item id: \" + id);\r\n\t\t\t\tf.call(o, this.getItem(id), id, this);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/Tree',[\r\n\t\"dojo/_base/array\", // array.filter array.forEach array.map\r\n\t\"dojo/aspect\",\r\n\t\"dojo/cookie\", // cookie\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/Deferred\", // Deferred\r\n\t\"dojo/promise/all\",\r\n\t\"dojo/dom\", // dom.isDescendant\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove domClass.replace domClass.toggle\r\n\t\"dojo/dom-geometry\", // domGeometry.setMarginBox domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/errors/create\", // createError\r\n\t\"dojo/fx\", // fxUtils.wipeIn fxUtils.wipeOut\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/keys\", // arrows etc.\r\n\t\"dojo/_base/lang\", // lang.getObject lang.mixin lang.hitch\r\n\t\"dojo/on\", // on(), on.selector()\r\n\t\"dojo/topic\",\r\n\t\"dojo/touch\",\r\n\t\"dojo/when\",\r\n\t\"./a11yclick\",\r\n\t\"./focus\",\r\n\t\"./registry\", // registry.byNode(), registry.getEnclosingWidget()\r\n\t\"./_base/manager\", // manager.defaultDuration\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_Container\",\r\n\t\"./_Contained\",\r\n\t\"./_CssStateMixin\",\r\n\t\"./_KeyNavMixin\",\r\n\t\"dojo/text!./templates/TreeNode.html\",\r\n\t\"dojo/text!./templates/Tree.html\",\r\n\t\"./tree/TreeStoreModel\",\r\n\t\"./tree/ForestStoreModel\",\r\n\t\"./tree/_dndSelector\",\r\n\t\"dojo/query!css2\"\t// needed when on.selector() used with a string for the selector\r\n], function(array, aspect, cookie, declare, Deferred, all,\r\n\t\t\tdom, domClass, domGeometry, domStyle, createError, fxUtils, has, kernel, keys, lang, on, topic, touch, when,\r\n\t\t\ta11yclick, focus, registry, manager, _Widget, _TemplatedMixin, _Container, _Contained, _CssStateMixin, _KeyNavMixin,\r\n\t\t\ttreeNodeTemplate, treeTemplate, TreeStoreModel, ForestStoreModel, _dndSelector){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Tree\r\n\r\n\tfunction shimmedPromise(/*Deferred|Promise*/ d){\r\n\t\t// summary:\r\n\t\t//\t\tReturn a Promise based on given Deferred or Promise, with back-compat addCallback() and addErrback() shims\r\n\t\t//\t\tadded (TODO: remove those back-compat shims, and this method, for 2.0)\r\n\r\n\t\treturn lang.delegate(d.promise || d, {\r\n\t\t\taddCallback: function(callback){\r\n\t\t\t\tthis.then(callback);\r\n\t\t\t},\r\n\t\t\taddErrback: function(errback){\r\n\t\t\t\tthis.otherwise(errback);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar TreeNode = declare(\"dijit._TreeNode\", [_Widget, _TemplatedMixin, _Container, _Contained, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tSingle node within a tree.   This class is used internally\r\n\t\t//\t\tby Tree and should not be accessed directly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// item: [const] Item\r\n\t\t//\t\tthe dojo.data entry this tree represents\r\n\t\titem: null,\r\n\r\n\t\t// isTreeNode: [protected] Boolean\r\n\t\t//\t\tIndicates that this is a TreeNode.   Used by `dijit.Tree` only,\r\n\t\t//\t\tshould not be accessed directly.\r\n\t\tisTreeNode: true,\r\n\r\n\t\t// label: String\r\n\t\t//\t\tText of this tree node\r\n\t\tlabel: \"\",\r\n\t\t_setLabelAttr: function(val){\r\n\t\t\tthis.labelNode[this.labelType == \"html\" ? \"innerHTML\" : \"innerText\" in this.labelNode ?\r\n\t\t\t\t\"innerText\" : \"textContent\"] = val;\r\n\t\t\tthis._set(\"label\", val);\r\n\t\t},\r\n\r\n\t\t// labelType: [const] String\r\n\t\t//\t\tSpecifies how to interpret the label.  Can be \"html\" or \"text\".\r\n\t\tlabelType: \"text\",\r\n\r\n\t\t// isExpandable: [private] Boolean\r\n\t\t//\t\tThis node has children, so show the expando node (+ sign)\r\n\t\tisExpandable: null,\r\n\r\n\t\t// isExpanded: [readonly] Boolean\r\n\t\t//\t\tThis node is currently expanded (ie, opened)\r\n\t\tisExpanded: false,\r\n\r\n\t\t// state: [private] String\r\n\t\t//\t\tDynamic loading-related stuff.\r\n\t\t//\t\tWhen an empty folder node appears, it is \"NotLoaded\" first,\r\n\t\t//\t\tthen after dojo.data query it becomes \"Loading\" and, finally \"Loaded\"\r\n\t\tstate: \"NotLoaded\",\r\n\r\n\t\ttemplateString: treeNodeTemplate,\r\n\r\n\t\tbaseClass: \"dijitTreeNode\",\r\n\r\n\t\t// For hover effect for tree node, and focus effect for label\r\n\t\tcssStateNodes: {\r\n\t\t\trowNode: \"dijitTreeRow\"\r\n\t\t},\r\n\r\n\t\t// Tooltip is defined in _WidgetBase but we need to handle the mapping to DOM here\r\n\t\t_setTooltipAttr: {node: \"rowNode\", type: \"attribute\", attribute: \"title\"},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// set expand icon for leaf\r\n\t\t\tthis._setExpando();\r\n\r\n\t\t\t// set icon and label class based on item\r\n\t\t\tthis._updateItemClasses(this.item);\r\n\r\n\t\t\tif(this.isExpandable){\r\n\t\t\t\tthis.labelNode.setAttribute(\"aria-expanded\", this.isExpanded);\r\n\t\t\t}\r\n\r\n\t\t\t//aria-selected should be false on all selectable elements.\r\n\t\t\tthis.setSelected(false);\r\n\t\t},\r\n\r\n\t\t_setIndentAttr: function(indent){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTell this node how many levels it should be indented\r\n\t\t\t// description:\r\n\t\t\t//\t\t0 for top level nodes, 1 for their children, 2 for their\r\n\t\t\t//\t\tgrandchildren, etc.\r\n\r\n\t\t\t// Math.max() is to prevent negative padding on hidden root node (when indent == -1)\r\n\t\t\tvar pixels = (Math.max(indent, 0) * this.tree._nodePixelIndent) + \"px\";\r\n\r\n\t\t\tdomStyle.set(this.domNode, \"backgroundPosition\", pixels + \" 0px\");\t// TODOC: what is this for???\r\n\t\t\tdomStyle.set(this.rowNode, this.isLeftToRight() ? \"paddingLeft\" : \"paddingRight\", pixels);\r\n\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tchild.set(\"indent\", indent + 1);\r\n\t\t\t});\r\n\r\n\t\t\tthis._set(\"indent\", indent);\r\n\t\t},\r\n\r\n\t\tmarkProcessing: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tVisually denote that tree is loading data, etc.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.state = \"Loading\";\r\n\t\t\tthis._setExpando(true);\r\n\t\t},\r\n\r\n\t\tunmarkProcessing: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear markup from markProcessing() call\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._setExpando(false);\r\n\t\t},\r\n\r\n\t\t_updateItemClasses: function(item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet appropriate CSS classes for icon and label dom node\r\n\t\t\t//\t\t(used to allow for item updates to change respective CSS)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar tree = this.tree, model = tree.model;\r\n\t\t\tif(tree._v10Compat && item === model.root){\r\n\t\t\t\t// For back-compat with 1.0, need to use null to specify root item (TODO: remove in 2.0)\r\n\t\t\t\titem = null;\r\n\t\t\t}\r\n\t\t\tthis._applyClassAndStyle(item, \"icon\", \"Icon\");\r\n\t\t\tthis._applyClassAndStyle(item, \"label\", \"Label\");\r\n\t\t\tthis._applyClassAndStyle(item, \"row\", \"Row\");\r\n\r\n\t\t\tthis.tree._startPaint(true);\t\t// signifies paint started and finished (synchronously)\r\n\t\t},\r\n\r\n\t\t_applyClassAndStyle: function(item, lower, upper){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the appropriate CSS classes and styles for labels, icons and rows.\r\n\t\t\t//\r\n\t\t\t// item:\r\n\t\t\t//\t\tThe data item.\r\n\t\t\t//\r\n\t\t\t// lower:\r\n\t\t\t//\t\tThe lower case attribute to use, e.g. 'icon', 'label' or 'row'.\r\n\t\t\t//\r\n\t\t\t// upper:\r\n\t\t\t//\t\tThe upper case attribute to use, e.g. 'Icon', 'Label' or 'Row'.\r\n\t\t\t//\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar clsName = \"_\" + lower + \"Class\";\r\n\t\t\tvar nodeName = lower + \"Node\";\r\n\t\t\tvar oldCls = this[clsName];\r\n\r\n\t\t\tthis[clsName] = this.tree[\"get\" + upper + \"Class\"](item, this.isExpanded);\r\n\t\t\tdomClass.replace(this[nodeName], this[clsName] || \"\", oldCls || \"\");\r\n\r\n\t\t\tdomStyle.set(this[nodeName], this.tree[\"get\" + upper + \"Style\"](item, this.isExpanded) || {});\r\n\t\t},\r\n\r\n\t\t_updateLayout: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet appropriate CSS classes for this.domNode\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// if we are hiding the root node then make every first level child look like a root node\r\n\t\t\tvar parent = this.getParent(),\r\n\t\t\t\tmarkAsRoot = !parent || !parent.rowNode || parent.rowNode.style.display == \"none\";\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitTreeIsRoot\", markAsRoot);\r\n\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitTreeIsLast\", !markAsRoot && !this.getNextSibling());\r\n\t\t},\r\n\r\n\t\t_setExpando: function(/*Boolean*/ processing){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the right image for the expando node\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar styles = [\"dijitTreeExpandoLoading\", \"dijitTreeExpandoOpened\",\r\n\t\t\t\t\t\"dijitTreeExpandoClosed\", \"dijitTreeExpandoLeaf\"],\r\n\t\t\t\t_a11yStates = [\"*\", \"-\", \"+\", \"*\"],\r\n\t\t\t\tidx = processing ? 0 : (this.isExpandable ? (this.isExpanded ? 1 : 2) : 3);\r\n\r\n\t\t\t// apply the appropriate class to the expando node\r\n\t\t\tdomClass.replace(this.expandoNode, styles[idx], styles);\r\n\r\n\t\t\t// provide a non-image based indicator for images-off mode\r\n\t\t\tthis.expandoNodeText.innerHTML = _a11yStates[idx];\r\n\r\n\t\t},\r\n\r\n\t\texpand: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tShow my children\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise that resolves when expansion is complete\r\n\r\n\t\t\t// If there's already an expand in progress or we are already expanded, just return\r\n\t\t\tif(this._expandDeferred){\r\n\t\t\t\treturn shimmedPromise(this._expandDeferred);\t\t// dojo/promise/Promise\r\n\t\t\t}\r\n\r\n\t\t\t// cancel in progress collapse operation\r\n\t\t\tif(this._collapseDeferred){\r\n\t\t\t\tthis._collapseDeferred.cancel();\r\n\t\t\t\tdelete this._collapseDeferred;\r\n\t\t\t}\r\n\r\n\t\t\t// All the state information for when a node is expanded, maybe this should be\r\n\t\t\t// set when the animation completes instead\r\n\t\t\tthis.isExpanded = true;\r\n\t\t\tthis.labelNode.setAttribute(\"aria-expanded\", \"true\");\r\n\t\t\tif(this.tree.showRoot || this !== this.tree.rootNode){\r\n\t\t\t\tthis.containerNode.setAttribute(\"role\", \"group\");\r\n\t\t\t}\r\n\t\t\tdomClass.add(this.contentNode, 'dijitTreeContentExpanded');\r\n\t\t\tthis._setExpando();\r\n\t\t\tthis._updateItemClasses(this.item);\r\n\r\n\t\t\tif(this == this.tree.rootNode && this.tree.showRoot){\r\n\t\t\t\tthis.tree.domNode.setAttribute(\"aria-expanded\", \"true\");\r\n\t\t\t}\r\n\r\n\t\t\tvar wipeIn = fxUtils.wipeIn({\r\n\t\t\t\tnode: this.containerNode,\r\n\t\t\t\tduration: manager.defaultDuration\r\n\t\t\t});\r\n\r\n\t\t\t// Deferred that fires when expand is complete\r\n\t\t\tvar def = (this._expandDeferred = new Deferred(function(){\r\n\t\t\t\t// Canceller\r\n\t\t\t\twipeIn.stop();\r\n\t\t\t}));\r\n\r\n\t\t\taspect.after(wipeIn, \"onEnd\", function(){\r\n\t\t\t\tdef.resolve(true);\r\n\t\t\t}, true);\r\n\r\n\t\t\twipeIn.play();\r\n\r\n\t\t\treturn shimmedPromise(def);\t\t// dojo/promise/Promise\r\n\t\t},\r\n\r\n\t\tcollapse: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCollapse this node (if it's expanded)\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise that resolves when collapse is complete\r\n\r\n\t\t\tif(this._collapseDeferred){\r\n\t\t\t\t// Node is already collapsed, or there's a collapse in progress, just return that Deferred\r\n\t\t\t\treturn shimmedPromise(this._collapseDeferred);\r\n\t\t\t}\r\n\r\n\t\t\t// cancel in progress expand operation\r\n\t\t\tif(this._expandDeferred){\r\n\t\t\t\tthis._expandDeferred.cancel();\r\n\t\t\t\tdelete this._expandDeferred;\r\n\t\t\t}\r\n\r\n\t\t\tthis.isExpanded = false;\r\n\t\t\tthis.labelNode.setAttribute(\"aria-expanded\", \"false\");\r\n\t\t\tif(this == this.tree.rootNode && this.tree.showRoot){\r\n\t\t\t\tthis.tree.domNode.setAttribute(\"aria-expanded\", \"false\");\r\n\t\t\t}\r\n\t\t\tdomClass.remove(this.contentNode, 'dijitTreeContentExpanded');\r\n\t\t\tthis._setExpando();\r\n\t\t\tthis._updateItemClasses(this.item);\r\n\r\n\t\t\tvar wipeOut = fxUtils.wipeOut({\r\n\t\t\t\tnode: this.containerNode,\r\n\t\t\t\tduration: manager.defaultDuration\r\n\t\t\t});\r\n\r\n\t\t\t// Deferred that fires when expand is complete\r\n\t\t\tvar def = (this._collapseDeferred = new Deferred(function(){\r\n\t\t\t\t// Canceller\r\n\t\t\t\twipeOut.stop();\r\n\t\t\t}));\r\n\r\n\t\t\taspect.after(wipeOut, \"onEnd\", function(){\r\n\t\t\t\tdef.resolve(true);\r\n\t\t\t}, true);\r\n\r\n\t\t\twipeOut.play();\r\n\r\n\t\t\treturn shimmedPromise(def);\t\t// dojo/promise/Promise\r\n\t\t},\r\n\r\n\t\t// indent: Integer\r\n\t\t//\t\tLevels from this node to the root node\r\n\t\tindent: 0,\r\n\r\n\t\tsetChildItems: function(/* Object[] */ items){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the child items of this node, removing/adding nodes\r\n\t\t\t//\t\tfrom current children to match specified items[] array.\r\n\t\t\t//\t\tAlso, if this.persist == true, expands any children that were previously\r\n\t\t\t//\t\topened.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise that resolves after all previously opened children\r\n\t\t\t//\t\thave been expanded again (or fires instantly if there are no such children).\r\n\r\n\t\t\tvar tree = this.tree,\r\n\t\t\t\tmodel = tree.model,\r\n\t\t\t\tdefs = [];\t// list of deferreds that need to fire before I am complete\r\n\r\n\r\n\t\t\tvar focusedChild = tree.focusedChild;\r\n\r\n\t\t\t// Orphan all my existing children.\r\n\t\t\t// If items contains some of the same items as before then we will reattach them.\r\n\t\t\t// Don't call this.removeChild() because that will collapse the tree etc.\r\n\t\t\tvar oldChildren = this.getChildren();\r\n\t\t\tarray.forEach(oldChildren, function(child){\r\n\t\t\t\t_Container.prototype.removeChild.call(this, child);\r\n\t\t\t}, this);\r\n\r\n\t\t\t// All the old children of this TreeNode are subject for destruction if\r\n\t\t\t//\t\t1) they aren't listed in the new children array (items)\r\n\t\t\t//\t\t2) they aren't immediately adopted by another node (DnD)\r\n\t\t\tthis.defer(function(){\r\n\t\t\t\tarray.forEach(oldChildren, function(node){\r\n\t\t\t\t\tif(!node._destroyed && !node.getParent()){\r\n\t\t\t\t\t\t// If node is in selection then remove it.\r\n\t\t\t\t\t\ttree.dndController.removeTreeNode(node);\r\n\r\n\t\t\t\t\t\t// Deregister mapping from item id --> this node and its descendants\r\n\t\t\t\t\t\tfunction remove(node){\r\n\t\t\t\t\t\t\tvar id = model.getIdentity(node.item),\r\n\t\t\t\t\t\t\t\tary = tree._itemNodesMap[id];\r\n\t\t\t\t\t\t\tif(ary.length == 1){\r\n\t\t\t\t\t\t\t\tdelete tree._itemNodesMap[id];\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tvar index = array.indexOf(ary, node);\r\n\t\t\t\t\t\t\t\tif(index != -1){\r\n\t\t\t\t\t\t\t\t\tary.splice(index, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tarray.forEach(node.getChildren(), remove);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tremove(node);\r\n\r\n\t\t\t\t\t\t// Remove any entries involving this node from cookie tracking expanded nodes\r\n\t\t\t\t\t\tif(tree.persist){\r\n\t\t\t\t\t\t\tvar destroyedPath = array.map(node.getTreePath(),function(item){\r\n\t\t\t\t\t\t\t\treturn tree.model.getIdentity(item);\r\n\t\t\t\t\t\t\t}).join(\"/\");\r\n\t\t\t\t\t\t\tfor(var path in tree._openedNodes){\r\n\t\t\t\t\t\t\t\tif(path.substr(0, destroyedPath.length) == destroyedPath){\r\n\t\t\t\t\t\t\t\t\tdelete tree._openedNodes[path];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttree._saveExpandedNodes();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If we've orphaned the focused node then move focus to the root node\r\n\t\t\t\t\t\tif(tree.lastFocusedChild && !dom.isDescendant(tree.lastFocusedChild, tree.domNode)){\r\n\t\t\t\t\t\t\tdelete tree.lastFocusedChild;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(focusedChild && !dom.isDescendant(focusedChild, tree.domNode)){\r\n\t\t\t\t\t\t\ttree.focus();\t// could alternately focus this node (parent of the deleted node)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// And finally we can destroy the node\r\n\t\t\t\t\t\tnode.destroyRecursive();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\r\n\t\t\tthis.state = \"Loaded\";\r\n\r\n\t\t\tif(items && items.length > 0){\r\n\t\t\t\tthis.isExpandable = true;\r\n\r\n\t\t\t\t// Create _TreeNode widget for each specified tree node, unless one already\r\n\t\t\t\t// exists and isn't being used (presumably it's from a DnD move and was recently\r\n\t\t\t\t// released\r\n\t\t\t\tarray.forEach(items, function(item){    // MARKER: REUSE NODE\r\n\t\t\t\t\tvar id = model.getIdentity(item),\r\n\t\t\t\t\t\texistingNodes = tree._itemNodesMap[id],\r\n\t\t\t\t\t\tnode;\r\n\t\t\t\t\tif(existingNodes){\r\n\t\t\t\t\t\tfor(var i = 0; i < existingNodes.length; i++){\r\n\t\t\t\t\t\t\tif(existingNodes[i] && !existingNodes[i].getParent()){\r\n\t\t\t\t\t\t\t\tnode = existingNodes[i];\r\n\t\t\t\t\t\t\t\tnode.set('indent', this.indent + 1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!node){\r\n\t\t\t\t\t\tnode = this.tree._createTreeNode({\r\n\t\t\t\t\t\t\titem: item,\r\n\t\t\t\t\t\t\ttree: tree,\r\n\t\t\t\t\t\t\tisExpandable: model.mayHaveChildren(item),\r\n\t\t\t\t\t\t\tlabel: tree.getLabel(item),\r\n\t\t\t\t\t\t\tlabelType: (tree.model && tree.model.labelType) || \"text\",\r\n\t\t\t\t\t\t\ttooltip: tree.getTooltip(item),\r\n\t\t\t\t\t\t\townerDocument: tree.ownerDocument,\r\n\t\t\t\t\t\t\tdir: tree.dir,\r\n\t\t\t\t\t\t\tlang: tree.lang,\r\n\t\t\t\t\t\t\ttextDir: tree.textDir,\r\n\t\t\t\t\t\t\tindent: this.indent + 1\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(existingNodes){\r\n\t\t\t\t\t\t\texistingNodes.push(node);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttree._itemNodesMap[id] = [node];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.addChild(node);\r\n\r\n\t\t\t\t\t// If node was previously opened then open it again now (this may trigger\r\n\t\t\t\t\t// more data store accesses, recursively)\r\n\t\t\t\t\tif(this.tree.autoExpand || this.tree._state(node)){\r\n\t\t\t\t\t\tdefs.push(tree._expandNode(node));\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\t// note that updateLayout() needs to be called on each child after\r\n\t\t\t\t// _all_ the children exist\r\n\t\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\t\tchild._updateLayout();\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tthis.isExpandable = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._setExpando){\r\n\t\t\t\t// change expando to/from dot or + icon, as appropriate\r\n\t\t\t\tthis._setExpando(false);\r\n\t\t\t}\r\n\r\n\t\t\t// Set leaf icon or folder icon, as appropriate\r\n\t\t\tthis._updateItemClasses(this.item);\r\n\r\n\t\t\tvar def = all(defs);\r\n\t\t\tthis.tree._startPaint(def);\t\t// to reset TreeNode widths after an item is added/removed from the Tree\r\n\t\t\treturn shimmedPromise(def);\t\t// dojo/promise/Promise\r\n\t\t},\r\n\r\n\t\tgetTreePath: function(){\r\n\t\t\tvar node = this;\r\n\t\t\tvar path = [];\r\n\t\t\twhile(node && node !== this.tree.rootNode){\r\n\t\t\t\tpath.unshift(node.item);\r\n\t\t\t\tnode = node.getParent();\r\n\t\t\t}\r\n\t\t\tpath.unshift(this.tree.rootNode.item);\r\n\r\n\t\t\treturn path;\r\n\t\t},\r\n\r\n\t\tgetIdentity: function(){\r\n\t\t\treturn this.tree.model.getIdentity(this.item);\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/* treeNode */ node){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tif(children.length == 0){\r\n\t\t\t\tthis.isExpandable = false;\r\n\t\t\t\tthis.collapse();\r\n\t\t\t}\r\n\r\n\t\t\tarray.forEach(children, function(child){\r\n\t\t\t\tchild._updateLayout();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tmakeExpandable: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tif this node wasn't already showing the expando node,\r\n\t\t\t//\t\tturn it into one and call _setExpando()\r\n\r\n\t\t\t// TODO: hmm this isn't called from anywhere, maybe should remove it for 2.0\r\n\r\n\t\t\tthis.isExpandable = true;\r\n\t\t\tthis._setExpando(false);\r\n\t\t},\r\n\r\n\t\tsetSelected: function(/*Boolean*/ selected){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA Tree has a (single) currently selected node.\r\n\t\t\t//\t\tMark that this node is/isn't that currently selected node.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIn particular, setting a node as selected involves setting tabIndex\r\n\t\t\t//\t\tso that when user tabs to the tree, focus will go to that node (only).\r\n\t\t\tthis.labelNode.setAttribute(\"aria-selected\", selected ? \"true\" : \"false\");\r\n\t\t\tdomClass.toggle(this.rowNode, \"dijitTreeRowSelected\", selected);\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\tfocus.focus(this.focusNode);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tTreeNode.extend({\r\n\t\t\t_setTextDirAttr: function(textDir){\r\n\t\t\t\tif(textDir && ((this.textDir != textDir) || !this._created)){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tthis.applyTextDir(this.labelNode);\r\n\t\t\t\t\tarray.forEach(this.getChildren(), function(childNode){\r\n\t\t\t\t\t\tchildNode.set(\"textDir\", textDir);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar Tree = declare(\"dijit.Tree\", [_Widget, _KeyNavMixin, _TemplatedMixin, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tThis widget displays hierarchical data from a store.\r\n\r\n\t\tbaseClass: \"dijitTree\",\r\n\r\n\t\t// store: [deprecated] String|dojo/data/Store\r\n\t\t//\t\tDeprecated.  Use \"model\" parameter instead.\r\n\t\t//\t\tThe store to get data to display in the tree.\r\n\t\tstore: null,\r\n\r\n\t\t// model: [const] dijit/tree/model\r\n\t\t//\t\tInterface to read tree data, get notifications of changes to tree data,\r\n\t\t//\t\tand for handling drop operations (i.e drag and drop onto the tree)\r\n\t\tmodel: null,\r\n\r\n\t\t// query: [deprecated] anything\r\n\t\t//\t\tDeprecated.  User should specify query to the model directly instead.\r\n\t\t//\t\tSpecifies datastore query to return the root item or top items for the tree.\r\n\t\tquery: null,\r\n\r\n\t\t// label: [deprecated] String\r\n\t\t//\t\tDeprecated.  Use dijit/tree/ForestStoreModel directly instead.\r\n\t\t//\t\tUsed in conjunction with query parameter.\r\n\t\t//\t\tIf a query is specified (rather than a root node id), and a label is also specified,\r\n\t\t//\t\tthen a fake root node is created and displayed, with this label.\r\n\t\tlabel: \"\",\r\n\r\n\t\t// showRoot: [const] Boolean\r\n\t\t//\t\tShould the root node be displayed, or hidden?\r\n\t\tshowRoot: true,\r\n\r\n\t\t// childrenAttr: [deprecated] String[]\r\n\t\t//\t\tDeprecated.   This information should be specified in the model.\r\n\t\t//\t\tOne ore more attributes that holds children of a tree node\r\n\t\tchildrenAttr: [\"children\"],\r\n\r\n\t\t// paths: String[][] or Item[][]\r\n\t\t//\t\tFull paths from rootNode to selected nodes expressed as array of items or array of ids.\r\n\t\t//\t\tSince setting the paths may be asynchronous (because of waiting on dojo.data), set(\"paths\", ...)\r\n\t\t//\t\treturns a Promise to indicate when the set is complete.\r\n\t\tpaths: [],\r\n\r\n\t\t// path: String[] or Item[]\r\n\t\t//\t\tBackward compatible singular variant of paths.\r\n\t\tpath: [],\r\n\r\n\t\t// selectedItems: [readonly] Item[]\r\n\t\t//\t\tThe currently selected items in this tree.\r\n\t\t//\t\tThis property can only be set (via set('selectedItems', ...)) when that item is already\r\n\t\t//\t\tvisible in the tree.   (I.e. the tree has already been expanded to show that node.)\r\n\t\t//\t\tShould generally use `paths` attribute to set the selected items instead.\r\n\t\tselectedItems: null,\r\n\r\n\t\t// selectedItem: [readonly] Item\r\n\t\t//\t\tBackward compatible singular variant of selectedItems.\r\n\t\tselectedItem: null,\r\n\r\n\t\t// openOnClick: Boolean\r\n\t\t//\t\tIf true, clicking a folder node's label will open it, rather than calling onClick()\r\n\t\topenOnClick: false,\r\n\r\n\t\t// openOnDblClick: Boolean\r\n\t\t//\t\tIf true, double-clicking a folder node's label will open it, rather than calling onDblClick()\r\n\t\topenOnDblClick: false,\r\n\r\n\t\ttemplateString: treeTemplate,\r\n\r\n\t\t// persist: Boolean\r\n\t\t//\t\tEnables/disables use of cookies for state saving.\r\n\t\tpersist: false,\r\n\r\n\t\t// autoExpand: Boolean\r\n\t\t//\t\tFully expand the tree on load.   Overrides `persist`.\r\n\t\tautoExpand: false,\r\n\r\n\t\t// dndController: [protected] Function|String\r\n\t\t//\t\tClass to use as as the dnd controller.  Specifying this class enables DnD.\r\n\t\t//\t\tGenerally you should specify this as dijit/tree/dndSource.\r\n\t\t//\t\tSetting of dijit/tree/_dndSelector handles selection only (no actual DnD).\r\n\t\tdndController: _dndSelector,\r\n\r\n\t\t// parameters to pull off of the tree and pass on to the dndController as its params\r\n\t\tdndParams: [\"onDndDrop\", \"itemCreator\", \"onDndCancel\", \"checkAcceptance\", \"checkItemAcceptance\", \"dragThreshold\", \"betweenThreshold\"],\r\n\r\n\t\t//declare the above items so they can be pulled from the tree's markup\r\n\r\n\t\t// onDndDrop: [protected] Function\r\n\t\t//\t\tParameter to dndController, see `dijit/tree/dndSource.onDndDrop()`.\r\n\t\t//\t\tGenerally this doesn't need to be set.\r\n\t\tonDndDrop: null,\r\n\r\n\t\titemCreator: null,\r\n\t\t/*=====\r\n\t\titemCreator: function(nodes, target, source){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns objects passed to `Tree.model.newItem()` based on DnD nodes\r\n\t\t\t//\t\tdropped onto the tree.   Developer must override this method to enable\r\n\t\t\t//\t\tdropping from external sources onto this Tree, unless the Tree.model's items\r\n\t\t\t//\t\thappen to look like {id: 123, name: \"Apple\" } with no other attributes.\r\n\t\t\t//\r\n\t\t\t//\t\tFor each node in nodes[], which came from source, create a hash of name/value\r\n\t\t\t//\t\tpairs to be passed to Tree.model.newItem().  Returns array of those hashes.\r\n\t\t\t// nodes: DomNode[]\r\n\t\t\t//\t\tThe DOMNodes dragged from the source container\r\n\t\t\t// target: DomNode\r\n\t\t\t//\t\tThe target TreeNode.rowNode\r\n\t\t\t// source: dojo/dnd/Source\r\n\t\t\t//\t\tThe source container the nodes were dragged from, perhaps another Tree or a plain dojo/dnd/Source\r\n\t\t\t// returns: Object[]\r\n\t\t\t//\t\tArray of name/value hashes for each new item to be added to the Tree, like:\r\n\t\t\t// |\t[\r\n\t\t\t// |\t\t{ id: 123, label: \"apple\", foo: \"bar\" },\r\n\t\t\t// |\t\t{ id: 456, label: \"pear\", zaz: \"bam\" }\r\n\t\t\t// |\t]\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn [{}];\r\n\t\t},\r\n\t\t=====*/\r\n\r\n\t\t// onDndCancel: [protected] Function\r\n\t\t//\t\tParameter to dndController, see `dijit/tree/dndSource.onDndCancel()`.\r\n\t\t//\t\tGenerally this doesn't need to be set.\r\n\t\tonDndCancel: null,\r\n\r\n\t\t/*=====\r\n\t\tcheckAcceptance: function(source, nodes){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChecks if the Tree itself can accept nodes from this source\r\n\t\t\t// source: dijit/tree/dndSource\r\n\t\t\t//\t\tThe source which provides items\r\n\t\t\t// nodes: DOMNode[]\r\n\t\t\t//\t\tArray of DOM nodes corresponding to nodes being dropped, dijitTreeRow nodes if\r\n\t\t\t//\t\tsource is a dijit/Tree.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn true;\t// Boolean\r\n\t\t},\r\n\t\t=====*/\r\n\t\tcheckAcceptance: null,\r\n\r\n\t\t/*=====\r\n\t\tcheckItemAcceptance: function(target, source, position){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function to be overridden if one wants to check for the ability to drop at the node/item level\r\n\t\t\t// description:\r\n\t\t\t//\t\tIn the base case, this is called to check if target can become a child of source.\r\n\t\t\t//\t\tWhen betweenThreshold is set, position=\"before\" or \"after\" means that we\r\n\t\t\t//\t\tare asking if the source node can be dropped before/after the target node.\r\n\t\t\t// target: DOMNode\r\n\t\t\t//\t\tThe dijitTreeRoot DOM node inside of the TreeNode that we are dropping on to\r\n\t\t\t//\t\tUse registry.getEnclosingWidget(target) to get the TreeNode.\r\n\t\t\t// source: dijit/tree/dndSource\r\n\t\t\t//\t\tThe (set of) nodes we are dropping\r\n\t\t\t// position: String\r\n\t\t\t//\t\t\"over\", \"before\", or \"after\"\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn true;\t// Boolean\r\n\t\t},\r\n\t\t=====*/\r\n\t\tcheckItemAcceptance: null,\r\n\r\n\t\t// dragThreshold: Integer\r\n\t\t//\t\tNumber of pixels mouse moves before it's considered the start of a drag operation\r\n\t\tdragThreshold: 5,\r\n\r\n\t\t// betweenThreshold: Integer\r\n\t\t//\t\tSet to a positive value to allow drag and drop \"between\" nodes.\r\n\t\t//\r\n\t\t//\t\tIf during DnD mouse is over a (target) node but less than betweenThreshold\r\n\t\t//\t\tpixels from the bottom edge, dropping the the dragged node will make it\r\n\t\t//\t\tthe next sibling of the target node, rather than the child.\r\n\t\t//\r\n\t\t//\t\tSimilarly, if mouse is over a target node but less that betweenThreshold\r\n\t\t//\t\tpixels from the top edge, dropping the dragged node will make it\r\n\t\t//\t\tthe target node's previous sibling rather than the target node's child.\r\n\t\tbetweenThreshold: 0,\r\n\r\n\t\t// _nodePixelIndent: Integer\r\n\t\t//\t\tNumber of pixels to indent tree nodes (relative to parent node).\r\n\t\t//\t\tDefault is 19 but can be overridden by setting CSS class dijitTreeIndent\r\n\t\t//\t\tand calling resize() or startup() on tree after it's in the DOM.\r\n\t\t_nodePixelIndent: 19,\r\n\r\n\t\t_publish: function(/*String*/ topicName, /*Object*/ message){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPublish a message for this widget/topic\r\n\t\t\ttopic.publish(this.id, lang.mixin({tree: this, event: topicName}, message || {}));\t// publish\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.tree = this;\r\n\r\n\t\t\tif(this.autoExpand){\r\n\t\t\t\t// There's little point in saving opened/closed state of nodes for a Tree\r\n\t\t\t\t// that initially opens all it's nodes.\r\n\t\t\t\tthis.persist = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis._itemNodesMap = {};\r\n\r\n\t\t\tif(!this.cookieName && this.id){\r\n\t\t\t\tthis.cookieName = this.id + \"SaveStateCookie\";\r\n\t\t\t}\r\n\r\n\t\t\t// Deferred that resolves when all the children have loaded.\r\n\t\t\tthis.expandChildrenDeferred = new Deferred();\r\n\r\n\t\t\t// Promise that resolves when all pending operations complete.\r\n\t\t\tthis.pendingCommandsPromise = this.expandChildrenDeferred.promise;\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis._initState();\r\n\r\n\t\t\t// Catch events on TreeNodes\r\n\t\t\tvar self = this;\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.containerNode, on.selector(\".dijitTreeNode\", touch.enter), function(evt){\r\n\t\t\t\t\tself._onNodeMouseEnter(registry.byNode(this), evt);\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.containerNode, on.selector(\".dijitTreeNode\", touch.leave), function(evt){\r\n\t\t\t\t\tself._onNodeMouseLeave(registry.byNode(this), evt);\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.containerNode, on.selector(\".dijitTreeRow\", a11yclick.press), function(evt){\r\n\t\t\t\t\tself._onNodePress(registry.getEnclosingWidget(this), evt);\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.containerNode, on.selector(\".dijitTreeRow\", a11yclick), function(evt){\r\n\t\t\t\t\tself._onClick(registry.getEnclosingWidget(this), evt);\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.containerNode, on.selector(\".dijitTreeRow\", \"dblclick\"), function(evt){\r\n\t\t\t\t\tself._onDblClick(registry.getEnclosingWidget(this), evt);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\t// Create glue between store and Tree, if not specified directly by user\r\n\t\t\tif(!this.model){\r\n\t\t\t\tthis._store2model();\r\n\t\t\t}\r\n\r\n\t\t\t// monitor changes to items\r\n\t\t\tthis.own(\r\n\t\t\t\taspect.after(this.model, \"onChange\", lang.hitch(this, \"_onItemChange\"), true),\r\n\t\t\t\taspect.after(this.model, \"onChildrenChange\", lang.hitch(this, \"_onItemChildrenChange\"), true),\r\n\t\t\t\taspect.after(this.model, \"onDelete\", lang.hitch(this, \"_onItemDelete\"), true)\r\n\t\t\t);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this.dndController){\r\n\t\t\t\t// TODO: remove string support in 2.0.\r\n\t\t\t\tif(lang.isString(this.dndController)){\r\n\t\t\t\t\tthis.dndController = lang.getObject(this.dndController);\r\n\t\t\t\t}\r\n\t\t\t\tvar params = {};\r\n\t\t\t\tfor(var i = 0; i < this.dndParams.length; i++){\r\n\t\t\t\t\tif(this[this.dndParams[i]]){\r\n\t\t\t\t\t\tparams[this.dndParams[i]] = this[this.dndParams[i]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.dndController = new this.dndController(this, params);\r\n\t\t\t}\r\n\r\n\t\t\tthis._load();\r\n\r\n\t\t\t// onLoadDeferred should fire when all commands that are part of initialization have completed.\r\n\t\t\t// It will include all the set(\"paths\", ...) commands that happen during initialization.\r\n\t\t\tthis.onLoadDeferred = shimmedPromise(this.pendingCommandsPromise);\r\n\r\n\t\t\tthis.onLoadDeferred.then(lang.hitch(this, \"onLoad\"));\r\n\t\t},\r\n\r\n\t\t_store2model: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser specified a store&query rather than model, so create model from store/query\r\n\t\t\tthis._v10Compat = true;\r\n\t\t\tkernel.deprecated(\"Tree: from version 2.0, should specify a model object rather than a store/query\");\r\n\r\n\t\t\tvar modelParams = {\r\n\t\t\t\tid: this.id + \"_ForestStoreModel\",\r\n\t\t\t\tstore: this.store,\r\n\t\t\t\tquery: this.query,\r\n\t\t\t\tchildrenAttrs: this.childrenAttr\r\n\t\t\t};\r\n\r\n\t\t\t// Only override the model's mayHaveChildren() method if the user has specified an override\r\n\t\t\tif(this.params.mayHaveChildren){\r\n\t\t\t\tmodelParams.mayHaveChildren = lang.hitch(this, \"mayHaveChildren\");\r\n\t\t\t}\r\n\r\n\t\t\tif(this.params.getItemChildren){\r\n\t\t\t\tmodelParams.getChildren = lang.hitch(this, function(item, onComplete, onError){\r\n\t\t\t\t\tthis.getItemChildren((this._v10Compat && item === this.model.root) ? null : item, onComplete, onError);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.model = new ForestStoreModel(modelParams);\r\n\r\n\t\t\t// For backwards compatibility, the visibility of the root node is controlled by\r\n\t\t\t// whether or not the user has specified a label\r\n\t\t\tthis.showRoot = Boolean(this.label);\r\n\t\t},\r\n\r\n\t\tonLoad: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when tree finishes loading and expanding.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf persist == true the loading may encompass many levels of fetches\r\n\t\t\t//\t\tfrom the data store, each asynchronous.   Waits for all to finish.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_load: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitial load of the tree.\r\n\t\t\t//\t\tLoad root node (possibly hidden) and it's children.\r\n\t\t\tthis.model.getRoot(\r\n\t\t\t\tlang.hitch(this, function(item){\r\n\t\t\t\t\tvar rn = (this.rootNode = this.tree._createTreeNode({\r\n\t\t\t\t\t\titem: item,\r\n\t\t\t\t\t\ttree: this,\r\n\t\t\t\t\t\tisExpandable: true,\r\n\t\t\t\t\t\tlabel: this.label || this.getLabel(item),\r\n\t\t\t\t\t\tlabelType: this.model.labelType || \"text\",\r\n\t\t\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\t\t\tindent: this.showRoot ? 0 : -1\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\tif(!this.showRoot){\r\n\t\t\t\t\t\trn.rowNode.style.display = \"none\";\r\n\t\t\t\t\t\t// if root is not visible, move tree role to the invisible\r\n\t\t\t\t\t\t// root node's containerNode, see #12135\r\n\t\t\t\t\t\tthis.domNode.setAttribute(\"role\", \"presentation\");\r\n\t\t\t\t\t\tthis.domNode.removeAttribute(\"aria-expanded\");\r\n\t\t\t\t\t\tthis.domNode.removeAttribute(\"aria-multiselectable\");\r\n\r\n\t\t\t\t\t\t// move the aria-label or aria-labelledby to the element with the role\r\n\t\t\t\t\t\tif(this[\"aria-label\"]){\r\n\t\t\t\t\t\t\trn.containerNode.setAttribute(\"aria-label\", this[\"aria-label\"]);\r\n\t\t\t\t\t\t\tthis.domNode.removeAttribute(\"aria-label\");\r\n\t\t\t\t\t\t}else if(this[\"aria-labelledby\"]){\r\n\t\t\t\t\t\t\trn.containerNode.setAttribute(\"aria-labelledby\", this[\"aria-labelledby\"]);\r\n\t\t\t\t\t\t\tthis.domNode.removeAttribute(\"aria-labelledby\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trn.labelNode.setAttribute(\"role\", \"presentation\");\r\n\t\t\t\t\t\trn.containerNode.setAttribute(\"role\", \"tree\");\r\n\t\t\t\t\t\trn.containerNode.setAttribute(\"aria-expanded\", \"true\");\r\n\t\t\t\t\t\trn.containerNode.setAttribute(\"aria-multiselectable\", !this.dndController.singular);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.domNode.setAttribute(\"aria-multiselectable\", !this.dndController.singular);\r\n\t\t\t\t\t\tthis.rootLoadingIndicator.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.containerNode.appendChild(rn.domNode);\r\n\t\t\t\t\tvar identity = this.model.getIdentity(item);\r\n\t\t\t\t\tif(this._itemNodesMap[identity]){\r\n\t\t\t\t\t\tthis._itemNodesMap[identity].push(rn);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._itemNodesMap[identity] = [rn];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trn._updateLayout();\t\t// sets \"dijitTreeIsRoot\" CSS classname\r\n\r\n\t\t\t\t\t// Load top level children, and if persist==true, all nodes that were previously opened\r\n\t\t\t\t\tthis._expandNode(rn).then(lang.hitch(this, function(){\r\n\t\t\t\t\t\t// Then, select the nodes specified by params.paths[], assuming Tree hasn't been deleted.\r\n\t\t\t\t\t\tif(!this._destroyed){\r\n\t\t\t\t\t\t\tthis.rootLoadingIndicator.style.display = \"none\";\r\n\t\t\t\t\t\t\tthis.expandChildrenDeferred.resolve(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t}),\r\n\t\t\t\tlang.hitch(this, function(err){\r\n\t\t\t\t\tconsole.error(this, \": error loading root: \", err);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tgetNodesByItem: function(/*Item or id*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns all tree nodes that refer to an item\r\n\t\t\t// returns:\r\n\t\t\t//\t\tArray of tree nodes that refer to passed item\r\n\r\n\t\t\tif(!item){\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\tvar identity = lang.isString(item) ? item : this.model.getIdentity(item);\r\n\t\t\t// return a copy so widget don't get messed up by changes to returned array\r\n\t\t\treturn [].concat(this._itemNodesMap[identity]);\r\n\t\t},\r\n\r\n\t\t_setSelectedItemAttr: function(/*Item or id*/ item){\r\n\t\t\tthis.set('selectedItems', [item]);\r\n\t\t},\r\n\r\n\t\t_setSelectedItemsAttr: function(/*Items or ids*/ items){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSelect tree nodes related to passed items.\r\n\t\t\t//\t\tWARNING: if model use multi-parented items or desired tree node isn't already loaded\r\n\t\t\t//\t\tbehavior is undefined. Use set('paths', ...) instead.\r\n\t\t\tvar tree = this;\r\n\t\t\treturn this.pendingCommandsPromise = this.pendingCommandsPromise.always(lang.hitch(this, function(){\r\n\t\t\t\tvar identities = array.map(items, function(item){\r\n\t\t\t\t\treturn (!item || lang.isString(item)) ? item : tree.model.getIdentity(item);\r\n\t\t\t\t});\r\n\t\t\t\tvar nodes = [];\r\n\t\t\t\tarray.forEach(identities, function(id){\r\n\t\t\t\t\tnodes = nodes.concat(tree._itemNodesMap[id] || []);\r\n\t\t\t\t});\r\n\t\t\t\tthis.set('selectedNodes', nodes);\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_setPathAttr: function(/*Item[]|String[]*/ path){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSingular variant of _setPathsAttr\r\n\t\t\tif(path.length){\r\n\t\t\t\treturn shimmedPromise(this.set(\"paths\", [path]).then(function(paths){ return paths[0]; }));\r\n\t\t\t}else{\r\n\t\t\t\t// Empty list is interpreted as \"select nothing\"\r\n\t\t\t\treturn shimmedPromise(this.set(\"paths\", []).then(function(paths){ return paths[0]; }));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setPathsAttr: function(/*Item[][]|String[][]*/ paths){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSelect the tree nodes identified by passed paths.\r\n\t\t\t// paths:\r\n\t\t\t//\t\tArray of arrays of items or item id's\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise to indicate when the set is complete\r\n\r\n\t\t\tvar tree = this;\r\n\r\n\t\t\tfunction selectPath(path, nodes){\r\n\t\t\t\t// Traverse path, returning Promise for node at the end of the path.\r\n\t\t\t\t// The next path component should be among \"nodes\".\r\n\t\t\t\tvar nextPath = path.shift();\r\n\t\t\t\tvar nextNode = array.filter(nodes, function(node){\r\n\t\t\t\t\treturn node.getIdentity() == nextPath;\r\n\t\t\t\t})[0];\r\n\t\t\t\tif(!!nextNode){\r\n\t\t\t\t\tif(path.length){\r\n\t\t\t\t\t\treturn tree._expandNode(nextNode).then(function(){\r\n\t\t\t\t\t\t\treturn selectPath(path, nextNode.getChildren());\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// Successfully reached the end of this path\r\n\t\t\t\t\t\treturn nextNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Tree.PathError(\"Could not expand path at \" + nextPath);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let any previous set(\"path\", ...) commands complete before this one starts.\r\n\t\t\t// TODO for 2.0: make the user do this wait themselves?\r\n\t\t\treturn shimmedPromise(this.pendingCommandsPromise = this.pendingCommandsPromise.always(function(){\r\n\t\t\t\t// We may need to wait for some nodes to expand, so setting\r\n\t\t\t\t// each path will involve a Deferred. We bring those deferreds\r\n\t\t\t\t// together with a dojo/promise/all.\r\n\t\t\t\treturn all(array.map(paths, function(path){\r\n\t\t\t\t\t// normalize path to use identity\r\n\t\t\t\t\tpath = array.map(path, function(item){\r\n\t\t\t\t\t\treturn lang.isString(item) ? item : tree.model.getIdentity(item);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(path.length){\r\n\t\t\t\t\t\treturn selectPath(path, [tree.rootNode]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthrow new Tree.PathError(\"Empty path\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}).then(function setNodes(newNodes){\r\n\t\t\t\t// After all expansion is finished, set the selection to last element from each path\r\n\t\t\t\ttree.set(\"selectedNodes\", newNodes);\r\n\t\t\t\treturn tree.paths;\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_setSelectedNodeAttr: function(node){\r\n\t\t\tthis.set('selectedNodes', [node]);\r\n\t\t},\r\n\t\t_setSelectedNodesAttr: function(nodes){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMarks the specified TreeNodes as selected.\r\n\t\t\t// nodes: TreeNode[]\r\n\t\t\t//\t\tTreeNodes to mark.\r\n\t\t\tthis.dndController.setSelection(nodes);\r\n\t\t},\r\n\r\n\r\n\t\texpandAll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tExpand all nodes in the tree\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise that resolves when all nodes have expanded\r\n\r\n\t\t\tvar _this = this;\r\n\r\n\t\t\tfunction expand(node){\r\n\t\t\t\t// Expand the node\r\n\t\t\t\treturn _this._expandNode(node).then(function(){\r\n\t\t\t\t\t// When node has expanded, call expand() recursively on each non-leaf child\r\n\t\t\t\t\tvar childBranches = array.filter(node.getChildren() || [], function(node){\r\n\t\t\t\t\t\treturn node.isExpandable;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// And when all those recursive calls finish, signal that I'm finished\r\n\t\t\t\t\treturn all(array.map(childBranches, expand));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn shimmedPromise(expand(this.rootNode));\r\n\t\t},\r\n\r\n\t\tcollapseAll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCollapse all nodes in the tree\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise that resolves when all nodes have collapsed\r\n\r\n\t\t\tvar _this = this;\r\n\r\n\t\t\tfunction collapse(node){\r\n\t\t\t\t// Collapse children first\r\n\t\t\t\tvar childBranches = array.filter(node.getChildren() || [], function(node){\r\n\t\t\t\t\t\treturn node.isExpandable;\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tdefs = all(array.map(childBranches, collapse));\r\n\r\n\t\t\t\t// And when all those recursive calls finish, collapse myself, unless I'm the invisible root node,\r\n\t\t\t\t// in which case collapseAll() is finished\r\n\t\t\t\tif(!node.isExpanded || (node == _this.rootNode && !_this.showRoot)){\r\n\t\t\t\t\treturn defs;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// When node has collapsed, signal that call is finished\r\n\t\t\t\t\treturn defs.then(function(){\r\n\t\t\t\t\t\treturn _this._collapseNode(node);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn shimmedPromise(collapse(this.rootNode));\r\n\t\t},\r\n\r\n\t\t////////////// Data store related functions //////////////////////\r\n\t\t// These just get passed to the model; they are here for back-compat\r\n\r\n\t\tmayHaveChildren: function(/*dojo/data/Item*/ /*===== item =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   This should be specified on the model itself.\r\n\t\t\t//\r\n\t\t\t//\t\tOverridable function to tell if an item has or may have children.\r\n\t\t\t//\t\tControls whether or not +/- expando icon is shown.\r\n\t\t\t//\t\t(For efficiency reasons we may not want to check if an element actually\r\n\t\t\t//\t\thas children until user clicks the expando node)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t},\r\n\r\n\t\tgetItemChildren: function(/*===== parentItem, onComplete =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   This should be specified on the model itself.\r\n\t\t\t//\r\n\t\t\t//\t\tOverridable function that return array of child items of given parent item,\r\n\t\t\t//\t\tor if parentItem==null then return top items in tree\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t},\r\n\r\n\t\t///////////////////////////////////////////////////////\r\n\t\t// Functions for converting an item to a TreeNode\r\n\t\tgetLabel: function(/*dojo/data/Item*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to get the label for a tree node (given the item)\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn this.model.getLabel(item);\t// String\r\n\t\t},\r\n\r\n\t\tgetIconClass: function(/*dojo/data/Item*/ item, /*Boolean*/ opened){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to return CSS class name to display icon\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn (!item || this.model.mayHaveChildren(item)) ? (opened ? \"dijitFolderOpened\" : \"dijitFolderClosed\") : \"dijitLeaf\"\r\n\t\t},\r\n\r\n\t\tgetLabelClass: function(/*===== item, opened =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to return CSS class name to display label\r\n\t\t\t// item: dojo/data/Item\r\n\t\t\t// opened: Boolean\r\n\t\t\t// returns: String\r\n\t\t\t//\t\tCSS class name\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\tgetRowClass: function(/*===== item, opened =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to return CSS class name to display row\r\n\t\t\t// item: dojo/data/Item\r\n\t\t\t// opened: Boolean\r\n\t\t\t// returns: String\r\n\t\t\t//\t\tCSS class name\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\tgetIconStyle: function(/*===== item, opened =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to return CSS styles to display icon\r\n\t\t\t// item: dojo/data/Item\r\n\t\t\t// opened: Boolean\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tObject suitable for input to dojo.style() like {backgroundImage: \"url(...)\"}\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\tgetLabelStyle: function(/*===== item, opened =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to return CSS styles to display label\r\n\t\t\t// item: dojo/data/Item\r\n\t\t\t// opened: Boolean\r\n\t\t\t// returns:\r\n\t\t\t//\t\tObject suitable for input to dojo.style() like {color: \"red\", background: \"green\"}\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\tgetRowStyle: function(/*===== item, opened =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to return CSS styles to display row\r\n\t\t\t// item: dojo/data/Item\r\n\t\t\t// opened: Boolean\r\n\t\t\t// returns:\r\n\t\t\t//\t\tObject suitable for input to dojo.style() like {background-color: \"#bbb\"}\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t},\r\n\r\n\t\tgetTooltip: function(/*dojo/data/Item*/ /*===== item =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to get the tooltip for a tree node (given the item)\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn \"\";\t// String\r\n\t\t},\r\n\r\n\t\t/////////// Keyboard and Mouse handlers ////////////////////\r\n\r\n\r\n\t\t_onDownArrow: function(/*Event*/ evt, /*TreeNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdown arrow pressed; get next visible node, set focus there\r\n\r\n\t\t\tvar nextNode = this._getNext(node);\r\n\t\t\tif(nextNode && nextNode.isTreeNode){\r\n\t\t\t\tthis.focusNode(nextNode);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onUpArrow: function(/*Event*/ evt, /*TreeNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUp arrow pressed; move to previous visible node\r\n\r\n\t\t\t// if younger siblings\r\n\t\t\tvar previousSibling = node.getPreviousSibling();\r\n\t\t\tif(previousSibling){\r\n\t\t\t\tnode = previousSibling;\r\n\t\t\t\t// if the previous node is expanded, dive in deep\r\n\t\t\t\twhile(node.isExpandable && node.isExpanded && node.hasChildren()){\r\n\t\t\t\t\t// move to the last child\r\n\t\t\t\t\tvar children = node.getChildren();\r\n\t\t\t\t\tnode = children[children.length - 1];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// if this is the first child, return the parent\r\n\t\t\t\t// unless the parent is the root of a tree with a hidden root\r\n\t\t\t\tvar parent = node.getParent();\r\n\t\t\t\tif(!(!this.showRoot && parent === this.rootNode)){\r\n\t\t\t\t\tnode = parent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(node && node.isTreeNode){\r\n\t\t\t\tthis.focusNode(node);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onRightArrow: function(/*Event*/ evt, /*TreeNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRight arrow pressed; go to child node\r\n\r\n\t\t\t// if not expanded, expand, else move to 1st child\r\n\t\t\tif(node.isExpandable && !node.isExpanded){\r\n\t\t\t\tthis._expandNode(node);\r\n\t\t\t}else if(node.hasChildren()){\r\n\t\t\t\tnode = node.getChildren()[0];\r\n\t\t\t\tif(node && node.isTreeNode){\r\n\t\t\t\t\tthis.focusNode(node);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onLeftArrow: function(/*Event*/ evt, /*TreeNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLeft arrow pressed.\r\n\t\t\t//\t\tIf not collapsed, collapse, else move to parent.\r\n\r\n\t\t\tif(node.isExpandable && node.isExpanded){\r\n\t\t\t\tthis._collapseNode(node);\r\n\t\t\t}else{\r\n\t\t\t\tvar parent = node.getParent();\r\n\t\t\t\tif(parent && parent.isTreeNode && !(!this.showRoot && parent === this.rootNode)){\r\n\t\t\t\t\tthis.focusNode(parent);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocusLastChild: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEnd key pressed; go to last visible node.\r\n\r\n\t\t\tvar node = this._getLast();\r\n\t\t\tif(node && node.isTreeNode){\r\n\t\t\t\tthis.focusNode(node);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getFirst: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the first child.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\treturn this.showRoot ? this.rootNode : this.rootNode.getChildren()[0];\r\n\t\t},\r\n\r\n\t\t_getLast: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the last descendant.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar node = this.rootNode;\r\n\t\t\twhile(node.isExpanded){\r\n\t\t\t\tvar c = node.getChildren();\r\n\t\t\t\tif(!c.length){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tnode = c[c.length - 1];\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t},\r\n\r\n\t\t// Tree only searches forward so dir parameter is unused\r\n\t\t_getNext: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the next descendant, compared to \"child\".\r\n\t\t\t// node: Widget\r\n\t\t\t//\t\tThe current widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\r\n\t\t\tif(node.isExpandable && node.isExpanded && node.hasChildren()){\r\n\t\t\t\t// if this is an expanded node, get the first child\r\n\t\t\t\treturn node.getChildren()[0];\t\t// TreeNode\r\n\t\t\t}else{\r\n\t\t\t\t// find a parent node with a sibling\r\n\t\t\t\twhile(node && node.isTreeNode){\r\n\t\t\t\t\tvar returnNode = node.getNextSibling();\r\n\t\t\t\t\tif(returnNode){\r\n\t\t\t\t\t\treturn returnNode;\t\t// TreeNode\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode = node.getParent();\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Implement _KeyNavContainer.childSelector, to identify which nodes are navigable\r\n\t\tchildSelector: \".dijitTreeRow\",\r\n\r\n\t\tisExpandoNode: function(node, widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcheck whether a dom node is the expandoNode for a particular TreeNode widget\r\n\t\t\treturn dom.isDescendant(node, widget.expandoNode) || dom.isDescendant(node, widget.expandoNodeText);\r\n\t\t},\r\n\r\n\t\t_onNodePress: function(/*TreeNode*/ nodeWidget, /*Event*/ e){\r\n\t\t\t// Touching a node should focus it, even if you touch the expando node or the edges rather than the label.\r\n\t\t\t// Especially important to avoid _KeyNavMixin._onContainerFocus() causing the previously focused TreeNode\r\n\t\t\t// to get focus\r\n\t\t\tthis.focusNode(nodeWidget);\r\n\t\t},\r\n\r\n\t\t__click: function(/*TreeNode*/ nodeWidget, /*Event*/ e, /*Boolean*/doOpen, /*String*/func){\r\n\t\t\tvar domElement = e.target,\r\n\t\t\t\tisExpandoClick = this.isExpandoNode(domElement, nodeWidget);\r\n\r\n\t\t\tif(nodeWidget.isExpandable && (doOpen || isExpandoClick)){\r\n\t\t\t\t// expando node was clicked, or label of a folder node was clicked; open it\r\n\t\t\t\tthis._onExpandoClick({node: nodeWidget});\r\n\t\t\t}else{\r\n\t\t\t\tthis._publish(\"execute\", { item: nodeWidget.item, node: nodeWidget, evt: e });\r\n\t\t\t\tthis[func](nodeWidget.item, nodeWidget, e);\r\n\t\t\t\tthis.focusNode(nodeWidget);\r\n\t\t\t}\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\t\t_onClick: function(/*TreeNode*/ nodeWidget, /*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTranslates click events into commands for the controller to process\r\n\t\t\tthis.__click(nodeWidget, e, this.openOnClick, 'onClick');\r\n\t\t},\r\n\t\t_onDblClick: function(/*TreeNode*/ nodeWidget, /*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTranslates double-click events into commands for the controller to process\r\n\t\t\tthis.__click(nodeWidget, e, this.openOnDblClick, 'onDblClick');\r\n\t\t},\r\n\r\n\t\t_onExpandoClick: function(/*Object*/ message){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser clicked the +/- icon; expand or collapse my children.\r\n\t\t\tvar node = message.node;\r\n\r\n\t\t\t// If we are collapsing, we might be hiding the currently focused node.\r\n\t\t\t// Also, clicking the expando node might have erased focus from the current node.\r\n\t\t\t// For simplicity's sake just focus on the node with the expando.\r\n\t\t\tthis.focusNode(node);\r\n\r\n\t\t\tif(node.isExpanded){\r\n\t\t\t\tthis._collapseNode(node);\r\n\t\t\t}else{\r\n\t\t\t\tthis._expandNode(node);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonClick: function(/*===== item, node, evt =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when a tree node is clicked\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tObject from the dojo/store corresponding to this TreeNode\r\n\t\t\t// node: TreeNode\r\n\t\t\t//\t\tThe TreeNode itself\r\n\t\t\t// evt: Event\r\n\t\t\t//\t\tThe event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\t\tonDblClick: function(/*===== item, node, evt =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when a tree node is double-clicked\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tObject from the dojo/store corresponding to this TreeNode\r\n\t\t\t// node: TreeNode\r\n\t\t\t//\t\tThe TreeNode itself\r\n\t\t\t// evt: Event\r\n\t\t\t//\t\tThe event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\t\tonOpen: function(/*===== item, node =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when a node is opened\r\n\t\t\t// item: dojo/data/Item\r\n\t\t\t// node: TreeNode\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\t\tonClose: function(/*===== item, node =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when a node is closed\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tObject from the dojo/store corresponding to this TreeNode\r\n\t\t\t// node: TreeNode\r\n\t\t\t//\t\tThe TreeNode itself\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_getNextNode: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet next visible node\r\n\r\n\t\t\tkernel.deprecated(this.declaredClass + \"::_getNextNode(node) is deprecated. Use _getNext(node) instead.\", \"\", \"2.0\");\r\n\t\t\treturn this._getNext(node);\r\n\t\t},\r\n\r\n\t\t_getRootOrFirstNode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet first visible node\r\n\t\t\tkernel.deprecated(this.declaredClass + \"::_getRootOrFirstNode() is deprecated. Use _getFirst() instead.\", \"\", \"2.0\");\r\n\t\t\treturn this._getFirst();\r\n\t\t},\r\n\r\n\t\t_collapseNode: function(/*TreeNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the user has requested to collapse the node\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise that resolves when the node has finished closing\r\n\r\n\t\t\tif(node._expandNodeDeferred){\r\n\t\t\t\tdelete node._expandNodeDeferred;\r\n\t\t\t}\r\n\r\n\t\t\tif(node.state == \"Loading\"){\r\n\t\t\t\t// ignore clicks while we are in the process of loading data\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(node.isExpanded){\r\n\t\t\t\tvar ret = node.collapse();\r\n\r\n\t\t\t\tthis.onClose(node.item, node);\r\n\t\t\t\tthis._state(node, false);\r\n\r\n\t\t\t\tthis._startPaint(ret);\t// after this finishes, need to reset widths of TreeNodes\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_expandNode: function(/*TreeNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the user has requested to expand the node\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise that resolves when the node is loaded and opened and (if persist=true) all it's descendants\r\n\t\t\t//\t\tthat were previously opened too\r\n\r\n\t\t\tif(node._expandNodeDeferred){\r\n\t\t\t\t// there's already an expand in progress, or completed, so just return\r\n\t\t\t\treturn node._expandNodeDeferred;\t// dojo/Deferred\r\n\t\t\t}\r\n\r\n\t\t\tvar model = this.model,\r\n\t\t\t\titem = node.item,\r\n\t\t\t\t_this = this;\r\n\r\n\t\t\t// Load data if it's not already loaded\r\n\t\t\tif(!node._loadDeferred){\r\n\t\t\t\t// need to load all the children before expanding\r\n\t\t\t\tnode.markProcessing();\r\n\r\n\t\t\t\t// Setup deferred to signal when the load and expand are finished.\r\n\t\t\t\t// Save that deferred in this._expandDeferred as a flag that operation is in progress.\r\n\t\t\t\tnode._loadDeferred = new Deferred();\r\n\r\n\t\t\t\t// Get the children\r\n\t\t\t\tmodel.getChildren(\r\n\t\t\t\t\titem,\r\n\t\t\t\t\tfunction(items){\r\n\t\t\t\t\t\tnode.unmarkProcessing();\r\n\r\n\t\t\t\t\t\t// Display the children and also start expanding any children that were previously expanded\r\n\t\t\t\t\t\t// (if this.persist == true).   The returned Deferred will fire when those expansions finish.\r\n\t\t\t\t\t\tnode.setChildItems(items).then(function(){\r\n\t\t\t\t\t\t\tnode._loadDeferred.resolve(items);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfunction(err){\r\n\t\t\t\t\t\tconsole.error(_this, \": error loading \" + node.label + \" children: \", err);\r\n\t\t\t\t\t\tnode._loadDeferred.reject(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Expand the node after data has loaded\r\n\t\t\tvar def = node._loadDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\tvar def2 = node.expand();\r\n\r\n\t\t\t\t// seems like these should delayed until node.expand() completes, but left here for back-compat about\r\n\t\t\t\t// when this.isOpen flag gets set (ie, at the beginning of the animation)\r\n\t\t\t\tthis.onOpen(node.item, node);\r\n\t\t\t\tthis._state(node, true);\r\n\r\n\t\t\t\treturn def2;\r\n\t\t\t}));\r\n\r\n\t\t\tthis._startPaint(def);\t// after this finishes, need to reset widths of TreeNodes\r\n\r\n\t\t\treturn def;\t// dojo/promise/Promise\r\n\t\t},\r\n\r\n\t\t////////////////// Miscellaneous functions ////////////////\r\n\r\n\t\tfocusNode: function(/* _tree.Node */ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus on the specified node (which must be visible)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar scrollLeft = this.domNode.scrollLeft;\r\n\t\t\tthis.focusChild(node);\r\n\t\t\tthis.domNode.scrollLeft = scrollLeft;\r\n\t\t},\r\n\r\n\t\t_onNodeMouseEnter: function(/*dijit/_WidgetBase*/ /*===== node =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when mouse is over a node (onmouseenter event),\r\n\t\t\t//\t\tthis is monitored by the DND code\r\n\t\t},\r\n\r\n\t\t_onNodeMouseLeave: function(/*dijit/_WidgetBase*/ /*===== node =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when mouse leaves a node (onmouseleave event),\r\n\t\t\t//\t\tthis is monitored by the DND code\r\n\t\t},\r\n\r\n\t\t//////////////// Events from the model //////////////////////////\r\n\r\n\t\t_onItemChange: function(/*Item*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcesses notification of a change to an item's scalar values like label\r\n\t\t\tvar model = this.model,\r\n\t\t\t\tidentity = model.getIdentity(item),\r\n\t\t\t\tnodes = this._itemNodesMap[identity];\r\n\r\n\t\t\tif(nodes){\r\n\t\t\t\tvar label = this.getLabel(item),\r\n\t\t\t\t\ttooltip = this.getTooltip(item);\r\n\t\t\t\tarray.forEach(nodes, function(node){\r\n\t\t\t\t\tnode.set({\r\n\t\t\t\t\t\titem: item, // theoretically could be new JS Object representing same item\r\n\t\t\t\t\t\tlabel: label,\r\n\t\t\t\t\t\ttooltip: tooltip\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnode._updateItemClasses(item);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onItemChildrenChange: function(/*dojo/data/Item*/ parent, /*dojo/data/Item[]*/ newChildrenList){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcesses notification of a change to an item's children\r\n\t\t\tvar model = this.model,\r\n\t\t\t\tidentity = model.getIdentity(parent),\r\n\t\t\t\tparentNodes = this._itemNodesMap[identity];\r\n\r\n\t\t\tif(parentNodes){\r\n\t\t\t\tarray.forEach(parentNodes, function(parentNode){\r\n\t\t\t\t\tparentNode.setChildItems(newChildrenList);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onItemDelete: function(/*Item*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcesses notification of a deletion of an item.\r\n\t\t\t//\t\tNot called from new dojo.store interface but there's cleanup code in setChildItems() instead.\r\n\r\n\t\t\tvar model = this.model,\r\n\t\t\t\tidentity = model.getIdentity(item),\r\n\t\t\t\tnodes = this._itemNodesMap[identity];\r\n\r\n\t\t\tif(nodes){\r\n\t\t\t\tarray.forEach(nodes, function(node){\r\n\t\t\t\t\t// Remove node from set of selected nodes (if it's selected)\r\n\t\t\t\t\tthis.dndController.removeTreeNode(node);\r\n\r\n\t\t\t\t\tvar parent = node.getParent();\r\n\t\t\t\t\tif(parent){\r\n\t\t\t\t\t\t// if node has not already been orphaned from a _onSetItem(parent, \"children\", ..) call...\r\n\t\t\t\t\t\tparent.removeChild(node);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If we've orphaned the focused node then move focus to the root node\r\n\t\t\t\t\tif(this.lastFocusedChild && !dom.isDescendant(this.lastFocusedChild, this.domNode)){\r\n\t\t\t\t\t\tdelete this.lastFocusedChild;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.focusedChild && !dom.isDescendant(this.focusedChild, this.domNode)){\r\n\t\t\t\t\t\tthis.focus();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnode.destroyRecursive();\r\n\t\t\t\t}, this);\r\n\t\t\t\tdelete this._itemNodesMap[identity];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/////////////// Miscellaneous funcs\r\n\r\n\t\t_initState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLoad in which nodes should be opened automatically\r\n\t\t\tthis._openedNodes = {};\r\n\t\t\tif(this.persist && this.cookieName){\r\n\t\t\t\tvar oreo = cookie(this.cookieName);\r\n\t\t\t\tif(oreo){\r\n\t\t\t\t\tarray.forEach(oreo.split(','), function(item){\r\n\t\t\t\t\t\tthis._openedNodes[item] = true;\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_state: function(node, expanded){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tQuery or set expanded state for an node\r\n\t\t\tif(!this.persist){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar path = array.map(node.getTreePath(),function(item){\r\n\t\t\t\treturn this.model.getIdentity(item);\r\n\t\t\t}, this).join(\"/\");\r\n\t\t\tif(arguments.length === 1){\r\n\t\t\t\treturn this._openedNodes[path];\r\n\t\t\t}else{\r\n\t\t\t\tif(expanded){\r\n\t\t\t\t\tthis._openedNodes[path] = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelete this._openedNodes[path];\r\n\t\t\t\t}\r\n\t\t\t\tthis._saveExpandedNodes();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_saveExpandedNodes: function(){\r\n\t\t\tif(this.persist && this.cookieName){\r\n\t\t\t\tvar ary = [];\r\n\t\t\t\tfor(var id in this._openedNodes){\r\n\t\t\t\t\tary.push(id);\r\n\t\t\t\t}\r\n\t\t\t\tcookie(this.cookieName, ary.join(\",\"), {expires: 365});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this._curSearch){\r\n\t\t\t\tthis._curSearch.timer.remove();\r\n\t\t\t\tdelete this._curSearch;\r\n\t\t\t}\r\n\t\t\tif(this.rootNode){\r\n\t\t\t\tthis.rootNode.destroyRecursive();\r\n\t\t\t}\r\n\t\t\tif(this.dndController && !lang.isString(this.dndController)){\r\n\t\t\t\tthis.dndController.destroy();\r\n\t\t\t}\r\n\t\t\tthis.rootNode = null;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tdestroyRecursive: function(){\r\n\t\t\t// A tree is treated as a leaf, not as a node with children (like a grid),\r\n\t\t\t// but defining destroyRecursive for back-compat.\r\n\t\t\tthis.destroy();\r\n\t\t},\r\n\r\n\t\tresize: function(changeSize){\r\n\t\t\tif(changeSize){\r\n\t\t\t\tdomGeometry.setMarginBox(this.domNode, changeSize);\r\n\t\t\t}\r\n\r\n\t\t\t// The main JS sizing involved w/tree is the indentation, which is specified\r\n\t\t\t// in CSS and read in through this dummy indentDetector node (tree must be\r\n\t\t\t// visible and attached to the DOM to read this).\r\n\t\t\t// If the Tree is hidden domGeometry.position(this.tree.indentDetector).w will return 0, in which case just\r\n\t\t\t// keep the default value.\r\n\t\t\tthis._nodePixelIndent = domGeometry.position(this.tree.indentDetector).w || this._nodePixelIndent;\r\n\r\n\t\t\t// resize() may be called before this.rootNode is created, so wait until it's available\r\n\t\t\tthis.expandChildrenDeferred.then(lang.hitch(this, function(){\r\n\t\t\t\t// If tree has already loaded, then reset indent for all the nodes\r\n\t\t\t\tthis.rootNode.set('indent', this.showRoot ? 0 : -1);\r\n\r\n\t\t\t\t// Also, adjust widths of all rows to match width of Tree\r\n\t\t\t\tthis._adjustWidths();\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_outstandingPaintOperations: 0,\r\n\t\t_startPaint: function(/*Promise|Boolean*/ p){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled at the start of an operation that will change what's displayed.\r\n\t\t\t// p:\r\n\t\t\t//\t\tPromise that tells when the operation will complete.  Alternately, if it's just a Boolean, it signifies\r\n\t\t\t//\t\tthat the operation was synchronous, and already completed.\r\n\r\n\t\t\tthis._outstandingPaintOperations++;\r\n\t\t\tif(this._adjustWidthsTimer){\r\n\t\t\t\tthis._adjustWidthsTimer.remove();\r\n\t\t\t\tdelete this._adjustWidthsTimer;\r\n\t\t\t}\r\n\r\n\t\t\tvar oc = lang.hitch(this, function(){\r\n\t\t\t\tthis._outstandingPaintOperations--;\r\n\r\n\t\t\t\tif(this._outstandingPaintOperations <= 0 && !this._adjustWidthsTimer && this._started){\r\n\t\t\t\t\t// Use defer() to avoid a width adjustment when another operation will immediately follow,\r\n\t\t\t\t\t// such as a sequence of opening a node, then it's children, then it's grandchildren, etc.\r\n\t\t\t\t\tthis._adjustWidthsTimer = this.defer(\"_adjustWidths\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\twhen(p, oc, oc);\r\n\t\t},\r\n\r\n\t\t_adjustWidths: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSize container to match widest TreeNode, so that highlighting with scrolling works (#13141, #16132)\r\n\r\n\t\t\tif(this._adjustWidthsTimer){\r\n\t\t\t\tthis._adjustWidthsTimer.remove();\r\n\t\t\t\tdelete this._adjustWidthsTimer;\r\n\t\t\t}\r\n\r\n\t\t\tthis.containerNode.style.width = \"auto\";\r\n\t\t\tthis.containerNode.style.width = this.domNode.scrollWidth > this.domNode.offsetWidth ? \"auto\" : \"100%\";\r\n\t\t},\r\n\r\n\t\t_createTreeNode: function(/*Object*/ args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a TreeNode\r\n\t\t\t// description:\r\n\t\t\t//\t\tDevelopers can override this method to define their own TreeNode class;\r\n\t\t\t//\t\tHowever it will probably be removed in a future release in favor of a way\r\n\t\t\t//\t\tof just specifying a widget for the label, rather than one that contains\r\n\t\t\t//\t\tthe children too.\r\n\t\t\treturn new TreeNode(args);\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDefault focus() implementation: focus the previously focused child, or first child.\r\n\t\t\t//\t\tSome applications may want to change this method to focus the [first] selected child.\r\n\r\n\t\t\tif(this.lastFocusedChild){\r\n\t\t\t\tthis.focusNode(this.lastFocusedChild);\r\n\t\t\t}else{\r\n\t\t\t\tthis.focusFirstChild();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tTree.extend({\r\n\t\t\t_setTextDirAttr: function(textDir){\r\n\t\t\t\tif(textDir && this.textDir != textDir){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tthis.rootNode.set(\"textDir\", textDir);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tTree.PathError = createError(\"TreePathError\");\r\n\tTree._TreeNode = TreeNode;\t// for monkey patching or creating subclasses of TreeNode\r\n\r\n\treturn Tree;\r\n});\r\n\n\ndefine('dijit/InlineEditBox',[\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set domAttr.get\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove domClass.toggle\r\n\t\"dojo/dom-construct\", // domConstruct.create domConstruct.destroy\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle domStyle.set domStyle.get\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/keys\", // keys.ENTER keys.ESCAPE\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"dojo/when\",\r\n\t\"./a11yclick\",\r\n\t\"./focus\",\r\n\t\"./_Widget\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./_WidgetsInTemplateMixin\",\r\n\t\"./_Container\",\r\n\t\"./form/Button\",\r\n\t\"./form/_TextBoxMixin\",\r\n\t\"./form/TextBox\",\r\n\t\"dojo/text!./templates/InlineEditBox.html\",\r\n\t\"dojo/i18n!./nls/common\"\r\n], function(require, array, aspect, declare, domAttr, domClass, domConstruct, domStyle, i18n, kernel, keys, lang, on, has, when, a11yclick, fm, _Widget, _TemplatedMixin, _WidgetsInTemplateMixin, _Container, Button, _TextBoxMixin, TextBox, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/InlineEditBox\r\n\r\n\tvar InlineEditor = declare(\"dijit._InlineEditor\", [_Widget, _TemplatedMixin, _WidgetsInTemplateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tInternal widget used by InlineEditBox, displayed when in editing mode\r\n\t\t//\t\tto display the editor and maybe save/cancel buttons.  Calling code should\r\n\t\t//\t\tconnect to save/cancel methods to detect when editing is finished\r\n\t\t//\r\n\t\t//\t\tHas mainly the same parameters as InlineEditBox, plus these values:\r\n\t\t//\r\n\t\t// style: Object\r\n\t\t//\t\tSet of CSS attributes of display node, to replicate in editor\r\n\t\t//\r\n\t\t// value: String\r\n\t\t//\t\tValue as an HTML string or plain text string, depending on renderAsHTML flag\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tcontextRequire: require,\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.messages = i18n.getLocalization(\"dijit\", \"common\", this.lang);\r\n\t\t\tarray.forEach([\"buttonSave\", \"buttonCancel\"], function(prop){\r\n\t\t\t\tif(!this[prop]){\r\n\t\t\t\t\tthis[prop] = this.messages[prop];\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Create edit widget in place in the template\r\n\t\t\t// TODO: remove getObject() for 2.0\r\n\t\t\tvar Cls = typeof this.editor == \"string\" ? (lang.getObject(this.editor) || require(this.editor)) : this.editor;\r\n\r\n\t\t\t// Copy the style from the source\r\n\t\t\t// Don't copy ALL properties though, just the necessary/applicable ones.\r\n\t\t\t// wrapperStyle/destStyle code is to workaround IE bug where getComputedStyle().fontSize\r\n\t\t\t// is a relative value like 200%, rather than an absolute value like 24px, and\r\n\t\t\t// the 200% can refer *either* to a setting on the node or it's ancestor (see #11175)\r\n\t\t\tvar srcStyle = this.sourceStyle,\r\n\t\t\t\teditStyle = \"line-height:\" + srcStyle.lineHeight + \";\",\r\n\t\t\t\tdestStyle = domStyle.getComputedStyle(this.domNode);\r\n\t\t\tarray.forEach([\"Weight\", \"Family\", \"Size\", \"Style\"], function(prop){\r\n\t\t\t\tvar textStyle = srcStyle[\"font\" + prop],\r\n\t\t\t\t\twrapperStyle = destStyle[\"font\" + prop];\r\n\t\t\t\tif(wrapperStyle != textStyle){\r\n\t\t\t\t\teditStyle += \"font-\" + prop + \":\" + srcStyle[\"font\" + prop] + \";\";\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tarray.forEach([\"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\", \"position\", \"left\", \"top\", \"right\", \"bottom\", \"float\", \"clear\", \"display\"], function(prop){\r\n\t\t\t\tthis.domNode.style[prop] = srcStyle[prop];\r\n\t\t\t}, this);\r\n\t\t\tvar width = this.inlineEditBox.width;\r\n\t\t\tif(width == \"100%\"){\r\n\t\t\t\t// block mode\r\n\t\t\t\teditStyle += \"width:100%;\";\r\n\t\t\t\tthis.domNode.style.display = \"block\";\r\n\t\t\t}else{\r\n\t\t\t\t// inline-block mode\r\n\t\t\t\teditStyle += \"width:\" + (width + (Number(width) == width ? \"px\" : \"\")) + \";\";\r\n\t\t\t}\r\n\t\t\tvar editorParams = lang.delegate(this.inlineEditBox.editorParams, {\r\n\t\t\t\tstyle: editStyle,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir\r\n\t\t\t});\r\n\t\t\t// set the value in onLoadDeferred instead so the widget has time to finish initializing\r\n\t\t\t//editorParams[(\"displayedValue\" in Cls.prototype || \"_setDisplayedValueAttr\" in Cls.prototype) ? \"displayedValue\" : \"value\"] = this.value;\r\n\t\t\tthis.editWidget = new Cls(editorParams, this.editorPlaceholder);\r\n\r\n\t\t\tif(this.inlineEditBox.autoSave){\r\n\t\t\t\t// Remove the save/cancel buttons since saving is done by simply tabbing away or\r\n\t\t\t\t// selecting a value from the drop down list\r\n\t\t\t\tthis.saveButton.destroy();\r\n\t\t\t\tthis.cancelButton.destroy();\r\n\t\t\t\tthis.saveButton = this.cancelButton = null;\r\n\t\t\t\tdomConstruct.destroy(this.buttonContainer);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar ew = this.editWidget;\r\n\r\n\t\t\tif(this.inlineEditBox.autoSave){\r\n\t\t\t\tthis.own(\r\n\t\t\t\t\t// Selecting a value from a drop down list causes an onChange event and then we save\r\n\t\t\t\t\taspect.after(ew, \"onChange\", lang.hitch(this, \"_onChange\"), true),\r\n\r\n\t\t\t\t\t// ESC and TAB should cancel and save.\r\n\t\t\t\t\ton(ew, \"keydown\", lang.hitch(this, \"_onKeyDown\"))\r\n\t\t\t\t);\r\n\t\t\t}else{\r\n\t\t\t\t// If possible, enable/disable save button based on whether the user has changed the value\r\n\t\t\t\tif(\"intermediateChanges\" in ew){\r\n\t\t\t\t\tew.set(\"intermediateChanges\", true);\r\n\t\t\t\t\tthis.own(aspect.after(ew, \"onChange\", lang.hitch(this, \"_onIntermediateChange\"), true));\r\n\t\t\t\t\tthis.saveButton.set(\"disabled\", true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.editWidget.startup();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onIntermediateChange: function(/*===== val =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled for editor widgets that support the intermediateChanges=true flag as a way\r\n\t\t\t//\t\tto detect when to enable/disabled the save button\r\n\t\t\tthis.saveButton.set(\"disabled\", (this.getValue() == this._resetValue) || !this.enableSave());\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis.editWidget.destroy(true); // let the parent wrapper widget clean up the DOM\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tgetValue: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the [display] value of the edit widget\r\n\t\t\tvar ew = this.editWidget;\r\n\t\t\treturn String(ew.get((\"displayedValue\" in ew || \"_getDisplayedValueAttr\" in ew) ? \"displayedValue\" : \"value\"));\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for keydown in the edit box in autoSave mode.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFor autoSave widgets, if Esc/Enter, call cancel/save.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.inlineEditBox.autoSave && this.inlineEditBox.editing){\r\n\t\t\t\tif(e.altKey || e.ctrlKey){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// If Enter/Esc pressed, treat as save/cancel.\r\n\t\t\t\tif(e.keyCode == keys.ESCAPE){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthis.cancel(true); // sets editing=false which short-circuits _onBlur processing\r\n\t\t\t\t}else if(e.keyCode == keys.ENTER && e.target.tagName == \"INPUT\"){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthis._onChange(); // fire _onBlur and then save\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// _onBlur will handle TAB automatically by allowing\r\n\t\t\t\t// the TAB to change focus before we mess with the DOM: #6227\r\n\t\t\t\t// Expounding by request:\r\n\t\t\t\t//\tThe current focus is on the edit widget input field.\r\n\t\t\t\t//\tsave() will hide and destroy this widget.\r\n\t\t\t\t//\tWe want the focus to jump from the currently hidden\r\n\t\t\t\t//\tdisplayNode, but since it's hidden, it's impossible to\r\n\t\t\t\t//\tunhide it, focus it, and then have the browser focus\r\n\t\t\t\t//\taway from it to the next focusable element since each\r\n\t\t\t\t//\tof these events is asynchronous and the focus-to-next-element\r\n\t\t\t\t//\tis already queued.\r\n\t\t\t\t//\tSo we allow the browser time to unqueue the move-focus event\r\n\t\t\t\t//\tbefore we do all the hide/show stuff.\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when focus moves outside the editor\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.inlineEditBox.autoSave && this.inlineEditBox.editing){\r\n\t\t\t\tif(this.getValue() == this._resetValue){\r\n\t\t\t\t\tthis.cancel(false);\r\n\t\t\t\t}else if(this.enableSave()){\r\n\t\t\t\t\tthis.save(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onChange: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the underlying widget fires an onChange event,\r\n\t\t\t//\t\tsuch as when the user selects a value from the drop down list of a ComboBox,\r\n\t\t\t//\t\twhich means that the user has finished entering the value and we should save.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.inlineEditBox.autoSave && this.inlineEditBox.editing && this.enableSave()){\r\n\t\t\t\tfm.focus(this.inlineEditBox.displayNode); // fires _onBlur which will save the formatted value\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenableSave: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser overridable function returning a Boolean to indicate\r\n\t\t\t//\t\tif the Save button should be enabled or not - usually due to invalid conditions\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn this.editWidget.isValid ? this.editWidget.isValid() : true;\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the edit widget.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.editWidget.focus();\r\n\r\n\t\t\tif(this.editWidget.focusNode){\r\n\t\t\t\t// IE can take 30ms to report the focus event, but focus manager needs to know before a 0ms timeout.\r\n\t\t\t\tfm._onFocusNode(this.editWidget.focusNode);\r\n\r\n\t\t\t\tif(this.editWidget.focusNode.tagName == \"INPUT\"){\r\n\t\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\t\t_TextBoxMixin.selectInputText(this.editWidget.focusNode);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tvar InlineEditBox = declare(\"dijit.InlineEditBox\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), _Widget, {\r\n\t\t// summary:\r\n\t\t//\t\tAn element with in-line edit capabilities\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tBehavior for an existing node (`<p>`, `<div>`, `<span>`, etc.) so that\r\n\t\t//\t\twhen you click it, an editor shows up in place of the original\r\n\t\t//\t\ttext.  Optionally, Save and Cancel button are displayed below the edit widget.\r\n\t\t//\t\tWhen Save is clicked, the text is pulled from the edit\r\n\t\t//\t\twidget and redisplayed and the edit widget is again hidden.\r\n\t\t//\t\tBy default a plain Textarea widget is used as the editor (or for\r\n\t\t//\t\tinline values a TextBox), but you can specify an editor such as\r\n\t\t//\t\tdijit.Editor (for editing HTML) or a Slider (for adjusting a number).\r\n\t\t//\t\tAn edit widget must support the following API to be used:\r\n\t\t//\r\n\t\t//\t\t- displayedValue or value as initialization parameter,\r\n\t\t//\t\t\tand available through set('displayedValue') / set('value')\r\n\t\t//\t\t- void focus()\r\n\t\t//\t\t- DOM-node focusNode = node containing editable text\r\n\r\n\t\t// editing: [readonly] Boolean\r\n\t\t//\t\tIs the node currently in edit mode?\r\n\t\tediting: false,\r\n\r\n\t\t// autoSave: [const] Boolean\r\n\t\t//\t\tChanging the value automatically saves it; don't have to push save button\r\n\t\t//\t\t(and save button isn't even displayed)\r\n\t\tautoSave: true,\r\n\r\n\t\t// buttonSave: String\r\n\t\t//\t\tSave button label\r\n\t\tbuttonSave: \"\",\r\n\r\n\t\t// buttonCancel: String\r\n\t\t//\t\tCancel button label\r\n\t\tbuttonCancel: \"\",\r\n\r\n\t\t// renderAsHtml: Boolean\r\n\t\t//\t\tSet this to true if the specified Editor's value should be interpreted as HTML\r\n\t\t//\t\trather than plain text (ex: `dijit.Editor`)\r\n\t\trenderAsHtml: false,\r\n\r\n\t\t// editor: String|Function\r\n\t\t//\t\tMID (ex: \"dijit/form/TextBox\") or constructor for editor widget\r\n\t\teditor: TextBox,\r\n\r\n\t\t// editorWrapper: String|Function\r\n\t\t//\t\tClass name (or reference to the Class) for widget that wraps the editor widget, displaying save/cancel\r\n\t\t//\t\tbuttons.\r\n\t\teditorWrapper: InlineEditor,\r\n\r\n\t\t// editorParams: Object\r\n\t\t//\t\tSet of parameters for editor, like {required: true}\r\n\t\teditorParams: {},\r\n\r\n\t\t// disabled: Boolean\r\n\t\t//\t\tIf true, clicking the InlineEditBox to edit it will have no effect.\r\n\t\tdisabled: false,\r\n\r\n\t\tonChange: function(/*===== value =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet this handler to be notified of changes to value.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonCancel: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet this handler to be notified when editing is cancelled.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t// width: String\r\n\t\t//\t\tWidth of editor.  By default it's width=100% (ie, block mode).\r\n\t\twidth: \"100%\",\r\n\r\n\t\t// value: String\r\n\t\t//\t\tThe display value of the widget in read-only mode\r\n\t\tvalue: \"\",\r\n\r\n\t\t// noValueIndicator: [const] String\r\n\t\t//\t\tThe text that gets displayed when there is no value (so that the user has a place to click to edit)\r\n\t\tnoValueIndicator: has(\"ie\") <= 6 ? // font-family needed on IE6 but it messes up IE8\r\n\t\t\t\"<span style='font-family: wingdings; text-decoration: underline;'>&#160;&#160;&#160;&#160;&#x270d;&#160;&#160;&#160;&#160;</span>\" :\r\n\t\t\t\"<span style='text-decoration: underline;'>&#160;&#160;&#160;&#160;&#x270d;&#160;&#160;&#160;&#160;</span>\", // &#160; == &nbsp;\r\n\r\n\t\tconstructor: function(/*===== params, srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified:\r\n\t\t\t//\r\n\t\t\t//\t\t- use srcNodeRef.innerHTML as my value\r\n\t\t\t//\t\t- replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t\tthis.editorParams = {};\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// save pointer to original source node, since Widget nulls-out srcNodeRef\r\n\t\t\tthis.displayNode = this.srcNodeRef;\r\n\r\n\t\t\t// connect handlers to the display node\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.displayNode, a11yclick, lang.hitch(this, \"_onClick\")),\r\n\t\t\t\ton(this.displayNode, \"mouseover, focus\", lang.hitch(this, \"_onMouseOver\")),\r\n\t\t\t\ton(this.displayNode, \"mouseout, blur\", lang.hitch(this, \"_onMouseOut\"))\r\n\t\t\t);\r\n\r\n\t\t\tthis.displayNode.setAttribute(\"role\", \"button\");\r\n\t\t\tif(!this.displayNode.getAttribute(\"tabIndex\")){\r\n\t\t\t\tthis.displayNode.setAttribute(\"tabIndex\", 0);\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.value && !(\"value\" in this.params)){ // \"\" is a good value if specified directly so check params){\r\n\t\t\t\tthis.value = lang.trim(this.renderAsHtml ? this.displayNode.innerHTML :\r\n\t\t\t\t\t(this.displayNode.innerText || this.displayNode.textContent || \"\"));\r\n\t\t\t}\r\n\t\t\tif(!this.value){\r\n\t\t\t\tthis.displayNode.innerHTML = this.noValueIndicator;\r\n\t\t\t}\r\n\r\n\t\t\tdomClass.add(this.displayNode, 'dijitInlineEditBoxDisplayMode');\r\n\t\t},\r\n\r\n\t\tsetDisabled: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('disabled', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.InlineEditBox.setDisabled() is deprecated.  Use set('disabled', bool) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('disabled', disabled);\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to make set(\"disabled\", ...) work.\r\n\t\t\t//\t\tSet disabled state of widget.\r\n\t\t\tthis.domNode.setAttribute(\"aria-disabled\", disabled ? \"true\" : \"false\");\r\n\t\t\tif(disabled){\r\n\t\t\t\tthis.displayNode.removeAttribute(\"tabIndex\");\r\n\t\t\t}else{\r\n\t\t\t\tthis.displayNode.setAttribute(\"tabIndex\", 0);\r\n\t\t\t}\r\n\t\t\tdomClass.toggle(this.displayNode, \"dijitInlineEditBoxDisplayModeDisabled\", disabled);\r\n\t\t\tthis._set(\"disabled\", disabled);\r\n\t\t},\r\n\r\n\t\t_onMouseOver: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for onmouseover and onfocus event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!this.disabled){\r\n\t\t\t\tdomClass.add(this.displayNode, \"dijitInlineEditBoxDisplayModeHover\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onMouseOut: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for onmouseout and onblur event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tdomClass.remove(this.displayNode, \"dijitInlineEditBoxDisplayModeHover\");\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for onclick event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.disabled){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tthis._onMouseOut();\r\n\r\n\t\t\t// Since FF gets upset if you move a node while in an event handler for that node...\r\n\t\t\tthis.defer(\"edit\");\r\n\t\t},\r\n\r\n\t\tedit: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay the editor widget in place of the original (read only) markup.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.disabled || this.editing){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._set('editing', true);\r\n\r\n\t\t\t// save some display node values that can be restored later\r\n\t\t\tthis._savedTabIndex = domAttr.get(this.displayNode, \"tabIndex\") || \"0\";\r\n\r\n\t\t\tif(!this.wrapperWidget){\r\n\t\t\t\t// Placeholder for edit widget\r\n\t\t\t\t// Put place holder (and eventually editWidget) before the display node so that it's positioned correctly\r\n\t\t\t\t// when Calendar dropdown appears, which happens automatically on focus.\r\n\t\t\t\tvar placeholder = domConstruct.create(\"span\", null, this.domNode, \"before\");\r\n\r\n\t\t\t\t// Create the editor wrapper (the thing that holds the editor widget and the save/cancel buttons)\r\n\t\t\t\tvar Ewc = typeof this.editorWrapper == \"string\" ? lang.getObject(this.editorWrapper) : this.editorWrapper;\r\n\t\t\t\tthis.wrapperWidget = new Ewc({\r\n\t\t\t\t\tvalue: this.value,\r\n\t\t\t\t\tbuttonSave: this.buttonSave,\r\n\t\t\t\t\tbuttonCancel: this.buttonCancel,\r\n\t\t\t\t\tdir: this.dir,\r\n\t\t\t\t\tlang: this.lang,\r\n\t\t\t\t\ttabIndex: this._savedTabIndex,\r\n\t\t\t\t\teditor: this.editor,\r\n\t\t\t\t\tinlineEditBox: this,\r\n\t\t\t\t\tsourceStyle: domStyle.getComputedStyle(this.displayNode),\r\n\t\t\t\t\tsave: lang.hitch(this, \"save\"),\r\n\t\t\t\t\tcancel: lang.hitch(this, \"cancel\"),\r\n\t\t\t\t\ttextDir: this.textDir\r\n\t\t\t\t}, placeholder);\r\n\t\t\t\tif(!this.wrapperWidget._started){\r\n\t\t\t\t\tthis.wrapperWidget.startup();\r\n\t\t\t\t}\r\n\t\t\t\tif(!this._started){\r\n\t\t\t\t\tthis.startup();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar ww = this.wrapperWidget;\r\n\r\n\t\t\t// to avoid screen jitter, we first create the editor with position: absolute, visibility: hidden,\r\n\t\t\t// and then when it's finished rendering, we switch from display mode to editor\r\n\t\t\t// position: absolute releases screen space allocated to the display node\r\n\t\t\t// opacity:0 is the same as visibility: hidden but is still focusable\r\n\t\t\t// visibility: hidden removes focus outline\r\n\r\n\t\t\tdomClass.add(this.displayNode, \"dijitOffScreen\");\r\n\t\t\tdomClass.remove(ww.domNode, \"dijitOffScreen\");\r\n\t\t\tdomStyle.set(ww.domNode, { visibility: \"visible\" });\r\n\t\t\tdomAttr.set(this.displayNode, \"tabIndex\", \"-1\"); // needed by WebKit for TAB from editor to skip displayNode\r\n\r\n\t\t\t// After edit widget has finished initializing (in particular need to wait for dijit.Editor),\r\n\t\t\t// or immediately if there is no onLoadDeferred Deferred,\r\n\t\t\t// replace the display widget with edit widget, leaving them both displayed for a brief time so that\r\n\t\t\t// focus can be shifted without incident.\r\n\t\t\tvar ew = ww.editWidget;\r\n\t\t\tvar self = this;\r\n\t\t\twhen(ew.onLoadDeferred, lang.hitch(ww, function(){\r\n\t\t\t\t// set value again in case the edit widget's value is just now valid\r\n\t\t\t\tew.set((\"displayedValue\" in ew || \"_setDisplayedValueAttr\" in ew) ? \"displayedValue\" : \"value\", self.value);\r\n\t\t\t\tthis.defer(function(){ // defer needed so that the change of focus doesn't happen on mousedown which also sets focus\r\n\t\t\t\t\t// the saveButton should start out disabled in most cases but the above set could have fired onChange\r\n\t\t\t\t\tif(ww.saveButton){\r\n\t\t\t\t\t\tww.saveButton.set(\"disabled\", \"intermediateChanges\" in ew);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.focus(); // both nodes are showing, so we can switch focus safely\r\n\t\t\t\t\tthis._resetValue = this.getValue();\r\n\t\t\t\t});\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when focus moves outside the InlineEditBox.\r\n\t\t\t//\t\tPerforms garbage collection.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.editing){\r\n\t\t\t\t/* causes IE focus problems, see TooltipDialog_a11y.html...\r\n\t\t\t\t this.defer(function(){\r\n\t\t\t\t if(this.wrapperWidget){\r\n\t\t\t\t this.wrapperWidget.destroy();\r\n\t\t\t\t delete this.wrapperWidget;\r\n\t\t\t\t }\r\n\t\t\t\t });\r\n\t\t\t\t */\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this.wrapperWidget && !this.wrapperWidget._destroyed){\r\n\t\t\t\tthis.wrapperWidget.destroy();\r\n\t\t\t\tdelete this.wrapperWidget;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_showText: function(/*Boolean*/ focus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRevert to display mode, and optionally focus on display node\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar ww = this.wrapperWidget;\r\n\t\t\tdomStyle.set(ww.domNode, { visibility: \"hidden\" }); // hide the editor from mouse/keyboard events\r\n\t\t\tdomClass.add(ww.domNode, \"dijitOffScreen\");\r\n\t\t\tdomClass.remove(this.displayNode, \"dijitOffScreen\");\r\n\t\t\tdomAttr.set(this.displayNode, \"tabIndex\", this._savedTabIndex);\r\n\t\t\tif(focus){\r\n\t\t\t\tfm.focus(this.displayNode);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsave: function(/*Boolean*/ focus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSave the contents of the editor and revert to display mode.\r\n\t\t\t// focus: Boolean\r\n\t\t\t//\t\tFocus on the display mode text\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.disabled || !this.editing){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._set('editing', false);\r\n\r\n\t\t\tvar ww = this.wrapperWidget;\r\n\t\t\tvar value = ww.getValue();\r\n\t\t\tthis.set('value', value); // display changed, formatted value\r\n\r\n\t\t\tthis._showText(focus); // set focus as needed\r\n\t\t},\r\n\r\n\t\tsetValue: function(/*String*/ val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('value', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.InlineEditBox.setValue() is deprecated.  Use set('value', ...) instead.\", \"\", \"2.0\");\r\n\t\t\treturn this.set(\"value\", val);\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*String*/ val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook to make set(\"value\", ...) work.\r\n\t\t\t//\t\tInserts specified HTML value into this node, or an \"input needed\" character if node is blank.\r\n\r\n\t\t\tval = lang.trim(val);\r\n\t\t\tvar renderVal = this.renderAsHtml ? val : val.replace(/&/gm, \"&amp;\").replace(/</gm, \"&lt;\").replace(/>/gm, \"&gt;\").replace(/\"/gm, \"&quot;\").replace(/\\n/g, \"<br>\");\r\n\t\t\tthis.displayNode.innerHTML = renderVal || this.noValueIndicator;\r\n\t\t\tthis._set(\"value\", val);\r\n\r\n\t\t\tif(this._started){\r\n\t\t\t\t// tell the world that we have changed\r\n\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\tthis.onChange(val);\r\n\t\t\t\t}); // defer prevents browser freeze for long-running event handlers\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetValue: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use get('value') instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.InlineEditBox.getValue() is deprecated.  Use get('value') instead.\", \"\", \"2.0\");\r\n\t\t\treturn this.get(\"value\");\r\n\t\t},\r\n\r\n\t\tcancel: function(/*Boolean*/ focus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRevert to display mode, discarding any changes made in the editor\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.disabled || !this.editing){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._set('editing', false);\r\n\r\n\t\t\t// tell the world that we have no changes\r\n\t\t\tthis.defer(\"onCancel\"); // defer prevents browser freeze for long-running event handlers\r\n\r\n\t\t\tthis._showText(focus);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tInlineEditBox = declare(\"dijit.InlineEditBox\", InlineEditBox, {\r\n\t\t\t_setValueAttr: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.applyTextDir(this.displayNode);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tInlineEditBox._InlineEditor = InlineEditor;\t// for monkey patching\r\n\r\n\treturn InlineEditBox;\r\n});\r\n\ndefine('dijit/form/Form',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"../_Widget\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"./_FormMixin\",\r\n\t\"../layout/_ContentPaneResizeMixin\"\r\n], function(declare, domAttr, kernel, has, _Widget, _TemplatedMixin, _FormMixin, _ContentPaneResizeMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/Form\r\n\r\n\r\n\treturn declare(\"dijit.form.Form\", [_Widget, _TemplatedMixin, _FormMixin, _ContentPaneResizeMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tWidget corresponding to HTML form tag, for validation and serialization\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<form data-dojo-type=\"dijit/form/Form\" id=\"myForm\">\r\n\t\t//\t|\t\tName: <input type=\"text\" name=\"name\" />\r\n\t\t//\t|\t</form>\r\n\t\t//\t|\t// Example assumes you have required dijit/registry\r\n\t\t//\t|\tmyObj = {name: \"John Doe\"};\r\n\t\t//\t|\tregistry.byId('myForm').set('value', myObj);\r\n\t\t//\t|\r\n\t\t//\t|\tmyObj=registry.byId('myForm').get('value');\r\n\r\n\t\t// HTML <FORM> attributes\r\n\r\n\t\t// name: String?\r\n\t\t//\t\tName of form for scripting.\r\n\t\tname: \"\",\r\n\r\n\t\t// action: String?\r\n\t\t//\t\tServer-side form handler.\r\n\t\taction: \"\",\r\n\r\n\t\t// method: String?\r\n\t\t//\t\tHTTP method used to submit the form, either \"GET\" or \"POST\".\r\n\t\tmethod: \"\",\r\n\r\n\t\t// encType: String?\r\n\t\t//\t\tEncoding type for the form, ex: application/x-www-form-urlencoded.\r\n\t\tencType: \"\",\r\n\r\n\t\t// accept-charset: String?\r\n\t\t//\t\tList of supported charsets.\r\n\t\t\"accept-charset\": \"\",\r\n\r\n\t\t// accept: String?\r\n\t\t//\t\tList of MIME types for file upload.\r\n\t\taccept: \"\",\r\n\r\n\t\t// target: String?\r\n\t\t//\t\tTarget frame for the document to be opened in.\r\n\t\ttarget: \"\",\r\n\r\n\t\ttemplateString: \"<form data-dojo-attach-point='containerNode' data-dojo-attach-event='onreset:_onReset,onsubmit:_onSubmit' ${!nameAttrSetting}></form>\",\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// Setup name=foo string to be referenced from the template (but only if a name has been specified)\r\n\t\t\t// Unfortunately we can't use _setNameAttr to set the name due to IE limitations, see #8660\r\n\t\t\tthis.nameAttrSetting = this.name ? (\"name='\" + this.name + \"'\") : \"\";\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\texecute: function(/*Object*/ /*===== formContents =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated: use submit()\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t},\r\n\r\n\t\tonExecute: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated: use onSubmit()\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t},\r\n\r\n\t\t_setEncTypeAttr: function(/*String*/ value){\r\n\t\t\tdomAttr.set(this.domNode, \"encType\", value);\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\tthis.domNode.encoding = value;\r\n\t\t\t}\r\n\t\t\tthis._set(\"encType\", value);\r\n\t\t},\r\n\r\n\t\treset: function(/*Event?*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trestores all widget values back to their init values,\r\n\t\t\t//\t\tcalls onReset() which can cancel the reset by returning false\r\n\r\n\t\t\t// create fake event so we can know if preventDefault() is called\r\n\t\t\tvar faux = {\r\n\t\t\t\treturnValue: true, // the IE way\r\n\t\t\t\tpreventDefault: function(){ // not IE\r\n\t\t\t\t\tthis.returnValue = false;\r\n\t\t\t\t},\r\n\t\t\t\tstopPropagation: function(){\r\n\t\t\t\t},\r\n\t\t\t\tcurrentTarget: e ? e.target : this.domNode,\r\n\t\t\t\ttarget: e ? e.target : this.domNode\r\n\t\t\t};\r\n\t\t\t// if return value is not exactly false, and haven't called preventDefault(), then reset\r\n\t\t\tif(!(this.onReset(faux) === false) && faux.returnValue){\r\n\t\t\t\tthis.inherited(arguments, []);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonReset: function(/*Event?*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when user resets the form. This method is intended\r\n\t\t\t//\t\tto be over-ridden. When the `reset` method is called\r\n\t\t\t//\t\tprogrammatically, the return value from `onReset` is used\r\n\t\t\t//\t\tto compute whether or not resetting should proceed\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t\treturn true; // Boolean\r\n\t\t},\r\n\r\n\t\t_onReset: function(e){\r\n\t\t\tthis.reset(e);\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onSubmit: function(e){\r\n\t\t\tvar fp = this.constructor.prototype;\r\n\t\t\t// TODO: remove this if statement beginning with 2.0\r\n\t\t\tif(this.execute != fp.execute || this.onExecute != fp.onExecute){\r\n\t\t\t\tkernel.deprecated(\"dijit.form.Form:execute()/onExecute() are deprecated. Use onSubmit() instead.\", \"\", \"2.0\");\r\n\t\t\t\tthis.onExecute();\r\n\t\t\t\tthis.execute(this.getValues());\r\n\t\t\t}\r\n\t\t\tif(this.onSubmit(e) === false){ // only exactly false stops submit\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonSubmit: function(/*Event?*/ /*===== e =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when user submits the form.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method is intended to be over-ridden, but by default it checks and\r\n\t\t\t//\t\treturns the validity of form elements. When the `submit`\r\n\t\t\t//\t\tmethod is called programmatically, the return value from\r\n\t\t\t//\t\t`onSubmit` is used to compute whether or not submission\r\n\t\t\t//\t\tshould proceed\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\treturn this.isValid(); // Boolean\r\n\t\t},\r\n\r\n\t\tsubmit: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tprogrammatically submit form if and only if the `onSubmit` returns true\r\n\t\t\tif(!(this.onSubmit() === false)){\r\n\t\t\t\tthis.containerNode.submit();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/form/ComboButton',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys\r\n\t\"../focus\", // focus.focus()\r\n\t\"./DropDownButton\",\r\n\t\"dojo/text!./templates/ComboButton.html\",\r\n\t\"../a11yclick\"\t// template uses ondijitclick\r\n], function(declare, keys, focus, DropDownButton, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/ComboButton\r\n\r\n\treturn declare(\"dijit.form.ComboButton\", DropDownButton, {\r\n\t\t// summary:\r\n\t\t//\t\tA combination button and drop-down button.\r\n\t\t//\t\tUsers can click one side to \"press\" the button, or click an arrow\r\n\t\t//\t\ticon to display the drop down.\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\t<button data-dojo-type=\"dijit/form/ComboButton\" onClick=\"...\">\r\n\t\t// |\t\t<span>Hello world</span>\r\n\t\t// |\t\t<div data-dojo-type=\"dijit/Menu\">...</div>\r\n\t\t// |\t</button>\r\n\t\t//\r\n\t\t// example:\r\n\t\t// |\tvar button1 = new ComboButton({label: \"hello world\", onClick: foo, dropDown: \"myMenu\"});\r\n\t\t// |\tdojo.body().appendChild(button1.domNode);\r\n\t\t//\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Map widget attributes to DOMNode attributes.\r\n\t\t_setIdAttr: \"\", // override _FormWidgetMixin which puts id on the focusNode\r\n\t\t_setTabIndexAttr: [\"focusNode\", \"titleNode\"],\r\n\t\t_setTitleAttr: \"titleNode\",\r\n\r\n\t\t// optionsTitle: String\r\n\t\t//\t\tText that describes the options menu (accessibility)\r\n\t\toptionsTitle: \"\",\r\n\r\n\t\tbaseClass: \"dijitComboButton\",\r\n\r\n\t\t// Set classes like dijitButtonContentsHover or dijitArrowButtonActive depending on\r\n\t\t// mouse action over specified node\r\n\t\tcssStateNodes: {\r\n\t\t\t\"buttonNode\": \"dijitButtonNode\",\r\n\t\t\t\"titleNode\": \"dijitButtonContents\",\r\n\t\t\t\"_popupStateNode\": \"dijitDownArrowButton\"\r\n\t\t},\r\n\r\n\t\t_focusedNode: null,\r\n\r\n\t\t_onButtonKeyDown: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for right arrow key when focus is on left part of button\r\n\t\t\tif(evt.keyCode == keys[this.isLeftToRight() ? \"RIGHT_ARROW\" : \"LEFT_ARROW\"]){\r\n\t\t\t\tfocus.focus(this._popupStateNode);\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onArrowKeyDown: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for left arrow key when focus is on right part of button\r\n\t\t\tif(evt.keyCode == keys[this.isLeftToRight() ? \"LEFT_ARROW\" : \"RIGHT_ARROW\"]){\r\n\t\t\t\tfocus.focus(this.titleNode);\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocus: function(/*String*/ position){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocuses this widget to according to position, if specified,\r\n\t\t\t//\t\totherwise on arrow node\r\n\t\t\t// position:\r\n\t\t\t//\t\t\"start\" or \"end\"\r\n\t\t\tif(!this.disabled){\r\n\t\t\t\tfocus.focus(position == \"start\" ? this.titleNode : this._popupStateNode);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_CheckBoxMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\" // domAttr.set\r\n], function(declare, domAttr){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_CheckBoxMixin\r\n\r\n\treturn declare(\"dijit.form._CheckBoxMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin to provide widget functionality corresponding to an HTML checkbox\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tUser interacts with real html inputs.\r\n\t\t//\t\tOn onclick (which occurs by mouse click, space-bar, or\r\n\t\t//\t\tusing the arrow keys to switch the selected radio button),\r\n\t\t//\t\twe update the state of the checkbox/radio.\r\n\t\t//\r\n\r\n\t\t// type: [private] String\r\n\t\t//\t\ttype attribute on `<input>` node.\r\n\t\t//\t\tOverrides `dijit/form/Button.type`.  Users should not change this value.\r\n\t\ttype: \"checkbox\",\r\n\r\n\t\t// value: String\r\n\t\t//\t\tAs an initialization parameter, equivalent to value field on normal checkbox\r\n\t\t//\t\t(if checked, the value is passed as the value when form is submitted).\r\n\t\tvalue: \"on\",\r\n\r\n\t\t// readOnly: Boolean\r\n\t\t//\t\tShould this widget respond to user input?\r\n\t\t//\t\tIn markup, this is specified as \"readOnly\".\r\n\t\t//\t\tSimilar to disabled except readOnly form values are submitted.\r\n\t\treadOnly: false,\r\n\r\n\t\t// aria-pressed for toggle buttons, and aria-checked for checkboxes\r\n\t\t_aria_attr: \"aria-checked\",\r\n\r\n\t\t_setReadOnlyAttr: function(/*Boolean*/ value){\r\n\t\t\tthis._set(\"readOnly\", value);\r\n\t\t\tdomAttr.set(this.focusNode, 'readOnly', value);\r\n\t\t},\r\n\r\n\t\t// Override dijit/form/Button._setLabelAttr() since we don't even have a containerNode.\r\n\t\t// Normally users won't try to set label, except when CheckBox or RadioButton is the child of a dojox/layout/TabContainer\r\n\t\t_setLabelAttr: undefined,\r\n\r\n\t\t_getSubmitValue: function(/*String*/ value){\r\n\t\t\treturn (value == null || value === \"\") ? \"on\" : value;\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(newValue){\r\n\t\t\tnewValue = this._getSubmitValue(newValue);\t// \"on\" to match browser native behavior when value unspecified\r\n\t\t\tthis._set(\"value\", newValue);\r\n\t\t\tdomAttr.set(this.focusNode, \"value\", newValue);\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t// Handle unlikely event that the <input type=checkbox> value attribute has changed\r\n\t\t\tthis._set(\"value\", this._getSubmitValue(this.params.value));\r\n\t\t\tdomAttr.set(this.focusNode, 'value', this.value);\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to handle click actions - need to check\r\n\t\t\t//\t\treadOnly, since button no longer does that check.\r\n\t\t\tif(this.readOnly){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/form/CheckBox',[\r\n\t\"require\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/has\",\t\t// has(\"dijit-legacy-requires\")\r\n\t\"dojo/query\", // query\r\n\t\"dojo/ready\",\r\n\t\"./ToggleButton\",\r\n\t\"./_CheckBoxMixin\",\r\n\t\"dojo/text!./templates/CheckBox.html\",\r\n\t\"dojo/NodeList-dom\", // NodeList.addClass/removeClass\r\n\t\"../a11yclick\"\t// template uses ondijitclick\r\n], function(require, declare, domAttr, has, query, ready, ToggleButton, _CheckBoxMixin, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/CheckBox\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/form/RadioButton\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\treturn declare(\"dijit.form.CheckBox\", [ToggleButton, _CheckBoxMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tSame as an HTML checkbox, but with fancy styling.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tUser interacts with real html inputs.\r\n\t\t//\t\tOn onclick (which occurs by mouse click, space-bar, or\r\n\t\t//\t\tusing the arrow keys to switch the selected radio button),\r\n\t\t//\t\twe update the state of the checkbox/radio.\r\n\t\t//\r\n\t\t//\t\tThere are two modes:\r\n\t\t//\r\n\t\t//\t\t1. High contrast mode\r\n\t\t//\t\t2. Normal mode\r\n\t\t//\r\n\t\t//\t\tIn case 1, the regular html inputs are shown and used by the user.\r\n\t\t//\t\tIn case 2, the regular html inputs are invisible but still used by\r\n\t\t//\t\tthe user. They are turned quasi-invisible and overlay the background-image.\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitCheckBox\",\r\n\r\n\t\t_setValueAttr: function(/*String|Boolean*/ newValue, /*Boolean*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for value= attribute to constructor, and also calls to\r\n\t\t\t//\t\tset('value', val).\r\n\t\t\t// description:\r\n\t\t\t//\t\tDuring initialization, just saves as attribute to the `<input type=checkbox>`.\r\n\t\t\t//\r\n\t\t\t//\t\tAfter initialization,\r\n\t\t\t//\t\twhen passed a boolean, controls whether or not the CheckBox is checked.\r\n\t\t\t//\t\tIf passed a string, changes the value attribute of the CheckBox (the one\r\n\t\t\t//\t\tspecified as \"value\" when the CheckBox was constructed\r\n\t\t\t//\t\t(ex: `<input data-dojo-type=\"dijit/CheckBox\" value=\"chicken\">`).\r\n\t\t\t//\r\n\t\t\t//\t\t`widget.set('value', string)` will check the checkbox and change the value to the\r\n\t\t\t//\t\tspecified string.\r\n\t\t\t//\r\n\t\t\t//\t\t`widget.set('value', boolean)` will change the checked state.\r\n\r\n\t\t\tif(typeof newValue == \"string\"){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tnewValue = true;\r\n\t\t\t}\r\n\t\t\tif(this._created){\r\n\t\t\t\tthis.set('checked', newValue, priorityChange);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so get('value') works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf the CheckBox is checked, returns the value attribute.\r\n\t\t\t//\t\tOtherwise returns false.\r\n\t\t\treturn this.checked && this._get(\"value\");\r\n\t\t},\r\n\r\n\t\t// Override behavior from Button, since we don't have an iconNode or valueNode\r\n\t\t_setIconClassAttr: null,\r\n\t\t_setNameAttr: \"focusNode\",\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Need to set initial checked state via node.setAttribute so that form submit works\r\n\t\t\t// and IE8 radio button tab order is preserved.\r\n\t\t\t// domAttr.set(node, \"checked\", bool) doesn't work on IE until node has been attached\r\n\t\t\t// to <body>, see #8666\r\n\t\t\tthis.checkedAttrSetting = \"\";\r\n\t\t},\r\n\r\n\t\t _fillContent: function(){\r\n\t\t\t// Override Button::_fillContent() since it doesn't make sense for CheckBox,\r\n\t\t\t// since CheckBox doesn't even have a container\r\n\t\t},\r\n\r\n\t\t_onFocus: function(){\r\n\t\t\tif(this.id){\r\n\t\t\t\tquery(\"label[for='\"+this.id+\"']\").addClass(\"dijitFocusedLabel\");\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\tif(this.id){\r\n\t\t\t\tquery(\"label[for='\"+this.id+\"']\").removeClass(\"dijitFocusedLabel\");\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_RadioButtonMixin',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/query!css2\", // query\r\n\t\"../registry\"    // registry.getEnclosingWidget\r\n], function(array, declare, domAttr, lang, query, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_RadioButtonMixin\r\n\r\n\treturn declare(\"dijit.form._RadioButtonMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin to provide widget functionality for an HTML radio button\r\n\r\n\t\t// type: [private] String\r\n\t\t//\t\ttype attribute on `<input>` node.\r\n\t\t//\t\tUsers should not change this value.\r\n\t\ttype: \"radio\",\r\n\r\n\t\t_getRelatedWidgets: function(){\r\n\t\t\t// Private function needed to help iterate over all radio buttons in a group.\r\n\t\t\tvar ary = [];\r\n\t\t\tquery(\"input[type=radio]\", this.focusNode.form || this.ownerDocument).forEach(// can't use name= since query doesn't support [] in the name\r\n\t\t\t\tlang.hitch(this, function(inputNode){\r\n\t\t\t\t\tif(inputNode.name == this.name && inputNode.form == this.focusNode.form){\r\n\t\t\t\t\t\tvar widget = registry.getEnclosingWidget(inputNode);\r\n\t\t\t\t\t\tif(widget){\r\n\t\t\t\t\t\t\tary.push(widget);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn ary;\r\n\t\t},\r\n\r\n\t\t_setCheckedAttr: function(/*Boolean*/ value){\r\n\t\t\t// If I am being checked then have to deselect currently checked radio button\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this._created){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(value){\r\n\t\t\t\tarray.forEach(this._getRelatedWidgets(), lang.hitch(this, function(widget){\r\n\t\t\t\t\tif(widget != this && widget.checked){\r\n\t\t\t\t\t\twidget.set('checked', false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getSubmitValue: function(/*String*/ value){\r\n\t\t\treturn value == null ? \"on\" : value;\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ e){\r\n\t\t\tif(this.checked || this.disabled){ // nothing to do\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.readOnly){ // ignored by some browsers so we have to resync the DOM elements with widget values\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tarray.forEach(this._getRelatedWidgets(), lang.hitch(this, function(widget){\r\n\t\t\t\t\tdomAttr.set(this.focusNode || this.domNode, 'checked', widget.checked);\r\n\t\t\t\t}));\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/RadioButton',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./CheckBox\",\r\n\t\"./_RadioButtonMixin\"\r\n], function(declare, CheckBox, _RadioButtonMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/RadioButton\r\n\r\n\treturn declare(\"dijit.form.RadioButton\", [CheckBox, _RadioButtonMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tSame as an HTML radio, but with fancy styling.\r\n\r\n\t\tbaseClass: \"dijitRadio\"\r\n\t});\r\n});\r\n\n\ndefine('dojo/cldr/monetary',[\"../_base/kernel\", \"../_base/lang\"], function(dojo, lang){\r\n\r\n// module:\r\n//\t\tdojo/cldr/monetary\r\n\r\nvar monetary = {\r\n\t// summary:\r\n\t//\t\tTODOC\r\n};\r\nlang.setObject(\"dojo.cldr.monetary\", monetary);\r\n\r\nmonetary.getData = function(/*String*/ code){\r\n\t// summary:\r\n\t//\t\tA mapping of currency code to currency-specific formatting information. Returns a unique object with properties: places, round.\r\n\t// code:\r\n\t//\t\tan [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code\r\n\r\n\t// from http://www.unicode.org/cldr/data/common/supplemental/supplementalData.xml:supplementalData/currencyData/fractions\r\n\r\n\tvar placesData = {\r\n\t\tADP:0,AFN:0,ALL:0,AMD:0,BHD:3,BIF:0,BYR:0,CLF:0,CLP:0,\r\n\t\tCOP:0,CRC:0,DJF:0,ESP:0,GNF:0,GYD:0,HUF:0,IDR:0,IQD:0,\r\n\t\tIRR:3,ISK:0,ITL:0,JOD:3,JPY:0,KMF:0,KPW:0,KRW:0,KWD:3,\r\n\t\tLAK:0,LBP:0,LUF:0,LYD:3,MGA:0,MGF:0,MMK:0,MNT:0,MRO:0,\r\n\t\tMUR:0,OMR:3,PKR:0,PYG:0,RSD:0,RWF:0,SLL:0,SOS:0,STD:0,\r\n\t\tSYP:0,TMM:0,TND:3,TRL:0,TZS:0,UGX:0,UZS:0,VND:0,VUV:0,\r\n\t\tXAF:0,XOF:0,XPF:0,YER:0,ZMK:0,ZWD:0\r\n\t};\r\n\r\n\tvar roundingData = {};\r\n\r\n\tvar places = placesData[code], round = roundingData[code];\r\n\tif(typeof places == \"undefined\"){ places = 2; }\r\n\tif(typeof round == \"undefined\"){ round = 0; }\r\n\r\n\treturn {places: places, round: round}; // Object\r\n};\r\n\r\nreturn monetary;\r\n});\r\n\ndefine('dojo/currency',[\r\n\t\"./_base/array\",\r\n\t\"./_base/lang\",\r\n\t/*===== \"./_base/declare\", =====*/\r\n\t\"./number\",\r\n\t\"./i18n\", \"./i18n!./cldr/nls/currency\",\r\n\t\"./cldr/monetary\"\r\n], function(darray, lang, /*===== declare, =====*/ dnumber, i18n, nlsCurrency, cldrMonetary){\r\n\r\n// module:\r\n//\t\tdojo/currency\r\n\r\nvar currency = {\r\n\t// summary:\r\n\t//\t\tlocalized formatting and parsing routines for currencies\r\n\t// description:\r\n\t//\t\textends dojo.number to provide culturally-appropriate formatting of values\r\n\t//\t\tin various world currencies, including use of a currency symbol.  The currencies are specified\r\n\t//\t\tby a three-letter international symbol in all uppercase, and support for the currencies is\r\n\t//\t\tprovided by the data in `dojo.cldr`.  The scripts generating dojo.cldr specify which\r\n\t//\t\tcurrency support is included.  A fixed number of decimal places is determined based\r\n\t//\t\ton the currency type and is not determined by the 'pattern' argument.  The fractional\r\n\t//\t\tportion is optional, by default, and variable length decimals are not supported.\r\n};\r\nlang.setObject(\"dojo.currency\", currency);\r\n\r\ncurrency._mixInDefaults = function(options){\r\n\toptions = options || {};\r\n\toptions.type = \"currency\";\r\n\r\n\t// Get locale-dependent currency data, like the symbol\r\n\tvar bundle = i18n.getLocalization(\"dojo.cldr\", \"currency\", options.locale) || {};\r\n\r\n\t// Mixin locale-independent currency data, like # of places\r\n\tvar iso = options.currency;\r\n\tvar data = cldrMonetary.getData(iso);\r\n\r\n\tdarray.forEach([\"displayName\",\"symbol\",\"group\",\"decimal\"], function(prop){\r\n\t\tdata[prop] = bundle[iso+\"_\"+prop];\r\n\t});\r\n\r\n\tdata.fractional = [true, false];\r\n\r\n\t// Mixin with provided options\r\n\treturn lang.mixin(data, options);\r\n};\r\n\r\n/*=====\r\ncurrency.__FormatOptions = declare([dnumber.__FormatOptions], {\r\n\t// type: String?\r\n\t//\t\tShould not be set.  Value is assumed to be \"currency\".\r\n\t// symbol: String?\r\n\t//\t\tlocalized currency symbol. The default will be looked up in table of supported currencies in `dojo.cldr`\r\n\t//\t\tA [ISO4217](http://en.wikipedia.org/wiki/ISO_4217) currency code will be used if not found.\r\n\t// currency: String?\r\n\t//\t\tan [ISO4217](http://en.wikipedia.org/wiki/ISO_4217) currency code, a three letter sequence like \"USD\".\r\n\t//\t\tFor use with dojo.currency only.\r\n\t// places: Number?\r\n\t//\t\tnumber of decimal places to show.  Default is defined based on which currency is used.\r\n\ttype: \"\",\r\n\tsymbol: \"\",\r\n\tcurrency: \"\",\r\n\tplaces: \"\"\r\n});\r\n=====*/\r\n\r\ncurrency.format = function(/*Number*/ value, /*__FormatOptions?*/ options){\r\n\t// summary:\r\n\t//\t\tFormat a Number as a currency, using locale-specific settings\r\n\t//\r\n\t// description:\r\n\t//\t\tCreate a string from a Number using a known, localized pattern.\r\n\t//\t\t[Formatting patterns](http://www.unicode.org/reports/tr35/#Number_Elements)\r\n\t//\t\tappropriate to the locale are chosen from the [CLDR](http://unicode.org/cldr)\r\n\t//\t\tas well as the appropriate symbols and delimiters and number of decimal places.\r\n\t//\r\n\t// value:\r\n\t//\t\tthe number to be formatted.\r\n\r\n\treturn dnumber.format(value, currency._mixInDefaults(options));\r\n};\r\n\r\ncurrency.regexp = function(/*dnumber.__RegexpOptions?*/ options){\r\n\t//\r\n\t// summary:\r\n\t//\t\tBuilds the regular needed to parse a currency value\r\n\t//\r\n\t// description:\r\n\t//\t\tReturns regular expression with positive and negative match, group and decimal separators\r\n\t//\t\tNote: the options.places default, the number of decimal places to accept, is defined by the currency type.\r\n\treturn dnumber.regexp(currency._mixInDefaults(options)); // String\r\n};\r\n\r\n/*=====\r\nvar __ParseOptions = currency.__ParseOptions = declare(dnumber.__ParseOptions, {\r\n\t// type: String?\r\n\t//\t\tShould not be set.  Value is assumed to be currency.\r\n\t// currency: String?\r\n\t//\t\tan [ISO4217](http://en.wikipedia.org/wiki/ISO_4217) currency code, a three letter sequence like \"USD\".\r\n\t//\t\tFor use with dojo.currency only.\r\n\t// symbol: String?\r\n\t//\t\tlocalized currency symbol. The default will be looked up in table of supported currencies in `dojo.cldr`\r\n\t//\t\tA [ISO4217](http://en.wikipedia.org/wiki/ISO_4217) currency code will be used if not found.\r\n\t// places: Number?\r\n\t//\t\tfixed number of decimal places to accept.  The default is determined based on which currency is used.\r\n\t// fractional: Boolean|Array?\r\n\t//\t\tWhether to include the fractional portion, where the number of decimal places are implied by the currency\r\n\t//\t\tor explicit 'places' parameter.  The value [true,false] makes the fractional portion optional.\r\n\t//\t\tBy default for currencies, it the fractional portion is optional.\r\n});\r\n=====*/\r\n\r\ncurrency.parse = function(/*String*/ expression, /*__ParseOptions?*/ options){\r\n\t//\r\n\t// summary:\r\n\t//\t\tConvert a properly formatted currency string to a primitive Number,\r\n\t//\t\tusing locale-specific settings.\r\n\t// description:\r\n\t//\t\tCreate a Number from a string using a known, localized pattern.\r\n\t//\t\t[Formatting patterns](http://www.unicode.org/reports/tr35/#Number_Format_Patterns)\r\n\t//\t\tare chosen appropriate to the locale, as well as the appropriate symbols and delimiters\r\n\t//\t\tand number of decimal places.\r\n\t// expression:\r\n\t//\t\tA string representation of a currency value\r\n\r\n\treturn dnumber.parse(expression, currency._mixInDefaults(options));\r\n};\r\n\r\nreturn currency;\r\n});\r\n\ndefine('dijit/form/RangeBoundTextBox',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"./MappedTextBox\",\r\n\t\"dojo/i18n!./nls/validate\"\r\n], function(declare, i18n, MappedTextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/RangeBoundTextBox\r\n\r\n\r\n\tvar RangeBoundTextBox = declare(\"dijit.form.RangeBoundTextBox\", MappedTextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for textbox form widgets which defines a range of valid values.\r\n\r\n\t\t// rangeMessage: String\r\n\t\t//\t\tThe message to display if value is out-of-range\r\n\t\trangeMessage: \"\",\r\n\r\n\t\t/*=====\r\n\t\t// constraints: RangeBoundTextBox.__Constraints\r\n\t\tconstraints: {},\r\n\t\t======*/\r\n\r\n\t\trangeCheck: function(/*Number*/ primitive, /*dijit/form/RangeBoundTextBox.__Constraints*/ constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function used to validate the range of the numeric input value.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn\t(\"min\" in constraints? (this.compare(primitive,constraints.min) >= 0) : true) &&\r\n\t\t\t\t(\"max\" in constraints? (this.compare(primitive,constraints.max) <= 0) : true); // Boolean\r\n\t\t},\r\n\r\n\t\tisInRange: function(/*Boolean*/ /*===== isFocused =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests if the value is in the min/max range specified in constraints\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this.rangeCheck(this.get('value'), this.constraints);\r\n\t\t},\r\n\r\n\t\t_isDefinitelyOutOfRange: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if the value is out of range and will remain\r\n\t\t\t//\t\tout of range even if the user types more characters\r\n\t\t\tvar val = this.get('value');\r\n\t\t\tif(val == null){ return false; } // not yet valid enough to compare to\r\n\t\t\tvar outOfRange = false;\r\n\t\t\tif(\"min\" in this.constraints){\r\n\t\t\t\tvar min = this.constraints.min;\r\n\t\t\t\toutOfRange = this.compare(val, ((typeof min == \"number\") && min >= 0 && val != 0) ? 0 : min) < 0;\r\n\t\t\t}\r\n\t\t\tif(!outOfRange && (\"max\" in this.constraints)){\r\n\t\t\t\tvar max = this.constraints.max;\r\n\t\t\t\toutOfRange = this.compare(val, ((typeof max != \"number\") || max > 0) ? max : 0) > 0;\r\n\t\t\t}\r\n\t\t\treturn outOfRange;\r\n\t\t},\r\n\r\n\t\t_isValidSubset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides `dijit/form/ValidationTextBox._isValidSubset()`.\r\n\t\t\t//\t\tReturns true if the input is syntactically valid, and either within\r\n\t\t\t//\t\trange or could be made in range by more typing.\r\n\t\t\treturn this.inherited(arguments) && !this._isDefinitelyOutOfRange();\r\n\t\t},\r\n\r\n\t\tisValid: function(/*Boolean*/ isFocused){\r\n\t\t\t// Overrides dijit/form/ValidationTextBox.isValid() to check that the value is also in range.\r\n\t\t\treturn this.inherited(arguments) &&\r\n\t\t\t\t((this._isEmpty(this.textbox.value) && !this.required) || this.isInRange(isFocused)); // Boolean\r\n\t\t},\r\n\r\n\t\tgetErrorMessage: function(/*Boolean*/ isFocused){\r\n\t\t\t// Overrides dijit/form/ValidationTextBox.getErrorMessage() to print \"out of range\" message if appropriate\r\n\t\t\tvar v = this.get('value');\r\n\t\t\tif(v != null /* and !undefined */ && v !== '' && (typeof v != \"number\" || !isNaN(v)) && !this.isInRange(isFocused)){ // don't check isInRange w/o a real value\r\n\t\t\t\treturn this.rangeMessage; // String\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.rangeMessage){\r\n\t\t\t\tthis.messages = i18n.getLocalization(\"dijit.form\", \"validate\", this.lang);\r\n\t\t\t\tthis.rangeMessage = this.messages.rangeMessage;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t/*=====\r\n\tRangeBoundTextBox.__Constraints = declare(null, {\r\n\t\t// min: Number\r\n\t\t//\t\tMinimum signed value.  Default is -Infinity\r\n\t\t// max: Number\r\n\t\t//\t\tMaximum signed value.  Default is +Infinity\r\n\t});\r\n\t=====*/\r\n\treturn RangeBoundTextBox;\r\n});\r\n\ndefine('dijit/form/NumberTextBox',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.hitch lang.mixin\r\n\t\"dojo/i18n\", // i18n.normalizeLocale, i18n.getLocalization\r\n\t\"dojo/string\", // string.rep\r\n\t\"dojo/number\", // number._realNumberRegexp number.format number.parse number.regexp\r\n\t\"./RangeBoundTextBox\"\r\n], function(declare, lang, i18n, string, number, RangeBoundTextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/NumberTextBox\r\n\r\n\t// A private helper function to determine decimal information\r\n\t// Returns an object with \"sep\" and \"places\" properties\r\n\tvar getDecimalInfo = function(constraints){\r\n\t\tvar constraints = constraints || {},\r\n\t\t\tbundle = i18n.getLocalization(\"dojo.cldr\", \"number\", i18n.normalizeLocale(constraints.locale)),\r\n\t\t\tpattern = constraints.pattern ? constraints.pattern : bundle[(constraints.type || \"decimal\")+\"Format\"];\r\n\r\n\t\t// The number of places in the constraint can be specified in several ways,\r\n\t\t// the resolution order is:\r\n\t\t//\r\n\t\t// 1. If constraints.places is a number, use that\r\n\t\t// 2. If constraints.places is a string, which specifies a range, use the range max (e.g. 0,4)\r\n\t\t// 3. If a pattern is specified, use the implicit number of places in the pattern.\r\n\t\t// 4. If neither constraints.pattern or constraints.places is specified, use the locale default pattern\r\n\t\tvar places;\r\n\t\tif(typeof constraints.places == \"number\"){\r\n\t\t\tplaces = constraints.places;\r\n\t\t}else if(typeof constraints.places === \"string\" && constraints.places.length > 0){\r\n\t\t\tplaces = constraints.places.replace(/.*,/, \"\");\r\n\t\t}else{\r\n\t\t\tplaces = (pattern.indexOf(\".\") != -1 ? pattern.split(\".\")[1].replace(/[^#0]/g, \"\").length : 0);\r\n\t\t}\r\n\r\n\t\treturn { sep: bundle.decimal, places: places };\r\n\t};\r\n\r\n\tvar NumberTextBoxMixin = declare(\"dijit.form.NumberTextBoxMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA mixin for all number textboxes\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\t// Override ValidationTextBox.pattern.... we use a reg-ex generating function rather\r\n\t\t// than a straight regexp to deal with locale (plus formatting options too?)\r\n\t\tpattern: function(constraints){\r\n\t\t\t// if focused, accept either currency data or NumberTextBox format\r\n\t\t\treturn '(' + (this.focused && this.editOptions ? this._regExpGenerator(lang.delegate(constraints, this.editOptions)) + '|' : '')\r\n\t\t\t\t+ this._regExpGenerator(constraints) + ')';\r\n\t\t},\r\n\r\n\t\t/*=====\r\n\t\t// constraints: NumberTextBox.__Constraints\r\n\t\t//\t\tDespite the name, this parameter specifies both constraints on the input\r\n\t\t//\t\t(including minimum/maximum allowed values) as well as\r\n\t\t//\t\tformatting options like places (the number of digits to display after\r\n\t\t//\t\tthe decimal point).\r\n\t\tconstraints: {},\r\n\t\t======*/\r\n\r\n\t\t// value: Number\r\n\t\t//\t\tThe value of this NumberTextBox as a Javascript Number (i.e., not a String).\r\n\t\t//\t\tIf the displayed value is blank, the value is NaN, and if the user types in\r\n\t\t//\t\tan gibberish value (like \"hello world\"), the value is undefined\r\n\t\t//\t\t(i.e. get('value') returns undefined).\r\n\t\t//\r\n\t\t//\t\tSymmetrically, set('value', NaN) will clear the displayed value,\r\n\t\t//\t\twhereas set('value', undefined) will have no effect.\r\n\t\tvalue: NaN,\r\n\r\n\t\t// editOptions: [protected] Object\r\n\t\t//\t\tProperties to mix into constraints when the value is being edited.\r\n\t\t//\t\tThis is here because we edit the number in the format \"12345\", which is\r\n\t\t//\t\tdifferent than the display value (ex: \"12,345\")\r\n\t\teditOptions: { pattern: '#.######' },\r\n\r\n\t\t/*=====\r\n\t\t_formatter: function(value, options){\r\n\t\t\t// summary:\r\n\t\t\t//\t\t_formatter() is called by format().  It's the base routine for formatting a number,\r\n\t\t\t//\t\tas a string, for example converting 12345 into \"12,345\".\r\n\t\t\t// value: Number\r\n\t\t\t//\t\tThe number to be converted into a string.\r\n\t\t\t// options: number.__FormatOptions?\r\n\t\t\t//\t\tFormatting options\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\r\n\t\t\treturn \"12345\";\t\t// String\r\n\t\t},\r\n\t\t =====*/\r\n\t\t_formatter: number.format,\r\n\r\n\t\t/*=====\r\n\t\t_regExpGenerator: function(constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGenerate a localized regular expression as a string, according to constraints.\r\n\t\t\t// constraints: number.__ParseOptions\r\n\t\t\t//\t\tFormatting options\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\treturn \"(\\d*).(\\d*)\";\t// string\r\n\t\t},\r\n\t\t=====*/\r\n\t\t_regExpGenerator: number.regexp,\r\n\r\n\t\t// _decimalInfo: Object\r\n\t\t// summary:\r\n\t\t//\t\tAn object containing decimal related properties relevant to this TextBox.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\t_decimalInfo: getDecimalInfo(),\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._set(\"type\", \"text\"); // in case type=\"number\" was specified which messes up parse/format\r\n\t\t},\r\n\r\n\t\t_setConstraintsAttr: function(/*Object*/ constraints){\r\n\t\t\tvar places = typeof constraints.places == \"number\"? constraints.places : 0;\r\n\t\t\tif(places){ places++; } // decimal rounding errors take away another digit of precision\r\n\t\t\tif(typeof constraints.max != \"number\"){\r\n\t\t\t\tconstraints.max = 9 * Math.pow(10, 15-places);\r\n\t\t\t}\r\n\t\t\tif(typeof constraints.min != \"number\"){\r\n\t\t\t\tconstraints.min = -9 * Math.pow(10, 15-places);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments, [ constraints ]);\r\n\t\t\tif(this.focusNode && this.focusNode.value && !isNaN(this.value)){\r\n\t\t\t\tthis.set('value', this.value);\r\n\t\t\t}\r\n\t\t\t// Capture decimal information based on the constraint locale and pattern.\r\n\t\t\tthis._decimalInfo = getDecimalInfo(constraints);\r\n\t\t},\r\n\r\n\t\t_onFocus: function(){\r\n\t\t\tif(this.disabled || this.readOnly){ return; }\r\n\t\t\tvar val = this.get('value');\r\n\t\t\tif(typeof val == \"number\" && !isNaN(val)){\r\n\t\t\t\tvar formattedValue = this.format(val, this.constraints);\r\n\t\t\t\tif(formattedValue !== undefined){\r\n\t\t\t\t\tthis.textbox.value = formattedValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tformat: function(/*Number*/ value, /*number.__FormatOptions*/ constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFormats the value as a Number, according to constraints.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar formattedValue = String(value);\r\n\t\t\tif(typeof value != \"number\"){ return formattedValue; }\r\n\t\t\tif(isNaN(value)){ return \"\"; }\r\n\t\t\t// check for exponential notation that dojo/number.format() chokes on\r\n\t\t\tif(!(\"rangeCheck\" in this && this.rangeCheck(value, constraints)) && constraints.exponent !== false && /\\de[-+]?\\d/i.test(formattedValue)){\r\n\t\t\t\treturn formattedValue;\r\n\t\t\t}\r\n\t\t\tif(this.editOptions && this.focused){\r\n\t\t\t\tconstraints = lang.mixin({}, constraints, this.editOptions);\r\n\t\t\t}\r\n\t\t\treturn this._formatter(value, constraints);\r\n\t\t},\r\n\r\n\t\t/*=====\r\n\t\t_parser: function(value, constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tParses the string value as a Number, according to constraints.\r\n\t\t\t// value: String\r\n\t\t\t//\t\tString representing a number\r\n\t\t\t// constraints: number.__ParseOptions\r\n\t\t\t//\t\tFormatting options\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\treturn 123.45;\t\t// Number\r\n\t\t},\r\n\t\t=====*/\r\n\t\t_parser: number.parse,\r\n\r\n\t\tparse: function(/*String*/ value, /*number.__FormatOptions*/ constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReplaceable function to convert a formatted string to a number value\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\r\n\t\t\tvar v = this._parser(value, lang.mixin({}, constraints, (this.editOptions && this.focused) ? this.editOptions : {}));\r\n\t\t\tif(this.editOptions && this.focused && isNaN(v)){\r\n\t\t\t\tv = this._parser(value, constraints); // parse w/o editOptions: not technically needed but is nice for the user\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t},\r\n\r\n\t\t_getDisplayedValueAttr: function(){\r\n\t\t\tvar v = this.inherited(arguments);\r\n\t\t\treturn isNaN(v) ? this.textbox.value : v;\r\n\t\t},\r\n\r\n\t\tfilter: function(/*Number*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is called with both the display value (string), and the actual value (a number).\r\n\t\t\t//\t\tWhen called with the actual value it does corrections so that '' etc. are represented as NaN.\r\n\t\t\t//\t\tOtherwise it dispatches to the superclass's filter() method.\r\n\t\t\t//\r\n\t\t\t//\t\tSee `dijit/form/TextBox.filter()` for more details.\r\n\t\t\tif(value == null  /* or undefined */ || typeof value == \"string\" && value ==''){\r\n\t\t\t\treturn NaN;\r\n\t\t\t}else if(typeof value == \"number\" && !isNaN(value) && value != 0){\r\n\t\t\t\tvalue = number.round(value, this._decimalInfo.places);\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments, [value]);\r\n\t\t},\r\n\r\n\t\tserialize: function(/*Number*/ value, /*Object?*/ options){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvert value (a Number) into a canonical string (ie, how the number literal is written in javascript/java/C/etc.)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn (typeof value != \"number\" || isNaN(value)) ? '' : this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setBlurValue: function(){\r\n\t\t\tvar val = lang.hitch(lang.delegate(this, { focused: true }), \"get\")('value'); // parse with editOptions\r\n\t\t\tthis._setValueAttr(val, true);\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Number*/ value, /*Boolean?*/ priorityChange, /*String?*/ formattedValue){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', ...) works.\r\n\t\t\tif(value !== undefined && formattedValue === undefined){\r\n\t\t\t\tformattedValue = String(value);\r\n\t\t\t\tif(typeof value == \"number\"){\r\n\t\t\t\t\tif(isNaN(value)){ formattedValue = '' }\r\n\t\t\t\t\t// check for exponential notation that number.format chokes on\r\n\t\t\t\t\telse if((\"rangeCheck\" in this && this.rangeCheck(value, this.constraints)) || this.constraints.exponent === false || !/\\de[-+]?\\d/i.test(formattedValue)){\r\n\t\t\t\t\t\tformattedValue = undefined; // lets format compute a real string value\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(!value){ // 0 processed in if branch above, ''|null|undefined flows through here\r\n\t\t\t\t\tformattedValue = '';\r\n\t\t\t\t\tvalue = NaN;\r\n\t\t\t\t}else{ // non-numeric values\r\n\t\t\t\t\tvalue = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments, [value, priorityChange, formattedValue]);\r\n\t\t},\r\n\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so get('value') works.\r\n\t\t\t//\t\tReturns Number, NaN for '', or undefined for unparseable text\r\n\t\t\tvar v = this.inherited(arguments); // returns Number for all values accepted by parse() or NaN for all other displayed values\r\n\r\n\t\t\t// If the displayed value of the textbox is gibberish (ex: \"hello world\"), this.inherited() above\r\n\t\t\t// returns NaN; this if() branch converts the return value to undefined.\r\n\t\t\t// Returning undefined prevents user text from being overwritten when doing _setValueAttr(_getValueAttr()).\r\n\t\t\t// A blank displayed value is still returned as NaN.\r\n\t\t\tif(isNaN(v) && this.textbox.value !== ''){\r\n\t\t\t\tif(this.constraints.exponent !== false && /\\de[-+]?\\d/i.test(this.textbox.value) && (new RegExp(\"^\"+number._realNumberRegexp(lang.delegate(this.constraints))+\"$\").test(this.textbox.value))){\t// check for exponential notation that parse() rejected (erroneously?)\r\n\t\t\t\t\tvar n = Number(this.textbox.value);\r\n\t\t\t\t\treturn isNaN(n) ? undefined : n; // return exponential Number or undefined for random text (may not be possible to do with the above RegExp check)\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn undefined; // gibberish\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\treturn v; // Number or NaN for ''\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tisValid: function(/*Boolean*/ isFocused){\r\n\t\t\t// Overrides dijit/form/RangeBoundTextBox.isValid() to check that the editing-mode value is valid since\r\n\t\t\t// it may not be formatted according to the regExp validation rules\r\n\t\t\tif(!this.focused || this._isEmpty(this.textbox.value)){\r\n\t\t\t\treturn this.inherited(arguments);\r\n\t\t\t}else{\r\n\t\t\t\tvar v = this.get('value');\r\n\t\t\t\tif(!isNaN(v) && this.rangeCheck(v, this.constraints)){\r\n\t\t\t\t\tif(this.constraints.exponent !== false && /\\de[-+]?\\d/i.test(this.textbox.value)){ // exponential, parse doesn't like it\r\n\t\t\t\t\t\treturn true; // valid exponential number in range\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treturn this.inherited(arguments);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_isValidSubset: function(){\r\n\t\t\t// Overrides dijit/form/ValidationTextBox._isValidSubset()\r\n\t\t\t//\r\n\t\t\t// The inherited method only checks that the computed regex pattern is valid, which doesn't\r\n\t\t\t// take into account that numbers are a special case. Specifically:\r\n\t\t\t//\r\n\t\t\t//  (1) An arbitrary amount of leading or trailing zero's can be ignored.\r\n\t\t\t//  (2) Since numeric input always occurs in the order of most significant to least significant\r\n\t\t\t//      digits, the maximum and minimum possible values for partially inputted numbers can easily\r\n\t\t\t//      be determined by using the number of remaining digit spaces available.\r\n\t\t\t//\r\n\t\t\t// For example, if an input has a maxLength of 5, and a min value of greater than 100, then the subset\r\n\t\t\t// is invalid if there are 3 leading 0s. It remains valid for the first two.\r\n\t\t\t//\r\n\t\t\t// Another example is if the min value is 1.1. Once a value of 1.0 is entered, no additional trailing digits\r\n\t\t\t// could possibly satisify the min requirement.\r\n\t\t\t//\r\n\t\t\t// See ticket #17923\r\n\t\t\tvar hasMinConstraint = (typeof this.constraints.min == \"number\"),\r\n\t\t\t\thasMaxConstraint = (typeof this.constraints.max == \"number\"),\r\n\t\t\t\tcurVal = this.get('value');\r\n\r\n\t\t\t// If there is no parsable number, or there are no min or max bounds, then we can safely\r\n\t\t\t// skip all remaining checks\r\n\t\t\tif(isNaN(curVal) || (!hasMinConstraint && !hasMaxConstraint)){\r\n\t\t\t\treturn this.inherited(arguments);\r\n\t\t\t}\r\n\r\n\t\t\t// This block picks apart the values in the text box to be used later to compute the min and max possible\r\n\t\t\t// values based on the current value and the remaining available digits.\r\n\t\t\t//\r\n\t\t\t// Warning: The use of a \"num|0\" expression, can be confusing. See the link below\r\n\t\t\t// for an explanation.\r\n\t\t\t//\r\n\t\t\t// http://stackoverflow.com/questions/12125421/why-does-a-shift-by-0-truncate-the-decimal\r\n\t\t\tvar integerDigits = curVal|0,\r\n\t\t\t\tvalNegative = curVal < 0,\r\n\t\t\t\t// Check if the current number has a decimal based on its locale\r\n\t\t\t\thasDecimal = this.textbox.value.indexOf(this._decimalInfo.sep) != -1,\r\n\t\t\t\t// Determine the max digits based on the textbox length. If no length is\r\n\t\t\t\t// specified, chose a huge number to account for crazy formatting.\r\n\t\t\t\tmaxDigits = this.maxLength || 20,\r\n\t\t\t\t// Determine the remaining digits, based on the max digits\r\n\t\t\t\tremainingDigitsCount = maxDigits - this.textbox.value.length,\r\n\t\t\t\t// avoid approximation issues by capturing the decimal portion of the value as the user-entered string\r\n\t\t\t\tfractionalDigitStr = hasDecimal ? this.textbox.value.split(this._decimalInfo.sep)[1].replace(/[^0-9]/g, \"\") : \"\";\r\n\r\n\t\t\t// Create a normalized value string in the form of #.###\r\n\t\t\tvar normalizedValueStr = hasDecimal ? integerDigits+\".\"+fractionalDigitStr : integerDigits+\"\";\r\n\r\n\t\t\t// The min and max values for the field can be determined using the following\r\n\t\t\t// logic:\r\n\t\t\t//\r\n\t\t\t//  If the number is positive:\r\n\t\t\t//      min value = the current value\r\n\t\t\t//      max value = the current value with 9s appended for all remaining possible digits\r\n\t\t\t//  else\r\n\t\t\t//      min value = the current value with 9s appended for all remaining possible digits\r\n\t\t\t//      max value = the current value\r\n\t\t\t//\r\n\t\t\tvar ninePaddingStr = string.rep(\"9\", remainingDigitsCount),\r\n\t\t\t    minPossibleValue = curVal,\r\n\t\t\t    maxPossibleValue = curVal;\r\n\t\t\tif (valNegative){\r\n\t\t\t\tminPossibleValue = Number(normalizedValueStr+ninePaddingStr);\r\n\t\t\t} else{\r\n\t\t\t\tmaxPossibleValue = Number(normalizedValueStr+ninePaddingStr);\r\n\t\t\t}\r\n\r\n\t\t\treturn !((hasMinConstraint && maxPossibleValue < this.constraints.min)\r\n\t\t\t\t\t|| (hasMaxConstraint && minPossibleValue > this.constraints.max));\r\n\t\t}\r\n\t});\r\n\r\n\tvar NumberTextBox = declare(\"dijit.form.NumberTextBox\", [RangeBoundTextBox, NumberTextBoxMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA TextBox for entering numbers, with formatting and range checking\r\n\t\t// description:\r\n\t\t//\t\tNumberTextBox is a textbox for entering and displaying numbers, supporting\r\n\t\t//\t\tthe following main features:\r\n\t\t//\r\n\t\t//\t\t1. Enforce minimum/maximum allowed values (as well as enforcing that the user types\r\n\t\t//\t\t\ta number rather than a random string)\r\n\t\t//\t\t2. NLS support (altering roles of comma and dot as \"thousands-separator\" and \"decimal-point\"\r\n\t\t//\t\t\tdepending on locale).\r\n\t\t//\t\t3. Separate modes for editing the value and displaying it, specifically that\r\n\t\t//\t\t\tthe thousands separator character (typically comma) disappears when editing\r\n\t\t//\t\t\tbut reappears after the field is blurred.\r\n\t\t//\t\t4. Formatting and constraints regarding the number of places (digits after the decimal point)\r\n\t\t//\t\t\tallowed on input, and number of places displayed when blurred (see `constraints` parameter).\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitNumberTextBox\"\r\n\t});\r\n\r\n\tNumberTextBox.Mixin = NumberTextBoxMixin;\t// for monkey patching\r\n\r\n\t/*=====\r\n\t NumberTextBox.__Constraints = declare([RangeBoundTextBox.__Constraints, number.__FormatOptions, number.__ParseOptions], {\r\n\t\t // summary:\r\n\t\t //\t\tSpecifies both the rules on valid/invalid values (minimum, maximum,\r\n\t\t //\t\tnumber of required decimal places), and also formatting options for\r\n\t\t //\t\tdisplaying the value when the field is not focused.\r\n\t\t // example:\r\n\t\t //\t\tMinimum/maximum:\r\n\t\t //\t\tTo specify a field between 0 and 120:\r\n\t\t //\t|\t\t{min:0,max:120}\r\n\t\t //\t\tTo specify a field that must be an integer:\r\n\t\t //\t|\t\t{fractional:false}\r\n\t\t //\t\tTo specify a field where 0 to 3 decimal places are allowed on input:\r\n\t\t //\t|\t\t{places:'0,3'}\r\n\t });\r\n\t =====*/\r\n\r\n\treturn NumberTextBox;\r\n});\r\n\ndefine('dijit/form/CurrencyTextBox',[\r\n\t\"dojo/currency\", // currency._mixInDefaults currency.format currency.parse currency.regexp\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"./NumberTextBox\"\r\n], function(currency, declare, lang, NumberTextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/CurrencyTextBox\r\n\r\n\t/*=====\r\n\tvar __Constraints = declare([NumberTextBox.__Constraints, currency.__FormatOptions, currency.__ParseOptions], {\r\n\t\t// summary:\r\n\t\t//\t\tSpecifies both the rules on valid/invalid values (minimum, maximum,\r\n\t\t//\t\tnumber of required decimal places), and also formatting options for\r\n\t\t//\t\tdisplaying the value when the field is not focused (currency symbol,\r\n\t\t//\t\tetc.)\r\n\t\t// description:\r\n\t\t//\t\tFollows the pattern of `dijit/form/NumberTextBox.__Constraints`.\r\n\t\t//\t\tIn general developers won't need to set this parameter\r\n\t\t// example:\r\n\t\t//\t\tTo ensure that the user types in the cents (for example, 1.00 instead of just 1):\r\n\t\t//\t|\t\t{fractional:true}\r\n\t});\r\n\t=====*/\r\n\r\n\treturn declare(\"dijit.form.CurrencyTextBox\", NumberTextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tA validating currency textbox\r\n\t\t// description:\r\n\t\t//\t\tCurrencyTextBox is similar to `dijit/form/NumberTextBox` but has a few\r\n\t\t//\t\textra features related to currency:\r\n\t\t//\r\n\t\t//\t\t1. After specifying the currency type (american dollars, euros, etc.) it automatically\r\n\t\t//\t\t\tsets parse/format options such as how many decimal places to show.\r\n\t\t//\t\t2. The currency mark (dollar sign, euro mark, etc.) is displayed when the field is blurred\r\n\t\t//\t\t\tbut erased during editing, so that the user can just enter a plain number.\r\n\r\n\t\t// currency: [const] String\r\n\t\t//\t\tthe [ISO4217](http://en.wikipedia.org/wiki/ISO_4217) currency code, a three letter sequence like \"USD\"\r\n\t\tcurrency: \"\",\r\n\r\n\t\t/*=====\r\n\t\t// constraints: __Constraints\r\n\t\t//\t\tDespite the name, this parameter specifies both constraints on the input\r\n\t\t//\t\t(including minimum/maximum allowed values) as well as\r\n\t\t//\t\tformatting options.\r\n\t\tconstraints: {},\r\n\t\t======*/\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitCurrencyTextBox\",\r\n\r\n\t\t// Override NumberTextBox._formatter to deal with currencies, ex: converts \"123.45\" to \"$123.45\"\r\n\t\t_formatter: currency.format,\r\n\r\n\t\t_parser: currency.parse,\r\n\r\n\t\t_regExpGenerator: currency.regexp,\r\n\r\n\t\tparse: function(/*String*/ value, /*Object*/ constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tParses string value as a Currency, according to the constraints object\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\tvar v = this.inherited(arguments);\r\n\t\t\tif(isNaN(v) && /\\d+/.test(value)){ // currency parse failed, but it could be because they are using NumberTextBox format so try its parse\r\n\t\t\t\tv = lang.hitch(lang.delegate(this, { _parser: NumberTextBox.prototype._parser }), \"inherited\")(arguments);\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t},\r\n\r\n\t\t_setConstraintsAttr: function(/*Object*/ constraints){\r\n\t\t\tif(!constraints.currency && this.currency){\r\n\t\t\t\tconstraints.currency = this.currency;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments, [ currency._mixInDefaults(lang.mixin(constraints, { exponent: false })) ]); // get places\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dojo/cldr/supplemental',[\"../_base/lang\", \"../i18n\"], function(lang, i18n){\r\n\r\n// module:\r\n//\t\tdojo/cldr/supplemental\r\n\r\n\r\nvar supplemental = {\r\n\t// summary:\r\n\t//\t\tTODOC\r\n};\r\nlang.setObject(\"dojo.cldr.supplemental\", supplemental);\r\n\r\nsupplemental.getFirstDayOfWeek = function(/*String?*/locale){\r\n\t// summary:\r\n\t//\t\tReturns a zero-based index for first day of the week\r\n\t// description:\r\n\t//\t\tReturns a zero-based index for first day of the week, as used by the local (Gregorian) calendar.\r\n\t//\t\te.g. Sunday (returns 0), or Monday (returns 1)\r\n\r\n\t// from http://www.unicode.org/cldr/data/common/supplemental/supplementalData.xml:supplementalData/weekData/firstDay\r\n\tvar firstDay = {/*default is 1=Monday*/\r\n\t\tbd:5,mv:5,\r\n\t\tae:6,af:6,bh:6,dj:6,dz:6,eg:6,iq:6,ir:6,jo:6,kw:6,\r\n\t\tly:6,ma:6,om:6,qa:6,sa:6,sd:6,sy:6,ye:6,\r\n\t\tag:0,ar:0,as:0,au:0,br:0,bs:0,bt:0,bw:0,by:0,bz:0,ca:0,cn:0,\r\n\t\tco:0,dm:0,'do':0,et:0,gt:0,gu:0,hk:0,hn:0,id:0,ie:0,il:0,'in':0,\r\n\t\tjm:0,jp:0,ke:0,kh:0,kr:0,la:0,mh:0,mm:0,mo:0,mt:0,mx:0,mz:0,\r\n\t\tni:0,np:0,nz:0,pa:0,pe:0,ph:0,pk:0,pr:0,py:0,sg:0,sv:0,th:0,\r\n\t\ttn:0,tt:0,tw:0,um:0,us:0,ve:0,vi:0,ws:0,za:0,zw:0\r\n\t};\r\n\r\n\tvar country = supplemental._region(locale);\r\n\tvar dow = firstDay[country];\r\n\treturn (dow === undefined) ? 1 : dow; /*Number*/\r\n};\r\n\r\nsupplemental._region = function(/*String?*/locale){\r\n\tlocale = i18n.normalizeLocale(locale);\r\n\tvar tags = locale.split('-');\r\n\tvar region = tags[1];\r\n\tif(!region){\r\n\t\t// IE often gives language only (#2269)\r\n\t\t// Arbitrary mappings of language-only locales to a country:\r\n\t\tregion = {\r\n\t\t\taa:\"et\", ab:\"ge\", af:\"za\", ak:\"gh\", am:\"et\", ar:\"eg\", as:\"in\", av:\"ru\", ay:\"bo\", az:\"az\", ba:\"ru\",\r\n\t\t\tbe:\"by\", bg:\"bg\", bi:\"vu\", bm:\"ml\", bn:\"bd\", bo:\"cn\", br:\"fr\", bs:\"ba\", ca:\"es\", ce:\"ru\", ch:\"gu\",\r\n\t\t\tco:\"fr\", cr:\"ca\", cs:\"cz\", cv:\"ru\", cy:\"gb\", da:\"dk\", de:\"de\", dv:\"mv\", dz:\"bt\", ee:\"gh\", el:\"gr\",\r\n\t\t\ten:\"us\", es:\"es\", et:\"ee\", eu:\"es\", fa:\"ir\", ff:\"sn\", fi:\"fi\", fj:\"fj\", fo:\"fo\", fr:\"fr\", fy:\"nl\",\r\n\t\t\tga:\"ie\", gd:\"gb\", gl:\"es\", gn:\"py\", gu:\"in\", gv:\"gb\", ha:\"ng\", he:\"il\", hi:\"in\", ho:\"pg\", hr:\"hr\",\r\n\t\t\tht:\"ht\", hu:\"hu\", hy:\"am\", ia:\"fr\", id:\"id\", ig:\"ng\", ii:\"cn\", ik:\"us\", \"in\":\"id\", is:\"is\", it:\"it\",\r\n\t\t\tiu:\"ca\", iw:\"il\", ja:\"jp\", ji:\"ua\", jv:\"id\", jw:\"id\", ka:\"ge\", kg:\"cd\", ki:\"ke\", kj:\"na\", kk:\"kz\",\r\n\t\t\tkl:\"gl\", km:\"kh\", kn:\"in\", ko:\"kr\", ks:\"in\", ku:\"tr\", kv:\"ru\", kw:\"gb\", ky:\"kg\", la:\"va\", lb:\"lu\",\r\n\t\t\tlg:\"ug\", li:\"nl\", ln:\"cd\", lo:\"la\", lt:\"lt\", lu:\"cd\", lv:\"lv\", mg:\"mg\", mh:\"mh\", mi:\"nz\", mk:\"mk\",\r\n\t\t\tml:\"in\", mn:\"mn\", mo:\"ro\", mr:\"in\", ms:\"my\", mt:\"mt\", my:\"mm\", na:\"nr\", nb:\"no\", nd:\"zw\", ne:\"np\",\r\n\t\t\tng:\"na\", nl:\"nl\", nn:\"no\", no:\"no\", nr:\"za\", nv:\"us\", ny:\"mw\", oc:\"fr\", om:\"et\", or:\"in\", os:\"ge\",\r\n\t\t\tpa:\"in\", pl:\"pl\", ps:\"af\", pt:\"br\", qu:\"pe\", rm:\"ch\", rn:\"bi\", ro:\"ro\", ru:\"ru\", rw:\"rw\", sa:\"in\",\r\n\t\t\tsd:\"in\", se:\"no\", sg:\"cf\", si:\"lk\", sk:\"sk\", sl:\"si\", sm:\"ws\", sn:\"zw\", so:\"so\", sq:\"al\", sr:\"rs\",\r\n\t\t\tss:\"za\", st:\"za\", su:\"id\", sv:\"se\", sw:\"tz\", ta:\"in\", te:\"in\", tg:\"tj\", th:\"th\", ti:\"et\", tk:\"tm\",\r\n\t\t\ttl:\"ph\", tn:\"za\", to:\"to\", tr:\"tr\", ts:\"za\", tt:\"ru\", ty:\"pf\", ug:\"cn\", uk:\"ua\", ur:\"pk\", uz:\"uz\",\r\n\t\t\tve:\"za\", vi:\"vn\", wa:\"be\", wo:\"sn\", xh:\"za\", yi:\"il\", yo:\"ng\", za:\"cn\", zh:\"cn\", zu:\"za\",\r\n\t\t\tace:\"id\", ady:\"ru\", agq:\"cm\", alt:\"ru\", amo:\"ng\", asa:\"tz\", ast:\"es\", awa:\"in\", bal:\"pk\",\r\n\t\t\tban:\"id\", bas:\"cm\", bax:\"cm\", bbc:\"id\", bem:\"zm\", bez:\"tz\", bfq:\"in\", bft:\"pk\", bfy:\"in\",\r\n\t\t\tbhb:\"in\", bho:\"in\", bik:\"ph\", bin:\"ng\", bjj:\"in\", bku:\"ph\", bqv:\"ci\", bra:\"in\", brx:\"in\",\r\n\t\t\tbss:\"cm\", btv:\"pk\", bua:\"ru\", buc:\"yt\", bug:\"id\", bya:\"id\", byn:\"er\", cch:\"ng\", ccp:\"in\",\r\n\t\t\tceb:\"ph\", cgg:\"ug\", chk:\"fm\", chm:\"ru\", chp:\"ca\", chr:\"us\", cja:\"kh\", cjm:\"vn\", ckb:\"iq\",\r\n\t\t\tcrk:\"ca\", csb:\"pl\", dar:\"ru\", dav:\"ke\", den:\"ca\", dgr:\"ca\", dje:\"ne\", doi:\"in\", dsb:\"de\",\r\n\t\t\tdua:\"cm\", dyo:\"sn\", dyu:\"bf\", ebu:\"ke\", efi:\"ng\", ewo:\"cm\", fan:\"gq\", fil:\"ph\", fon:\"bj\",\r\n\t\t\tfur:\"it\", gaa:\"gh\", gag:\"md\", gbm:\"in\", gcr:\"gf\", gez:\"et\", gil:\"ki\", gon:\"in\", gor:\"id\",\r\n\t\t\tgrt:\"in\", gsw:\"ch\", guz:\"ke\", gwi:\"ca\", haw:\"us\", hil:\"ph\", hne:\"in\", hnn:\"ph\", hoc:\"in\",\r\n\t\t\thoj:\"in\", ibb:\"ng\", ilo:\"ph\", inh:\"ru\", jgo:\"cm\", jmc:\"tz\", kaa:\"uz\", kab:\"dz\", kaj:\"ng\",\r\n\t\t\tkam:\"ke\", kbd:\"ru\", kcg:\"ng\", kde:\"tz\", kdt:\"th\", kea:\"cv\", ken:\"cm\", kfo:\"ci\", kfr:\"in\",\r\n\t\t\tkha:\"in\", khb:\"cn\", khq:\"ml\", kht:\"in\", kkj:\"cm\", kln:\"ke\", kmb:\"ao\", koi:\"ru\", kok:\"in\",\r\n\t\t\tkos:\"fm\", kpe:\"lr\", krc:\"ru\", kri:\"sl\", krl:\"ru\", kru:\"in\", ksb:\"tz\", ksf:\"cm\", ksh:\"de\",\r\n\t\t\tkum:\"ru\", lag:\"tz\", lah:\"pk\", lbe:\"ru\", lcp:\"cn\", lep:\"in\", lez:\"ru\", lif:\"np\", lis:\"cn\",\r\n\t\t\tlki:\"ir\", lmn:\"in\", lol:\"cd\", lua:\"cd\", luo:\"ke\", luy:\"ke\", lwl:\"th\", mad:\"id\", mag:\"in\",\r\n\t\t\tmai:\"in\", mak:\"id\", man:\"gn\", mas:\"ke\", mdf:\"ru\", mdh:\"ph\", mdr:\"id\", men:\"sl\", mer:\"ke\",\r\n\t\t\tmfe:\"mu\", mgh:\"mz\", mgo:\"cm\", min:\"id\", mni:\"in\", mnk:\"gm\", mnw:\"mm\", mos:\"bf\", mua:\"cm\",\r\n\t\t\tmwr:\"in\", myv:\"ru\", nap:\"it\", naq:\"na\", nds:\"de\", \"new\":\"np\", niu:\"nu\", nmg:\"cm\", nnh:\"cm\",\r\n\t\t\tnod:\"th\", nso:\"za\", nus:\"sd\", nym:\"tz\", nyn:\"ug\", pag:\"ph\", pam:\"ph\", pap:\"bq\", pau:\"pw\",\r\n\t\t\tpon:\"fm\", prd:\"ir\", raj:\"in\", rcf:\"re\", rej:\"id\", rjs:\"np\", rkt:\"in\", rof:\"tz\", rwk:\"tz\",\r\n\t\t\tsaf:\"gh\", sah:\"ru\", saq:\"ke\", sas:\"id\", sat:\"in\", saz:\"in\", sbp:\"tz\", scn:\"it\", sco:\"gb\",\r\n\t\t\tsdh:\"ir\", seh:\"mz\", ses:\"ml\", shi:\"ma\", shn:\"mm\", sid:\"et\", sma:\"se\", smj:\"se\", smn:\"fi\",\r\n\t\t\tsms:\"fi\", snk:\"ml\", srn:\"sr\", srr:\"sn\", ssy:\"er\", suk:\"tz\", sus:\"gn\", swb:\"yt\", swc:\"cd\",\r\n\t\t\tsyl:\"bd\", syr:\"sy\", tbw:\"ph\", tcy:\"in\", tdd:\"cn\", tem:\"sl\", teo:\"ug\", tet:\"tl\", tig:\"er\",\r\n\t\t\ttiv:\"ng\", tkl:\"tk\", tmh:\"ne\", tpi:\"pg\", trv:\"tw\", tsg:\"ph\", tts:\"th\", tum:\"mw\", tvl:\"tv\",\r\n\t\t\ttwq:\"ne\", tyv:\"ru\", tzm:\"ma\", udm:\"ru\", uli:\"fm\", umb:\"ao\", unr:\"in\", unx:\"in\", vai:\"lr\",\r\n\t\t\tvun:\"tz\", wae:\"ch\", wal:\"et\", war:\"ph\", xog:\"ug\", xsr:\"np\", yao:\"mz\", yap:\"fm\", yav:\"cm\", zza:\"tr\"\r\n\t\t}[tags[0]];\r\n\t}else if(region.length == 4){\r\n\t\t// The ISO 3166 country code is usually in the second position, unless a\r\n\t\t// 4-letter script is given. See http://www.ietf.org/rfc/rfc4646.txt\r\n\t\tregion = tags[2];\r\n\t}\r\n\treturn region;\r\n};\r\n\r\nsupplemental.getWeekend = function(/*String?*/locale){\r\n\t// summary:\r\n\t//\t\tReturns a hash containing the start and end days of the weekend\r\n\t// description:\r\n\t//\t\tReturns a hash containing the start and end days of the weekend according to local custom using locale,\r\n\t//\t\tor by default in the user's locale.\r\n\t//\t\te.g. {start:6, end:0}\r\n\r\n\t// from http://www.unicode.org/cldr/data/common/supplemental/supplementalData.xml:supplementalData/weekData/weekend{Start,End}\r\n\tvar weekendStart = {/*default is 6=Saturday*/\r\n\t\t\t'in':0,\r\n\t\t\taf:4,dz:4,ir:4,om:4,sa:4,ye:4,\r\n\t\t\tae:5,bh:5,eg:5,il:5,iq:5,jo:5,kw:5,ly:5,ma:5,qa:5,sd:5,sy:5,tn:5\r\n\t\t},\r\n\r\n\t\tweekendEnd = {/*default is 0=Sunday*/\r\n\t\t\taf:5,dz:5,ir:5,om:5,sa:5,ye:5,\r\n\t\t\tae:6,bh:5,eg:6,il:6,iq:6,jo:6,kw:6,ly:6,ma:6,qa:6,sd:6,sy:6,tn:6\r\n\t\t},\r\n\r\n\t\tcountry = supplemental._region(locale),\r\n\t\tstart = weekendStart[country],\r\n\t\tend = weekendEnd[country];\r\n\r\n\tif(start === undefined){start=6;}\r\n\tif(end === undefined){end=0;}\r\n\treturn {start:start, end:end}; /*Object {start,end}*/\r\n};\r\n\r\nreturn supplemental;\r\n});\r\n\n\ndefine('dojo/date/locale',[\r\n\t\"../_base/lang\",\r\n\t\"../_base/array\",\r\n\t\"../date\",\r\n\t/*===== \"../_base/declare\", =====*/\r\n\t\"../cldr/supplemental\",\r\n\t\"../i18n\",\r\n\t\"../regexp\",\r\n\t\"../string\",\r\n\t\"../i18n!../cldr/nls/gregorian\",\r\n\t\"module\"\r\n], function(lang, array, date, /*===== declare, =====*/ supplemental, i18n, regexp, string, gregorian, module){\r\n\r\n// module:\r\n//\t\tdojo/date/locale\r\n\r\nvar exports = {\r\n\t// summary:\r\n\t//\t\tThis modules defines dojo/date/locale, localization methods for Date.\r\n};\r\nlang.setObject(module.id.replace(/\\//g, \".\"), exports);\r\n\r\n// Localization methods for Date.   Honor local customs using locale-dependent dojo.cldr data.\r\n\r\n// Load the bundles containing localization information for\r\n// names and formats\r\n\r\n//NOTE: Everything in this module assumes Gregorian calendars.\r\n// Other calendars will be implemented in separate modules.\r\n\r\n\t// Format a pattern without literals\r\n\tfunction formatPattern(dateObject, bundle, options, pattern){\r\n\t\treturn pattern.replace(/([a-z])\\1*/ig, function(match){\r\n\t\t\tvar s, pad,\r\n\t\t\t\tc = match.charAt(0),\r\n\t\t\t\tl = match.length,\r\n\t\t\t\twidthList = [\"abbr\", \"wide\", \"narrow\"];\r\n\t\t\tswitch(c){\r\n\t\t\t\tcase 'G':\r\n\t\t\t\t\ts = bundle[(l < 4) ? \"eraAbbr\" : \"eraNames\"][dateObject.getFullYear() < 0 ? 0 : 1];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'y':\r\n\t\t\t\t\ts = dateObject.getFullYear();\r\n\t\t\t\t\tswitch(l){\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tif(!options.fullYear){\r\n\t\t\t\t\t\t\t\ts = String(s); s = s.substr(s.length - 2);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// fallthrough\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tpad = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Q':\r\n\t\t\t\tcase 'q':\r\n\t\t\t\t\ts = Math.ceil((dateObject.getMonth()+1)/3);\r\n//\t\t\t\t\tswitch(l){\r\n//\t\t\t\t\t\tcase 1: case 2:\r\n\t\t\t\t\t\t\tpad = true;\r\n//\t\t\t\t\t\t\tbreak;\r\n//\t\t\t\t\t\tcase 3: case 4: // unimplemented\r\n//\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'M':\r\n\t\t\t\tcase 'L':\r\n\t\t\t\t\tvar m = dateObject.getMonth();\r\n\t\t\t\t\tif(l<3){\r\n\t\t\t\t\t\ts = m+1; pad = true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvar propM = [\r\n\t\t\t\t\t\t\t\"months\",\r\n\t\t\t\t\t\t\tc == 'L' ? \"standAlone\" : \"format\",\r\n\t\t\t\t\t\t\twidthList[l-3]\r\n\t\t\t\t\t\t].join(\"-\");\r\n\t\t\t\t\t\ts = bundle[propM][m];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'w':\r\n\t\t\t\t\tvar firstDay = 0;\r\n\t\t\t\t\ts = exports._getWeekOfYear(dateObject, firstDay); pad = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'd':\r\n\t\t\t\t\ts = dateObject.getDate(); pad = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'D':\r\n\t\t\t\t\ts = exports._getDayOfYear(dateObject); pad = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'e':\r\n\t\t\t\tcase 'c':\r\n\t\t\t\t\tvar d = dateObject.getDay();\r\n\t\t\t\t\tif(l<2){\r\n\t\t\t\t\t\ts = (d - supplemental.getFirstDayOfWeek(options.locale) + 8) % 7\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// fallthrough\r\n\t\t\t\tcase 'E':\r\n\t\t\t\t\td = dateObject.getDay();\r\n\t\t\t\t\tif(l<3){\r\n\t\t\t\t\t\ts = d+1; pad = true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvar propD = [\r\n\t\t\t\t\t\t\t\"days\",\r\n\t\t\t\t\t\t\tc == 'c' ? \"standAlone\" : \"format\",\r\n\t\t\t\t\t\t\twidthList[l-3]\r\n\t\t\t\t\t\t].join(\"-\");\r\n\t\t\t\t\t\ts = bundle[propD][d];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'a':\r\n\t\t\t\t\tvar timePeriod = dateObject.getHours() < 12 ? 'am' : 'pm';\r\n\t\t\t\t\ts = options[timePeriod] || bundle['dayPeriods-format-wide-' + timePeriod];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'h':\r\n\t\t\t\tcase 'H':\r\n\t\t\t\tcase 'K':\r\n\t\t\t\tcase 'k':\r\n\t\t\t\t\tvar h = dateObject.getHours();\r\n\t\t\t\t\t// strange choices in the date format make it impossible to write this succinctly\r\n\t\t\t\t\tswitch (c){\r\n\t\t\t\t\t\tcase 'h': // 1-12\r\n\t\t\t\t\t\t\ts = (h % 12) || 12;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'H': // 0-23\r\n\t\t\t\t\t\t\ts = h;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'K': // 0-11\r\n\t\t\t\t\t\t\ts = (h % 12);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'k': // 1-24\r\n\t\t\t\t\t\t\ts = h || 24;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpad = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'm':\r\n\t\t\t\t\ts = dateObject.getMinutes(); pad = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 's':\r\n\t\t\t\t\ts = dateObject.getSeconds(); pad = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'S':\r\n\t\t\t\t\ts = Math.round(dateObject.getMilliseconds() * Math.pow(10, l-3)); pad = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'v': // FIXME: don't know what this is. seems to be same as z?\r\n\t\t\t\tcase 'z':\r\n\t\t\t\t\t// We only have one timezone to offer; the one from the browser\r\n\t\t\t\t\ts = exports._getZone(dateObject, true, options);\r\n\t\t\t\t\tif(s){break;}\r\n\t\t\t\t\tl=4;\r\n\t\t\t\t\t// fallthrough... use GMT if tz not available\r\n\t\t\t\tcase 'Z':\r\n\t\t\t\t\tvar offset = exports._getZone(dateObject, false, options);\r\n\t\t\t\t\tvar tz = [\r\n\t\t\t\t\t\t(offset<=0 ? \"+\" : \"-\"),\r\n\t\t\t\t\t\tstring.pad(Math.floor(Math.abs(offset)/60), 2),\r\n\t\t\t\t\t\tstring.pad(Math.abs(offset)% 60, 2)\r\n\t\t\t\t\t];\r\n\t\t\t\t\tif(l==4){\r\n\t\t\t\t\t\ttz.splice(0, 0, \"GMT\");\r\n\t\t\t\t\t\ttz.splice(3, 0, \":\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\ts = tz.join(\"\");\r\n\t\t\t\t\tbreak;\r\n//\t\t\t\tcase 'Y': case 'u': case 'W': case 'F': case 'g': case 'A':\r\n//\t\t\t\t\tconsole.log(match+\" modifier unimplemented\");\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"dojo.date.locale.format: invalid pattern char: \"+pattern);\r\n\t\t\t}\r\n\t\t\tif(pad){ s = string.pad(s, l); }\r\n\t\t\treturn s;\r\n\t\t});\r\n\t}\r\n\r\n/*=====\r\nvar __FormatOptions = exports.__FormatOptions = declare(null, {\r\n\t// selector: String\r\n\t//\t\tchoice of 'time','date' (default: date and time)\r\n\t// formatLength: String\r\n\t//\t\tchoice of long, short, medium or full (plus any custom additions).  Defaults to 'short'\r\n\t// datePattern:String\r\n\t//\t\toverride pattern with this string\r\n\t// timePattern:String\r\n\t//\t\toverride pattern with this string\r\n\t// am: String\r\n\t//\t\toverride strings for am in times\r\n\t// pm: String\r\n\t//\t\toverride strings for pm in times\r\n\t// locale: String\r\n\t//\t\toverride the locale used to determine formatting rules\r\n\t// fullYear: Boolean\r\n\t//\t\t(format only) use 4 digit years whenever 2 digit years are called for\r\n\t// strict: Boolean\r\n\t//\t\t(parse only) strict parsing, off by default\r\n});\r\n=====*/\r\n\r\nexports._getZone = function(/*Date*/ dateObject, /*boolean*/ getName, /*__FormatOptions?*/ options){\r\n\t// summary:\r\n\t//\t\tReturns the zone (or offset) for the given date and options.  This\r\n\t//\t\tis broken out into a separate function so that it can be overridden\r\n\t//\t\tby timezone-aware code.\r\n\t//\r\n\t// dateObject:\r\n\t//\t\tthe date and/or time being formatted.\r\n\t//\r\n\t// getName:\r\n\t//\t\tWhether to return the timezone string (if true), or the offset (if false)\r\n\t//\r\n\t// options:\r\n\t//\t\tThe options being used for formatting\r\n\tif(getName){\r\n\t\treturn date.getTimezoneName(dateObject);\r\n\t}else{\r\n\t\treturn dateObject.getTimezoneOffset();\r\n\t}\r\n};\r\n\r\n\r\nexports.format = function(/*Date*/ dateObject, /*__FormatOptions?*/ options){\r\n\t// summary:\r\n\t//\t\tFormat a Date object as a String, using locale-specific settings.\r\n\t//\r\n\t// description:\r\n\t//\t\tCreate a string from a Date object using a known localized pattern.\r\n\t//\t\tBy default, this method formats both date and time from dateObject.\r\n\t//\t\tFormatting patterns are chosen appropriate to the locale.  Different\r\n\t//\t\tformatting lengths may be chosen, with \"full\" used by default.\r\n\t//\t\tCustom patterns may be used or registered with translations using\r\n\t//\t\tthe dojo/date/locale.addCustomFormats() method.\r\n\t//\t\tFormatting patterns are implemented using [the syntax described at\r\n\t//\t\tunicode.org](http://www.unicode.org/reports/tr35/tr35-4.html#Date_Format_Patterns)\r\n\t//\r\n\t// dateObject:\r\n\t//\t\tthe date and/or time to be formatted.  If a time only is formatted,\r\n\t//\t\tthe values in the year, month, and day fields are irrelevant.  The\r\n\t//\t\topposite is true when formatting only dates.\r\n\r\n\toptions = options || {};\r\n\r\n\tvar locale = i18n.normalizeLocale(options.locale),\r\n\t\tformatLength = options.formatLength || 'short',\r\n\t\tbundle = exports._getGregorianBundle(locale),\r\n\t\tstr = [],\r\n\t\tsauce = lang.hitch(this, formatPattern, dateObject, bundle, options);\r\n\tif(options.selector == \"year\"){\r\n\t\treturn _processPattern(bundle[\"dateFormatItem-yyyy\"] || \"yyyy\", sauce);\r\n\t}\r\n\tvar pattern;\r\n\tif(options.selector != \"date\"){\r\n\t\tpattern = options.timePattern || bundle[\"timeFormat-\"+formatLength];\r\n\t\tif(pattern){str.push(_processPattern(pattern, sauce));}\r\n\t}\r\n\tif(options.selector != \"time\"){\r\n\t\tpattern = options.datePattern || bundle[\"dateFormat-\"+formatLength];\r\n\t\tif(pattern){str.push(_processPattern(pattern, sauce));}\r\n\t}\r\n\r\n\treturn str.length == 1 ? str[0] : bundle[\"dateTimeFormat-\"+formatLength].replace(/\\'/g,'').replace(/\\{(\\d+)\\}/g,\r\n\t\tfunction(match, key){ return str[key]; }); // String\r\n};\r\n\r\nexports.regexp = function(/*__FormatOptions?*/ options){\r\n\t// summary:\r\n\t//\t\tBuilds the regular needed to parse a localized date\r\n\r\n\treturn exports._parseInfo(options).regexp; // String\r\n};\r\n\r\nexports._parseInfo = function(/*__FormatOptions?*/ options){\r\n\toptions = options || {};\r\n\tvar locale = i18n.normalizeLocale(options.locale),\r\n\t\tbundle = exports._getGregorianBundle(locale),\r\n\t\tformatLength = options.formatLength || 'short',\r\n\t\tdatePattern = options.datePattern || bundle[\"dateFormat-\" + formatLength],\r\n\t\ttimePattern = options.timePattern || bundle[\"timeFormat-\" + formatLength],\r\n\t\tpattern;\r\n\tif(options.selector == 'date'){\r\n\t\tpattern = datePattern;\r\n\t}else if(options.selector == 'time'){\r\n\t\tpattern = timePattern;\r\n\t}else{\r\n\t\tpattern = bundle[\"dateTimeFormat-\"+formatLength].replace(/\\{(\\d+)\\}/g,\r\n\t\t\tfunction(match, key){ return [timePattern, datePattern][key]; });\r\n\t}\r\n\r\n\tvar tokens = [],\r\n\t\tre = _processPattern(pattern, lang.hitch(this, _buildDateTimeRE, tokens, bundle, options));\r\n\treturn {regexp: re, tokens: tokens, bundle: bundle};\r\n};\r\n\r\nexports.parse = function(/*String*/ value, /*__FormatOptions?*/ options){\r\n\t// summary:\r\n\t//\t\tConvert a properly formatted string to a primitive Date object,\r\n\t//\t\tusing locale-specific settings.\r\n\t//\r\n\t// description:\r\n\t//\t\tCreate a Date object from a string using a known localized pattern.\r\n\t//\t\tBy default, this method parses looking for both date and time in the string.\r\n\t//\t\tFormatting patterns are chosen appropriate to the locale.  Different\r\n\t//\t\tformatting lengths may be chosen, with \"full\" used by default.\r\n\t//\t\tCustom patterns may be used or registered with translations using\r\n\t//\t\tthe dojo/date/locale.addCustomFormats() method.\r\n\t//\r\n\t//\t\tFormatting patterns are implemented using [the syntax described at\r\n\t//\t\tunicode.org](http://www.unicode.org/reports/tr35/tr35-4.html#Date_Format_Patterns)\r\n\t//\t\tWhen two digit years are used, a century is chosen according to a sliding\r\n\t//\t\twindow of 80 years before and 20 years after present year, for both `yy` and `yyyy` patterns.\r\n\t//\t\tyear < 100CE requires strict mode.\r\n\t//\r\n\t// value:\r\n\t//\t\tA string representation of a date\r\n\r\n\t// remove non-printing bidi control chars from input and pattern\r\n\tvar controlChars = /[\\u200E\\u200F\\u202A\\u202E]/g,\r\n\t\tinfo = exports._parseInfo(options),\r\n\t\ttokens = info.tokens, bundle = info.bundle,\r\n\t\tre = new RegExp(\"^\" + info.regexp.replace(controlChars, \"\") + \"$\",\r\n\t\t\tinfo.strict ? \"\" : \"i\"),\r\n\t\tmatch = re.exec(value && value.replace(controlChars, \"\"));\r\n\r\n\tif(!match){ return null; } // null\r\n\r\n\tvar widthList = ['abbr', 'wide', 'narrow'],\r\n\t\tresult = [1970,0,1,0,0,0,0], // will get converted to a Date at the end\r\n\t\tamPm = \"\",\r\n\t\tvalid = array.every(match, function(v, i){\r\n\t\tif(!i){return true;}\r\n\t\tvar token = tokens[i-1],\r\n\t\t\tl = token.length,\r\n\t\t\tc = token.charAt(0);\r\n\t\tswitch(c){\r\n\t\t\tcase 'y':\r\n\t\t\t\tif(l != 2 && options.strict){\r\n\t\t\t\t\t//interpret year literally, so '5' would be 5 A.D.\r\n\t\t\t\t\tresult[0] = v;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(v<100){\r\n\t\t\t\t\t\tv = Number(v);\r\n\t\t\t\t\t\t//choose century to apply, according to a sliding window\r\n\t\t\t\t\t\t//of 80 years before and 20 years after present year\r\n\t\t\t\t\t\tvar year = '' + new Date().getFullYear(),\r\n\t\t\t\t\t\t\tcentury = year.substring(0, 2) * 100,\r\n\t\t\t\t\t\t\tcutoff = Math.min(Number(year.substring(2, 4)) + 20, 99);\r\n\t\t\t\t\t\tresult[0] = (v < cutoff) ? century + v : century - 100 + v;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//we expected 2 digits and got more...\r\n\t\t\t\t\t\tif(options.strict){\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//interpret literally, so '150' would be 150 A.D.\r\n\t\t\t\t\t\t//also tolerate '1950', if 'yyyy' input passed to 'yy' format\r\n\t\t\t\t\t\tresult[0] = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'M':\r\n\t\t\tcase 'L':\r\n\t\t\t\tif(l>2){\r\n\t\t\t\t\tvar months = bundle['months-' +\r\n\t\t\t\t\t\t\t    (c == 'L' ? 'standAlone' : 'format') +\r\n\t\t\t\t\t\t\t    '-' + widthList[l-3]].concat();\r\n\t\t\t\t\tif(!options.strict){\r\n\t\t\t\t\t\t//Tolerate abbreviating period in month part\r\n\t\t\t\t\t\t//Case-insensitive comparison\r\n\t\t\t\t\t\tv = v.replace(\".\",\"\").toLowerCase();\r\n\t\t\t\t\t\tmonths = array.map(months, function(s){ return s.replace(\".\",\"\").toLowerCase(); } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tv = array.indexOf(months, v);\r\n\t\t\t\t\tif(v == -1){\r\n//\t\t\t\t\t\tconsole.log(\"dojo/date/locale.parse: Could not parse month name: '\" + v + \"'.\");\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tv--;\r\n\t\t\t\t}\r\n\t\t\t\tresult[1] = v;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'E':\r\n\t\t\tcase 'e':\r\n\t\t\tcase 'c':\r\n\t\t\t\tvar days = bundle['days-' +\r\n\t\t\t\t\t\t  (c == 'c' ? 'standAlone' : 'format') +\r\n\t\t\t\t\t\t  '-' + widthList[l-3]].concat();\r\n\t\t\t\tif(!options.strict){\r\n\t\t\t\t\t//Case-insensitive comparison\r\n\t\t\t\t\tv = v.toLowerCase();\r\n\t\t\t\t\tdays = array.map(days, function(d){return d.toLowerCase();});\r\n\t\t\t\t}\r\n\t\t\t\tv = array.indexOf(days, v);\r\n\t\t\t\tif(v == -1){\r\n//\t\t\t\t\tconsole.log(\"dojo/date/locale.parse: Could not parse weekday name: '\" + v + \"'.\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//TODO: not sure what to actually do with this input,\r\n\t\t\t\t//in terms of setting something on the Date obj...?\r\n\t\t\t\t//without more context, can't affect the actual date\r\n\t\t\t\t//TODO: just validate?\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'D':\r\n\t\t\t\tresult[1] = 0;\r\n\t\t\t\t// fallthrough...\r\n\t\t\tcase 'd':\r\n\t\t\t\tresult[2] = v;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'a': //am/pm\r\n\t\t\t\tvar am = options.am || bundle['dayPeriods-format-wide-am'],\r\n\t\t\t\t\tpm = options.pm || bundle['dayPeriods-format-wide-pm'];\r\n\t\t\t\tif(!options.strict){\r\n\t\t\t\t\tvar period = /\\./g;\r\n\t\t\t\t\tv = v.replace(period,'').toLowerCase();\r\n\t\t\t\t\tam = am.replace(period,'').toLowerCase();\r\n\t\t\t\t\tpm = pm.replace(period,'').toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif(options.strict && v != am && v != pm){\r\n//\t\t\t\t\tconsole.log(\"dojo/date/locale.parse: Could not parse am/pm part.\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we might not have seen the hours field yet, so store the state and apply hour change later\r\n\t\t\t\tamPm = (v == pm) ? 'p' : (v == am) ? 'a' : '';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'K': //hour (1-24)\r\n\t\t\t\tif(v == 24){ v = 0; }\r\n\t\t\t\t// fallthrough...\r\n\t\t\tcase 'h': //hour (1-12)\r\n\t\t\tcase 'H': //hour (0-23)\r\n\t\t\tcase 'k': //hour (0-11)\r\n\t\t\t\t//TODO: strict bounds checking, padding\r\n\t\t\t\tif(v > 23){\r\n//\t\t\t\t\tconsole.log(\"dojo/date/locale.parse: Illegal hours value\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//in the 12-hour case, adjusting for am/pm requires the 'a' part\r\n\t\t\t\t//which could come before or after the hour, so we will adjust later\r\n\t\t\t\tresult[3] = v;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'm': //minutes\r\n\t\t\t\tresult[4] = v;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 's': //seconds\r\n\t\t\t\tresult[5] = v;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'S': //milliseconds\r\n\t\t\t\tresult[6] = v;\r\n//\t\t\t\tbreak;\r\n//\t\t\tcase 'w':\r\n//TODO\t\t\t\tvar firstDay = 0;\r\n//\t\t\tdefault:\r\n//TODO: throw?\r\n//\t\t\t\tconsole.log(\"dojo/date/locale.parse: unsupported pattern char=\" + token.charAt(0));\r\n\t\t}\r\n\t\treturn true;\r\n\t});\r\n\r\n\tvar hours = +result[3];\r\n\tif(amPm === 'p' && hours < 12){\r\n\t\tresult[3] = hours + 12; //e.g., 3pm -> 15\r\n\t}else if(amPm === 'a' && hours == 12){\r\n\t\tresult[3] = 0; //12am -> 0\r\n\t}\r\n\r\n\t//TODO: implement a getWeekday() method in order to test\r\n\t//validity of input strings containing 'EEE' or 'EEEE'...\r\n\r\n\tvar dateObject = new Date(result[0], result[1], result[2], result[3], result[4], result[5], result[6]); // Date\r\n\tif(options.strict){\r\n\t\tdateObject.setFullYear(result[0]);\r\n\t}\r\n\r\n\t// Check for overflow.  The Date() constructor normalizes things like April 32nd...\r\n\t//TODO: why isn't this done for times as well?\r\n\tvar allTokens = tokens.join(\"\"),\r\n\t\tdateToken = allTokens.indexOf('d') != -1,\r\n\t\tmonthToken = allTokens.indexOf('M') != -1;\r\n\r\n\tif(!valid ||\r\n\t\t(monthToken && dateObject.getMonth() > result[1]) ||\r\n\t\t(dateToken && dateObject.getDate() > result[2])){\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Check for underflow, due to DST shifts.  See #9366\r\n\t// This assumes a 1 hour dst shift correction at midnight\r\n\t// We could compare the timezone offset after the shift and add the difference instead.\r\n\tif((monthToken && dateObject.getMonth() < result[1]) ||\r\n\t\t(dateToken && dateObject.getDate() < result[2])){\r\n\t\tdateObject = date.add(dateObject, \"hour\", 1);\r\n\t}\r\n\r\n\treturn dateObject; // Date\r\n};\r\n\r\nfunction _processPattern(pattern, applyPattern, applyLiteral, applyAll){\r\n\t//summary: Process a pattern with literals in it\r\n\r\n\t// Break up on single quotes, treat every other one as a literal, except '' which becomes '\r\n\tvar identity = function(x){return x;};\r\n\tapplyPattern = applyPattern || identity;\r\n\tapplyLiteral = applyLiteral || identity;\r\n\tapplyAll = applyAll || identity;\r\n\r\n\t//split on single quotes (which escape literals in date format strings)\r\n\t//but preserve escaped single quotes (e.g., o''clock)\r\n\tvar chunks = pattern.match(/(''|[^'])+/g),\r\n\t\tliteral = pattern.charAt(0) == \"'\";\r\n\r\n\tarray.forEach(chunks, function(chunk, i){\r\n\t\tif(!chunk){\r\n\t\t\tchunks[i]='';\r\n\t\t}else{\r\n\t\t\tchunks[i]=(literal ? applyLiteral : applyPattern)(chunk.replace(/''/g, \"'\"));\r\n\t\t\tliteral = !literal;\r\n\t\t}\r\n\t});\r\n\treturn applyAll(chunks.join(''));\r\n}\r\n\r\nfunction _buildDateTimeRE(tokens, bundle, options, pattern){\r\n\tpattern = regexp.escapeString(pattern);\r\n\tif(!options.strict){ pattern = pattern.replace(\" a\", \" ?a\"); } // kludge to tolerate no space before am/pm\r\n\treturn pattern.replace(/([a-z])\\1*/ig, function(match){\r\n\t\t// Build a simple regexp.  Avoid captures, which would ruin the tokens list\r\n\t\tvar s,\r\n\t\t\tc = match.charAt(0),\r\n\t\t\tl = match.length,\r\n\t\t\tp2 = '', p3 = '';\r\n\t\tif(options.strict){\r\n\t\t\tif(l > 1){ p2 = '0' + '{'+(l-1)+'}'; }\r\n\t\t\tif(l > 2){ p3 = '0' + '{'+(l-2)+'}'; }\r\n\t\t}else{\r\n\t\t\tp2 = '0?'; p3 = '0{0,2}';\r\n\t\t}\r\n\t\tswitch(c){\r\n\t\t\tcase 'y':\r\n\t\t\t\ts = '\\\\d{2,4}';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'M':\r\n\t\t\tcase 'L':\r\n\t\t\t\ts = (l>2) ? '\\\\S+?' : '1[0-2]|'+p2+'[1-9]';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'D':\r\n\t\t\t\ts = '[12][0-9][0-9]|3[0-5][0-9]|36[0-6]|'+p2+'[1-9][0-9]|'+p3+'[1-9]';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'd':\r\n\t\t\t\ts = '3[01]|[12]\\\\d|'+p2+'[1-9]';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'w':\r\n\t\t\t\ts = '[1-4][0-9]|5[0-3]|'+p2+'[1-9]';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'E':\r\n\t\t\tcase 'e':\r\n\t\t\tcase 'c':\r\n\t\t\t\ts = '.+?'; // match anything including spaces until the first pattern delimiter is found such as a comma or space\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'h': //hour (1-12)\r\n\t\t\t\ts = '1[0-2]|'+p2+'[1-9]';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'k': //hour (0-11)\r\n\t\t\t\ts = '1[01]|'+p2+'\\\\d';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'H': //hour (0-23)\r\n\t\t\t\ts = '1\\\\d|2[0-3]|'+p2+'\\\\d';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'K': //hour (1-24)\r\n\t\t\t\ts = '1\\\\d|2[0-4]|'+p2+'[1-9]';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'm':\r\n\t\t\tcase 's':\r\n\t\t\t\ts = '[0-5]\\\\d';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'S':\r\n\t\t\t\ts = '\\\\d{'+l+'}';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'a':\r\n\t\t\t\tvar am = options.am || bundle['dayPeriods-format-wide-am'],\r\n\t\t\t\t\tpm = options.pm || bundle['dayPeriods-format-wide-pm'];\r\n\t\t\t\t\ts = am + '|' + pm;\r\n\t\t\t\tif(!options.strict){\r\n\t\t\t\t\tif(am != am.toLowerCase()){ s += '|' + am.toLowerCase(); }\r\n\t\t\t\t\tif(pm != pm.toLowerCase()){ s += '|' + pm.toLowerCase(); }\r\n\t\t\t\t\tif(s.indexOf('.') != -1){ s += '|' + s.replace(/\\./g, \"\"); }\r\n\t\t\t\t}\r\n\t\t\t\ts = s.replace(/\\./g, \"\\\\.\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t// case 'v':\r\n\t\t\t// case 'z':\r\n\t\t\t// case 'Z':\r\n\t\t\t\ts = \".*\";\r\n//\t\t\t\tconsole.log(\"parse of date format, pattern=\" + pattern);\r\n\t\t}\r\n\r\n\t\tif(tokens){ tokens.push(match); }\r\n\r\n\t\treturn \"(\" + s + \")\"; // add capture\r\n\t}).replace(/[\\xa0 ]/g, \"[\\\\s\\\\xa0]\"); // normalize whitespace.  Need explicit handling of \\xa0 for IE.\r\n}\r\n\r\nvar _customFormats = [];\r\nexports.addCustomFormats = function(/*String*/ packageName, /*String*/ bundleName){\r\n\t// summary:\r\n\t//\t\tAdd a reference to a bundle containing localized custom formats to be\r\n\t//\t\tused by date/time formatting and parsing routines.\r\n\t//\r\n\t// description:\r\n\t//\t\tThe user may add custom localized formats where the bundle has properties following the\r\n\t//\t\tsame naming convention used by dojo.cldr: `dateFormat-xxxx` / `timeFormat-xxxx`\r\n\t//\t\tThe pattern string should match the format used by the CLDR.\r\n\t//\t\tSee dojo/date/locale.format() for details.\r\n\t//\t\tThe resources must be loaded by dojo.requireLocalization() prior to use\r\n\r\n\t_customFormats.push({pkg:packageName,name:bundleName});\r\n};\r\n\r\nexports._getGregorianBundle = function(/*String*/ locale){\r\n\tvar gregorian = {};\r\n\tarray.forEach(_customFormats, function(desc){\r\n\t\tvar bundle = i18n.getLocalization(desc.pkg, desc.name, locale);\r\n\t\tgregorian = lang.mixin(gregorian, bundle);\r\n\t}, this);\r\n\treturn gregorian; /*Object*/\r\n};\r\n\r\nexports.addCustomFormats(module.id.replace(/\\/date\\/locale$/, \".cldr\"),\"gregorian\");\r\n\r\nexports.getNames = function(/*String*/ item, /*String*/ type, /*String?*/ context, /*String?*/ locale){\r\n\t// summary:\r\n\t//\t\tUsed to get localized strings from dojo.cldr for day or month names.\r\n\t//\r\n\t// item:\r\n\t//\t'months' || 'days'\r\n\t// type:\r\n\t//\t'wide' || 'abbr' || 'narrow' (e.g. \"Monday\", \"Mon\", or \"M\" respectively, in English)\r\n\t// context:\r\n\t//\t'standAlone' || 'format' (default)\r\n\t// locale:\r\n\t//\toverride locale used to find the names\r\n\r\n\tvar label,\r\n\t\tlookup = exports._getGregorianBundle(locale),\r\n\t\tprops = [item, context, type];\r\n\tif(context == 'standAlone'){\r\n\t\tvar key = props.join('-');\r\n\t\tlabel = lookup[key];\r\n\t\t// Fall back to 'format' flavor of name\r\n\t\tif(label[0] == 1){ label = undefined; } // kludge, in the absence of real aliasing support in dojo.cldr\r\n\t}\r\n\tprops[1] = 'format';\r\n\r\n\t// return by copy so changes won't be made accidentally to the in-memory model\r\n\treturn (label || lookup[props.join('-')]).concat(); /*Array*/\r\n};\r\n\r\nexports.isWeekend = function(/*Date?*/ dateObject, /*String?*/ locale){\r\n\t// summary:\r\n\t//\tDetermines if the date falls on a weekend, according to local custom.\r\n\r\n\tvar weekend = supplemental.getWeekend(locale),\r\n\t\tday = (dateObject || new Date()).getDay();\r\n\tif(weekend.end < weekend.start){\r\n\t\tweekend.end += 7;\r\n\t\tif(day < weekend.start){ day += 7; }\r\n\t}\r\n\treturn day >= weekend.start && day <= weekend.end; // Boolean\r\n};\r\n\r\n// These are used only by format and strftime.  Do they need to be public?  Which module should they go in?\r\n\r\nexports._getDayOfYear = function(/*Date*/ dateObject){\r\n\t// summary:\r\n\t//\t\tgets the day of the year as represented by dateObject\r\n\treturn date.difference(new Date(dateObject.getFullYear(), 0, 1, dateObject.getHours()), dateObject) + 1; // Number\r\n};\r\n\r\nexports._getWeekOfYear = function(/*Date*/ dateObject, /*Number*/ firstDayOfWeek){\r\n\tif(arguments.length == 1){ firstDayOfWeek = 0; } // Sunday\r\n\r\n\tvar firstDayOfYear = new Date(dateObject.getFullYear(), 0, 1).getDay(),\r\n\t\tadj = (firstDayOfYear - firstDayOfWeek + 7) % 7,\r\n\t\tweek = Math.floor((exports._getDayOfYear(dateObject) + adj - 1) / 7);\r\n\r\n\t// if year starts on the specified day, start counting weeks at 1\r\n\tif(firstDayOfYear == firstDayOfWeek){ week++; }\r\n\r\n\treturn week; // Number\r\n};\r\n\r\nreturn exports;\r\n});\r\n\n\ndefine('dijit/CalendarLite',[\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/cldr/supplemental\", // cldrSupplemental.getFirstDayOfWeek\r\n\t\"dojo/date\", // date\r\n\t\"dojo/date/locale\",\r\n\t\"dojo/date/stamp\", // stamp.fromISOString\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-class\", // domClass.contains\r\n\t\"dojo/_base/lang\", // lang.getObject, lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"webkit\")\r\n\t\"dojo/string\", // string.substitute\r\n\t\"./_WidgetBase\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"dojo/text!./templates/Calendar.html\",\r\n\t\"./a11yclick\",\t// not used directly, but template has ondijitclick in it\r\n\t\"./hccss\"    // not used directly, but sets CSS class on <body>\r\n], function(array, declare, cldrSupplemental, date, locale, stamp, dom, domClass, lang, on, has, string, _WidgetBase, _TemplatedMixin, template){\r\n\r\n\r\n\t// module:\r\n\t//\t\tdijit/CalendarLite\r\n\r\n\tvar CalendarLite = declare(\"dijit.CalendarLite\", [_WidgetBase, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tLightweight version of Calendar widget aimed towards mobile use\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA simple GUI for choosing a date in the context of a monthly calendar.\r\n\t\t//\t\tThis widget can't be used in a form because it doesn't serialize the date to an\r\n\t\t//\t\t`<input>` field.  For a form element, use dijit/form/DateTextBox instead.\r\n\t\t//\r\n\t\t//\t\tNote that the parser takes all dates attributes passed in the\r\n\t\t//\t\t[RFC 3339 format](http://www.faqs.org/rfcs/rfc3339.html), e.g. `2005-06-30T08:05:00-07:00`\r\n\t\t//\t\tso that they are serializable and locale-independent.\r\n\t\t//\r\n\t\t//\t\tAlso note that this widget isn't keyboard accessible; use dijit.Calendar for that\r\n\t\t// example:\r\n\t\t//\t|\tvar calendar = new dijit.CalendarLite({}, dojo.byId(\"calendarNode\"));\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<div data-dojo-type=\"dijit/CalendarLite\"></div>\r\n\r\n\t\t// Template for main calendar\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Template for cell for a day of the week (ex: M)\r\n\t\tdowTemplateString: '<th class=\"dijitReset dijitCalendarDayLabelTemplate\" role=\"columnheader\" scope=\"col\"><span class=\"dijitCalendarDayLabel\">${d}</span></th>',\r\n\r\n\t\t// Templates for a single date (ex: 13), and for a row for a week (ex: 20 21 22 23 24 25 26)\r\n\t\tdateTemplateString: '<td class=\"dijitReset\" role=\"gridcell\" data-dojo-attach-point=\"dateCells\"><span class=\"dijitCalendarDateLabel\" data-dojo-attach-point=\"dateLabels\"></span></td>',\r\n\t\tweekTemplateString: '<tr class=\"dijitReset dijitCalendarWeekTemplate\" role=\"row\">${d}${d}${d}${d}${d}${d}${d}</tr>',\r\n\r\n\t\t// value: Date\r\n\t\t//\t\tThe currently selected Date, initially set to invalid date to indicate no selection.\r\n\t\tvalue: new Date(\"\"),\r\n\t\t// TODO: for 2.0 make this a string (ISO format) rather than a Date\r\n\r\n\t\t// datePackage: String\r\n\t\t//\t\tJavaScript namespace to find calendar routines.\t If unspecified, uses Gregorian calendar routines\r\n\t\t//\t\tat dojo/date and dojo/date/locale.\r\n\t\tdatePackage: \"\",\r\n\t\t//\t\tTODO: for 2.0, replace datePackage with dateModule and dateLocalModule attributes specifying MIDs,\r\n\t\t//\t\tor alternately just get rid of this completely and tell user to use module ID remapping\r\n\t\t//\t\tvia require\r\n\r\n\t\t// dayWidth: String\r\n\t\t//\t\tHow to represent the days of the week in the calendar header. See locale\r\n\t\tdayWidth: \"narrow\",\r\n\r\n\t\t// tabIndex: String\r\n\t\t//\t\tOrder fields are traversed when user hits the tab key\r\n\t\ttabIndex: \"0\",\r\n\r\n\t\t// currentFocus: Date\r\n\t\t//\t\tDate object containing the currently focused date, or the date which would be focused\r\n\t\t//\t\tif the calendar itself was focused.   Also indicates which year and month to display,\r\n\t\t//\t\ti.e. the current \"page\" the calendar is on.\r\n\t\tcurrentFocus: new Date(),\r\n\r\n\t\t// Put the summary to the node with role=grid\r\n\t\t_setSummaryAttr: \"gridNode\",\r\n\r\n\t\tbaseClass: \"dijitCalendar dijitCalendarLite\",\r\n\r\n\t\t_isValidDate: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRuns various tests on the value, checking that it's a valid date, rather\r\n\t\t\t//\t\tthan blank or NaN.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn value && !isNaN(value) && typeof value == \"object\" &&\r\n\t\t\t\tvalue.toString() != this.constructor.prototype.value.toString();\r\n\t\t},\r\n\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSupport get('value')\r\n\r\n\t\t\t// this.value is set to 1AM, but return midnight, local time for back-compat\r\n\t\t\tvar storedVal = this._get(\"value\");\r\n\t\t\tif(storedVal && !isNaN(storedVal)){\r\n\t\t\t\tvar value = new this.dateClassObj(storedVal);\r\n\t\t\t\tvalue.setHours(0, 0, 0, 0);\r\n\r\n\t\t\t\t// If daylight savings pushes midnight to the previous date, fix the Date\r\n\t\t\t\t// object to point at 1am so it will represent the correct day. See #9366\r\n\t\t\t\tif(value.getDate() < storedVal.getDate()){\r\n\t\t\t\t\tvalue = this.dateModule.add(value, \"hour\", 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t}else{\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Date|Number*/ value, /*Boolean*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSupport set(\"value\", ...)\r\n\t\t\t// description:\r\n\t\t\t//\t\tSet the current date and update the UI.  If the date is disabled, the value will\r\n\t\t\t//\t\tnot change, but the display will change to the corresponding month.\r\n\t\t\t// value:\r\n\t\t\t//\t\tEither a Date or the number of seconds since 1970.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(typeof value == \"string\"){\r\n\t\t\t\tvalue = stamp.fromISOString(value);\r\n\t\t\t}\r\n\t\t\tvalue = this._patchDate(value);\r\n\r\n\t\t\tif(this._isValidDate(value) && !this.isDisabledDate(value, this.lang)){\r\n\t\t\t\tthis._set(\"value\", value);\r\n\r\n\t\t\t\t// Set focus cell to the new value.   Arguably this should only happen when there isn't a current\r\n\t\t\t\t// focus point.   This will also repopulate the grid to new month/year if necessary.\r\n\t\t\t\tthis.set(\"currentFocus\", value);\r\n\r\n\t\t\t\t// Mark the selected date\r\n\t\t\t\tthis._markSelectedDates([value]);\r\n\r\n\t\t\t\tif(this._created && (priorityChange || typeof priorityChange == \"undefined\")){\r\n\t\t\t\t\tthis.onChange(this.get('value'));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// clear value, and mark all dates as unselected\r\n\t\t\t\tthis._set(\"value\", null);\r\n\t\t\t\tthis._markSelectedDates([]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_patchDate: function(/*Date|Number*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvert Number into Date, or copy Date object.   Then, round to nearest day,\r\n\t\t\t//\t\tsetting to 1am to avoid issues when DST shift occurs at midnight, see #8521, #9366)\r\n\t\t\tif(value){\r\n\t\t\t\tvalue = new this.dateClassObj(value);\r\n\t\t\t\tvalue.setHours(1, 0, 0, 0);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\r\n\t\t_setText: function(node, text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis just sets the content of node to the specified text.\r\n\t\t\t//\t\tCan't do \"node.innerHTML=text\" because of an IE bug w/tables, see #3434.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\twhile(node.firstChild){\r\n\t\t\t\tnode.removeChild(node.firstChild);\r\n\t\t\t}\r\n\t\t\tnode.appendChild(node.ownerDocument.createTextNode(text));\r\n\t\t},\r\n\r\n\t\t_populateGrid: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFills in the calendar grid with each day (1-31).\r\n\t\t\t//\t\tCall this on creation, when moving to a new month.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar month = new this.dateClassObj(this.currentFocus);\r\n\t\t\tmonth.setDate(1);\r\n\t\t\tmonth = this._patchDate(month);\t// needed if currentFocus is start or end of DST, see #17033\r\n\r\n\t\t\tvar firstDay = month.getDay(),\r\n\t\t\t\tdaysInMonth = this.dateModule.getDaysInMonth(month),\r\n\t\t\t\tdaysInPreviousMonth = this.dateModule.getDaysInMonth(this.dateModule.add(month, \"month\", -1)),\r\n\t\t\t\ttoday = new this.dateClassObj(),\r\n\t\t\t\tdayOffset = cldrSupplemental.getFirstDayOfWeek(this.lang);\r\n\t\t\tif(dayOffset > firstDay){\r\n\t\t\t\tdayOffset -= 7;\r\n\t\t\t}\r\n\r\n\t\t\t// If they didn't provide a summary, change the default summary to match with the new month\r\n\t\t\tif(!this.summary){\r\n\t\t\t\tvar monthNames = this.dateLocaleModule.getNames('months', 'wide', 'standAlone', this.lang, month)\r\n\t\t\t\tthis.gridNode.setAttribute(\"summary\", monthNames[month.getMonth()]);\r\n\t\t\t}\r\n\r\n\t\t\t// Mapping from date (as specified by number returned from Date.valueOf()) to corresponding <td>\r\n\t\t\tthis._date2cell = {};\r\n\r\n\t\t\t// Iterate through dates in the calendar and fill in date numbers and style info\r\n\t\t\tarray.forEach(this.dateCells, function(template, idx){\r\n\t\t\t\tvar i = idx + dayOffset;\r\n\t\t\t\tvar date = new this.dateClassObj(month),\r\n\t\t\t\t\tnumber, clazz = \"dijitCalendar\", adj = 0;\r\n\r\n\t\t\t\tif(i < firstDay){\r\n\t\t\t\t\tnumber = daysInPreviousMonth - firstDay + i + 1;\r\n\t\t\t\t\tadj = -1;\r\n\t\t\t\t\tclazz += \"Previous\";\r\n\t\t\t\t}else if(i >= (firstDay + daysInMonth)){\r\n\t\t\t\t\tnumber = i - firstDay - daysInMonth + 1;\r\n\t\t\t\t\tadj = 1;\r\n\t\t\t\t\tclazz += \"Next\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnumber = i - firstDay + 1;\r\n\t\t\t\t\tclazz += \"Current\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(adj){\r\n\t\t\t\t\tdate = this.dateModule.add(date, \"month\", adj);\r\n\t\t\t\t}\r\n\t\t\t\tdate.setDate(number);\r\n\r\n\t\t\t\tif(!this.dateModule.compare(date, today, \"date\")){\r\n\t\t\t\t\tclazz = \"dijitCalendarCurrentDate \" + clazz;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.isDisabledDate(date, this.lang)){\r\n\t\t\t\t\tclazz = \"dijitCalendarDisabledDate \" + clazz;\r\n\t\t\t\t\ttemplate.setAttribute(\"aria-disabled\", \"true\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tclazz = \"dijitCalendarEnabledDate \" + clazz;\r\n\t\t\t\t\ttemplate.removeAttribute(\"aria-disabled\");\r\n\t\t\t\t\ttemplate.setAttribute(\"aria-selected\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar clazz2 = this.getClassForDate(date, this.lang);\r\n\t\t\t\tif(clazz2){\r\n\t\t\t\t\tclazz = clazz2 + \" \" + clazz;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemplate.className = clazz + \"Month dijitCalendarDateTemplate\";\r\n\r\n\t\t\t\t// Each cell has an associated integer value representing it's date\r\n\t\t\t\tvar dateVal = date.valueOf();\r\n\t\t\t\tthis._date2cell[dateVal] = template;\r\n\t\t\t\ttemplate.dijitDateValue = dateVal;\r\n\r\n\t\t\t\t// Set Date string (ex: \"13\").\r\n\t\t\t\tthis._setText(this.dateLabels[idx], date.getDateLocalized ? date.getDateLocalized(this.lang) : date.getDate());\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_populateControls: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFill in localized month, and prev/current/next years\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar month = new this.dateClassObj(this.currentFocus);\r\n\t\t\tmonth.setDate(1);\r\n\r\n\t\t\t// set name of this month\r\n\t\t\tthis.monthWidget.set(\"month\", month);\r\n\r\n\t\t\tvar y = month.getFullYear() - 1;\r\n\t\t\tvar d = new this.dateClassObj();\r\n\t\t\tarray.forEach([\"previous\", \"current\", \"next\"], function(name){\r\n\t\t\t\td.setFullYear(y++);\r\n\t\t\t\tthis._setText(this[name + \"YearLabelNode\"],\r\n\t\t\t\t\tthis.dateLocaleModule.format(d, {selector: 'year', locale: this.lang}));\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tgoToToday: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets calendar's value to today's date\r\n\t\t\tthis.set('value', new this.dateClassObj());\r\n\t\t},\r\n\r\n\t\tconstructor: function(params /*===== , srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t\tthis.dateModule = params.datePackage ? lang.getObject(params.datePackage, false) : date;\r\n\t\t\tthis.dateClassObj = this.dateModule.Date || Date;\r\n\t\t\tthis.dateLocaleModule = params.datePackage ? lang.getObject(params.datePackage + \".locale\", false) : locale;\r\n\t\t},\r\n\r\n\t\t_createMonthWidget: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the drop down button that displays the current month and lets user pick a new one\r\n\r\n\t\t\treturn CalendarLite._MonthWidget({\r\n\t\t\t\tid: this.id + \"_mddb\",\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\tdateLocaleModule: this.dateLocaleModule\r\n\t\t\t}, this.monthNode);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// Markup for days of the week (referenced from template)\r\n\t\t\tvar d = this.dowTemplateString,\r\n\t\t\t\tdayNames = this.dateLocaleModule.getNames('days', this.dayWidth, 'standAlone', this.lang),\r\n\t\t\t\tdayOffset = cldrSupplemental.getFirstDayOfWeek(this.lang);\r\n\t\t\tthis.dayCellsHtml = string.substitute([d, d, d, d, d, d, d].join(\"\"), {d: \"\"}, function(){\r\n\t\t\t\treturn dayNames[dayOffset++ % 7];\r\n\t\t\t});\r\n\r\n\t\t\t// Markup for dates of the month (referenced from template), but without numbers filled in\r\n\t\t\tvar r = string.substitute(this.weekTemplateString, {d: this.dateTemplateString});\r\n\t\t\tthis.dateRowsHtml = [r, r, r, r, r, r].join(\"\");\r\n\r\n\t\t\t// Instantiate from template.\r\n\t\t\t// dateCells and dateLabels arrays filled when _Templated parses my template.\r\n\t\t\tthis.dateCells = [];\r\n\t\t\tthis.dateLabels = [];\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tdom.setSelectable(this.domNode, false);\r\n\r\n\t\t\tvar dateObj = new this.dateClassObj(this.currentFocus);\r\n\r\n\t\t\tthis.monthWidget = this._createMonthWidget();\r\n\r\n\t\t\tthis.set('currentFocus', dateObj, false);\t// draw the grid to the month specified by currentFocus\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._connectControls();\r\n\t\t},\r\n\r\n\t\t_connectControls: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet up connects for increment/decrement of months/years\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar connect = lang.hitch(this, function(nodeProp, part, amount){\r\n\t\t\t\tthis[nodeProp].dojoClick = true;\r\n\t\t\t\treturn on(this[nodeProp], \"click\", lang.hitch(this, function(){\r\n\t\t\t\t\tthis._setCurrentFocusAttr(this.dateModule.add(this.currentFocus, part, amount));\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\r\n\t\t\tthis.own(\r\n\t\t\t\tconnect(\"incrementMonth\", \"month\", 1),\r\n\t\t\t\tconnect(\"decrementMonth\", \"month\", -1),\r\n\t\t\t\tconnect(\"nextYearLabelNode\", \"year\", 1),\r\n\t\t\t\tconnect(\"previousYearLabelNode\", \"year\", -1)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_setCurrentFocusAttr: function(/*Date*/ date, /*Boolean*/ forceFocus){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIf the calendar currently has focus, then focuses specified date,\r\n\t\t\t//\t\tchanging the currently displayed month/year if necessary.\r\n\t\t\t//\t\tIf the calendar doesn't have focus, updates currently\r\n\t\t\t//\t\tdisplayed month/year, and sets the cell that will get focus\r\n\t\t\t//\t\twhen Calendar is focused.\r\n\t\t\t// forceFocus:\r\n\t\t\t//\t\tIf true, will focus() the cell even if calendar itself doesn't have focus\r\n\r\n\t\t\tvar oldFocus = this.currentFocus,\r\n\t\t\t\toldCell = this._getNodeByDate(oldFocus);\r\n\t\t\tdate = this._patchDate(date);\r\n\r\n\t\t\tthis._set(\"currentFocus\", date);\r\n\r\n\t\t\t// If the focus is on a different month than the current calendar month, switch the displayed month.\r\n\t\t\t// Also will populate the grid initially, on Calendar creation.\r\n\t\t\tif(!this._date2cell || this.dateModule.difference(oldFocus, date, \"month\") != 0){\r\n\t\t\t\tthis._populateGrid();\r\n\t\t\t\tthis._populateControls();\r\n\t\t\t\tthis._markSelectedDates([this.value]);\r\n\t\t\t}\r\n\r\n\t\t\t// set tabIndex=0 on new cell, and focus it (but only if Calendar itself is focused)\r\n\t\t\tvar newCell = this._getNodeByDate(date);\r\n\t\t\tnewCell.setAttribute(\"tabIndex\", this.tabIndex);\r\n\t\t\tif(this.focused || forceFocus){\r\n\t\t\t\tnewCell.focus();\r\n\t\t\t}\r\n\r\n\t\t\t// set tabIndex=-1 on old focusable cell\r\n\t\t\tif(oldCell && oldCell != newCell){\r\n\t\t\t\tif(has(\"webkit\")){    // see #11064 about webkit bug\r\n\t\t\t\t\toldCell.setAttribute(\"tabIndex\", \"-1\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\toldCell.removeAttribute(\"tabIndex\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the calendar by focusing one of the calendar cells\r\n\t\t\tthis._setCurrentFocusAttr(this.currentFocus, true);\r\n\t\t},\r\n\r\n\t\t_onDayClick: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for day clicks, selects the date if appropriate\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tevt.stopPropagation();\r\n\t\t\tevt.preventDefault();\r\n\t\t\tfor(var node = evt.target; node && !node.dijitDateValue; node = node.parentNode){\r\n\t\t\t\t;\r\n\t\t\t}\r\n\t\t\tif(node && !domClass.contains(node, \"dijitCalendarDisabledDate\")){\r\n\t\t\t\tthis.set('value', node.dijitDateValue);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getNodeByDate: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the cell corresponding to the date, or null if the date is not within the currently\r\n\t\t\t//\t\tdisplayed month.\r\n\t\t\tvalue = this._patchDate(value);\r\n\t\t\treturn value && this._date2cell ? this._date2cell[value.valueOf()] : null;\r\n\t\t},\r\n\r\n\t\t_markSelectedDates: function(/*Date[]*/ dates){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMarks the specified cells as selected, and clears cells previously marked as selected.\r\n\t\t\t//\t\tFor CalendarLite at most one cell is selected at any point, but this allows an array\r\n\t\t\t//\t\tfor easy subclassing.\r\n\r\n\t\t\t// Function to mark a cell as selected or unselected\r\n\t\t\tfunction mark(/*Boolean*/ selected, /*DomNode*/ cell){\r\n\t\t\t\tdomClass.toggle(cell, \"dijitCalendarSelectedDate\", selected);\r\n\t\t\t\tcell.setAttribute(\"aria-selected\", selected ? \"true\" : \"false\");\r\n\t\t\t}\r\n\r\n\t\t\t// Clear previously selected cells.\r\n\t\t\tarray.forEach(this._selectedCells || [], lang.partial(mark, false));\r\n\r\n\t\t\t// Mark newly selected cells.  Ignore dates outside the currently displayed month.\r\n\t\t\tthis._selectedCells = array.filter(array.map(dates, this._getNodeByDate, this), function(n){\r\n\t\t\t\treturn n;\r\n\t\t\t});\r\n\t\t\tarray.forEach(this._selectedCells, lang.partial(mark, true));\r\n\t\t},\r\n\r\n\t\tonChange: function(/*Date*/ /*===== date =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled only when the selected date has changed\r\n\t\t},\r\n\r\n\t\tisDisabledDate: function(/*===== dateObject, locale =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to disable certain dates in the calendar e.g. `isDisabledDate=dojo.date.locale.isWeekend`\r\n\t\t\t// dateObject: Date\r\n\t\t\t// locale: String?\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\t/*=====\r\n\t\t\t return false; // Boolean\r\n\t\t\t =====*/\r\n\t\t},\r\n\r\n\t\tgetClassForDate: function(/*===== dateObject, locale =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to return CSS classes to associate with the date entry for the given dateObject,\r\n\t\t\t//\t\tfor example to indicate a holiday in specified locale.\r\n\t\t\t// dateObject: Date\r\n\t\t\t// locale: String?\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\t/*=====\r\n\t\t\t return \"\"; // String\r\n\t\t\t =====*/\r\n\t\t}\r\n\t});\r\n\r\n\tCalendarLite._MonthWidget = declare(\"dijit.CalendarLite._MonthWidget\", _WidgetBase, {\r\n\t\t// summary:\r\n\t\t//\t\tDisplays name of current month padded to the width of the month\r\n\t\t//\t\tw/the longest name, so that changing months doesn't change width.\r\n\t\t//\r\n\t\t//\t\tCreate as:\r\n\t\t// |\tnew Calendar._MonthWidget({\r\n\t\t// |\t\t\tlang: ...,\r\n\t\t// |\t\t\tdateLocaleModule: ...\r\n\t\t// |\t\t})\r\n\r\n\t\t_setMonthAttr: function(month){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the current month to display as a label\r\n\t\t\tvar monthNames = this.dateLocaleModule.getNames('months', 'wide', 'standAlone', this.lang, month),\r\n\t\t\t\tspacer =\r\n\t\t\t\t\t(has(\"ie\") == 6 ? \"\" : \"<div class='dijitSpacer'>\" +\r\n\t\t\t\t\t\tarray.map(monthNames,function(s){\r\n\t\t\t\t\t\t\treturn \"<div>\" + s + \"</div>\";\r\n\t\t\t\t\t\t}).join(\"\") + \"</div>\");\r\n\r\n\t\t\t// Set name of current month and also fill in spacer element with all the month names\r\n\t\t\t// (invisible) so that the maximum width will affect layout.   But not on IE6 because then\r\n\t\t\t// the center <TH> overlaps the right <TH> (due to a browser bug).\r\n\t\t\tthis.domNode.innerHTML =\r\n\t\t\t\tspacer +\r\n\t\t\t\t\t\"<div class='dijitCalendarMonthLabel dijitCalendarCurrentMonthLabel'>\" +\r\n\t\t\t\t\tmonthNames[month.getMonth()] + \"</div>\";\r\n\t\t}\r\n\t});\r\n\r\n\treturn CalendarLite;\r\n});\r\n\ndefine('dijit/Calendar',[\r\n\t\"dojo/_base/array\", // array.map\r\n\t\"dojo/date\",\r\n\t\"dojo/date/locale\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.get\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains domClass.remove domClass.toggle\r\n\t\"dojo/dom-construct\",\t// create\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"./CalendarLite\",\r\n\t\"./_Widget\",\r\n\t\"./_CssStateMixin\",\r\n\t\"./_TemplatedMixin\",\r\n\t\"./form/DropDownButton\"\r\n], function(array, date, local, declare, domAttr, domClass, domConstruct, kernel, keys, lang, on, has,\r\n\t\t\tCalendarLite, _Widget, _CssStateMixin, _TemplatedMixin, DropDownButton){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Calendar\r\n\r\n\t// _Widget for deprecated methods like setAttribute()\r\n\tvar Calendar = declare(\"dijit.Calendar\", [CalendarLite, _Widget, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA simple GUI for choosing a date in the context of a monthly calendar.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tSee CalendarLite for general description.   Calendar extends CalendarLite, adding:\r\n\t\t//\r\n\t\t//\t\t- month drop down list\r\n\t\t//\t\t- keyboard navigation\r\n\t\t//\t\t- CSS classes for hover/mousepress on date, month, and year nodes\r\n\t\t//\t\t- support of deprecated methods (will be removed in 2.0)\r\n\r\n\t\tbaseClass: \"dijitCalendar\",\r\n\r\n\t\t// Set node classes for various mouse events, see dijit._CssStateMixin for more details\r\n\t\tcssStateNodes: {\r\n\t\t\t\"decrementMonth\": \"dijitCalendarArrow\",\r\n\t\t\t\"incrementMonth\": \"dijitCalendarArrow\",\r\n\t\t\t\"previousYearLabelNode\": \"dijitCalendarPreviousYear\",\r\n\t\t\t\"nextYearLabelNode\": \"dijitCalendarNextYear\"\r\n\t\t},\r\n\r\n\t\tsetValue: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Use set('value', ...) instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit.Calendar:setValue() is deprecated.  Use set('value', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('value', value);\r\n\t\t},\r\n\r\n\t\t_createMonthWidget: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the drop down button that displays the current month and lets user pick a new one\r\n\r\n\t\t\treturn new Calendar._MonthDropDownButton({\r\n\t\t\t\tid: this.id + \"_mddb\",\r\n\t\t\t\ttabIndex: -1,\r\n\t\t\t\tonMonthSelect: lang.hitch(this, \"_onMonthSelect\"),\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\tdateLocaleModule: this.dateLocaleModule\r\n\t\t\t}, this.monthNode);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Events specific to Calendar, not used in CalendarLite\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.domNode, \"keydown\", lang.hitch(this, \"_onKeyDown\")),\r\n\t\t\t\ton(this.dateRowsNode, \"mouseover\", lang.hitch(this, \"_onDayMouseOver\")),\r\n\t\t\t\ton(this.dateRowsNode, \"mouseout\", lang.hitch(this, \"_onDayMouseOut\")),\r\n\t\t\t\ton(this.dateRowsNode, \"mousedown\", lang.hitch(this, \"_onDayMouseDown\")),\r\n\t\t\t\ton(this.dateRowsNode, \"mouseup\", lang.hitch(this, \"_onDayMouseUp\"))\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_onMonthSelect: function(/*Number*/ newMonth){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for when user selects a month from the drop down list\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// move to selected month, bounding by the number of days in the month\r\n\t\t\t// (ex: jan 31 --> feb 28, not feb 31)\r\n\t\t\tvar date = new this.dateClassObj(this.currentFocus);\r\n\t\t\tdate.setDate(1);\r\n\t\t\tdate.setMonth(newMonth);\r\n\t\t\tvar daysInMonth = this.dateModule.getDaysInMonth(date);\r\n\t\t\tvar currentDate = this.currentFocus.getDate();\r\n\t\t\tdate.setDate(Math.min(currentDate, daysInMonth));\r\n\t\t\tthis._setCurrentFocusAttr(date);\r\n\t\t},\r\n\r\n\t\t_onDayMouseOver: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for mouse over events on days, sets hovered style\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// event can occur on <td> or the <span> inside the td,\r\n\t\t\t// set node to the <td>.\r\n\t\t\tvar node =\r\n\t\t\t\tdomClass.contains(evt.target, \"dijitCalendarDateLabel\") ?\r\n\t\t\t\t\tevt.target.parentNode :\r\n\t\t\t\t\tevt.target;\r\n\r\n\t\t\tif(node && (\r\n\t\t\t\t(node.dijitDateValue && !domClass.contains(node, \"dijitCalendarDisabledDate\"))\r\n\t\t\t\t\t|| node == this.previousYearLabelNode || node == this.nextYearLabelNode\r\n\t\t\t\t)){\r\n\t\t\t\tdomClass.add(node, \"dijitCalendarHoveredDate\");\r\n\t\t\t\tthis._currentNode = node;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDayMouseOut: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for mouse out events on days, clears hovered style\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!this._currentNode){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// if mouse out occurs moving from <td> to <span> inside <td>, ignore it\r\n\t\t\tif(evt.relatedTarget && evt.relatedTarget.parentNode == this._currentNode){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar cls = \"dijitCalendarHoveredDate\";\r\n\t\t\tif(domClass.contains(this._currentNode, \"dijitCalendarActiveDate\")){\r\n\t\t\t\tcls += \" dijitCalendarActiveDate\";\r\n\t\t\t}\r\n\t\t\tdomClass.remove(this._currentNode, cls);\r\n\t\t\tthis._currentNode = null;\r\n\t\t},\r\n\r\n\t\t_onDayMouseDown: function(/*Event*/ evt){\r\n\t\t\tvar node = evt.target.parentNode;\r\n\t\t\tif(node && node.dijitDateValue && !domClass.contains(node, \"dijitCalendarDisabledDate\")){\r\n\t\t\t\tdomClass.add(node, \"dijitCalendarActiveDate\");\r\n\t\t\t\tthis._currentNode = node;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDayMouseUp: function(/*Event*/ evt){\r\n\t\t\tvar node = evt.target.parentNode;\r\n\t\t\tif(node && node.dijitDateValue){\r\n\t\t\t\tdomClass.remove(node, \"dijitCalendarActiveDate\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleKey: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProvides keyboard navigation of calendar.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalled from _onKeyDown() to handle keydown on a stand alone Calendar,\r\n\t\t\t//\t\tand also from `dijit/form/_DateTimeTextBox` to pass a keydown event\r\n\t\t\t//\t\tfrom the `dijit/form/DateTextBox` to be handled in this widget\r\n\t\t\t// returns:\r\n\t\t\t//\t\tFalse if the key was recognized as a navigation key,\r\n\t\t\t//\t\tto indicate that the event was handled by Calendar and shouldn't be propagated\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar increment = -1,\r\n\t\t\t\tinterval,\r\n\t\t\t\tnewValue = this.currentFocus;\r\n\t\t\tswitch(evt.keyCode){\r\n\t\t\t\tcase keys.RIGHT_ARROW:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t//fallthrough...\r\n\t\t\t\tcase keys.LEFT_ARROW:\r\n\t\t\t\t\tinterval = \"day\";\r\n\t\t\t\t\tif(!this.isLeftToRight()){\r\n\t\t\t\t\t\tincrement *= -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t//fallthrough...\r\n\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\t\tinterval = \"week\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.PAGE_DOWN:\r\n\t\t\t\t\tincrement = 1;\r\n\t\t\t\t//fallthrough...\r\n\t\t\t\tcase keys.PAGE_UP:\r\n\t\t\t\t\tinterval = evt.ctrlKey || evt.altKey ? \"year\" : \"month\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.END:\r\n\t\t\t\t\t// go to the next month\r\n\t\t\t\t\tnewValue = this.dateModule.add(newValue, \"month\", 1);\r\n\t\t\t\t\t// subtract a day from the result when we're done\r\n\t\t\t\t\tinterval = \"day\";\r\n\t\t\t\t//fallthrough...\r\n\t\t\t\tcase keys.HOME:\r\n\t\t\t\t\tnewValue = new this.dateClassObj(newValue);\r\n\t\t\t\t\tnewValue.setDate(1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif(interval){\r\n\t\t\t\tnewValue = this.dateModule.add(newValue, interval, increment);\r\n\t\t\t}\r\n\r\n\t\t\tthis._setCurrentFocusAttr(newValue);\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFor handling keydown events on a stand alone calendar\r\n\t\t\tif(!this.handleKey(evt)){\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonValueSelected: function(/*Date*/ /*===== date =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.   Notification that a date cell was selected.  It may be the same as the previous value.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFormerly used by `dijit/form/_DateTimeTextBox` (and thus `dijit/form/DateTextBox`)\r\n\t\t\t//\t\tto get notification when the user has clicked a date.  Now onExecute() (above) is used.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tonChange: function(value){\r\n\t\t\tthis.onValueSelected(value);\t// remove in 2.0\r\n\t\t},\r\n\r\n\t\tgetClassForDate: function(/*===== dateObject, locale =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to return CSS classes to associate with the date entry for the given dateObject,\r\n\t\t\t//\t\tfor example to indicate a holiday in specified locale.\r\n\t\t\t// dateObject: Date\r\n\t\t\t// locale: String?\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\r\n\t\t\t/*=====\r\n\t\t\t return \"\"; // String\r\n\t\t\t =====*/\r\n\t\t}\r\n\t});\r\n\r\n\tCalendar._MonthDropDownButton = declare(\"dijit.Calendar._MonthDropDownButton\", DropDownButton, {\r\n\t\t// summary:\r\n\t\t//\t\tDropDownButton for the current month.    Displays name of current month\r\n\t\t//\t\tand a list of month names in the drop down\r\n\r\n\t\tonMonthSelect: function(){\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.dropDown = new Calendar._MonthDropDown({\r\n\t\t\t\tid: this.id + \"_mdd\", //do not change this id because it is referenced in the template\r\n\t\t\t\tonChange: this.onMonthSelect\r\n\t\t\t});\r\n\t\t},\r\n\t\t_setMonthAttr: function(month){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the current month to display as a label\r\n\t\t\tvar monthNames = this.dateLocaleModule.getNames('months', 'wide', 'standAlone', this.lang, month);\r\n\t\t\tthis.dropDown.set(\"months\", monthNames);\r\n\r\n\t\t\t// Set name of current month and also fill in spacer element with all the month names\r\n\t\t\t// (invisible) so that the maximum width will affect layout.   But not on IE6 because then\r\n\t\t\t// the center <TH> overlaps the right <TH> (due to a browser bug).\r\n\t\t\tthis.containerNode.innerHTML =\r\n\t\t\t\t(has(\"ie\") == 6 ? \"\" : \"<div class='dijitSpacer'>\" + this.dropDown.domNode.innerHTML + \"</div>\") +\r\n\t\t\t\t\t\"<div class='dijitCalendarMonthLabel dijitCalendarCurrentMonthLabel'>\" + monthNames[month.getMonth()] + \"</div>\";\r\n\t\t}\r\n\t});\r\n\r\n\tCalendar._MonthDropDown = declare(\"dijit.Calendar._MonthDropDown\", [_Widget, _TemplatedMixin, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tThe list-of-months drop down from the MonthDropDownButton\r\n\r\n\t\t// months: String[]\r\n\t\t//\t\tList of names of months, possibly w/some undefined entries for Hebrew leap months\r\n\t\t//\t\t(ex: [\"January\", \"February\", undefined, \"April\", ...])\r\n\t\tmonths: [],\r\n\r\n\t\tbaseClass: \"dijitCalendarMonthMenu dijitMenu\",\r\n\r\n\t\ttemplateString: \"<div data-dojo-attach-event='ondijitclick:_onClick'></div>\",\r\n\r\n\t\t_setMonthsAttr: function(/*String[]*/ months){\r\n\t\t\tthis.domNode.innerHTML = \"\";\r\n\t\t\tarray.forEach(months, function(month, idx){\r\n\t\t\t\tvar div = domConstruct.create(\"div\", {\r\n\t\t\t\t\tclassName: \"dijitCalendarMonthLabel\",\r\n\t\t\t\t\tmonth: idx,\r\n\t\t\t\t\tinnerHTML: month\r\n\t\t\t\t}, this.domNode);\r\n\t\t\t\tdiv._cssState = \"dijitCalendarMonthLabel\";\t// trigger _CSSStateMixin magic; property, not attribute.\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_onClick: function(/*Event*/ evt){\r\n\t\t\tthis.onChange(domAttr.get(evt.target, \"month\"));\r\n\t\t},\r\n\r\n\t\tonChange: function(/*Number*/ /*===== month =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when month is selected from drop down\r\n\t\t}\r\n\t});\r\n\r\n\treturn Calendar;\r\n});\r\n\ndefine('dijit/form/_DateTimeTextBox',[\r\n\t\"dojo/date\", // date date.compare\r\n\t\"dojo/date/locale\", // locale.regexp\r\n\t\"dojo/date/stamp\", // stamp.fromISOString stamp.toISOString\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"./RangeBoundTextBox\",\r\n\t\"../_HasDropDown\",\r\n\t\"dojo/text!./templates/DropDownBox.html\"\r\n], function(date, locale, stamp, declare, lang, RangeBoundTextBox, _HasDropDown, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_DateTimeTextBox\r\n\r\n\tnew Date(\"X\"); // workaround for #11279, new Date(\"\") == NaN\r\n\r\n\tvar _DateTimeTextBox = declare(\"dijit.form._DateTimeTextBox\", [RangeBoundTextBox, _HasDropDown], {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for validating, serializable, range-bound date or time text box.\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// hasDownArrow: [const] Boolean\r\n\t\t//\t\tSet this textbox to display a down arrow button, to open the drop down list.\r\n\t\thasDownArrow: true,\r\n\r\n\t\t// Set classes like dijitDownArrowButtonHover depending on mouse action over button node\r\n\t\tcssStateNodes: {\r\n\t\t\t\"_buttonNode\": \"dijitDownArrowButton\"\r\n\t\t},\r\n\r\n\t\t/*=====\r\n\t\t// constraints: _DateTimeTextBox.__Constraints\r\n\t\t//\t\tDespite the name, this parameter specifies both constraints on the input\r\n\t\t//\t\t(including starting/ending dates/times allowed) as well as\r\n\t\t//\t\tformatting options like whether the date is displayed in long (ex: December 25, 2005)\r\n\t\t//\t\tor short (ex: 12/25/2005) format.  See `dijit/form/_DateTimeTextBox.__Constraints` for details.\r\n\t\tconstraints: {},\r\n\t\t======*/\r\n\r\n\t\t// The constraints without the min/max properties. Used by the compare() method\r\n\t\t_unboundedConstraints: {},\r\n\r\n\t\t// Override ValidationTextBox.pattern.... we use a reg-ex generating function rather\r\n\t\t// than a straight regexp to deal with locale  (plus formatting options too?)\r\n\t\tpattern: locale.regexp,\r\n\r\n\t\t// datePackage: String\r\n\t\t//\t\tJavaScript namespace to find calendar routines.\t If unspecified, uses Gregorian calendar routines\r\n\t\t//\t\tat dojo/date and dojo/date/locale.\r\n\t\tdatePackage: \"\",\r\n\t\t//\t\tTODO: for 2.0, replace datePackage with dateModule and dateLocalModule attributes specifying MIDs,\r\n\t\t//\t\tor alternately just get rid of this completely and tell user to use module ID remapping\r\n\t\t//\t\tvia require\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._set(\"type\", \"text\"); // in case type=\"date\"|\"time\" was specified which messes up parse/format\r\n\t\t},\r\n\r\n\t\t// Override _FormWidget.compare() to work for dates/times\r\n\t\tcompare: function(/*Date*/ val1, /*Date*/ val2){\r\n\t\t\tvar isInvalid1 = this._isInvalidDate(val1);\r\n\t\t\tvar isInvalid2 = this._isInvalidDate(val2);\r\n\t\t\tif (isInvalid1 || isInvalid2){\r\n\t\t\t\treturn (isInvalid1 && isInvalid2) ? 0 : (!isInvalid1 ? 1 : -1);\r\n\t\t\t}\r\n\t\t\t// Format and parse the values before comparing them to make sure that only the parts of the\r\n\t\t\t// date that will make the \"round trip\" get compared.\r\n\t\t\tvar fval1 = this.format(val1, this._unboundedConstraints),\r\n\t\t\t\tfval2 = this.format(val2, this._unboundedConstraints),\r\n\t\t\t\tpval1 = this.parse(fval1, this._unboundedConstraints),\r\n\t\t\t\tpval2 = this.parse(fval2, this._unboundedConstraints);\r\n\r\n\t\t\treturn fval1 == fval2 ? 0 : date.compare(pval1, pval2, this._selector);\r\n\t\t},\r\n\r\n\t\t// flag to _HasDropDown to make drop down Calendar width == <input> width\r\n\t\tautoWidth: true,\r\n\r\n\t\tformat: function(/*Date*/ value, /*locale.__FormatOptions*/ constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFormats the value as a Date, according to specified locale (second argument)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(!value){ return ''; }\r\n\t\t\treturn this.dateLocaleModule.format(value, constraints);\r\n\t\t},\r\n\r\n\t\t\"parse\": function(/*String*/ value, /*locale.__FormatOptions*/ constraints){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tParses as string as a Date, according to constraints\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\treturn this.dateLocaleModule.parse(value, constraints) || (this._isEmpty(value) ? null : undefined);\t // Date\r\n\t\t},\r\n\r\n\t\t// Overrides ValidationTextBox.serialize() to serialize a date in canonical ISO format.\r\n\t\tserialize: function(/*anything*/ val, /*Object?*/ options){\r\n\t\t\tif(val.toGregorian){\r\n\t\t\t\tval = val.toGregorian();\r\n\t\t\t}\r\n\t\t\treturn stamp.toISOString(val, options);\r\n\t\t},\r\n\r\n\t\t// dropDownDefaultValue: Date\r\n\t\t//\t\tThe default value to focus in the popupClass widget when the textbox value is empty.\r\n\t\tdropDownDefaultValue : new Date(),\r\n\r\n\t\t// value: Date\r\n\t\t//\t\tThe value of this widget as a JavaScript Date object.  Use get(\"value\") / set(\"value\", val) to manipulate.\r\n\t\t//\t\tWhen passed to the parser in markup, must be specified according to `dojo/date/stamp.fromISOString()`\r\n\t\tvalue: new Date(\"\"),\t// value.toString()=\"NaN\"\r\n\r\n\t\t_blankValue: null,\t// used by filter() when the textbox is blank\r\n\r\n\t\t// popupClass: [protected extension] String\r\n\t\t//\t\tName of the popup widget class used to select a date/time.\r\n\t\t//\t\tSubclasses should specify this.\r\n\t\tpopupClass: \"\", // default is no popup = text only\r\n\r\n\r\n\t\t// _selector: [protected extension] String\r\n\t\t//\t\tSpecifies constraints.selector passed to dojo.date functions, should be either\r\n\t\t//\t\t\"date\" or \"time\".\r\n\t\t//\t\tSubclass must specify this.\r\n\t\t_selector: \"\",\r\n\r\n\t\tconstructor: function(params /*===== , srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t\tparams = params || {};\r\n\t\t\tthis.dateModule = params.datePackage ? lang.getObject(params.datePackage, false) : date;\r\n\t\t\tthis.dateClassObj = this.dateModule.Date || Date;\r\n\t\t\tif(!(this.dateClassObj instanceof Date)){\r\n\t\t\t\tthis.value = new this.dateClassObj(this.value);\r\n\t\t\t}\r\n\t\t\tthis.dateLocaleModule = params.datePackage ? lang.getObject(params.datePackage+\".locale\", false) : locale;\r\n\t\t\tthis._set('pattern', this.dateLocaleModule.regexp);\r\n\t\t\tthis._invalidDate = this.constructor.prototype.value.toString();\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(!this.hasDownArrow){\r\n\t\t\t\tthis._buttonNode.style.display = \"none\";\r\n\t\t\t}\r\n\r\n\t\t\t// If hasDownArrow is false, we basically just want to treat the whole widget as the\r\n\t\t\t// button.\r\n\t\t\tif(!this.hasDownArrow){\r\n\t\t\t\tthis._buttonNode = this.domNode;\r\n\t\t\t\tthis.baseClass += \" dijitComboBoxOpenOnClick\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setConstraintsAttr: function(/*Object*/ constraints){\r\n\t\t\tconstraints.selector = this._selector;\r\n\t\t\tconstraints.fullYear = true; // see #5465 - always format with 4-digit years\r\n\t\t\tvar fromISO = stamp.fromISOString;\r\n\t\t\tif(typeof constraints.min == \"string\"){\r\n\t\t\t\tconstraints.min = fromISO(constraints.min);\r\n\t\t\t\tif(!(this.dateClassObj instanceof Date)){\r\n\t\t\t\t\tconstraints.min = new this.dateClassObj(constraints.min);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(typeof constraints.max == \"string\"){\r\n\t\t\t\tconstraints.max = fromISO(constraints.max);\r\n\t\t\t\tif(!(this.dateClassObj instanceof Date)){\r\n\t\t\t\t\tconstraints.max = new this.dateClassObj(constraints.max);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._unboundedConstraints = lang.mixin({}, this.constraints, {min: null, max: null});\r\n\t\t},\r\n\r\n\t\t_isInvalidDate: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRuns various tests on the value, checking for invalid conditions\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn !value || isNaN(value) || typeof value != \"object\" || value.toString() == this._invalidDate;\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Date|String*/ value, /*Boolean?*/ priorityChange, /*String?*/ formattedValue){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the date on this textbox. Note: value can be a JavaScript Date literal or a string to be parsed.\r\n\t\t\tif(value !== undefined){\r\n\t\t\t\tif(typeof value == \"string\"){\r\n\t\t\t\t\tvalue = stamp.fromISOString(value);\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isInvalidDate(value)){\r\n\t\t\t\t\tvalue = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(value instanceof Date && !(this.dateClassObj instanceof Date)){\r\n\t\t\t\t\tvalue = new this.dateClassObj(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments, [value, priorityChange, formattedValue]);\r\n\t\t\tif(this.value instanceof Date){\r\n\t\t\t\tthis.filterString = \"\";\r\n\t\t\t}\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\tthis.dropDown.set('value', value, false);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_set: function(attr, value){\r\n\t\t\t// Avoid spurious watch() notifications when value is changed to new Date object w/the same value\r\n\t\t\tif(attr == \"value\"){\r\n\t\t\t\tif(value instanceof Date && !(this.dateClassObj instanceof Date)){\r\n\t\t\t\t\tvalue = new this.dateClassObj(value);\r\n\t\t\t\t}\r\n\t\t\t\tvar oldValue = this._get(\"value\");\r\n\t\t\t\tif(oldValue instanceof this.dateClassObj && this.compare(value, oldValue) == 0){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setDropDownDefaultValueAttr: function(/*Date*/ val){\r\n\t\t\tif(this._isInvalidDate(val)){\r\n\t\t\t\t// convert null setting into today's date, since there needs to be *some* default at all times.\r\n\t\t\t\t val = new this.dateClassObj();\r\n\t\t\t}\r\n\t\t\tthis._set(\"dropDownDefaultValue\", val);\r\n\t\t},\r\n\r\n\t\topenDropDown: function(/*Function*/ callback){\r\n\t\t\t// rebuild drop down every time, so that constraints get copied (#6002)\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\tthis.dropDown.destroy();\r\n\t\t\t}\r\n\t\t\tvar PopupProto = lang.isString(this.popupClass) ? lang.getObject(this.popupClass, false) : this.popupClass,\r\n\t\t\t\ttextBox = this,\r\n\t\t\t\tvalue = this.get(\"value\");\r\n\t\t\tthis.dropDown = new PopupProto({\r\n\t\t\t\tonChange: function(value){\r\n\t\t\t\t\t// this will cause InlineEditBox and other handlers to do stuff so make sure it's last\r\n\t\t\t\t\ttextBox.set('value', value, true);\r\n\t\t\t\t},\r\n\t\t\t\tid: this.id + \"_popup\",\r\n\t\t\t\tdir: textBox.dir,\r\n\t\t\t\tlang: textBox.lang,\r\n\t\t\t\tvalue: value,\r\n\t\t\t\ttextDir: textBox.textDir,\r\n\t\t\t\tcurrentFocus: !this._isInvalidDate(value) ? value : this.dropDownDefaultValue,\r\n\t\t\t\tconstraints: textBox.constraints,\r\n\t\t\t\tfilterString: textBox.filterString, // for TimeTextBox, to filter times shown\r\n\t\t\t\tdatePackage: textBox.datePackage,\r\n\t\t\t\tisDisabledDate: function(/*Date*/ date){\r\n\t\t\t\t\t// summary:\r\n\t\t\t\t\t//\t\tdisables dates outside of the min/max of the _DateTimeTextBox\r\n\t\t\t\t\treturn !textBox.rangeCheck(date, textBox.constraints);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_getDisplayedValueAttr: function(){\r\n\t\t\treturn this.textbox.value;\r\n\t\t},\r\n\r\n\t\t_setDisplayedValueAttr: function(/*String*/ value, /*Boolean?*/ priorityChange){\r\n\t\t\tthis._setValueAttr(this.parse(value, this.constraints), priorityChange, value);\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t/*=====\r\n\t _DateTimeTextBox.__Constraints = declare([RangeBoundTextBox.__Constraints, locale.__FormatOptions], {\r\n\t\t // summary:\r\n\t\t //\t\tSpecifies both the rules on valid/invalid values (first/last date/time allowed),\r\n\t\t //\t\tand also formatting options for how the date/time is displayed.\r\n\t\t // example:\r\n\t\t //\t\tTo restrict to dates within 2004, displayed in a long format like \"December 25, 2005\":\r\n\t\t //\t|\t\t{min:'2004-01-01',max:'2004-12-31', formatLength:'long'}\r\n\t });\r\n\t =====*/\r\n\r\n\treturn _DateTimeTextBox;\r\n});\r\n\ndefine('dijit/form/DateTextBox',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"../Calendar\",\r\n\t\"./_DateTimeTextBox\"\r\n], function(declare, Calendar, _DateTimeTextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/DateTextBox\r\n\r\n\treturn declare(\"dijit.form.DateTextBox\", _DateTimeTextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tA validating, serializable, range-bound date text box with a drop down calendar\r\n\t\t// example:\r\n\t\t// |\tnew DateTextBox({value: new Date(2009, 0, 20)})\r\n\t\t// example:\r\n\t\t// |\t<input data-dojo-type='dijit/form/DateTextBox' value='2009-01-20'>\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitComboBox dijitDateTextBox\",\r\n\t\tpopupClass: Calendar,\r\n\t\t_selector: \"date\",\r\n\r\n\t\t// Prevent scrollbar on Calendar dropdown.  On iPad it often gets a scrollbar unnecessarily because Viewport\r\n\t\t// thinks the keyboard is showing.  Even if the keyboard is showing, it disappears when the calendar gets focus.\r\n\t\tmaxHeight: Infinity,\r\n\r\n\t\t// value: Date\r\n\t\t//\t\tThe value of this widget as a JavaScript Date object, with only year/month/day specified.\r\n\t\t//\t\tIf specified in markup, use the format specified in `stamp.fromISOString`.\r\n\t\t//\t\tset(\"value\", ...) accepts either a Date object or a string.\r\n\t\tvalue: new Date(\"\")\t// value.toString()=\"NaN\"\r\n\t});\r\n});\r\n\ndefine('dijit/_TimePicker',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/date\", // date.compare\r\n\t\"dojo/date/locale\", // locale.format\r\n\t\"dojo/date/stamp\", // stamp.fromISOString stamp.toISOString\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains domClass.toggle\r\n\t\"dojo/dom-construct\", // domConstruct.create\r\n\t\"dojo/_base/kernel\", // deprecated\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.mixin\r\n\t\"dojo/sniff\", // has(...)\r\n\t\"dojo/query\", // query\r\n\t\"dojo/mouse\", // mouse.wheel\r\n\t\"dojo/on\",\r\n\t\"./_WidgetBase\",\r\n\t\"./form/_ListMouseMixin\"\r\n], function(array, ddate, locale, stamp, declare, domClass, domConstruct, kernel, keys, lang, has, query, mouse, on,\r\n\t\t\t_WidgetBase, _ListMouseMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_TimePicker\r\n\r\n\r\n\tvar TimePicker = declare(\"dijit._TimePicker\", [_WidgetBase, _ListMouseMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA time picker dropdown, used by dijit/form/TimeTextBox.\r\n\t\t//\t\tThis widget is not available as a standalone widget due to lack of accessibility support.\r\n\r\n\t\t// baseClass: [protected] String\r\n\t\t//\t\tThe root className to use for the various states of this widget\r\n\t\tbaseClass: \"dijitTimePicker\",\r\n\r\n\t\t// pickerMin: String\r\n\t\t//\t\tISO-8601 string representing the time of the first\r\n\t\t//\t\tvisible element in the time picker.\r\n\t\t//\t\tSet in local time, without a time zone.\r\n\t\tpickerMin: \"T00:00:00\",\r\n\r\n\t\t// pickerMax: String\r\n\t\t//\t\tISO-8601 string representing the last (possible) time\r\n\t\t//\t\tadded to the time picker.\r\n\t\t//\t\tSet in local time, without a time zone.\r\n\t\tpickerMax: \"T23:59:59\",\r\n\r\n\t\t// clickableIncrement: String\r\n\t\t//\t\tISO-8601 string representing the interval between choices in the time picker.\r\n\t\t//\t\tSet in local time, without a time zone.\r\n\t\t//\t\tExample: `T00:15:00` creates 15 minute increments\r\n\t\t//\t\tMust divide dijit/_TimePicker.visibleIncrement evenly\r\n\t\tclickableIncrement: \"T00:15:00\",\r\n\r\n\t\t// visibleIncrement: String\r\n\t\t//\t\tISO-8601 string representing the interval between \"major\" choices in the time picker.\r\n\t\t//\t\tEach theme will highlight the major choices with a larger font / different color / etc.\r\n\t\t//\t\tSet in local time, without a time zone.\r\n\t\t//\t\tExample: `T01:00:00` creates text in every 1 hour increment\r\n\t\tvisibleIncrement: \"T01:00:00\",\r\n\r\n\t\t// value: String\r\n\t\t//\t\tTime to display.\r\n\t\t//\t\tDefaults to current time.\r\n\t\t//\t\tCan be a Date object or an ISO-8601 string.\r\n\t\t//\t\tIf you specify the GMT time zone (`-01:00`),\r\n\t\t//\t\tthe time will be converted to the local time in the local time zone.\r\n\t\t//\t\tOtherwise, the time is considered to be in the local time zone.\r\n\t\t//\t\tIf you specify the date and isDate is true, the date is used.\r\n\t\t//\t\tExample: if your local time zone is `GMT -05:00`,\r\n\t\t//\t\t`T10:00:00` becomes `T10:00:00-05:00` (considered to be local time),\r\n\t\t//\t\t`T10:00:00-01:00` becomes `T06:00:00-05:00` (4 hour difference),\r\n\t\t//\t\t`T10:00:00Z` becomes `T05:00:00-05:00` (5 hour difference between Zulu and local time)\r\n\t\t//\t\t`yyyy-mm-ddThh:mm:ss` is the format to set the date and time\r\n\t\t//\t\tExample: `2007-06-01T09:00:00`\r\n\t\tvalue: new Date(),\r\n\r\n\t\t_visibleIncrement: 2,\r\n\t\t_clickableIncrement: 1,\r\n\t\t_totalIncrements: 10,\r\n\r\n\t\t// constraints: TimePicker.__Constraints\r\n\t\t//\t\tSpecifies valid range of times (start time, end time), and also used by TimeTextBox to pass other\r\n\t\t//\t\toptions to the TimePicker: pickerMin, pickerMax, clickableIncrement, and visibleIncrement.\r\n\t\tconstraints: {},\r\n\r\n\t\t/*=====\r\n\t\t serialize: function(val, options){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tUser overridable function used to convert the attr('value') result to a String\r\n\t\t\t // val: Date\r\n\t\t\t //\t\tThe current value\r\n\t\t\t // options: Object?\r\n\t\t\t // tags:\r\n\t\t\t //\t\tprotected\r\n\t\t },\r\n\t\t =====*/\r\n\t\tserialize: stamp.toISOString,\r\n\r\n\t\t/*=====\r\n\t\t // filterString: string\r\n\t\t //\t\tThe string to filter by\r\n\t\t filterString: \"\",\r\n\t\t =====*/\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.containerNode = this.domNode;\t// expected by _ListBase\r\n\t\t\tthis.timeMenu = this.domNode;\t// for back-compat\r\n\t\t},\r\n\r\n\t\tsetValue: function(/*Date*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated.  Used set('value') instead.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\tkernel.deprecated(\"dijit._TimePicker:setValue() is deprecated.  Use set('value', ...) instead.\", \"\", \"2.0\");\r\n\t\t\tthis.set('value', value);\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Date*/ date){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', ...) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSet the value of the TimePicker.\r\n\t\t\t//\t\tRedraws the TimePicker around the new date.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis._set(\"value\", date);\r\n\t\t\tthis._showText();\r\n\t\t},\r\n\r\n\t\t_setFilterStringAttr: function(val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled by TimeTextBox to filter the values shown in my list\r\n\t\t\tthis._set(\"filterString\", val);\r\n\t\t\tthis._showText();\r\n\t\t},\r\n\r\n\t\tisDisabledDate: function(/*===== dateObject, locale =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMay be overridden to disable certain dates in the TimePicker e.g. `isDisabledDate=locale.isWeekend`\r\n\t\t\t// dateObject: Date\r\n\t\t\t// locale: String?\r\n\t\t\t// type:\r\n\t\t\t//\t\textension\r\n\t\t\treturn false; // Boolean\r\n\t\t},\r\n\r\n\t\t_getFilteredNodes: function(/*number*/ start, /*number*/ maxNum, /*Boolean*/ before, /*DOMNode*/ lastNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns an array of nodes with the filter applied.  At most maxNum nodes\r\n\t\t\t//\t\twill be returned - but fewer may be returned as well.  If the\r\n\t\t\t//\t\tbefore parameter is set to true, then it will return the elements\r\n\t\t\t//\t\tbefore the given index\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar nodes = [];\r\n\r\n\t\t\tfor(var i = 0 ; i < this._maxIncrement; i++){\r\n\t\t\t\tvar n = this._createOption(i);\r\n\t\t\t\tif(n){\r\n\t\t\t\t\tnodes.push(n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn nodes;\r\n\t\t},\r\n\r\n\t\t_showText: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplays the relevant choices in the drop down list\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar fromIso = stamp.fromISOString;\r\n\t\t\tthis.domNode.innerHTML = \"\";\r\n\t\t\tthis._clickableIncrementDate = fromIso(this.clickableIncrement);\r\n\t\t\tthis._visibleIncrementDate = fromIso(this.visibleIncrement);\r\n\t\t\t// get the value of the increments to find out how many divs to create\r\n\t\t\tvar\r\n\t\t\t\tsinceMidnight = function(/*Date*/ date){\r\n\t\t\t\t\treturn date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds();\r\n\t\t\t\t},\r\n\t\t\t\tclickableIncrementSeconds = sinceMidnight(this._clickableIncrementDate),\r\n\t\t\t\tvisibleIncrementSeconds = sinceMidnight(this._visibleIncrementDate),\r\n\t\t\t\t// round reference date to previous visible increment\r\n\t\t\t\ttime = (this.value || this.currentFocus).getTime();\r\n\r\n\t\t\tthis._refDate = fromIso(this.pickerMin);\r\n\t\t\tthis._refDate.setFullYear(1970, 0, 1); // match parse defaults\r\n\r\n\t\t\t// assume clickable increment is the smallest unit\r\n\t\t\tthis._clickableIncrement = 1;\r\n\t\t\t// divide the visible range by the clickable increment to get the number of divs to create\r\n\t\t\t// example: 10:00:00/00:15:00 -> display 40 divs\r\n\t\t\t// divide the visible increments by the clickable increments to get how often to display the time inline\r\n\t\t\t// example: 01:00:00/00:15:00 -> display the time every 4 divs\r\n\t\t\tthis._visibleIncrement = visibleIncrementSeconds / clickableIncrementSeconds;\r\n\r\n\t\t\t// get the number of increments (i.e. number of entries in the picker)\r\n\t\t\tvar endDate = fromIso(this.pickerMax);\r\n\t\t\tendDate.setFullYear(1970, 0, 1);\r\n\t\t\tvar visibleRange = (endDate.getTime() - this._refDate.getTime()) * 0.001;\r\n\t\t\tthis._maxIncrement = Math.ceil((visibleRange + 1) / clickableIncrementSeconds);\r\n\r\n\t\t\tvar nodes  = this._getFilteredNodes();\r\n\t\t\tarray.forEach(nodes, function(n){\r\n\t\t\t\tthis.domNode.appendChild(n);\r\n\t\t\t}, this);\r\n\r\n\t\t\t// never show empty due to a bad filter\r\n\t\t\tif(!nodes.length && this.filterString){\r\n\t\t\t\tthis.filterString = '';\r\n\t\t\t\tthis._showText();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tconstructor: function(/*===== params, srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t\tthis.constraints = {};\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setConstraintsAttr(this.constraints); // this needs to happen now (and later) due to codependency on _set*Attr calls\r\n\t\t},\r\n\r\n\t\t// For historical reasons TimeTextBox sends all the options for the _TimePicker inside of a constraints{} object\r\n\t\t_setConstraintsAttr: function(/* Object */ constraints){\r\n\t\t\t// brings in increments, etc.\r\n\t\t\tfor (var key in { clickableIncrement: 1, visibleIncrement: 1, pickerMin: 1, pickerMax: 1 }) {\r\n\t\t\t\tif (key in constraints) {\r\n\t\t\t\t\tthis[key] = constraints[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// locale needs the lang in the constraints as locale\r\n\t\t\tif(!constraints.locale){\r\n\t\t\t\tconstraints.locale = this.lang;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_createOption: function(/*Number*/ index){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a clickable time option, or returns null if the specified index doesn't match the filter\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar date = new Date(this._refDate);\r\n\t\t\tvar incrementDate = this._clickableIncrementDate;\r\n\t\t\tdate.setHours(date.getHours() + incrementDate.getHours() * index,\r\n\t\t\t\tdate.getMinutes() + incrementDate.getMinutes() * index,\r\n\t\t\t\tdate.getSeconds() + incrementDate.getSeconds() * index);\r\n\t\t\tif(this.constraints.selector == \"time\"){\r\n\t\t\t\tdate.setFullYear(1970, 0, 1); // make sure each time is for the same date\r\n\t\t\t}\r\n\t\t\tvar dateString = locale.format(date, this.constraints);\r\n\t\t\tif(this.filterString && dateString.toLowerCase().indexOf(this.filterString) !== 0){\r\n\t\t\t\t// Doesn't match the filter - return null\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar div = this.ownerDocument.createElement(\"div\");\r\n\t\t\tdiv.className = this.baseClass + \"Item\";\r\n\t\t\tdiv.date = date;\r\n\t\t\tdiv.idx = index;\r\n\t\t\tdomConstruct.create('div', {\r\n\t\t\t\t\"class\": this.baseClass + \"ItemInner\",\r\n\t\t\t\tinnerHTML: dateString\r\n\t\t\t}, div);\r\n\r\n\t\t\tif(index % this._visibleIncrement < 1 && index % this._visibleIncrement > -1){\r\n\t\t\t\tdomClass.add(div, this.baseClass + \"Marker\");\r\n\t\t\t}else if(!(index % this._clickableIncrement)){\r\n\t\t\t\tdomClass.add(div, this.baseClass + \"Tick\");\r\n\t\t\t}\r\n\r\n\t\t\tif(this.isDisabledDate(date)){\r\n\t\t\t\t// set disabled\r\n\t\t\t\tdomClass.add(div, this.baseClass + \"ItemDisabled\");\r\n\t\t\t}\r\n\t\t\tif(this.value && !ddate.compare(this.value, date, this.constraints.selector)){\r\n\t\t\t\tdiv.selected = true;\r\n\t\t\t\tdomClass.add(div, this.baseClass + \"ItemSelected\");\r\n\t\t\t\tthis._selectedDiv = div;\r\n\t\t\t\tif(domClass.contains(div, this.baseClass + \"Marker\")){\r\n\t\t\t\t\tdomClass.add(div, this.baseClass + \"MarkerSelected\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomClass.add(div, this.baseClass + \"TickSelected\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Initially highlight the current value.   User can change highlight by up/down arrow keys\r\n\t\t\t\t// or mouse movement.\r\n\t\t\t\tthis._highlightOption(div, true);\r\n\t\t\t}\r\n\t\t\treturn div;\r\n\t\t},\r\n\r\n\t\tonOpen: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Since _ListBase::_setSelectedAttr() calls scrollIntoView(), shouldn't call it until list is visible.\r\n\t\t\tthis.set(\"selected\", this._selectedDiv);\r\n\t\t},\r\n\r\n\t\t_onOptionSelected: function(/*Object*/ tgt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when user clicks an option in the drop down list\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar tdate = tgt.target.date || tgt.target.parentNode.date;\r\n\t\t\tif(!tdate || this.isDisabledDate(tdate)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._highlighted_option = null;\r\n\t\t\tthis.set('value', tdate);\r\n\t\t\tthis.onChange(tdate);\r\n\t\t},\r\n\r\n\t\tonChange: function(/*Date*/ /*===== time =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tNotification that a time was selected.  It may be the same as the previous value.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\t\t},\r\n\r\n\t\t_highlightOption: function(/*node*/ node, /*Boolean*/ highlight){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTurns on/off highlight effect on a node based on mouse out/over event\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!node){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(highlight){\r\n\t\t\t\tif(this._highlighted_option){\r\n\t\t\t\t\tthis._highlightOption(this._highlighted_option, false);\r\n\t\t\t\t}\r\n\t\t\t\tthis._highlighted_option = node;\r\n\t\t\t}else if(this._highlighted_option !== node){\r\n\t\t\t\treturn;\r\n\t\t\t}else{\r\n\t\t\t\tthis._highlighted_option = null;\r\n\t\t\t}\r\n\t\t\tdomClass.toggle(node, this.baseClass + \"ItemHover\", highlight);\r\n\t\t\tif(domClass.contains(node, this.baseClass + \"Marker\")){\r\n\t\t\t\tdomClass.toggle(node, this.baseClass + \"MarkerHover\", highlight);\r\n\t\t\t}else{\r\n\t\t\t\tdomClass.toggle(node, this.baseClass + \"TickHover\", highlight);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleKey: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled from `dijit/form/_DateTimeTextBox` to pass a keypress event\r\n\t\t\t//\t\tfrom the `dijit/form/TimeTextBox` to be handled in this widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(e.keyCode == keys.DOWN_ARROW){\r\n\t\t\t\tthis.selectNextNode();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}else if(e.keyCode == keys.UP_ARROW){\r\n\t\t\t\tthis.selectPreviousNode();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}else if(e.keyCode == keys.ENTER || e.keyCode === keys.TAB){\r\n\t\t\t\t// mouse hover followed by TAB is NO selection\r\n\t\t\t\tif(!this._keyboardSelected && e.keyCode === keys.TAB){\r\n\t\t\t\t\treturn true;\t// true means don't call stopEvent()\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Accept the currently-highlighted option as the value\r\n\t\t\t\tif(this._highlighted_option){\r\n\t\t\t\t\tthis._onOptionSelected({target: this._highlighted_option});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Call stopEvent() for ENTER key so that form doesn't submit,\r\n\t\t\t\t// but not for TAB, so that TAB does switch focus\r\n\t\t\t\treturn e.keyCode === keys.TAB;\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t},\r\n\r\n\t\t// Implement abstract methods for _ListBase\r\n\t\tonHover: function(/*DomNode*/ node){\r\n\t\t\tthis._highlightOption(node, true);\r\n\t\t},\r\n\r\n\t\tonUnhover: function(/*DomNode*/ node){\r\n\t\t\tthis._highlightOption(node, false);\r\n\t\t},\r\n\r\n\t\tonSelect: function(/*DomNode*/ node){\r\n\t\t\tthis._highlightOption(node, true);\r\n\t\t},\r\n\r\n\t\tonDeselect: function(/*DomNode*/ node){\r\n\t\t\tthis._highlightOption(node, false);\r\n\t\t},\r\n\r\n\t\tonClick: function(/*DomNode*/ node){\r\n\t\t\tthis._onOptionSelected({target: node});\r\n\t\t}\r\n\t});\r\n\r\n\t/*=====\r\n\t TimePicker.__Constraints = declare(locale.__FormatOptions, {\r\n\t\t // clickableIncrement: String\r\n\t\t //\t\tSee `dijit/_TimePicker.clickableIncrement`\r\n\t\t clickableIncrement: \"T00:15:00\"\r\n\t });\r\n\t =====*/\r\n\r\n\treturn TimePicker;\r\n});\r\n\ndefine('dijit/form/TimeTextBox',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys.DOWN_ARROW keys.ENTER keys.ESCAPE keys.TAB keys.UP_ARROW\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"../_TimePicker\",\r\n\t\"./_DateTimeTextBox\"\r\n], function(declare, keys, lang, _TimePicker, _DateTimeTextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/TimeTextBox\r\n\r\n\r\n\t/*=====\r\n\tvar __Constraints = declare([_DateTimeTextBox.__Constraints, _TimePicker.__Constraints], {\r\n\t});\r\n\t=====*/\r\n\r\n\treturn declare(\"dijit.form.TimeTextBox\", _DateTimeTextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tA validating, serializable, range-bound time text box with a drop down time picker\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitComboBox dijitTimeTextBox\",\r\n\t\tpopupClass: _TimePicker,\r\n\t\t_selector: \"time\",\r\n\r\n/*=====\r\n\t\t// constraints: __Constraints\r\n\t\tconstraints:{},\r\n=====*/\r\n\r\n\t\t// value: Date\r\n\t\t//\t\tThe value of this widget as a JavaScript Date object.  Note that the date portion implies time zone and daylight savings rules.\r\n\t\t//\r\n\t\t//\t\tExample:\r\n\t\t// |\tnew dijit/form/TimeTextBox({value: stamp.fromISOString(\"T12:59:59\", new Date())})\r\n\t\t//\r\n\t\t//\t\tWhen passed to the parser in markup, must be specified according to locale-independent\r\n\t\t//\t\t`stamp.fromISOString` format.\r\n\t\t//\r\n\t\t//\t\tExample:\r\n\t\t// |\t<input data-dojo-type='dijit/form/TimeTextBox' value='T12:34:00'>\r\n\t\tvalue: new Date(\"\"),\t\t// value.toString()=\"NaN\"\r\n\t\t//FIXME: in markup, you have no control over daylight savings\r\n\r\n\t\t// Add scrollbars if necessary so that dropdown doesn't cover the <input>\r\n\t\tmaxHeight: -1,\r\n\r\n\t\t_onKey: function(evt){\r\n\t\t\tif(this.disabled || this.readOnly){ return; }\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// If the user has backspaced or typed some numbers, then filter the result list\r\n\t\t\t// by what they typed.  Maybe there's a better way to detect this, like _handleOnChange()?\r\n\t\t\tswitch(evt.keyCode){\r\n\t\t\t\tcase keys.ENTER:\r\n\t\t\t\tcase keys.TAB:\r\n\t\t\t\tcase keys.ESCAPE:\r\n\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\t\t// these keys have special meaning\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// defer() because the keystroke hasn't yet appeared in the <input>,\r\n\t\t\t\t\t// so the get('displayedValue') call below won't give the result we want.\r\n\t\t\t\t\tthis.defer(function(){\r\n\t\t\t\t\t\t// set this.filterString to the filter to apply to the drop down list;\r\n\t\t\t\t\t\t// it will be used in openDropDown()\r\n\t\t\t\t\t\tvar val = this.get('displayedValue');\r\n\t\t\t\t\t\tthis.filterString = (val && !this.parse(val, this.constraints)) ? val.toLowerCase() : \"\";\r\n\r\n\t\t\t\t\t\t// close the drop down and reopen it, in order to filter the items shown in the list\r\n\t\t\t\t\t\t// and also since the drop down may need to be repositioned if the number of list items has changed\r\n\t\t\t\t\t\t// and it's being displayed above the <input>\r\n\t\t\t\t\t\tif(this._opened){\r\n\t\t\t\t\t\t\tthis.closeDropDown();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.openDropDown();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\n\ndefine('dijit/form/_Spinner',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys keys.DOWN_ARROW keys.PAGE_DOWN keys.PAGE_UP keys.UP_ARROW\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/sniff\", // has(\"mozilla\")\r\n\t\"dojo/mouse\", // mouse.wheel\r\n\t\"dojo/on\",\r\n\t\"../typematic\",\r\n\t\"./RangeBoundTextBox\",\r\n\t\"dojo/text!./templates/Spinner.html\",\r\n\t\"./_TextBoxMixin\"    // selectInputText\r\n], function(declare, keys, lang, has, mouse, on, typematic, RangeBoundTextBox, template, _TextBoxMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_Spinner\r\n\r\n\treturn declare(\"dijit.form._Spinner\", RangeBoundTextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for validation widgets with a spinner.\r\n\t\t// description:\r\n\t\t//\t\tThis class basically (conceptually) extends `dijit/form/ValidationTextBox`.\r\n\t\t//\t\tIt modifies the template to have up/down arrows, and provides related handling code.\r\n\r\n\t\t// defaultTimeout: Number\r\n\t\t//\t\tNumber of milliseconds before a held arrow key or up/down button becomes typematic\r\n\t\tdefaultTimeout: 500,\r\n\r\n\t\t// minimumTimeout: Number\r\n\t\t//\t\tminimum number of milliseconds that typematic event fires when held key or button is held\r\n\t\tminimumTimeout: 10,\r\n\r\n\t\t// timeoutChangeRate: Number\r\n\t\t//\t\tFraction of time used to change the typematic timer between events.\r\n\t\t//\t\t1.0 means that each typematic event fires at defaultTimeout intervals.\r\n\t\t//\t\tLess than 1.0 means that each typematic event fires at an increasing faster rate.\r\n\t\ttimeoutChangeRate: 0.90,\r\n\r\n\t\t// smallDelta: Number\r\n\t\t//\t\tAdjust the value by this much when spinning using the arrow keys/buttons\r\n\t\tsmallDelta: 1,\r\n\r\n\t\t// largeDelta: Number\r\n\t\t//\t\tAdjust the value by this much when spinning using the PgUp/Dn keys\r\n\t\tlargeDelta: 10,\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitSpinner\",\r\n\r\n\t\t// Set classes like dijitUpArrowButtonHover or dijitDownArrowButtonActive depending on\r\n\t\t// mouse action over specified node\r\n\t\tcssStateNodes: {\r\n\t\t\t\"upArrowNode\": \"dijitUpArrowButton\",\r\n\t\t\t\"downArrowNode\": \"dijitDownArrowButton\"\r\n\t\t},\r\n\r\n\t\tadjust: function(val /*=====, delta =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function used to adjust a primitive value(Number/Date/...) by the delta amount specified.\r\n\t\t\t//\t\tThe val is adjusted in a way that makes sense to the object type.\r\n\t\t\t// val: Object\r\n\t\t\t// delta: Number\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\treturn val;\r\n\t\t},\r\n\r\n\t\t_arrowPressed: function(/*Node*/ nodePressed, /*Number*/ direction, /*Number*/ increment){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for arrow button or arrow key being pressed\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._setValueAttr(this.adjust(this.get('value'), direction * increment), false);\r\n\t\t\t_TextBoxMixin.selectInputText(this.textbox, this.textbox.value.length);\r\n\t\t},\r\n\r\n\t\t_arrowReleased: function(/*Node*/ /*===== node =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for arrow button or arrow key being released\r\n\t\t\tthis._wheelTimer = null;\r\n\t\t},\r\n\r\n\t\t_typematicCallback: function(/*Number*/ count, /*DOMNode*/ node, /*Event*/ evt){\r\n\t\t\tvar inc = this.smallDelta;\r\n\t\t\tif(node == this.textbox){\r\n\t\t\t\tvar key = evt.keyCode;\r\n\t\t\t\tinc = (key == keys.PAGE_UP || key == keys.PAGE_DOWN) ? this.largeDelta : this.smallDelta;\r\n\t\t\t\tnode = (key == keys.UP_ARROW || key == keys.PAGE_UP) ? this.upArrowNode : this.downArrowNode;\r\n\t\t\t}\r\n\t\t\tif(count == -1){\r\n\t\t\t\tthis._arrowReleased(node);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._arrowPressed(node, (node == this.upArrowNode) ? 1 : -1, inc);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_wheelTimer: null,\r\n\t\t_mouseWheeled: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse wheel listener where supported\r\n\r\n\t\t\tevt.stopPropagation();\r\n\t\t\tevt.preventDefault();\r\n\t\t\t// FIXME: Safari bubbles\r\n\r\n\t\t\t// be nice to DOH and scroll as much as the event says to\r\n\t\t\tvar wheelDelta = evt.wheelDelta / 120;\r\n\t\t\tif(Math.floor(wheelDelta) != wheelDelta){\r\n\t\t\t\t// If not an int multiple of 120, then its touchpad scrolling.\r\n\t\t\t\t// This can change very fast so just assume 1 wheel click to make it more manageable.\r\n\t\t\t\twheelDelta = evt.wheelDelta > 0 ? 1 : -1;\r\n\t\t\t}\r\n\t\t\tvar scrollAmount = evt.detail ? (evt.detail * -1) : wheelDelta;\r\n\t\t\tif(scrollAmount !== 0){\r\n\t\t\t\tvar node = this[(scrollAmount > 0 ? \"upArrowNode\" : \"downArrowNode\" )];\r\n\r\n\t\t\t\tthis._arrowPressed(node, scrollAmount, this.smallDelta);\r\n\r\n\t\t\t\tif(this._wheelTimer){\r\n\t\t\t\t\tthis._wheelTimer.remove();\r\n\t\t\t\t}\r\n\t\t\t\tthis._wheelTimer = this.defer(function(){\r\n\t\t\t\t\tthis._arrowReleased(node);\r\n\t\t\t\t}, 50);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setConstraintsAttr: function(/*Object*/ constraints){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.focusNode){ // not set when called from postMixInProperties\r\n\t\t\t\tif(this.constraints.min !== undefined){\r\n\t\t\t\t\tthis.focusNode.setAttribute(\"aria-valuemin\", this.constraints.min);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.focusNode.removeAttribute(\"aria-valuemin\");\r\n\t\t\t\t}\r\n\t\t\t\tif(this.constraints.max !== undefined){\r\n\t\t\t\t\tthis.focusNode.setAttribute(\"aria-valuemax\", this.constraints.max);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.focusNode.removeAttribute(\"aria-valuemax\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Number*/ value, /*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', ...) works.\r\n\r\n\t\t\tthis.focusNode.setAttribute(\"aria-valuenow\", value);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// extra listeners\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.domNode, mouse.wheel, lang.hitch(this, \"_mouseWheeled\")),\r\n\t\t\t\ttypematic.addListener(this.upArrowNode, this.textbox, {keyCode: keys.UP_ARROW, ctrlKey: false, altKey: false, shiftKey: false, metaKey: false}, this, \"_typematicCallback\", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout),\r\n\t\t\t\ttypematic.addListener(this.downArrowNode, this.textbox, {keyCode: keys.DOWN_ARROW, ctrlKey: false, altKey: false, shiftKey: false, metaKey: false}, this, \"_typematicCallback\", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout),\r\n\t\t\t\ttypematic.addListener(this.upArrowNode, this.textbox, {keyCode: keys.PAGE_UP, ctrlKey: false, altKey: false, shiftKey: false, metaKey: false}, this, \"_typematicCallback\", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout),\r\n\t\t\t\ttypematic.addListener(this.downArrowNode, this.textbox, {keyCode: keys.PAGE_DOWN, ctrlKey: false, altKey: false, shiftKey: false, metaKey: false}, this, \"_typematicCallback\", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout)\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/NumberSpinner',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/keys\", // keys.END keys.HOME\r\n\t\"./_Spinner\",\r\n\t\"./NumberTextBox\"\r\n], function(declare, keys, _Spinner, NumberTextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/NumberSpinner\r\n\r\n\treturn declare(\"dijit.form.NumberSpinner\", [_Spinner, NumberTextBox.Mixin], {\r\n\t\t// summary:\r\n\t\t//\t\tExtends NumberTextBox to add up/down arrows and pageup/pagedown for incremental change to the value\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA `dijit/form/NumberTextBox` extension to provide keyboard accessible value selection\r\n\t\t//\t\tas well as icons for spinning direction. When using the keyboard, the typematic rules\r\n\t\t//\t\tapply, meaning holding the key will gradually increase or decrease the value and\r\n\t\t//\t\taccelerate.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t| new NumberSpinner({ constraints:{ max:300, min:100 }}, \"someInput\");\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitSpinner dijitNumberTextBox\",\r\n\r\n\t\tadjust: function(/*Object*/ val, /*Number*/ delta){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChange Number val by the given amount\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar tc = this.constraints,\r\n\t\t\t\tv = isNaN(val),\r\n\t\t\t\tgotMax = !isNaN(tc.max),\r\n\t\t\t\tgotMin = !isNaN(tc.min)\r\n\t\t\t\t;\r\n\t\t\tif(v && delta != 0){ // blank or invalid value and they want to spin, so create defaults\r\n\t\t\t\tval = (delta > 0) ?\r\n\t\t\t\t\tgotMin ? tc.min : gotMax ? tc.max : 0 :\r\n\t\t\t\t\tgotMax ? this.constraints.max : gotMin ? tc.min : 0\r\n\t\t\t\t;\r\n\t\t\t}\r\n\t\t\tvar newval = val + delta;\r\n\t\t\tif(v || isNaN(newval)){\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\tif(gotMax && (newval > tc.max)){\r\n\t\t\t\tnewval = tc.max;\r\n\t\t\t}\r\n\t\t\tif(gotMin && (newval < tc.min)){\r\n\t\t\t\tnewval = tc.min;\r\n\t\t\t}\r\n\t\t\treturn newval;\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(e){\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif((e.keyCode == keys.HOME || e.keyCode == keys.END) && !(e.ctrlKey || e.altKey || e.metaKey)\r\n\t\t\t\t&& typeof this.get('value') != 'undefined' /* gibberish, so HOME and END are default editing keys*/){\r\n\t\t\t\tvar value = this.constraints[(e.keyCode == keys.HOME ? \"min\" : \"max\")];\r\n\t\t\t\tif(typeof value == \"number\"){\r\n\t\t\t\t\tthis._setValueAttr(value, false);\r\n\t\t\t\t}\r\n\t\t\t\t// eat home or end key whether we change the value or not\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/ComboBox',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./ValidationTextBox\",\r\n\t\"./ComboBoxMixin\"\r\n], function(declare, ValidationTextBox, ComboBoxMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/ComboBox\r\n\r\n\treturn declare(\"dijit.form.ComboBox\", [ValidationTextBox, ComboBoxMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tAuto-completing text box\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tThe drop down box's values are populated from an class called\r\n\t\t//\t\ta data provider, which returns a list of values based on the characters\r\n\t\t//\t\tthat the user has typed into the input box.\r\n\t\t//\t\tIf OPTION tags are used as the data provider via markup,\r\n\t\t//\t\tthen the OPTION tag's child text node is used as the widget value\r\n\t\t//\t\twhen selected.  The OPTION tag's value attribute is ignored.\r\n\t\t//\t\tTo set the default value when using OPTION tags, specify the selected\r\n\t\t//\t\tattribute on 1 of the child OPTION tags.\r\n\t\t//\r\n\t\t//\t\tSome of the options to the ComboBox are actually arguments to the data\r\n\t\t//\t\tprovider.\r\n\t});\r\n});\r\n\ndefine('dijit/form/MultiSelect',[\r\n\t\"dojo/_base/array\", // indexOf, map, forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-geometry\", // domGeometry.setMarginBox\r\n\t\"dojo/sniff\",\t// has(\"android\")\r\n\t\"dojo/query\", // query\r\n\t\"./_FormValueWidget\",\r\n\t\"dojo/NodeList-dom\"\t// orphan()\r\n], function(array, declare, domGeometry, has, query, _FormValueWidget){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/MultiSelect\r\n\r\n\tvar MultiSelect = declare(\"dijit.form.MultiSelect\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), _FormValueWidget, {\r\n\t\t// summary:\r\n\t\t//\t\tWidget version of a `<select multiple=multiple>` element,\r\n\t\t//\t\tfor selecting multiple options.\r\n\r\n\t\t// size: Number\r\n\t\t//\t\tNumber of elements to display on a page\r\n\t\t//\t\tNOTE: may be removed in version 2.0, since elements may have variable height;\r\n\t\t//\t\tset the size via style=\"...\" or CSS class names instead.\r\n\t\tsize: 7,\r\n\r\n\t\tbaseClass: \"dijitMultiSelect\",\r\n\r\n\t\ttemplateString: \"<select multiple='multiple' ${!nameAttrSetting} data-dojo-attach-point='containerNode,focusNode' data-dojo-attach-event='onchange: _onChange'></select>\",\r\n\r\n\t\taddSelected: function(/*dijit/form/MultiSelect*/ select){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMove the selected nodes of a passed Select widget\r\n\t\t\t//\t\tinstance to this Select widget.\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t// |\t// move all the selected values from \"bar\" to \"foo\"\r\n\t\t\t// |\tdijit.byId(\"foo\").addSelected(dijit.byId(\"bar\"));\r\n\r\n\t\t\tselect.getSelected().forEach(function(n){\r\n\t\t\t\tthis.containerNode.appendChild(n);\r\n\t\t\t\t// scroll to bottom to see item\r\n\t\t\t\t// cannot use scrollIntoView since <option> tags don't support all attributes\r\n\t\t\t\t// does not work on IE due to a bug where <select> always shows scrollTop = 0\r\n\t\t\t\tthis.domNode.scrollTop = this.domNode.offsetHeight; // overshoot will be ignored\r\n\t\t\t\t// scrolling the source select is trickier esp. on safari who forgets to change the scrollbar size\r\n\t\t\t\tvar oldscroll = select.domNode.scrollTop;\r\n\t\t\t\tselect.domNode.scrollTop = 0;\r\n\t\t\t\tselect.domNode.scrollTop = oldscroll;\r\n\t\t\t}, this);\r\n\t\t\tthis._set('value', this.get('value'));\r\n\t\t},\r\n\r\n\t\tgetSelected: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAccess the NodeList of the selected options directly\r\n\t\t\treturn query(\"option\", this.containerNode).filter(function(n){\r\n\t\t\t\treturn n.selected; // Boolean\r\n\t\t\t}); // dojo/NodeList\r\n\t\t},\r\n\r\n\t\t_getValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so get('value') works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tReturns an array of the selected options' values.\r\n\r\n\t\t\t// Don't call getSelect.map() because it doesn't return a real array,\r\n\t\t\t// and that messes up dojo.toJson() calls like in the Form.html test\r\n\t\t\treturn array.map(this.getSelected(), function(n){\r\n\t\t\t\treturn n.value;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Set multiple so parent form widget knows that I return multiple values.\r\n\t\t// Also adding a no-op custom setter; otherwise the multiple property is applied to the <select> node\r\n\t\t// which causes problem on Android < 4.4 with all but the first selected item being deselected.\r\n\t\tmultiple: true,\r\n\t\t_setMultipleAttr: function(val){\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*String[]*/ values){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', values) works.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSet the value(s) of this Select based on passed values\r\n\r\n\t\t\tif(has(\"android\")){\r\n\t\t\t\t// Workaround bizarre Android bug where deselecting one option selects another one.\r\n\t\t\t\t// See https://code.google.com/p/android/issues/detail?id=68285.\r\n\t\t\t\t// Could use this code path for all browsers but I worry about IE memory leaks.\r\n\t\t\t\tquery(\"option\", this.containerNode).orphan().forEach(function(n){\r\n\t\t\t\t\tvar option = n.ownerDocument.createElement(\"option\");\r\n\t\t\t\t\toption.value = n.value;\r\n\t\t\t\t\toption.selected = (array.indexOf(values, n.value) != -1);\r\n\t\t\t\t\toption.text = n.text;\r\n\t\t\t\t\toption.originalText = n.originalText;\t// for bidi support, see has(\"dojo-bidi\") block below\r\n\t\t\t\t\tthis.containerNode.appendChild(option);\r\n\t\t\t\t}, this);\r\n\t\t\t}else {\r\n\t\t\t\tquery(\"option\", this.containerNode).forEach(function(n){\r\n\t\t\t\t\tn.selected = (array.indexOf(values, n.value) != -1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tinvertSelection: function(/*Boolean?*/ onChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInvert the selection\r\n\t\t\t// onChange: Boolean\r\n\t\t\t//\t\tIf false, onChange is not fired.\r\n\t\t\tvar val = [];\r\n\t\t\tquery(\"option\", this.containerNode).forEach(function(n){\r\n\t\t\t\tif(!n.selected){\r\n\t\t\t\t\tval.push(n.value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._setValueAttr(val, !(onChange === false || onChange == null));\r\n\t\t},\r\n\r\n\t\t_onChange: function(/*Event*/){\r\n\t\t\tthis._handleOnChange(this.get('value'), true);\r\n\t\t},\r\n\r\n\t\t// for layout widgets:\r\n\t\tresize: function(/*Object*/ size){\r\n\t\t\tif(size){\r\n\t\t\t\tdomGeometry.setMarginBox(this.domNode, size);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis._set('value', this.get('value'));\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tMultiSelect = declare(\"dijit.form.MultiSelect\", MultiSelect, {\r\n\t\t\taddSelected: function(/*dijit/form/MultiSelect*/ select){\r\n\t\t\t\tselect.getSelected().forEach(function(n){\r\n\t\t\t\t\tn.text = this.enforceTextDirWithUcc(this.restoreOriginalText(n), n.text);\r\n\t\t\t\t}, this);\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(textDir){\r\n\t\t\t\t// to insure the code executed only when _BidiSupport loaded, and only\r\n\t\t\t\t// when there was a change in textDir\r\n\t\t\t\tif((this.textDir != textDir || !this._created) && this.enforceTextDirWithUcc){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\r\n\t\t\t\t\tquery(\"option\", this.containerNode).forEach(function(option){\r\n\t\t\t\t\t\t// If the value wasn't defined explicitly, it the same object as\r\n\t\t\t\t\t\t// option.text. Since the option.text will be modified (by wrapping of UCC)\r\n\t\t\t\t\t\t// we want to save the original option.value for form submission.\r\n\t\t\t\t\t\tif(!this._created && option.value === option.text){\r\n\t\t\t\t\t\t\toption.value = option.text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// apply the bidi support\r\n\t\t\t\t\t\toption.text = this.enforceTextDirWithUcc(option, option.originalText || option.text);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn MultiSelect;\r\n});\r\n\ndefine('dijit/form/_FormSelectWidget',[\r\n\t\"dojo/_base/array\", // array.filter array.forEach array.map array.some\r\n\t\"dojo/_base/Deferred\",\r\n\t\"dojo/aspect\", // aspect.after\r\n\t\"dojo/data/util/sorter\", // util.sorter.createSortFunction\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/_base/kernel\",\t// _scopeName\r\n\t\"dojo/_base/lang\", // lang.delegate lang.isArray lang.isObject lang.hitch\r\n\t\"dojo/query\", // query\r\n\t\"dojo/when\",\r\n\t\"dojo/store/util/QueryResults\",\r\n\t\"./_FormValueWidget\"\r\n], function(array, Deferred, aspect, sorter, declare, dom, domClass, kernel, lang, query, when,\r\n\t\t\tQueryResults, _FormValueWidget){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_FormSelectWidget\r\n\r\n\t/*=====\r\n\tvar __SelectOption = {\r\n\t\t// value: String\r\n\t\t//\t\tThe value of the option.  Setting to empty (or missing) will\r\n\t\t//\t\tplace a separator at that location\r\n\t\t// label: String\r\n\t\t//\t\tThe label for our option.  It can contain html tags.\r\n\t\t// selected: Boolean\r\n\t\t//\t\tWhether or not we are a selected option\r\n\t\t// disabled: Boolean\r\n\t\t//\t\tWhether or not this specific option is disabled\r\n\t};\r\n\t=====*/\r\n\r\n\tvar _FormSelectWidget = declare(\"dijit.form._FormSelectWidget\", _FormValueWidget, {\r\n\t\t// summary:\r\n\t\t//\t\tExtends _FormValueWidget in order to provide \"select-specific\"\r\n\t\t//\t\tvalues - i.e., those values that are unique to `<select>` elements.\r\n\t\t//\t\tThis also provides the mechanism for reading the elements from\r\n\t\t//\t\ta store, if desired.\r\n\r\n\t\t// multiple: [const] Boolean\r\n\t\t//\t\tWhether or not we are multi-valued\r\n\t\tmultiple: false,\r\n\r\n\t\t// options: __SelectOption[]\r\n\t\t//\t\tThe set of options for our select item.  Roughly corresponds to\r\n\t\t//\t\tthe html `<option>` tag.\r\n\t\toptions: null,\r\n\r\n\t\t// store: dojo/store/api/Store\r\n\t\t//\t\tA store to use for getting our list of options - rather than reading them\r\n\t\t//\t\tfrom the `<option>` html tags.   Should support getIdentity().\r\n\t\t//\t\tFor back-compat store can also be a dojo/data/api/Identity.\r\n\t\tstore: null,\r\n\t\t_setStoreAttr: function(val){\r\n\t\t\tif(this._created){\t\t// don't repeat work that will happen in postCreate()\r\n\t\t\t\tthis._deprecatedSetStore(val);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// query: object\r\n\t\t//\t\tA query to use when fetching items from our store\r\n\t\tquery: null,\r\n\t\t_setQueryAttr: function(query){\r\n\t\t\tif(this._created){\t\t// don't repeat work that will happen in postCreate()\r\n\t\t\t\tthis._deprecatedSetStore(this.store, this.selectedValue, {query: query});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// queryOptions: object\r\n\t\t//\t\tQuery options to use when fetching from the store\r\n\t\tqueryOptions: null,\r\n\t\t_setQueryOptionsAttr: function(queryOptions){\r\n\t\t\tif(this._created){\t\t// don't repeat work that will happen in postCreate()\r\n\t\t\t\tthis._deprecatedSetStore(this.store, this.selectedValue, {queryOptions: queryOptions});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// labelAttr: String?\r\n\t\t//\t\tThe entries in the drop down list come from this attribute in the dojo.store items.\r\n\t\t//\t\tIf ``store`` is set, labelAttr must be set too, unless store is an old-style\r\n\t\t//\t\tdojo.data store rather than a new dojo/store.\r\n\t\tlabelAttr: \"\",\r\n\r\n\t\t// onFetch: Function\r\n\t\t//\t\tA callback to do with an onFetch - but before any items are actually\r\n\t\t//\t\titerated over (i.e. to filter even further what you want to add)\r\n\t\tonFetch: null,\r\n\r\n\t\t// sortByLabel: Boolean\r\n\t\t//\t\tFlag to sort the options returned from a store by the label of\r\n\t\t//\t\tthe store.\r\n\t\tsortByLabel: true,\r\n\r\n\r\n\t\t// loadChildrenOnOpen: Boolean\r\n\t\t//\t\tBy default loadChildren is called when the items are fetched from the\r\n\t\t//\t\tstore.  This property allows delaying loadChildren (and the creation\r\n\t\t//\t\tof the options/menuitems) until the user clicks the button to open the\r\n\t\t//\t\tdropdown.\r\n\t\tloadChildrenOnOpen: false,\r\n\r\n\t\t// onLoadDeferred: [readonly] dojo.Deferred\r\n\t\t//\t\tThis is the `dojo.Deferred` returned by setStore().\r\n\t\t//\t\tCalling onLoadDeferred.then() registers your\r\n\t\t//\t\tcallback to be called only once, when the prior setStore completes.\r\n\t\tonLoadDeferred: null,\r\n\r\n\t\tgetOptions: function(/*anything*/ valueOrIdx){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a given option (or options).\r\n\t\t\t// valueOrIdx:\r\n\t\t\t//\t\tIf passed in as a string, that string is used to look up the option\r\n\t\t\t//\t\tin the array of options - based on the value property.\r\n\t\t\t//\t\t(See dijit/form/_FormSelectWidget.__SelectOption).\r\n\t\t\t//\r\n\t\t\t//\t\tIf passed in a number, then the option with the given index (0-based)\r\n\t\t\t//\t\twithin this select will be returned.\r\n\t\t\t//\r\n\t\t\t//\t\tIf passed in a dijit/form/_FormSelectWidget.__SelectOption, the same option will be\r\n\t\t\t//\t\treturned if and only if it exists within this select.\r\n\t\t\t//\r\n\t\t\t//\t\tIf passed an array, then an array will be returned with each element\r\n\t\t\t//\t\tin the array being looked up.\r\n\t\t\t//\r\n\t\t\t//\t\tIf not passed a value, then all options will be returned\r\n\t\t\t//\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe option corresponding with the given value or index.\r\n\t\t\t//\t\tnull is returned if any of the following are true:\r\n\t\t\t//\r\n\t\t\t//\t\t- A string value is passed in which doesn't exist\r\n\t\t\t//\t\t- An index is passed in which is outside the bounds of the array of options\r\n\t\t\t//\t\t- A dijit/form/_FormSelectWidget.__SelectOption is passed in which is not a part of the select\r\n\r\n\t\t\t// NOTE: the compare for passing in a dijit/form/_FormSelectWidget.__SelectOption checks\r\n\t\t\t//\t\tif the value property matches - NOT if the exact option exists\r\n\t\t\t// NOTE: if passing in an array, null elements will be placed in the returned\r\n\t\t\t//\t\tarray when a value is not found.\r\n\t\t\tvar opts = this.options || [];\r\n\r\n\t\t\tif(valueOrIdx == null){\r\n\t\t\t\treturn opts; // __SelectOption[]\r\n\t\t\t}\r\n\t\t\tif(lang.isArray(valueOrIdx)){\r\n\t\t\t\treturn array.map(valueOrIdx, \"return this.getOptions(item);\", this); // __SelectOption[]\r\n\t\t\t}\r\n\t\t\tif(lang.isString(valueOrIdx)){\r\n\t\t\t\tvalueOrIdx = { value: valueOrIdx };\r\n\t\t\t}\r\n\t\t\tif(lang.isObject(valueOrIdx)){\r\n\t\t\t\t// We were passed an option - so see if it's in our array (directly),\r\n\t\t\t\t// and if it's not, try and find it by value.\r\n\r\n\t\t\t\tif(!array.some(opts, function(option, idx){\r\n\t\t\t\t\tfor(var a in valueOrIdx){\r\n\t\t\t\t\t\tif(!(a in option) || option[a] != valueOrIdx[a]){ // == and not === so that 100 matches '100'\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueOrIdx = idx;\r\n\t\t\t\t\treturn true; // stops iteration through opts\r\n\t\t\t\t})){\r\n\t\t\t\t\tvalueOrIdx = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(valueOrIdx >= 0 && valueOrIdx < opts.length){\r\n\t\t\t\treturn opts[valueOrIdx]; // __SelectOption\r\n\t\t\t}\r\n\t\t\treturn null; // null\r\n\t\t},\r\n\r\n\t\taddOption: function(/*__SelectOption|__SelectOption[]*/ option){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds an option or options to the end of the select.  If value\r\n\t\t\t//\t\tof the option is empty or missing, a separator is created instead.\r\n\t\t\t//\t\tPassing in an array of options will yield slightly better performance\r\n\t\t\t//\t\tsince the children are only loaded once.\r\n\t\t\tarray.forEach(lang.isArray(option) ? option : [option], function(i){\r\n\t\t\t\tif(i && lang.isObject(i)){\r\n\t\t\t\t\tthis.options.push(i);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tthis._loadChildren();\r\n\t\t},\r\n\r\n\t\tremoveOption: function(/*String|__SelectOption|Number|Array*/ valueOrIdx){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemoves the given option or options.  You can remove by string\r\n\t\t\t//\t\t(in which case the value is removed), number (in which case the\r\n\t\t\t//\t\tindex in the options array is removed), or select option (in\r\n\t\t\t//\t\twhich case, the select option with a matching value is removed).\r\n\t\t\t//\t\tYou can also pass in an array of those values for a slightly\r\n\t\t\t//\t\tbetter performance since the children are only loaded once.\r\n\t\t\t//\t\tFor numeric option values, specify {value: number} as the argument.\r\n\t\t\tvar oldOpts = this.getOptions(lang.isArray(valueOrIdx) ? valueOrIdx : [valueOrIdx]);\r\n\t\t\tarray.forEach(oldOpts, function(option){\r\n\t\t\t\t// We can get null back in our array - if our option was not found.  In\r\n\t\t\t\t// that case, we don't want to blow up...\r\n\t\t\t\tif(option){\r\n\t\t\t\t\tthis.options = array.filter(this.options, function(node){\r\n\t\t\t\t\t\treturn (node.value !== option.value || node.label !== option.label);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._removeOptionItem(option);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tthis._loadChildren();\r\n\t\t},\r\n\r\n\t\tupdateOption: function(/*__SelectOption|__SelectOption[]*/ newOption){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates the values of the given option.  The option to update\r\n\t\t\t//\t\tis matched based on the value of the entered option.  Passing\r\n\t\t\t//\t\tin an array of new options will yield better performance since\r\n\t\t\t//\t\tthe children will only be loaded once.\r\n\t\t\tarray.forEach(lang.isArray(newOption) ? newOption : [newOption], function(i){\r\n\t\t\t\tvar oldOpt = this.getOptions({ value: i.value }), k;\r\n\t\t\t\tif(oldOpt){\r\n\t\t\t\t\tfor(k in i){\r\n\t\t\t\t\t\toldOpt[k] = i[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\tthis._loadChildren();\r\n\t\t},\r\n\r\n\t\tsetStore: function(store, selectedValue, fetchArgs){\r\n\t\t\tkernel.deprecated(this.declaredClass+\"::setStore(store, selectedValue, fetchArgs) is deprecated. Use set('query', fetchArgs.query), set('queryOptions', fetchArgs.queryOptions), set('store', store), or set('value', selectedValue) instead.\", \"\", \"2.0\");\r\n\t\t\tthis._deprecatedSetStore(store, selectedValue, fetchArgs);\r\n\t\t},\r\n\r\n\t\t_deprecatedSetStore: function(store, selectedValue, fetchArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the store you would like to use with this select widget.\r\n\t\t\t//\t\tThe selected value is the value of the new store to set.  This\r\n\t\t\t//\t\tfunction returns the original store, in case you want to reuse\r\n\t\t\t//\t\tit or something.\r\n\t\t\t// store: dojo/store/api/Store\r\n\t\t\t//\t\tThe dojo.store you would like to use - it MUST implement getIdentity()\r\n\t\t\t//\t\tand MAY implement observe().\r\n\t\t\t//\t\tFor backwards-compatibility this can also be a data.data store, in which case\r\n\t\t\t//\t\tit MUST implement dojo/data/api/Identity,\r\n\t\t\t//\t\tand MAY implement dojo/data/api/Notification.\r\n\t\t\t// selectedValue: anything?\r\n\t\t\t//\t\tThe value that this widget should set itself to *after* the store\r\n\t\t\t//\t\thas been loaded\r\n\t\t\t// fetchArgs: Object?\r\n\t\t\t//\t\tHash of parameters to set filter on store, etc.\r\n\t\t\t//\r\n\t\t\t//\t\t- query: new value for Select.query,\r\n\t\t\t//\t\t- queryOptions: new value for Select.queryOptions,\r\n\t\t\t//\t\t- onFetch: callback function for each item in data (Deprecated)\r\n\t\t\tvar oStore = this.store;\r\n\t\t\tfetchArgs = fetchArgs || {};\r\n\r\n\t\t\tif(oStore !== store){\r\n\t\t\t\t// Our store has changed, so cancel any listeners on old store (remove for 2.0)\r\n\t\t\t\tvar h;\r\n\t\t\t\twhile((h = this._notifyConnections.pop())){\r\n\t\t\t\t\th.remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// For backwards-compatibility, accept dojo.data store in addition to dojo.store.store.  Remove in 2.0.\r\n\t\t\t\tif(!store.get){\r\n\t\t\t\t\tlang.mixin(store, {\r\n\t\t\t\t\t\t_oldAPI: true,\r\n\t\t\t\t\t\tget: function(id){\r\n\t\t\t\t\t\t\t// summary:\r\n\t\t\t\t\t\t\t//\t\tRetrieves an object by it's identity. This will trigger a fetchItemByIdentity.\r\n\t\t\t\t\t\t\t//\t\tLike dojo.store.DataStore.get() except returns native item.\r\n\t\t\t\t\t\t\tvar deferred = new Deferred();\r\n\t\t\t\t\t\t\tthis.fetchItemByIdentity({\r\n\t\t\t\t\t\t\t\tidentity: id,\r\n\t\t\t\t\t\t\t\tonItem: function(object){\r\n\t\t\t\t\t\t\t\t\tdeferred.resolve(object);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tonError: function(error){\r\n\t\t\t\t\t\t\t\t\tdeferred.reject(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn deferred.promise;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tquery: function(query, options){\r\n\t\t\t\t\t\t\t// summary:\r\n\t\t\t\t\t\t\t//\t\tQueries the store for objects.   Like dojo/store/DataStore.query()\r\n\t\t\t\t\t\t\t//\t\texcept returned Deferred contains array of native items.\r\n\t\t\t\t\t\t\tvar deferred = new Deferred(function(){\r\n\t\t\t\t\t\t\t\tif(fetchHandle.abort){\r\n\t\t\t\t\t\t\t\t\tfetchHandle.abort();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tdeferred.total = new Deferred();\r\n\t\t\t\t\t\t\tvar fetchHandle = this.fetch(lang.mixin({\r\n\t\t\t\t\t\t\t\tquery: query,\r\n\t\t\t\t\t\t\t\tonBegin: function(count){\r\n\t\t\t\t\t\t\t\t\tdeferred.total.resolve(count);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tonComplete: function(results){\r\n\t\t\t\t\t\t\t\t\tdeferred.resolve(results);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tonError: function(error){\r\n\t\t\t\t\t\t\t\t\tdeferred.reject(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, options));\r\n\t\t\t\t\t\t\treturn new QueryResults(deferred);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(store.getFeatures()[\"dojo.data.api.Notification\"]){\r\n\t\t\t\t\t\tthis._notifyConnections = [\r\n\t\t\t\t\t\t\taspect.after(store, \"onNew\", lang.hitch(this, \"_onNewItem\"), true),\r\n\t\t\t\t\t\t\taspect.after(store, \"onDelete\", lang.hitch(this, \"_onDeleteItem\"), true),\r\n\t\t\t\t\t\t\taspect.after(store, \"onSet\", lang.hitch(this, \"_onSetItem\"), true)\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._set(\"store\", store);\t\t\t// Our store has changed, so update our notifications\r\n\t\t\t}\r\n\r\n\t\t\t// Remove existing options (if there are any)\r\n\t\t\tif(this.options && this.options.length){\r\n\t\t\t\tthis.removeOption(this.options);\r\n\t\t\t}\r\n\r\n\t\t\t// Cancel listener for updates to old (dojo.data) store\r\n\t\t\tif(this._queryRes && this._queryRes.close){\r\n\t\t\t\tthis._queryRes.close();\r\n\t\t\t}\r\n\r\n\t\t\t// Cancel listener for updates to new (dojo.store) store\r\n\t\t\tif(this._observeHandle && this._observeHandle.remove){\r\n\t\t\t\tthis._observeHandle.remove();\r\n\t\t\t\tthis._observeHandle = null;\r\n\t\t\t}\r\n\r\n\t\t\t// If user has specified new query and query options along with this new store, then use them.\r\n\t\t\tif(fetchArgs.query){\r\n\t\t\t\tthis._set(\"query\", fetchArgs.query);\r\n\t\t\t}\r\n\t\t\tif(fetchArgs.queryOptions){\r\n\t\t\t\tthis._set(\"queryOptions\", fetchArgs.queryOptions);\r\n\t\t\t}\r\n\r\n\t\t\t// Add our new options\r\n\t\t\tif(store && store.query){\r\n\t\t\t\tthis._loadingStore = true;\r\n\t\t\t\tthis.onLoadDeferred = new Deferred();\r\n\r\n\t\t\t\t// Run query\r\n\t\t\t\t// Save result in this._queryRes so we can cancel the listeners we register below\r\n\t\t\t\tthis._queryRes = store.query(this.query, this.queryOptions);\r\n\t\t\t\twhen(this._queryRes, lang.hitch(this, function(items){\r\n\r\n\t\t\t\t\tif(this.sortByLabel && !fetchArgs.sort && items.length){\r\n\t\t\t\t\t\tif(store.getValue){\r\n\t\t\t\t\t\t\t// Old dojo.data API to access items, remove for 2.0\r\n\t\t\t\t\t\t\titems.sort(sorter.createSortFunction([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tattribute: store.getLabelAttributes(items[0])[0]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t], store));\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// TODO: remove sortByLabel completely for 2.0?  It can be handled by queryOptions: {sort: ... }.\r\n\t\t\t\t\t\t\tvar labelAttr = this.labelAttr;\r\n\t\t\t\t\t\t\titems.sort(function(a, b){\r\n\t\t\t\t\t\t\t\treturn a[labelAttr] > b[labelAttr] ? 1 : b[labelAttr] > a[labelAttr] ? -1 : 0;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(fetchArgs.onFetch){\r\n\t\t\t\t\t\titems = fetchArgs.onFetch.call(this, items, fetchArgs);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// TODO: Add these guys as a batch, instead of separately\r\n\t\t\t\t\tarray.forEach(items, function(i){\r\n\t\t\t\t\t\tthis._addOptionForItem(i);\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\t// Register listener for store updates\r\n\t\t\t\t\tif(this._queryRes.observe){\r\n\t\t\t\t\t\t// observe returns yet another handle that needs its own explicit gc\r\n\t\t\t\t\t\tthis._observeHandle = this._queryRes.observe(lang.hitch(this, function(object, deletedFrom, insertedInto){\r\n\t\t\t\t\t\t\tif(deletedFrom == insertedInto){\r\n\t\t\t\t\t\t\t\tthis._onSetItem(object);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tif(deletedFrom != -1){\r\n\t\t\t\t\t\t\t\t\tthis._onDeleteItem(object);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(insertedInto != -1){\r\n\t\t\t\t\t\t\t\t\tthis._onNewItem(object);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}), true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set our value (which might be undefined), and then tweak\r\n\t\t\t\t\t// it to send a change event with the real value\r\n\t\t\t\t\tthis._loadingStore = false;\r\n\t\t\t\t\tthis.set(\"value\", \"_pendingValue\" in this ? this._pendingValue : selectedValue);\r\n\t\t\t\t\tdelete this._pendingValue;\r\n\r\n\t\t\t\t\tif(!this.loadChildrenOnOpen){\r\n\t\t\t\t\t\tthis._loadChildren();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._pseudoLoadChildren(items);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.onLoadDeferred.resolve(true);\r\n\t\t\t\t\tthis.onSetStore();\r\n\t\t\t\t}), function(err){\r\n\t\t\t\t\tconsole.error('dijit.form.Select: ' + err.toString());\r\n\t\t\t\t\tthis.onLoadDeferred.reject(err);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn oStore;\t// dojo/data/api/Identity\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*anything*/ newValue, /*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the value of the widget.\r\n\t\t\t//\t\tIf a string is passed, then we set our value from looking it up.\r\n\t\t\tif(!this._onChangeActive){\r\n\t\t\t\tpriorityChange = null;\r\n\t\t\t}\r\n\t\t\tif(this._loadingStore){\r\n\t\t\t\t// Our store is loading - so save our value, and we'll set it when\r\n\t\t\t\t// we're done\r\n\t\t\t\tthis._pendingValue = newValue;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(newValue == null){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(lang.isArray(newValue)){\r\n\t\t\t\tnewValue = array.map(newValue, function(value){\r\n\t\t\t\t\treturn lang.isObject(value) ? value : { value: value };\r\n\t\t\t\t}); // __SelectOption[]\r\n\t\t\t}else if(lang.isObject(newValue)){\r\n\t\t\t\tnewValue = [newValue];\r\n\t\t\t}else{\r\n\t\t\t\tnewValue = [\r\n\t\t\t\t\t{ value: newValue }\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\tnewValue = array.filter(this.getOptions(newValue), function(i){\r\n\t\t\t\treturn i && i.value;\r\n\t\t\t});\r\n\t\t\tvar opts = this.getOptions() || [];\r\n\t\t\tif(!this.multiple && (!newValue[0] || !newValue[0].value) && !!opts.length){\r\n\t\t\t\tnewValue[0] = opts[0];\r\n\t\t\t}\r\n\t\t\tarray.forEach(opts, function(opt){\r\n\t\t\t\topt.selected = array.some(newValue, function(v){\r\n\t\t\t\t\treturn v.value === opt.value;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tvar val = array.map(newValue, function(opt){\r\n\t\t\t\treturn opt.value;\r\n\t\t\t});\r\n\r\n\t\t\tif(typeof val == \"undefined\" || typeof val[0] == \"undefined\"){\r\n\t\t\t\treturn;\r\n\t\t\t} // not fully initialized yet or a failed value lookup\r\n\t\t\tvar disp = array.map(newValue, function(opt){\r\n\t\t\t\treturn opt.label;\r\n\t\t\t});\r\n\t\t\tthis._setDisplay(this.multiple ? disp : disp[0]);\r\n\t\t\tthis.inherited(arguments, [ this.multiple ? val : val[0], priorityChange ]);\r\n\t\t\tthis._updateSelection();\r\n\t\t},\r\n\r\n\t\t_getDisplayedValueAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the displayed value of the widget\r\n\t\t\tvar ret = array.map([].concat(this.get('selectedOptions')), function(v){\r\n\t\t\t\tif(v && \"label\" in v){\r\n\t\t\t\t\treturn v.label;\r\n\t\t\t\t}else if(v){\r\n\t\t\t\t\treturn v.value;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}, this);\r\n\t\t\treturn this.multiple ? ret : ret[0];\r\n\t\t},\r\n\r\n\t\t_setDisplayedValueAttr: function(label){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the displayed value of the widget\r\n\t\t\tthis.set('value', this.getOptions(typeof label == \"string\" ? { label: label } : label));\r\n\t\t},\r\n\r\n\t\t_loadChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLoads the children represented by this widget's options.\r\n\t\t\t//\t\treset the menu to make it populatable on the next click\r\n\t\t\tif(this._loadingStore){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tarray.forEach(this._getChildren(), function(child){\r\n\t\t\t\tchild.destroyRecursive();\r\n\t\t\t});\r\n\t\t\t// Add each menu item\r\n\t\t\tarray.forEach(this.options, this._addOptionItem, this);\r\n\r\n\t\t\t// Update states\r\n\t\t\tthis._updateSelection();\r\n\t\t},\r\n\r\n\t\t_updateSelection: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the \"selected\" class on the item for styling purposes\r\n\t\t\tthis.focusedChild = null;\r\n\t\t\tthis._set(\"value\", this._getValueFromOpts());\r\n\t\t\tvar val = [].concat(this.value);\r\n\t\t\tif(val && val[0]){\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tarray.forEach(this._getChildren(), function(child){\r\n\t\t\t\t\tvar isSelected = array.some(val, function(v){\r\n\t\t\t\t\t\treturn child.option && (v === child.option.value);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(isSelected && !self.multiple){\r\n\t\t\t\t\t\tself.focusedChild = child;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomClass.toggle(child.domNode, this.baseClass.replace(/\\s+|$/g, \"SelectedOption \"), isSelected);\r\n\t\t\t\t\tchild.domNode.setAttribute(\"aria-selected\", isSelected ? \"true\" : \"false\");\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getValueFromOpts: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the value of the widget by reading the options for\r\n\t\t\t//\t\tthe selected flag\r\n\t\t\tvar opts = this.getOptions() || [];\r\n\t\t\tif(!this.multiple && opts.length){\r\n\t\t\t\t// Mirror what a select does - choose the first one\r\n\t\t\t\tvar opt = array.filter(opts, function(i){\r\n\t\t\t\t\treturn i.selected;\r\n\t\t\t\t})[0];\r\n\t\t\t\tif(opt && opt.value){\r\n\t\t\t\t\treturn opt.value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\topts[0].selected = true;\r\n\t\t\t\t\treturn opts[0].value;\r\n\t\t\t\t}\r\n\t\t\t}else if(this.multiple){\r\n\t\t\t\t// Set value to be the sum of all selected\r\n\t\t\t\treturn array.map(array.filter(opts, function(i){\r\n\t\t\t\t\treturn i.selected;\r\n\t\t\t\t}), function(i){\r\n\t\t\t\t\treturn i.value;\r\n\t\t\t\t}) || [];\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t},\r\n\r\n\t\t// Internal functions to call when we have store notifications come in\r\n\t\t_onNewItem: function(/*item*/ item, /*Object?*/ parentInfo){\r\n\t\t\tif(!parentInfo || !parentInfo.parent){\r\n\t\t\t\t// Only add it if we are top-level\r\n\t\t\t\tthis._addOptionForItem(item);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_onDeleteItem: function(/*item*/ item){\r\n\t\t\tvar store = this.store;\r\n\t\t\tthis.removeOption({value: store.getIdentity(item) });\r\n\t\t},\r\n\t\t_onSetItem: function(/*item*/ item){\r\n\t\t\tthis.updateOption(this._getOptionObjForItem(item));\r\n\t\t},\r\n\r\n\t\t_getOptionObjForItem: function(item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns an option object based off the given item.  The \"value\"\r\n\t\t\t//\t\tof the option item will be the identity of the item, the \"label\"\r\n\t\t\t//\t\tof the option will be the label of the item.\r\n\r\n\t\t\t// remove getLabel() call for 2.0 (it's to support the old dojo.data API)\r\n\t\t\tvar store = this.store,\r\n\t\t\t\tlabel = (this.labelAttr && this.labelAttr in item) ? item[this.labelAttr] : store.getLabel(item),\r\n\t\t\t\tvalue = (label ? store.getIdentity(item) : null);\r\n\t\t\treturn {value: value, label: label, item: item}; // __SelectOption\r\n\t\t},\r\n\r\n\t\t_addOptionForItem: function(/*item*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates (and adds) the option for the given item\r\n\t\t\tvar store = this.store;\r\n\t\t\tif(store.isItemLoaded && !store.isItemLoaded(item)){\r\n\t\t\t\t// We are not loaded - so let's load it and add later.\r\n\t\t\t\t// Remove for 2.0 (it's the old dojo.data API)\r\n\t\t\t\tstore.loadItem({item: item, onItem: function(i){\r\n\t\t\t\t\tthis._addOptionForItem(i);\r\n\t\t\t\t},\r\n\t\t\t\t\tscope: this});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar newOpt = this._getOptionObjForItem(item);\r\n\t\t\tthis.addOption(newOpt);\r\n\t\t},\r\n\r\n\t\tconstructor: function(params /*===== , srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t\t//\t\tSaves off our value, if we have an initial one set so we\r\n\t\t\t//\t\tcan use it if we have a store as well (see startup())\r\n\t\t\tthis._oValue = (params || {}).value || null;\r\n\t\t\tthis._notifyConnections = [];\t// remove for 2.0\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdom.setSelectable(this.focusNode, false);\r\n\t\t},\r\n\r\n\t\t_fillContent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLoads our options and sets up our dropdown correctly.  We\r\n\t\t\t//\t\tdon't want any content, so we don't call any inherit chain\r\n\t\t\t//\t\tfunction.\r\n\t\t\tif(!this.options){\r\n\t\t\t\tthis.options =\r\n\t\t\t\t\tthis.srcNodeRef\r\n\t\t\t\t\t\t? query(\"> *\", this.srcNodeRef).map(\r\n\t\t\t\t\t\tfunction(node){\r\n\t\t\t\t\t\t\tif(node.getAttribute(\"type\") === \"separator\"){\r\n\t\t\t\t\t\t\t\treturn { value: \"\", label: \"\", selected: false, disabled: false };\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tvalue: (node.getAttribute(\"data-\" + kernel._scopeName + \"-value\") || node.getAttribute(\"value\")),\r\n\t\t\t\t\t\t\t\tlabel: String(node.innerHTML),\r\n\t\t\t\t\t\t\t\t// FIXME: disabled and selected are not valid on complex markup children (which is why we're\r\n\t\t\t\t\t\t\t\t// looking for data-dojo-value above.  perhaps we should data-dojo-props=\"\" this whole thing?)\r\n\t\t\t\t\t\t\t\t// decide before 1.6\r\n\t\t\t\t\t\t\t\tselected: node.getAttribute(\"selected\") || false,\r\n\t\t\t\t\t\t\t\tdisabled: node.getAttribute(\"disabled\") || false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tthis)\r\n\t\t\t\t\t\t: [];\r\n\t\t\t}\r\n\t\t\tif(!this.value){\r\n\t\t\t\tthis._set(\"value\", this._getValueFromOpts());\r\n\t\t\t}else if(this.multiple && typeof this.value == \"string\"){\r\n\t\t\t\tthis._set(\"value\", this.value.split(\",\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets up our event handling that we need for functioning\r\n\t\t\t//\t\tas a select\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Make our event connections for updating state\r\n\t\t\taspect.after(this, \"onChange\", lang.hitch(this, \"_updateSelection\"));\r\n\r\n\t\t\t//\t\tConnects in our store, if we have one defined\r\n\t\t\tvar store = this.store;\r\n\t\t\tif(store && (store.getIdentity || store.getFeatures()[\"dojo.data.api.Identity\"])){\r\n\t\t\t\t// Temporarily set our store to null so that it will get set\r\n\t\t\t\t// and connected appropriately\r\n\t\t\t\tthis.store = null;\r\n\t\t\t\tthis._deprecatedSetStore(store, this._oValue, {query: this.query, queryOptions: this.queryOptions});\r\n\t\t\t}\r\n\r\n\t\t\tthis._storeInitialized = true;\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\tthis._loadChildren();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClean up our connections\r\n\r\n\t\t\tvar h;\r\n\t\t\twhile((h = this._notifyConnections.pop())){\r\n\t\t\t\th.remove();\r\n\t\t\t}\r\n\r\n\t\t\t// Cancel listener for store updates\r\n\t\t\tif(this._queryRes && this._queryRes.close){\r\n\t\t\t\tthis._queryRes.close();\r\n\t\t\t}\r\n\r\n\t\t\t// Cancel listener for updates to new (dojo.store) store\r\n\t\t\tif(this._observeHandle && this._observeHandle.remove){\r\n\t\t\t\tthis._observeHandle.remove();\r\n\t\t\t\tthis._observeHandle = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_addOptionItem: function(/*__SelectOption*/ /*===== option =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser-overridable function which, for the given option, adds an\r\n\t\t\t//\t\titem to the select.  If the option doesn't have a value, then a\r\n\t\t\t//\t\tseparator is added in that place.  Make sure to store the option\r\n\t\t\t//\t\tin the created option widget.\r\n\t\t},\r\n\r\n\t\t_removeOptionItem: function(/*__SelectOption*/ /*===== option =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser-overridable function which, for the given option, removes\r\n\t\t\t//\t\tits item from the select.\r\n\t\t},\r\n\r\n\t\t_setDisplay: function(/*String or String[]*/ /*===== newDisplay =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function which will set the display for the\r\n\t\t\t//\t\twidget.  newDisplay is either a string (in the case of\r\n\t\t\t//\t\tsingle selects) or array of strings (in the case of multi-selects)\r\n\t\t},\r\n\r\n\t\t_getChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to return the children that this widget contains.\r\n\t\t\treturn [];\r\n\t\t},\r\n\r\n\t\t_getSelectedOptionsAttr: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\thooks into this.attr to provide a mechanism for getting the\r\n\t\t\t//\t\toption items for the current value of the widget.\r\n\t\t\treturn this.getOptions({ selected: true });\r\n\t\t},\r\n\r\n\t\t_pseudoLoadChildren: function(/*item[]*/ /*===== items =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta function that will \"fake\" loading children, if needed, and\r\n\t\t\t//\t\tif we have set to not load children until the widget opens.\r\n\t\t\t// items:\r\n\t\t\t//\t\tAn array of items that will be loaded, when needed\r\n\t\t},\r\n\r\n\t\tonSetStore: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta function that can be connected to in order to receive a\r\n\t\t\t//\t\tnotification that the store has finished loading and all options\r\n\t\t\t//\t\tfrom that store are available\r\n\t\t}\r\n\t});\r\n\r\n\t/*=====\r\n\t_FormSelectWidget.__SelectOption = __SelectOption;\r\n\t=====*/\r\n\r\n\treturn _FormSelectWidget;\r\n});\r\n\n\ndefine('dijit/form/Select',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove domClass.toggle\r\n\t\"dojo/dom-geometry\", // domGeometry.setMarginBox\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/keys\",\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"./_FormSelectWidget\",\r\n\t\"../_HasDropDown\",\r\n\t\"../DropDownMenu\",\r\n\t\"../MenuItem\",\r\n\t\"../MenuSeparator\",\r\n\t\"../Tooltip\",\r\n\t\"../_KeyNavMixin\",\r\n\t\"../registry\", // registry.byNode\r\n\t\"dojo/text!./templates/Select.html\",\r\n\t\"dojo/i18n!./nls/validate\"\r\n], function(array, declare, domAttr, domClass, domGeometry, i18n, keys, lang, on, has,\r\n\t\t\t_FormSelectWidget, _HasDropDown, DropDownMenu, MenuItem, MenuSeparator, Tooltip, _KeyNavMixin, registry, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/Select\r\n\r\n\tvar _SelectMenu = declare(\"dijit.form._SelectMenu\", DropDownMenu, {\r\n\t\t// summary:\r\n\t\t//\t\tAn internally-used menu for dropdown that allows us a vertical scrollbar\r\n\r\n\t\t// Override Menu.autoFocus setting so that opening a Select highlights the current value.\r\n\t\tautoFocus: true,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis.domNode.setAttribute(\"role\", \"listbox\");\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// stop mousemove from selecting text on IE to be consistent with other browsers\r\n\t\t\tthis.own(on(this.domNode, \"selectstart\", function(evt){\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridden so that the previously selected value will be focused instead of only the first item\r\n\t\t\tvar found = false,\r\n\t\t\t\tval = this.parentWidget.value;\r\n\t\t\tif(lang.isArray(val)){\r\n\t\t\t\tval = val[val.length - 1];\r\n\t\t\t}\r\n\t\t\tif(val){ // if focus selected\r\n\t\t\t\tarray.forEach(this.parentWidget._getChildren(), function(child){\r\n\t\t\t\t\tif(child.option && (val === child.option.value)){ // find menu item widget with this value\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\tthis.focusChild(child, false); // focus previous selection\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\tif(!found){\r\n\t\t\t\tthis.inherited(arguments); // focus first item by default\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tvar Select = declare(\"dijit.form.Select\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), [_FormSelectWidget, _HasDropDown, _KeyNavMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tThis is a \"styleable\" select box - it is basically a DropDownButton which\r\n\t\t//\t\tcan take a `<select>` as its input.\r\n\r\n\t\tbaseClass: \"dijitSelect dijitValidationTextBox\",\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t_buttonInputDisabled: has(\"ie\") ? \"disabled\" : \"\", // allows IE to disallow focus, but Firefox cannot be disabled for mousedown events\r\n\r\n\t\t// required: Boolean\r\n\t\t//\t\tCan be true or false, default is false.\r\n\t\trequired: false,\r\n\r\n\t\t// state: [readonly] String\r\n\t\t//\t\t\"Incomplete\" if this select is required but unset (i.e. blank value), \"\" otherwise\r\n\t\tstate: \"\",\r\n\r\n\t\t// message: String\r\n\t\t//\t\tCurrently displayed error/prompt message\r\n\t\tmessage: \"\",\r\n\r\n\t\t// tooltipPosition: String[]\r\n\t\t//\t\tSee description of `dijit/Tooltip.defaultPosition` for details on this parameter.\r\n\t\ttooltipPosition: [],\r\n\r\n\t\t// emptyLabel: string\r\n\t\t//\t\tWhat to display in an \"empty\" dropdown\r\n\t\temptyLabel: \"&#160;\", // &nbsp;\r\n\r\n\t\t// _isLoaded: Boolean\r\n\t\t//\t\tWhether or not we have been loaded\r\n\t\t_isLoaded: false,\r\n\r\n\t\t// _childrenLoaded: Boolean\r\n\t\t//\t\tWhether or not our children have been loaded\r\n\t\t_childrenLoaded: false,\r\n\r\n\t\t// labelType: String\r\n\t\t//\t\tSpecifies how to interpret the labelAttr in the data store items.\r\n\t\t//\t\tCan be \"html\" or \"text\".\r\n\t\tlabelType: \"html\",\r\n\r\n\t\t_fillContent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the value to be the first, or the selected index\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t// set value from selected option\r\n\t\t\tif(this.options.length && !this.value && this.srcNodeRef){\r\n\t\t\t\tvar si = this.srcNodeRef.selectedIndex || 0; // || 0 needed for when srcNodeRef is not a SELECT\r\n\t\t\t\tthis._set(\"value\", this.options[si >= 0 ? si : 0].value);\r\n\t\t\t}\r\n\t\t\t// Create the dropDown widget\r\n\t\t\tthis.dropDown = new _SelectMenu({ id: this.id + \"_menu\", parentWidget: this });\r\n\t\t\tdomClass.add(this.dropDown.domNode, this.baseClass.replace(/\\s+|$/g, \"Menu \"));\r\n\t\t},\r\n\r\n\t\t_getMenuItemForOption: function(/*_FormSelectWidget.__SelectOption*/ option){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFor the given option, return the menu item that should be\r\n\t\t\t//\t\tused to display it.  This can be overridden as needed\r\n\t\t\tif(!option.value && !option.label){\r\n\t\t\t\t// We are a separator (no label set for it)\r\n\t\t\t\treturn new MenuSeparator({ownerDocument: this.ownerDocument});\r\n\t\t\t}else{\r\n\t\t\t\t// Just a regular menu option\r\n\t\t\t\tvar click = lang.hitch(this, \"_setValueAttr\", option);\r\n\t\t\t\tvar item = new MenuItem({\r\n\t\t\t\t\toption: option,\r\n\t\t\t\t\tlabel: (this.labelType === 'text' ? (option.label || '').toString()\r\n\t\t\t\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;') :\r\n\t\t\t\t\t\toption.label) || this.emptyLabel,\r\n\t\t\t\t\tonClick: click,\r\n\t\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\t\tdir: this.dir,\r\n\t\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\t\tdisabled: option.disabled || false\r\n\t\t\t\t});\r\n\t\t\t\titem.focusNode.setAttribute(\"role\", \"option\");\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_addOptionItem: function(/*_FormSelectWidget.__SelectOption*/ option){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFor the given option, add an option to our dropdown.\r\n\t\t\t//\t\tIf the option doesn't have a value, then a separator is added\r\n\t\t\t//\t\tin that place.\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\tthis.dropDown.addChild(this._getMenuItemForOption(option));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getChildren: function(){\r\n\t\t\tif(!this.dropDown){\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\treturn this.dropDown.getChildren();\r\n\t\t},\r\n\r\n\t\tfocus: function(){\r\n\t\t\t// Override _KeyNavMixin::focus(), which calls focusFirstChild().\r\n\t\t\t// We just want the standard form widget behavior.\r\n\t\t\tif(!this.disabled && this.focusNode.focus){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tthis.focusNode.focus();\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t/*squelch errors from hidden nodes*/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocusChild: function(/*dijit/_WidgetBase*/ widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the value to the given option, used during search by letter.\r\n\t\t\t// widget:\r\n\t\t\t//\t\tReference to option's widget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(widget){\r\n\t\t\t\tthis.set('value', widget.option);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getFirst: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the first child widget.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar children = this._getChildren();\r\n\t\t\treturn children.length ? children[0] : null;\r\n\t\t},\r\n\r\n\t\t_getLast: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the last child widget.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tabstract extension\r\n\t\t\tvar children = this._getChildren();\r\n\t\t\treturn children.length ? children[children.length-1] : null;\r\n\t\t},\r\n\r\n\t\tchildSelector: function(/*DOMNode*/ node){\r\n\t\t\t// Implement _KeyNavMixin.childSelector, to identify focusable child nodes.\r\n\t\t\t// If we allowed a dojo/query dependency from this module this could more simply be a string \"> *\"\r\n\t\t\t// instead of this function.\r\n\r\n\t\t\tvar node = registry.byNode(node);\r\n\t\t\treturn node && node.getParent() == this.dropDown;\r\n\t\t},\r\n\r\n\t\tonKeyboardSearch: function(/*dijit/_WidgetBase*/ item, /*Event*/ evt, /*String*/ searchString, /*Number*/ numMatches){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen a key is pressed that matches a child item,\r\n\t\t\t//\t\tthis method is called so that a widget can take appropriate action is necessary.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(item){\r\n\t\t\t\tthis.focusChild(item);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_loadChildren: function(/*Boolean*/ loadMenuItems){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResets the menu and the length attribute of the button - and\r\n\t\t\t//\t\tensures that the label is appropriately set.\r\n\t\t\t// loadMenuItems: Boolean\r\n\t\t\t//\t\tactually loads the child menu items - we only do this when we are\r\n\t\t\t//\t\tpopulating for showing the dropdown.\r\n\r\n\t\t\tif(loadMenuItems === true){\r\n\t\t\t\t// this.inherited destroys this.dropDown's child widgets (MenuItems).\r\n\t\t\t\t// Avoid this.dropDown (Menu widget) having a pointer to a destroyed widget (which will cause\r\n\t\t\t\t// issues later in _setSelected). (see #10296)\r\n\t\t\t\tif(this.dropDown){\r\n\t\t\t\t\tdelete this.dropDown.focusedChild;\r\n\t\t\t\t\tthis.focusedChild = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.options.length){\r\n\t\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Drop down menu is blank but add one blank entry just so something appears on the screen\r\n\t\t\t\t\t// to let users know that they are no choices (mimicing native select behavior)\r\n\t\t\t\t\tarray.forEach(this._getChildren(), function(child){\r\n\t\t\t\t\t\tchild.destroyRecursive();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar item = new MenuItem({\r\n\t\t\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\t\t\tlabel: this.emptyLabel\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.dropDown.addChild(item);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t}\r\n\r\n\t\t\tthis._isLoaded = false;\r\n\t\t\tthis._childrenLoaded = true;\r\n\r\n\t\t\tif(!this._loadingStore){\r\n\t\t\t\t// Don't call this if we are loading - since we will handle it later\r\n\t\t\t\tthis._setValueAttr(this.value, false);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_refreshState: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\tthis.validate(this.focused);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._refreshState(); // after all _set* methods have run\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(value){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomAttr.set(this.valueNode, \"value\", this.get(\"value\"));\r\n\t\t\tthis._refreshState();\t// to update this.state\r\n\t\t},\r\n\r\n\t\t_setNameAttr: \"valueNode\",\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ value){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._refreshState();\t// to update this.state\r\n\t\t},\r\n\r\n\t\t_setRequiredAttr: function(/*Boolean*/ value){\r\n\t\t\tthis._set(\"required\", value);\r\n\t\t\tthis.focusNode.setAttribute(\"aria-required\", value);\r\n\t\t\tthis._refreshState();\t// to update this.state\r\n\t\t},\r\n\r\n\t\t_setOptionsAttr: function(/*Array*/ options){\r\n\t\t\tthis._isLoaded = false;\r\n\t\t\tthis._set('options', options);\r\n\t\t},\r\n\r\n\t\t_setDisplay: function(/*String*/ newDisplay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the display for the given value (or values)\r\n\r\n\t\t\tvar lbl = (this.labelType === 'text' ? (newDisplay || '')\r\n\t\t\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;') :\r\n\t\t\t\t\tnewDisplay) || this.emptyLabel;\r\n\t\t\tthis.containerNode.innerHTML = '<span role=\"option\" class=\"dijitReset dijitInline ' + this.baseClass.replace(/\\s+|$/g, \"Label \") + '\">' + lbl + '</span>';\r\n\t\t},\r\n\r\n\t\tvalidate: function(/*Boolean*/ isFocused){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled by oninit, onblur, and onkeypress, and whenever required/disabled state changes\r\n\t\t\t// description:\r\n\t\t\t//\t\tShow missing or invalid messages if appropriate, and highlight textbox field.\r\n\t\t\t//\t\tUsed when a select is initially set to no value and the user is required to\r\n\t\t\t//\t\tset the value.\r\n\r\n\t\t\tvar isValid = this.disabled || this.isValid(isFocused);\r\n\t\t\tthis._set(\"state\", isValid ? \"\" : (this._hasBeenBlurred ? \"Error\" : \"Incomplete\"));\r\n\t\t\tthis.focusNode.setAttribute(\"aria-invalid\", isValid ? \"false\" : \"true\");\r\n\t\t\tvar message = isValid ? \"\" : this._missingMsg;\r\n\t\t\tif(message && this.focused && this._hasBeenBlurred){\r\n\t\t\t\tTooltip.show(message, this.domNode, this.tooltipPosition, !this.isLeftToRight());\r\n\t\t\t}else{\r\n\t\t\t\tTooltip.hide(this.domNode);\r\n\t\t\t}\r\n\t\t\tthis._set(\"message\", message);\r\n\t\t\treturn isValid;\r\n\t\t},\r\n\r\n\t\tisValid: function(/*Boolean*/ /*===== isFocused =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhether or not this is a valid value.  The only way a Select\r\n\t\t\t//\t\tcan be invalid is when it's required but nothing is selected.\r\n\t\t\treturn (!this.required || this.value === 0 || !(/^\\s*$/.test(this.value || \"\"))); // handle value is null or undefined\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridden so that the state will be cleared.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tTooltip.hide(this.domNode);\r\n\t\t\tthis._refreshState();\t// to update this.state\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tset the missing message\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._missingMsg = i18n.getLocalization(\"dijit.form\", \"validate\", this.lang).missingMessage;\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// stop mousemove from selecting text on IE to be consistent with other browsers\r\n\t\t\tthis.own(on(this.domNode, \"selectstart\", function(evt){\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t}));\r\n\r\n\t\t\tthis.domNode.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n\t\t\t// Prevent _KeyNavMixin from calling stopPropagation() on left and right arrow keys, thus breaking\r\n\t\t\t// navigation when Select inside Toolbar.\r\n\t\t\tvar keyNavCodes = this._keyNavCodes;\r\n\t\t\tdelete keyNavCodes[keys.LEFT_ARROW];\r\n\t\t\tdelete keyNavCodes[keys.RIGHT_ARROW];\r\n\t\t},\r\n\r\n\t\t_setStyleAttr: function(/*String||Object*/ value){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.toggle(this.domNode, this.baseClass.replace(/\\s+|$/g, \"FixedWidth \"), !!this.domNode.style.width);\r\n\t\t},\r\n\r\n\t\tisLoaded: function(){\r\n\t\t\treturn this._isLoaded;\r\n\t\t},\r\n\r\n\t\tloadDropDown: function(/*Function*/ loadCallback){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tpopulates the menu\r\n\t\t\tthis._loadChildren(true);\r\n\t\t\tthis._isLoaded = true;\r\n\t\t\tloadCallback();\r\n\t\t},\r\n\r\n\t\tdestroy: function(preserveDom){\r\n\t\t\tif(this.dropDown && !this.dropDown._destroyed){\r\n\t\t\t\tthis.dropDown.destroyRecursive(preserveDom);\r\n\t\t\t\tdelete this.dropDown;\r\n\t\t\t}\r\n\t\t\tTooltip.hide(this.domNode);\t// in case Select (or enclosing Dialog) destroyed while tooltip shown\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onFocus: function(){\r\n\t\t\tthis.validate(true);\t// show tooltip if second focus of required tooltip, but no selection\r\n\t\t\t// Note: not calling superclass _onFocus() to avoid _KeyNavMixin::_onFocus() setting tabIndex --> -1\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\tTooltip.hide(this.domNode);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.validate(false);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tSelect = declare(\"dijit.form.Select\", Select, {\r\n\t\t\t_setDisplay: function(/*String*/ newDisplay){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.applyTextDir(this.containerNode);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tSelect._Menu = _SelectMenu;\t// for monkey patching\r\n\r\n\t// generic event helper to ensure the dropdown items are loaded before the real event handler is called\r\n\tfunction _onEventAfterLoad(method){\r\n\t\treturn function(evt){\r\n\t\t\tif(!this._isLoaded){\r\n\t\t\t\tthis.loadDropDown(lang.hitch(this, method, evt));\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(method, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\tSelect.prototype._onContainerKeydown = _onEventAfterLoad(\"_onContainerKeydown\");\r\n\tSelect.prototype._onContainerKeypress = _onEventAfterLoad(\"_onContainerKeypress\");\r\n\r\n\treturn Select;\r\n});\r\n\n\ndefine('dijit/form/HorizontalSlider',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dnd/move\",\r\n\t\"dojo/_base/fx\", // fx.animateProperty\r\n\t\"dojo/dom-geometry\", // domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.getComputedStyle\r\n\t\"dojo/keys\", // keys.DOWN_ARROW keys.END keys.HOME keys.LEFT_ARROW keys.PAGE_DOWN keys.PAGE_UP keys.RIGHT_ARROW keys.UP_ARROW\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"mozilla\")\r\n\t\"dojo/dnd/Moveable\", // Moveable\r\n\t\"dojo/dnd/Mover\", // Mover Mover.prototype.destroy.apply\r\n\t\"dojo/query\", // query\r\n\t\"dojo/mouse\", // mouse.wheel\r\n\t\"dojo/on\",\r\n\t\"../_base/manager\", // defaultDuration\r\n\t\"../focus\", // focus.focus()\r\n\t\"../typematic\",\r\n\t\"./Button\",\r\n\t\"./_FormValueWidget\",\r\n\t\"../_Container\",\r\n\t\"dojo/text!./templates/HorizontalSlider.html\"\r\n], function(array, declare, move, fx, domGeometry, domStyle, keys, lang, has, Moveable, Mover, query, mouse, on,\r\n\t\t\tmanager, focus, typematic, Button, _FormValueWidget, _Container, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/HorizontalSlider\r\n\r\n\tvar _SliderMover = declare(\"dijit.form._SliderMover\", Mover, {\r\n\t\tonMouseMove: function(e){\r\n\t\t\tvar widget = this.widget;\r\n\t\t\tvar abspos = widget._abspos;\r\n\t\t\tif(!abspos){\r\n\t\t\t\tabspos = widget._abspos = domGeometry.position(widget.sliderBarContainer, true);\r\n\t\t\t\twidget._setPixelValue_ = lang.hitch(widget, \"_setPixelValue\");\r\n\t\t\t\twidget._isReversed_ = widget._isReversed();\r\n\t\t\t}\r\n\t\t\tvar pixelValue = e[widget._mousePixelCoord] - abspos[widget._startingPixelCoord];\r\n\t\t\twidget._setPixelValue_(widget._isReversed_ ? (abspos[widget._pixelCount] - pixelValue) : pixelValue, abspos[widget._pixelCount], false);\r\n\t\t},\r\n\r\n\t\tdestroy: function(e){\r\n\t\t\tMover.prototype.destroy.apply(this, arguments);\r\n\t\t\tvar widget = this.widget;\r\n\t\t\twidget._abspos = null;\r\n\t\t\twidget._setValueAttr(widget.value, true);\r\n\t\t}\r\n\t});\r\n\r\n\tvar HorizontalSlider = declare(\"dijit.form.HorizontalSlider\", [_FormValueWidget, _Container], {\r\n\t\t// summary:\r\n\t\t//\t\tA form widget that allows one to select a value with a horizontally draggable handle\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Overrides FormValueWidget.value to indicate numeric value\r\n\t\tvalue: 0,\r\n\r\n\t\t// showButtons: [const] Boolean\r\n\t\t//\t\tShow increment/decrement buttons at the ends of the slider?\r\n\t\tshowButtons: true,\r\n\r\n\t\t// minimum: [const] Integer\r\n\t\t//\t\tThe minimum value the slider can be set to.\r\n\t\tminimum: 0,\r\n\r\n\t\t// maximum: [const] Integer\r\n\t\t//\t\tThe maximum value the slider can be set to.\r\n\t\tmaximum: 100,\r\n\r\n\t\t// discreteValues: Integer\r\n\t\t//\t\tIf specified, indicates that the slider handle has only 'discreteValues' possible positions,\r\n\t\t//\t\tand that after dragging the handle, it will snap to the nearest possible position.\r\n\t\t//\t\tThus, the slider has only 'discreteValues' possible values.\r\n\t\t//\r\n\t\t//\t\tFor example, if minimum=10, maxiumum=30, and discreteValues=3, then the slider handle has\r\n\t\t//\t\tthree possible positions, representing values 10, 20, or 30.\r\n\t\t//\r\n\t\t//\t\tIf discreteValues is not specified or if it's value is higher than the number of pixels\r\n\t\t//\t\tin the slider bar, then the slider handle can be moved freely, and the slider's value will be\r\n\t\t//\t\tcomputed/reported based on pixel position (in this case it will likely be fractional,\r\n\t\t//\t\tsuch as 123.456789).\r\n\t\tdiscreteValues: Infinity,\r\n\r\n\t\t// pageIncrement: Integer\r\n\t\t//\t\tIf discreteValues is also specified, this indicates the amount of clicks (ie, snap positions)\r\n\t\t//\t\tthat the slider handle is moved via pageup/pagedown keys.\r\n\t\t//\t\tIf discreteValues is not specified, it indicates the number of pixels.\r\n\t\tpageIncrement: 2,\r\n\r\n\t\t// clickSelect: Boolean\r\n\t\t//\t\tIf clicking the slider bar changes the value or not\r\n\t\tclickSelect: true,\r\n\r\n\t\t// slideDuration: Number\r\n\t\t//\t\tThe time in ms to take to animate the slider handle from 0% to 100%,\r\n\t\t//\t\twhen clicking the slider bar to make the handle move.\r\n\t\tslideDuration: manager.defaultDuration,\r\n\r\n\t\t// Map widget attributes to DOMNode attributes.\r\n\t\t_setIdAttr: \"\", // Override _FormWidget which sends id to focusNode\r\n\t\t_setNameAttr: \"valueNode\", // Override default behavior to send to focusNode\r\n\r\n\t\tbaseClass: \"dijitSlider\",\r\n\r\n\t\t// Apply CSS classes to up/down arrows and handle per mouse state\r\n\t\tcssStateNodes: {\r\n\t\t\tincrementButton: \"dijitSliderIncrementButton\",\r\n\t\t\tdecrementButton: \"dijitSliderDecrementButton\",\r\n\t\t\tfocusNode: \"dijitSliderThumb\"\r\n\t\t},\r\n\r\n\t\t_mousePixelCoord: \"pageX\",\r\n\t\t_pixelCount: \"w\",\r\n\t\t_startingPixelCoord: \"x\",\r\n\t\t_handleOffsetCoord: \"left\",\r\n\t\t_progressPixelSize: \"width\",\r\n\r\n\t\t_onKeyUp: function(/*Event*/ e){\r\n\t\t\tif(this.disabled || this.readOnly || e.altKey || e.ctrlKey || e.metaKey){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._setValueAttr(this.value, true);\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(/*Event*/ e){\r\n\t\t\tif(this.disabled || this.readOnly || e.altKey || e.ctrlKey || e.metaKey){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tswitch(e.keyCode){\r\n\t\t\t\tcase keys.HOME:\r\n\t\t\t\t\tthis._setValueAttr(this.minimum, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keys.END:\r\n\t\t\t\t\tthis._setValueAttr(this.maximum, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// this._descending === false: if ascending vertical (min on top)\r\n\t\t\t\t// (this._descending || this.isLeftToRight()): if left-to-right horizontal or descending vertical\r\n\t\t\t\tcase ((this._descending || this.isLeftToRight()) ? keys.RIGHT_ARROW : keys.LEFT_ARROW):\r\n\t\t\t\tcase (this._descending === false ? keys.DOWN_ARROW : keys.UP_ARROW):\r\n\t\t\t\tcase (this._descending === false ? keys.PAGE_DOWN : keys.PAGE_UP):\r\n\t\t\t\t\tthis.increment(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ((this._descending || this.isLeftToRight()) ? keys.LEFT_ARROW : keys.RIGHT_ARROW):\r\n\t\t\t\tcase (this._descending === false ? keys.UP_ARROW : keys.DOWN_ARROW):\r\n\t\t\t\tcase (this._descending === false ? keys.PAGE_UP : keys.PAGE_DOWN):\r\n\t\t\t\t\tthis.decrement(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\r\n\t\t_onHandleClick: function(e){\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!has(\"ie\")){\r\n\t\t\t\t// make sure you get focus when dragging the handle\r\n\t\t\t\t// (but don't do on IE because it causes a flicker on mouse up (due to blur then focus)\r\n\t\t\t\tfocus.focus(this.sliderHandle);\r\n\t\t\t}\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\r\n\t\t_isReversed: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if direction is from right to left\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\treturn !this.isLeftToRight();\r\n\t\t},\r\n\r\n\t\t_onBarClick: function(e){\r\n\t\t\tif(this.disabled || this.readOnly || !this.clickSelect){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfocus.focus(this.sliderHandle);\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tvar abspos = domGeometry.position(this.sliderBarContainer, true);\r\n\t\t\tvar pixelValue = e[this._mousePixelCoord] - abspos[this._startingPixelCoord];\r\n\t\t\tthis._setPixelValue(this._isReversed() ? (abspos[this._pixelCount] - pixelValue) : pixelValue, abspos[this._pixelCount], true);\r\n\t\t\tthis._movable.onMouseDown(e);\r\n\t\t},\r\n\r\n\t\t_setPixelValue: function(/*Number*/ pixelValue, /*Number*/ maxPixels, /*Boolean?*/ priorityChange){\r\n\t\t\tif(this.disabled || this.readOnly){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar count = this.discreteValues;\r\n\t\t\tif(count <= 1 || count == Infinity){\r\n\t\t\t\tcount = maxPixels;\r\n\t\t\t}\r\n\t\t\tcount--;\r\n\t\t\tvar pixelsPerValue = maxPixels / count;\r\n\t\t\tvar wholeIncrements = Math.round(pixelValue / pixelsPerValue);\r\n\t\t\tthis._setValueAttr(Math.max(Math.min((this.maximum - this.minimum) * wholeIncrements / count + this.minimum, this.maximum), this.minimum), priorityChange);\r\n\t\t},\r\n\r\n\t\t_setValueAttr: function(/*Number*/ value, /*Boolean?*/ priorityChange){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook so set('value', value) works.\r\n\t\t\tthis._set(\"value\", value);\r\n\t\t\tthis.valueNode.value = value;\r\n\t\t\tthis.focusNode.setAttribute(\"aria-valuenow\", value);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar percent = this.maximum > this.minimum ? ((value - this.minimum) / (this.maximum - this.minimum)) : 0;\r\n\t\t\tvar progressBar = (this._descending === false) ? this.remainingBar : this.progressBar;\r\n\t\t\tvar remainingBar = (this._descending === false) ? this.progressBar : this.remainingBar;\r\n\t\t\tif(this._inProgressAnim && this._inProgressAnim.status != \"stopped\"){\r\n\t\t\t\tthis._inProgressAnim.stop(true);\r\n\t\t\t}\r\n\t\t\tif(priorityChange && this.slideDuration > 0 && progressBar.style[this._progressPixelSize]){\r\n\t\t\t\t// animate the slider\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar props = {};\r\n\t\t\t\tvar start = parseFloat(progressBar.style[this._progressPixelSize]);\r\n\t\t\t\tvar duration = this.slideDuration * (percent - start / 100);\r\n\t\t\t\tif(duration == 0){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(duration < 0){\r\n\t\t\t\t\tduration = 0 - duration;\r\n\t\t\t\t}\r\n\t\t\t\tprops[this._progressPixelSize] = { start: start, end: percent * 100, units: \"%\" };\r\n\t\t\t\tthis._inProgressAnim = fx.animateProperty({ node: progressBar, duration: duration,\r\n\t\t\t\t\tonAnimate: function(v){\r\n\t\t\t\t\t\tremainingBar.style[_this._progressPixelSize] = (100 - parseFloat(v[_this._progressPixelSize])) + \"%\";\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonEnd: function(){\r\n\t\t\t\t\t\tdelete _this._inProgressAnim;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tproperties: props\r\n\t\t\t\t});\r\n\t\t\t\tthis._inProgressAnim.play();\r\n\t\t\t}else{\r\n\t\t\t\tprogressBar.style[this._progressPixelSize] = (percent * 100) + \"%\";\r\n\t\t\t\tremainingBar.style[this._progressPixelSize] = ((1 - percent) * 100) + \"%\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_bumpValue: function(signedChange, /*Boolean?*/ priorityChange){\r\n\t\t\tif(this.disabled || this.readOnly || (this.maximum <= this.minimum)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar s = domStyle.getComputedStyle(this.sliderBarContainer);\r\n\t\t\tvar c = domGeometry.getContentBox(this.sliderBarContainer, s);\r\n\t\t\tvar count = this.discreteValues;\r\n\t\t\tif(count <= 1 || count == Infinity){\r\n\t\t\t\tcount = c[this._pixelCount];\r\n\t\t\t}\r\n\t\t\tcount--;\r\n\t\t\tvar value = (this.value - this.minimum) * count / (this.maximum - this.minimum) + signedChange;\r\n\t\t\tif(value < 0){\r\n\t\t\t\tvalue = 0;\r\n\t\t\t}\r\n\t\t\tif(value > count){\r\n\t\t\t\tvalue = count;\r\n\t\t\t}\r\n\t\t\tvalue = value * (this.maximum - this.minimum) / count + this.minimum;\r\n\t\t\tthis._setValueAttr(value, priorityChange);\r\n\t\t},\r\n\r\n\t\t_onClkBumper: function(val){\r\n\t\t\tif(this.disabled || this.readOnly || !this.clickSelect){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._setValueAttr(val, true);\r\n\t\t},\r\n\r\n\t\t_onClkIncBumper: function(){\r\n\t\t\tthis._onClkBumper(this._descending === false ? this.minimum : this.maximum);\r\n\t\t},\r\n\r\n\t\t_onClkDecBumper: function(){\r\n\t\t\tthis._onClkBumper(this._descending === false ? this.maximum : this.minimum);\r\n\t\t},\r\n\r\n\t\tdecrement: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDecrement slider\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._bumpValue(e.keyCode == keys.PAGE_DOWN ? -this.pageIncrement : -1);\r\n\t\t},\r\n\r\n\t\tincrement: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIncrement slider\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis._bumpValue(e.keyCode == keys.PAGE_UP ? this.pageIncrement : 1);\r\n\t\t},\r\n\r\n\t\t_mouseWheeled: function(/*Event*/ evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEvent handler for mousewheel where supported\r\n\t\t\tevt.stopPropagation();\r\n\t\t\tevt.preventDefault();\r\n\t\t\tthis._bumpValue(evt.wheelDelta < 0 ? -1 : 1, true); // negative scroll acts like a decrement\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tif(this[child.container] != this.containerNode){\r\n\t\t\t\t\tthis[child.container].appendChild(child.domNode);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_typematicCallback: function(/*Number*/ count, /*Object*/ button, /*Event*/ e){\r\n\t\t\tif(count == -1){\r\n\t\t\t\tthis._setValueAttr(this.value, true);\r\n\t\t\t}else{\r\n\t\t\t\tthis[(button == (this._descending ? this.incrementButton : this.decrementButton)) ? \"decrement\" : \"increment\"](e);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.showButtons){\r\n\t\t\t\tthis.incrementButton.style.display = \"\";\r\n\t\t\t\tthis.decrementButton.style.display = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// find any associated label element and add to slider focusnode.\r\n\t\t\tvar label = query('label[for=\"' + this.id + '\"]');\r\n\t\t\tif(label.length){\r\n\t\t\t\tif(!label[0].id){\r\n\t\t\t\t\tlabel[0].id = this.id + \"_label\";\r\n\t\t\t\t}\r\n\t\t\t\tthis.focusNode.setAttribute(\"aria-labelledby\", label[0].id);\r\n\t\t\t}\r\n\r\n\t\t\tthis.focusNode.setAttribute(\"aria-valuemin\", this.minimum);\r\n\t\t\tthis.focusNode.setAttribute(\"aria-valuemax\", this.maximum);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this.showButtons){\r\n\t\t\t\tthis.own(\r\n\t\t\t\t\ttypematic.addMouseListener(this.decrementButton, this, \"_typematicCallback\", 25, 500),\r\n\t\t\t\t\ttypematic.addMouseListener(this.incrementButton, this, \"_typematicCallback\", 25, 500)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.domNode, mouse.wheel, lang.hitch(this, \"_mouseWheeled\"))\r\n\t\t\t);\r\n\r\n\t\t\t// define a custom constructor for a SliderMover that points back to me\r\n\t\t\tvar mover = declare(_SliderMover, {\r\n\t\t\t\twidget: this\r\n\t\t\t});\r\n\t\t\tthis._movable = new Moveable(this.sliderHandle, {mover: mover});\r\n\r\n\t\t\tthis._layoutHackIE7();\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis._movable.destroy();\r\n\t\t\tif(this._inProgressAnim && this._inProgressAnim.status != \"stopped\"){\r\n\t\t\t\tthis._inProgressAnim.stop(true);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tHorizontalSlider._Mover = _SliderMover;\t// for monkey patching\r\n\r\n\treturn HorizontalSlider;\r\n});\r\n\n\ndefine('dijit/form/VerticalSlider',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./HorizontalSlider\",\r\n\t\"dojo/text!./templates/VerticalSlider.html\"\r\n], function(declare, HorizontalSlider, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/VerticalSlider\r\n\r\n\treturn declare(\"dijit.form.VerticalSlider\", HorizontalSlider, {\r\n\t\t// summary:\r\n\t\t//\t\tA form widget that allows one to select a value with a vertically draggable handle\r\n\r\n\t\ttemplateString: template,\r\n\t\t_mousePixelCoord: \"pageY\",\r\n\t\t_pixelCount: \"h\",\r\n\t\t_startingPixelCoord: \"y\",\r\n\t\t_handleOffsetCoord: \"top\",\r\n\t\t_progressPixelSize: \"height\",\r\n\r\n\t\t// _descending: Boolean\r\n\t\t//\t\tSpecifies if the slider values go from high-on-top (true), or low-on-top (false)\r\n\t\t//\t\tTODO: expose this in 1.2 - the css progress/remaining bar classes need to be reversed\r\n\t\t_descending: true,\r\n\r\n\t\t_isReversed: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides HorizontalSlider._isReversed.\r\n\t\t\t//\t\tIndicates if values are high on top (with low numbers on the bottom).\r\n\t\t\treturn this._descending;\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/HorizontalRule',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"../_Widget\",\r\n\t\"../_TemplatedMixin\"\r\n], function(declare, _Widget, _TemplatedMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/HorizontalRule\r\n\r\n\treturn declare(\"dijit.form.HorizontalRule\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tHash marks for `dijit/form/HorizontalSlider`\r\n\r\n\t\ttemplateString: '<div class=\"dijitRuleContainer dijitRuleContainerH\"></div>',\r\n\r\n\t\t// count: Integer\r\n\t\t//\t\tNumber of hash marks to generate\r\n\t\tcount: 3,\r\n\r\n\t\t// container: String\r\n\t\t//\t\tFor HorizontalSlider, this is either \"topDecoration\" or \"bottomDecoration\",\r\n\t\t//\t\tand indicates whether this rule goes above or below the slider.\r\n\t\tcontainer: \"containerNode\",\r\n\r\n\t\t// ruleStyle: String\r\n\t\t//\t\tCSS style to apply to individual hash marks\r\n\t\truleStyle: \"\",\r\n\r\n\t\t_positionPrefix: '<div class=\"dijitRuleMark dijitRuleMarkH\" style=\"left:',\r\n\t\t_positionSuffix: '%;',\r\n\t\t_suffix: '\"></div>',\r\n\r\n\t\t_genHTML: function(pos){\r\n\t\t\treturn this._positionPrefix + pos + this._positionSuffix + this.ruleStyle + this._suffix;\r\n\t\t},\r\n\r\n\t\t// _isHorizontal: [protected extension] Boolean\r\n\t\t//\t\tVerticalRule will override this...\r\n\t\t_isHorizontal: true,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar innerHTML;\r\n\t\t\tif(this.count == 1){\r\n\t\t\t\tinnerHTML = this._genHTML(50, 0);\r\n\t\t\t}else{\r\n\t\t\t\tvar i;\r\n\t\t\t\tvar interval = 100 / (this.count - 1);\r\n\t\t\t\tif(!this._isHorizontal || this.isLeftToRight()){\r\n\t\t\t\t\tinnerHTML = this._genHTML(0, 0);\r\n\t\t\t\t\tfor(i = 1; i < this.count - 1; i++){\r\n\t\t\t\t\t\tinnerHTML += this._genHTML(interval * i, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinnerHTML += this._genHTML(100, this.count - 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinnerHTML = this._genHTML(100, 0);\r\n\t\t\t\t\tfor(i = 1; i < this.count - 1; i++){\r\n\t\t\t\t\t\tinnerHTML += this._genHTML(100 - interval * i, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinnerHTML += this._genHTML(0, this.count - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.domNode.innerHTML = innerHTML;\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/VerticalRule',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./HorizontalRule\"\r\n], function(declare, HorizontalRule){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/VerticalRule\r\n\r\n\treturn declare(\"dijit.form.VerticalRule\", HorizontalRule, {\r\n\t\t// summary:\r\n\t\t//\t\tHash marks for the `dijit/form/VerticalSlider`\r\n\r\n\t\ttemplateString: '<div class=\"dijitRuleContainer dijitRuleContainerV\"></div>',\r\n\t\t_positionPrefix: '<div class=\"dijitRuleMark dijitRuleMarkV\" style=\"top:',\r\n\r\n\t/*=====\r\n\t\t// container: String\r\n\t\t//\t\tThis is either \"leftDecoration\" or \"rightDecoration\",\r\n\t\t//\t\tto indicate whether this rule goes to the left or to the right of the slider.\r\n\t\t//\t\tNote that on RTL system, \"leftDecoration\" would actually go to the right, and vice-versa.\r\n\t\tcontainer: \"\",\r\n\t=====*/\r\n\r\n\t\t// Overrides HorizontalRule._isHorizontal\r\n\t\t_isHorizontal: false\r\n\r\n\t});\r\n});\r\n\ndefine('dijit/form/HorizontalRuleLabels',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/has\",\r\n\t\"dojo/number\", // number.format\r\n\t\"dojo/query\", // query\r\n\t\"dojo/_base/lang\", // lang\r\n\t\"./HorizontalRule\"\r\n], function(declare, has, number, query, lang, HorizontalRule){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/HorizontalRuleLabels\r\n\r\n\tvar HorizontalRuleLabels = declare(\"dijit.form.HorizontalRuleLabels\", HorizontalRule, {\r\n\t\t// summary:\r\n\t\t//\t\tLabels for `dijit/form/HorizontalSlider`\r\n\r\n\t\ttemplateString: '<div class=\"dijitRuleContainer dijitRuleContainerH dijitRuleLabelsContainer dijitRuleLabelsContainerH\"></div>',\r\n\r\n\t\t// labelStyle: String\r\n\t\t//\t\tCSS style to apply to individual text labels\r\n\t\tlabelStyle: \"\",\r\n\r\n\t\t// labels: String[]?\r\n\t\t//\t\tArray of text labels to render - evenly spaced from left-to-right or bottom-to-top.\r\n\t\t//\t\tAlternately, minimum and maximum can be specified, to get numeric labels.\r\n\t\tlabels: [],\r\n\r\n\t\t// numericMargin: Integer\r\n\t\t//\t\tNumber of generated numeric labels that should be rendered as '' on the ends when labels[] are not specified\r\n\t\tnumericMargin: 0,\r\n\r\n\t\t// numericMinimum: Integer\r\n\t\t//\t\tLeftmost label value for generated numeric labels when labels[] are not specified\r\n\t\tminimum: 0,\r\n\r\n\t\t// numericMaximum: Integer\r\n\t\t//\t\tRightmost label value for generated numeric labels when labels[] are not specified\r\n\t\tmaximum: 1,\r\n\r\n\t\t// constraints: Object\r\n\t\t//\t\tpattern, places, lang, et al (see dojo.number) for generated numeric labels when labels[] are not specified\r\n\t\tconstraints: {pattern: \"#%\"},\r\n\r\n\t\t_positionPrefix: '<div class=\"dijitRuleLabelContainer dijitRuleLabelContainerH\" style=\"left:',\r\n\t\t_labelPrefix: '\"><div class=\"dijitRuleLabel dijitRuleLabelH\">',\r\n\t\t_suffix: '</div></div>',\r\n\r\n\t\t_calcPosition: function(pos){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the value to be used in HTML for the label as part of the left: attribute\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\treturn pos;\r\n\t\t},\r\n\r\n\t\t_genHTML: function(pos, ndx){\r\n\t\t\tvar label = this.labels[ndx];\r\n\t\t\treturn this._positionPrefix + this._calcPosition(pos) + this._positionSuffix + this.labelStyle +\r\n\t\t\t\tthis._genDirectionHTML(label) +\r\n\t\t\t\tthis._labelPrefix + label + this._suffix;\r\n\t\t},\r\n\r\n\t\t_genDirectionHTML: function(label){\r\n\t\t\t// extension point for bidi code\r\n\t\t\treturn \"\";\r\n\t\t},\r\n\r\n\t\tgetLabels: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverridable function to return array of labels to use for this slider.\r\n\t\t\t//\t\tCan specify a getLabels() method instead of a labels[] array, or min/max attributes.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\r\n\t\t\t// if the labels array was not specified directly, then see if <li> children were\r\n\t\t\tvar labels = this.labels;\r\n\t\t\tif(!labels.length && this.srcNodeRef){\r\n\t\t\t\t// for markup creation, labels are specified as child elements\r\n\t\t\t\tlabels = query(\"> li\", this.srcNodeRef).map(function(node){\r\n\t\t\t\t\treturn String(node.innerHTML);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// if the labels were not specified directly and not as <li> children, then calculate numeric labels\r\n\t\t\tif(!labels.length && this.count > 1){\r\n\t\t\t\tvar start = this.minimum;\r\n\t\t\t\tvar inc = (this.maximum - start) / (this.count - 1);\r\n\t\t\t\tfor(var i = 0; i < this.count; i++){\r\n\t\t\t\t\tlabels.push((i < this.numericMargin || i >= (this.count - this.numericMargin)) ? '' : number.format(start, this.constraints));\r\n\t\t\t\t\tstart += inc;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn labels;\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.labels = this.getLabels();\r\n\t\t\tthis.count = this.labels.length;\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tHorizontalRuleLabels.extend({\r\n\t\t\t_setTextDirAttr: function(textDir){\r\n\t\t\t\tif(this.textDir != textDir){\r\n\t\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\t\tquery(\".dijitRuleLabelContainer\", this.domNode).forEach(\r\n\t\t\t\t\t\tlang.hitch(this, function(labelNode){\r\n\t\t\t\t\t\t\tlabelNode.style.direction = this.getTextDir(labelNode.innerText || labelNode.textContent || \"\");\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_genDirectionHTML: function(label){\r\n\t\t\t\treturn (this.textDir ? (\"direction:\" + this.getTextDir(label) + \";\") : \"\")\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn HorizontalRuleLabels;\r\n});\r\n\ndefine('dijit/form/VerticalRuleLabels',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./HorizontalRuleLabels\"\r\n], function(declare, HorizontalRuleLabels){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/VerticalRuleLabels\r\n\r\n\treturn declare(\"dijit.form.VerticalRuleLabels\", HorizontalRuleLabels, {\r\n\t\t// summary:\r\n\t\t//\t\tLabels for the `dijit/form/VerticalSlider`\r\n\r\n\t\ttemplateString: '<div class=\"dijitRuleContainer dijitRuleContainerV dijitRuleLabelsContainer dijitRuleLabelsContainerV\"></div>',\r\n\r\n\t\t_positionPrefix: '<div class=\"dijitRuleLabelContainer dijitRuleLabelContainerV\" style=\"top:',\r\n\t\t_labelPrefix: '\"><span class=\"dijitRuleLabel dijitRuleLabelV\">',\r\n\r\n\t\t_calcPosition: function(pos){\r\n\t\t\t// Overrides HorizontalRuleLabel._calcPosition()\r\n\t\t\treturn 100-pos;\r\n\t\t},\r\n\r\n\t\t// needed to prevent labels from being reversed in RTL mode\r\n\t\t_isHorizontal: false\r\n\t});\r\n});\r\n\ndefine('dijit/form/SimpleTextarea',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"opera\")\r\n\t\"./TextBox\"\r\n], function(declare, domClass, has, TextBox){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/SimpleTextarea\r\n\r\n\treturn declare(\"dijit.form.SimpleTextarea\", TextBox, {\r\n\t\t// summary:\r\n\t\t//\t\tA simple textarea that degrades, and responds to\r\n\t\t//\t\tminimal LayoutContainer usage, and works with dijit/form/Form.\r\n\t\t//\t\tDoesn't automatically size according to input, like Textarea.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t<textarea data-dojo-type=\"dijit/form/SimpleTextarea\" name=\"foo\" value=\"bar\" rows=30 cols=40></textarea>\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\tnew SimpleTextarea({ rows:20, cols:30 }, \"foo\");\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitTextArea\",\r\n\r\n\t\t// rows: Number\r\n\t\t//\t\tThe number of rows of text.\r\n\t\trows: \"3\",\r\n\r\n\t\t// rows: Number\r\n\t\t//\t\tThe number of characters per line.\r\n\t\tcols: \"20\",\r\n\r\n\t\ttemplateString: \"<textarea ${!nameAttrSetting} data-dojo-attach-point='focusNode,containerNode,textbox' autocomplete='off'></textarea>\",\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// Copy value from srcNodeRef, unless user specified a value explicitly (or there is no srcNodeRef)\r\n\t\t\t// TODO: parser will handle this in 2.0\r\n\t\t\tif(!this.value && this.srcNodeRef){\r\n\t\t\t\tthis.value = this.srcNodeRef.value;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(has(\"ie\") && this.cols){ // attribute selectors is not supported in IE6\r\n\t\t\t\tdomClass.add(this.textbox, \"dijitTextAreaCols\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfilter: function(/*String*/ value){\r\n\t\t\t// Override TextBox.filter to deal with newlines... specifically (IIRC) this is for IE which writes newlines\r\n\t\t\t// as \\r\\n instead of just \\n\r\n\t\t\tif(value){\r\n\t\t\t\tvalue = value.replace(/\\r/g, \"\");\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_onInput: function(/*Event?*/ e){\r\n\t\t\t// Override TextBox._onInput() to enforce maxLength restriction\r\n\t\t\tif(this.maxLength){\r\n\t\t\t\tvar maxLength = parseInt(this.maxLength);\r\n\t\t\t\tvar value = this.textbox.value.replace(/\\r/g, '');\r\n\t\t\t\tvar overflow = value.length - maxLength;\r\n\t\t\t\tif(overflow > 0){\r\n\t\t\t\t\tvar textarea = this.textbox;\r\n\t\t\t\t\tif(textarea.selectionStart){\r\n\t\t\t\t\t\tvar pos = textarea.selectionStart;\r\n\t\t\t\t\t\tvar cr = 0;\r\n\t\t\t\t\t\tif(has(\"opera\")){\r\n\t\t\t\t\t\t\tcr = (this.textbox.value.substring(0, pos).match(/\\r/g) || []).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.textbox.value = value.substring(0, pos - overflow - cr) + value.substring(pos - cr);\r\n\t\t\t\t\t\ttextarea.setSelectionRange(pos - overflow, pos - overflow);\r\n\t\t\t\t\t}else if(this.ownerDocument.selection){ //IE\r\n\t\t\t\t\t\ttextarea.focus();\r\n\t\t\t\t\t\tvar range = this.ownerDocument.selection.createRange();\r\n\t\t\t\t\t\t// delete overflow characters\r\n\t\t\t\t\t\trange.moveStart(\"character\", -overflow);\r\n\t\t\t\t\t\trange.text = '';\r\n\t\t\t\t\t\t// show cursor\r\n\t\t\t\t\t\trange.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/_ExpandingTextAreaMixin',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-construct\", // domConstruct.create\r\n\t\"dojo/has\",\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"../Viewport\"\r\n], function(declare, domConstruct, has, lang, on, win, Viewport){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/_ExpandingTextAreaMixin\r\n\r\n\t// feature detection, true for mozilla and webkit\r\n\thas.add(\"textarea-needs-help-shrinking\", function(){\r\n\t\tvar body = win.body(),\t// note: if multiple documents exist, doesn't matter which one we use\r\n\t\t\tte = domConstruct.create('textarea', {\r\n\t\t\trows:\"5\",\r\n\t\t\tcols:\"20\",\r\n\t\t\tvalue: ' ',\r\n\t\t\tstyle: {zoom:1, fontSize:\"12px\", height:\"96px\", overflow:'hidden', visibility:'hidden', position:'absolute', border:\"5px solid white\", margin:\"0\", padding:\"0\", boxSizing: 'border-box', MsBoxSizing: 'border-box', WebkitBoxSizing: 'border-box', MozBoxSizing: 'border-box' }\r\n\t\t}, body, \"last\");\r\n\t\tvar needsHelpShrinking = te.scrollHeight >= te.clientHeight;\r\n\t\tbody.removeChild(te);\r\n\t\treturn needsHelpShrinking;\r\n\t});\r\n\r\n\treturn declare(\"dijit.form._ExpandingTextAreaMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for textarea widgets to add auto-expanding capability\r\n\r\n\t\t_setValueAttr: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar textarea = this.textbox;\r\n\t\t\ttextarea.style.overflowY = \"hidden\";\r\n\t\t\tthis.own(on(textarea, \"focus, resize\", lang.hitch(this, \"_resizeLater\")));\r\n\t\t},\r\n\r\n\t\tstartup: function(){ \r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.own(Viewport.on(\"resize\", lang.hitch(this, \"_resizeLater\")));\r\n\t\t\tthis._resizeLater();\r\n\t\t},\r\n\r\n\t\t_onInput: function(e){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.resize();\r\n\t\t},\r\n\r\n\t\t_estimateHeight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApproximate the height when the textarea is invisible with the number of lines in the text.\r\n\t\t\t//\t\tFails when someone calls setValue with a long wrapping line, but the layout fixes itself when the user clicks inside so . . .\r\n\t\t\t//\t\tIn IE, the resize event is supposed to fire when the textarea becomes visible again and that will correct the size automatically.\r\n\t\t\t//\r\n\t\t\tvar textarea = this.textbox;\r\n\t\t\t// #rows = #newlines+1\r\n\t\t\ttextarea.rows = (textarea.value.match(/\\n/g) || []).length + 1;\r\n\t\t},\r\n\r\n\t\t_resizeLater: function(){\r\n\t\t\tthis.defer(\"resize\");\r\n\t\t},\r\n\r\n\t\tresize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResizes the textarea vertically (should be called after a style/value change)\r\n\r\n\t\t\tvar textarea = this.textbox;\r\n\r\n\t\t\tfunction textareaScrollHeight(){\r\n\t\t\t\tvar empty = false;\r\n\t\t\t\tif(textarea.value === ''){\r\n\t\t\t\t\ttextarea.value = ' ';\r\n\t\t\t\t\tempty = true;\r\n\t\t\t\t}\r\n\t\t\t\tvar sh = textarea.scrollHeight;\r\n\t\t\t\tif(empty){ textarea.value = ''; }\r\n\t\t\t\treturn sh;\r\n\t\t\t}\r\n\r\n\t\t\tif(textarea.style.overflowY == \"hidden\"){ textarea.scrollTop = 0; }\r\n\t\t\tif(this.busyResizing){ return; }\r\n\t\t\tthis.busyResizing = true;\r\n\t\t\tif(textareaScrollHeight() || textarea.offsetHeight){\r\n\t\t\t\tvar newH = textareaScrollHeight() + Math.max(textarea.offsetHeight - textarea.clientHeight, 0);\r\n\t\t\t\tvar newHpx = newH + \"px\";\r\n\t\t\t\tif(newHpx != textarea.style.height){\r\n\t\t\t\t\ttextarea.style.height = newHpx;\r\n\t\t\t\t\ttextarea.rows = 1; // rows can act like a minHeight if not cleared\r\n\t\t\t\t}\r\n\t\t\t\tif(has(\"textarea-needs-help-shrinking\")){\r\n\t\t\t\t\tvar\torigScrollHeight = textareaScrollHeight(),\r\n\t\t\t\t\t\tnewScrollHeight = origScrollHeight,\r\n\t\t\t\t\t\torigMinHeight = textarea.style.minHeight,\r\n\t\t\t\t\t\tdecrement = 4, // not too fast, not too slow\r\n\t\t\t\t\t\tthisScrollHeight,\r\n\t\t\t\t\t\torigScrollTop = textarea.scrollTop;\r\n\t\t\t\t\ttextarea.style.minHeight = newHpx; // maintain current height\r\n\t\t\t\t\ttextarea.style.height = \"auto\"; // allow scrollHeight to change\r\n\t\t\t\t\twhile(newH > 0){\r\n\t\t\t\t\t\ttextarea.style.minHeight = Math.max(newH - decrement, 4) + \"px\";\r\n\t\t\t\t\t\tthisScrollHeight = textareaScrollHeight();\r\n\t\t\t\t\t\tvar change = newScrollHeight - thisScrollHeight;\r\n\t\t\t\t\t\tnewH -= change;\r\n\t\t\t\t\t\tif(change < decrement){\r\n\t\t\t\t\t\t\tbreak; // scrollHeight didn't shrink\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewScrollHeight = thisScrollHeight;\r\n\t\t\t\t\t\tdecrement <<= 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttextarea.style.height = newH + \"px\";\r\n\t\t\t\t\ttextarea.style.minHeight = origMinHeight;\r\n\t\t\t\t\ttextarea.scrollTop = origScrollTop;\r\n\t\t\t\t}\r\n\t\t\t\ttextarea.style.overflowY = textareaScrollHeight() > textarea.clientHeight ? \"auto\" : \"hidden\";\r\n\t\t\t\tif(textarea.style.overflowY == \"hidden\"){ textarea.scrollTop = 0; }\r\n\t\t\t}else{\r\n\t\t\t\t// hidden content of unknown size\r\n\t\t\t\tthis._estimateHeight();\r\n\t\t\t}\r\n\t\t\tthis.busyResizing = false;\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/form/Textarea',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"./_ExpandingTextAreaMixin\",\r\n\t\"./SimpleTextarea\"\r\n], function(declare, domStyle, _ExpandingTextAreaMixin, SimpleTextarea){\r\n\r\n\t// module:\r\n\t//\t\tdijit/form/Textarea\r\n\r\n\treturn declare(\"dijit.form.Textarea\", [SimpleTextarea, _ExpandingTextAreaMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA textarea widget that adjusts it's height according to the amount of data.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA textarea that dynamically expands/contracts (changing it's height) as\r\n\t\t//\t\tthe user types, to display all the text without requiring a scroll bar.\r\n\t\t//\r\n\t\t//\t\tTakes nearly all the parameters (name, value, etc.) that a vanilla textarea takes.\r\n\t\t//\t\tRows is not supported since this widget adjusts the height.\r\n\r\n\r\n\t\t// TODO: for 2.0, rename this to ExpandingTextArea, and rename SimpleTextarea to TextArea\r\n\r\n\t\tbaseClass: \"dijitTextBox dijitTextArea dijitExpandingTextArea\",\r\n\r\n\t\t// Override SimpleTextArea.cols to default to width:100%, for backward compatibility\r\n\t\tcols: \"\",\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// tweak textarea style to reduce browser differences\r\n\t\t\tdomStyle.set(this.textbox, { overflowY: 'hidden', overflowX: 'auto', boxSizing: 'border-box', MsBoxSizing: 'border-box', WebkitBoxSizing: 'border-box', MozBoxSizing: 'border-box' });\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/layout/StackContainer',[\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.some\r\n\t\"dojo/cookie\", // cookie\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.replace\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/has\", // has(\"dijit-legacy-requires\")\r\n\t\"dojo/_base/lang\", // lang.extend\r\n\t\"dojo/on\",\r\n\t\"dojo/ready\",\r\n\t\"dojo/topic\", // publish\r\n\t\"dojo/when\",\r\n\t\"../registry\", // registry.byId\r\n\t\"../_WidgetBase\",\r\n\t\"./_LayoutWidget\"\r\n], function(array, cookie, declare, domClass, domConstruct, has, lang, on, ready, topic, when, registry, _WidgetBase, _LayoutWidget){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/StackContainer\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/layout/StackController\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\tvar StackContainer = declare(\"dijit.layout.StackContainer\", _LayoutWidget, {\r\n\t\t// summary:\r\n\t\t//\t\tA container that has multiple children, but shows only\r\n\t\t//\t\tone child at a time\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tA container for widgets (ContentPanes, for example) That displays\r\n\t\t//\t\tonly one Widget at a time.\r\n\t\t//\r\n\t\t//\t\tPublishes topics [widgetId]-addChild, [widgetId]-removeChild, and [widgetId]-selectChild\r\n\t\t//\r\n\t\t//\t\tCan be base class for container, Wizard, Show, etc.\r\n\t\t//\r\n\t\t//\t\tSee `StackContainer.ChildWidgetProperties` for details on the properties that can be set on\r\n\t\t//\t\tchildren of a `StackContainer`.\r\n\r\n\t\t// doLayout: Boolean\r\n\t\t//\t\tIf true, change the size of my currently displayed child to match my size\r\n\t\tdoLayout: true,\r\n\r\n\t\t// persist: Boolean\r\n\t\t//\t\tRemembers the selected child across sessions\r\n\t\tpersist: false,\r\n\r\n\t\tbaseClass: \"dijitStackContainer\",\r\n\r\n\t\t/*=====\r\n\t\t// selectedChildWidget: [readonly] dijit._Widget\r\n\t\t//\t\tReferences the currently selected child widget, if any.\r\n\t\t//\t\tAdjust selected child with selectChild() method.\r\n\t\tselectedChildWidget: null,\r\n\t\t=====*/\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.add(this.domNode, \"dijitLayoutContainer\");\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.own(\r\n\t\t\t\ton(this.domNode, \"keydown\", lang.hitch(this, \"_onKeyDown\"))\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar children = this.getChildren();\r\n\r\n\t\t\t// Setup each page panel to be initially hidden\r\n\t\t\tarray.forEach(children, this._setupChild, this);\r\n\r\n\t\t\t// Figure out which child to initially display, defaulting to first one\r\n\t\t\tif(this.persist){\r\n\t\t\t\tthis.selectedChildWidget = registry.byId(cookie(this.id + \"_selectedChild\"));\r\n\t\t\t}else{\r\n\t\t\t\tarray.some(children, function(child){\r\n\t\t\t\t\tif(child.selected){\r\n\t\t\t\t\t\tthis.selectedChildWidget = child;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn child.selected;\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\tvar selected = this.selectedChildWidget;\r\n\t\t\tif(!selected && children[0]){\r\n\t\t\t\tselected = this.selectedChildWidget = children[0];\r\n\t\t\t\tselected.selected = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Publish information about myself so any StackControllers can initialize.\r\n\t\t\t// This needs to happen before this.inherited(arguments) so that for\r\n\t\t\t// TabContainer, this._contentBox doesn't include the space for the tab labels.\r\n\t\t\ttopic.publish(this.id + \"-startup\", {children: children, selected: selected, textDir: this.textDir});\r\n\r\n\t\t\t// Startup each child widget, and do initial layout like setting this._contentBox,\r\n\t\t\t// then calls this.resize() which does the initial sizing on the selected child.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tresize: function(){\r\n\t\t\t// Overrides _LayoutWidget.resize()\r\n\t\t\t// Resize is called when we are first made visible (it's called from startup()\r\n\t\t\t// if we are initially visible). If this is the first time we've been made\r\n\t\t\t// visible then show our first child.\r\n\t\t\tif(!this._hasBeenShown){\r\n\t\t\t\tthis._hasBeenShown = true;\r\n\t\t\t\tvar selected = this.selectedChildWidget;\r\n\t\t\t\tif(selected){\r\n\t\t\t\t\tthis._showChild(selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setupChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// Overrides _LayoutWidget._setupChild()\r\n\r\n\t\t\t// For aria support, wrap child widget in a <div role=\"tabpanel\">\r\n\t\t\tvar childNode = child.domNode,\r\n\t\t\t\twrapper = domConstruct.place(\r\n\t\t\t\t\t\"<div role='tabpanel' class='\" + this.baseClass + \"ChildWrapper dijitHidden'>\",\r\n\t\t\t\t\tchild.domNode,\r\n\t\t\t\t\t\"replace\"),\r\n\t\t\t\tlabel = child[\"aria-label\"] || child.title || child.label;\r\n\t\t\tif(label){\r\n\t\t\t\t// setAttribute() escapes special chars, and if() statement avoids setting aria-label=\"undefined\"\r\n\t\t\t\twrapper.setAttribute(\"aria-label\", label);\r\n\t\t\t}\r\n\t\t\tdomConstruct.place(childNode, wrapper);\r\n\t\t\tchild._wrapper = wrapper;\t// to set the aria-labelledby in StackController\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// child may have style=\"display: none\" (at least our test cases do), so remove that\r\n\t\t\tif(childNode.style.display == \"none\"){\r\n\t\t\t\tchildNode.style.display = \"block\";\r\n\t\t\t}\r\n\r\n\t\t\t// remove the title attribute so it doesn't show up when i hover over a node\r\n\t\t\tchild.domNode.removeAttribute(\"title\");\r\n\t\t},\r\n\r\n\t\taddChild: function(/*dijit/_WidgetBase*/ child, /*Integer?*/ insertIndex){\r\n\t\t\t// Overrides _Container.addChild() to do layout and publish events\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(this._started){\r\n\t\t\t\ttopic.publish(this.id + \"-addChild\", child, insertIndex);\t// publish\r\n\r\n\t\t\t\t// in case the tab titles have overflowed from one line to two lines\r\n\t\t\t\t// (or, if this if first child, from zero lines to one line)\r\n\t\t\t\t// TODO: w/ScrollingTabController this is no longer necessary, although\r\n\t\t\t\t// ScrollTabController.resize() does need to get called to show/hide\r\n\t\t\t\t// the navigation buttons as appropriate, but that's handled in ScrollingTabController.onAddChild().\r\n\t\t\t\t// If this is updated to not layout [except for initial child added / last child removed], update\r\n\t\t\t\t// \"childless startup\" test in StackContainer.html to check for no resize event after second addChild()\r\n\t\t\t\tthis.layout();\r\n\r\n\t\t\t\t// if this is the first child, then select it\r\n\t\t\t\tif(!this.selectedChildWidget){\r\n\t\t\t\t\tthis.selectChild(child);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// Overrides _Container.removeChild() to do layout and publish events\r\n\r\n\t\t\tvar idx = array.indexOf(this.getChildren(), page);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Remove the child widget wrapper we use to set aria roles.  This won't affect the page itself since it's\r\n\t\t\t// already been detached from page._wrapper via the this.inherited(arguments) call above.\r\n\t\t\tdomConstruct.destroy(page._wrapper);\r\n\t\t\tdelete page._wrapper;\r\n\r\n\t\t\tif(this._started){\r\n\t\t\t\t// This will notify any tablists to remove a button; do this first because it may affect sizing.\r\n\t\t\t\ttopic.publish(this.id + \"-removeChild\", page);\r\n\t\t\t}\r\n\r\n\t\t\t// If all our children are being destroyed than don't run the code below (to select another page),\r\n\t\t\t// because we are deleting every page one by one\r\n\t\t\tif(this._descendantsBeingDestroyed){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Select new page to display, also updating TabController to show the respective tab.\r\n\t\t\t// Do this before layout call because it can affect the height of the TabController.\r\n\t\t\tif(this.selectedChildWidget === page){\r\n\t\t\t\tthis.selectedChildWidget = undefined;\r\n\t\t\t\tif(this._started){\r\n\t\t\t\t\tvar children = this.getChildren();\r\n\t\t\t\t\tif(children.length){\r\n\t\t\t\t\t\tthis.selectChild(children[Math.max(idx - 1, 0)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this._started){\r\n\t\t\t\t// In case the tab titles now take up one line instead of two lines\r\n\t\t\t\t// (note though that ScrollingTabController never overflows to multiple lines),\r\n\t\t\t\t// or the height has changed slightly because of addition/removal of tab which close icon\r\n\t\t\t\tthis.layout();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tselectChild: function(/*dijit/_WidgetBase|String*/ page, /*Boolean*/ animate){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tShow the given widget (which must be one of my children)\r\n\t\t\t// page:\r\n\t\t\t//\t\tReference to child widget or id of child widget\r\n\r\n\t\t\tvar d;\r\n\r\n\t\t\tpage = registry.byId(page);\r\n\r\n\t\t\tif(this.selectedChildWidget != page){\r\n\t\t\t\t// Deselect old page and select new one\r\n\t\t\t\td = this._transition(page, this.selectedChildWidget, animate);\r\n\t\t\t\tthis._set(\"selectedChildWidget\", page);\r\n\t\t\t\ttopic.publish(this.id + \"-selectChild\", page);\t// publish\r\n\r\n\t\t\t\tif(this.persist){\r\n\t\t\t\t\tcookie(this.id + \"_selectedChild\", this.selectedChildWidget.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// d may be null, or a scalar like true.  Return a promise in all cases\r\n\t\t\treturn when(d || true);\t\t// Promise\r\n\t\t},\r\n\r\n\t\t_transition: function(newWidget, oldWidget /*===== ,  animate =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the old widget and display the new widget.\r\n\t\t\t//\t\tSubclasses should override this.\r\n\t\t\t// newWidget: dijit/_WidgetBase\r\n\t\t\t//\t\tThe newly selected widget.\r\n\t\t\t// oldWidget: dijit/_WidgetBase\r\n\t\t\t//\t\tThe previously selected widget.\r\n\t\t\t// animate: Boolean\r\n\t\t\t//\t\tUsed by AccordionContainer to turn on/off slide effect.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\t\t\tif(oldWidget){\r\n\t\t\t\tthis._hideChild(oldWidget);\r\n\t\t\t}\r\n\t\t\tvar d = this._showChild(newWidget);\r\n\r\n\t\t\t// Size the new widget, in case this is the first time it's being shown,\r\n\t\t\t// or I have been resized since the last time it was shown.\r\n\t\t\t// Note that page must be visible for resizing to work.\r\n\t\t\tif(newWidget.resize){\r\n\t\t\t\tif(this.doLayout){\r\n\t\t\t\t\tnewWidget.resize(this._containerContentBox || this._contentBox);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// the child should pick it's own size but we still need to call resize()\r\n\t\t\t\t\t// (with no arguments) to let the widget lay itself out\r\n\t\t\t\t\tnewWidget.resize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn d;\t// If child has an href, promise that fires when the child's href finishes loading\r\n\t\t},\r\n\r\n\t\t_adjacent: function(/*Boolean*/ forward){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the next/previous child widget in this container from the current selection.\r\n\r\n\t\t\t// TODO: remove for 2.0 if this isn't being used.   Otherwise, fix to skip disabled tabs.\r\n\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tvar index = array.indexOf(children, this.selectedChildWidget);\r\n\t\t\tindex += forward ? 1 : children.length - 1;\r\n\t\t\treturn children[ index % children.length ]; // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tforward: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdvance to next page.\r\n\t\t\treturn this.selectChild(this._adjacent(true), true);\r\n\t\t},\r\n\r\n\t\tback: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGo back to previous page.\r\n\t\t\treturn this.selectChild(this._adjacent(false), true);\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(e){\r\n\t\t\ttopic.publish(this.id + \"-containerKeyDown\", { e: e, page: this});\t// publish\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// Implement _LayoutWidget.layout() virtual method.\r\n\t\t\tvar child = this.selectedChildWidget;\r\n\t\t\tif(child && child.resize){\r\n\t\t\t\tif(this.doLayout){\r\n\t\t\t\t\tchild.resize(this._containerContentBox || this._contentBox);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tchild.resize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_showChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tShow the specified child by changing it's CSS, and call _onShow()/onShow() so\r\n\t\t\t//\t\tit can do any updates it needs regarding loading href's etc.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tPromise that fires when page has finished showing, or true if there's no href\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tpage.isFirstChild = (page == children[0]);\r\n\t\t\tpage.isLastChild = (page == children[children.length - 1]);\r\n\t\t\tpage._set(\"selected\", true);\r\n\r\n\t\t\tif(page._wrapper){\t// false if not started yet\r\n\t\t\t\tdomClass.replace(page._wrapper, \"dijitVisible\", \"dijitHidden\");\r\n\t\t\t}\r\n\r\n\t\t\treturn (page._onShow && page._onShow()) || true;\r\n\t\t},\r\n\r\n\t\t_hideChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the specified child by changing it's CSS, and call _onHide() so\r\n\t\t\t//\t\tit's notified.\r\n\t\t\tpage._set(\"selected\", false);\r\n\r\n\t\t\tif(page._wrapper){\t// false if not started yet\r\n\t\t\t\tdomClass.replace(page._wrapper, \"dijitHidden\", \"dijitVisible\");\r\n\t\t\t}\r\n\r\n\t\t\tpage.onHide && page.onHide();\r\n\t\t},\r\n\r\n\t\tcloseChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when user clicks the [X] to remove a page.\r\n\t\t\t//\t\tIf onClose() returns true then remove and destroy the child.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar remove = page.onClose && page.onClose(this, page);\r\n\t\t\tif(remove){\r\n\t\t\t\tthis.removeChild(page);\r\n\t\t\t\t// makes sure we can clean up executeScripts in ContentPane onUnLoad\r\n\t\t\t\tpage.destroyRecursive();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroyDescendants: function(/*Boolean*/ preserveDom){\r\n\t\t\tthis._descendantsBeingDestroyed = true;\r\n\t\t\tthis.selectedChildWidget = undefined;\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tif(!preserveDom){\r\n\t\t\t\t\tthis.removeChild(child);\r\n\t\t\t\t}\r\n\t\t\t\tchild.destroyRecursive(preserveDom);\r\n\t\t\t}, this);\r\n\t\t\tthis._descendantsBeingDestroyed = false;\r\n\t\t}\r\n\t});\r\n\r\n\tStackContainer.ChildWidgetProperties = {\r\n\t\t// summary:\r\n\t\t//\t\tThese properties can be specified for the children of a StackContainer.\r\n\r\n\t\t// selected: Boolean\r\n\t\t//\t\tSpecifies that this widget should be the initially displayed pane.\r\n\t\t//\t\tNote: to change the selected child use `dijit/layout/StackContainer.selectChild`\r\n\t\tselected: false,\r\n\r\n\t\t// disabled: Boolean\r\n\t\t//\t\tSpecifies that the button to select this pane should be disabled.\r\n\t\t//\t\tDoesn't affect programmatic selection of the pane, nor does it deselect the pane if it is currently selected.\r\n\t\tdisabled: false,\r\n\r\n\t\t// closable: Boolean\r\n\t\t//\t\tTrue if user can close (destroy) this child, such as (for example) clicking the X on the tab.\r\n\t\tclosable: false,\r\n\r\n\t\t// iconClass: String\r\n\t\t//\t\tCSS Class specifying icon to use in label associated with this pane.\r\n\t\ticonClass: \"dijitNoIcon\",\r\n\r\n\t\t// showTitle: Boolean\r\n\t\t//\t\tWhen true, display title of this widget as tab label etc., rather than just using\r\n\t\t//\t\ticon specified in iconClass\r\n\t\tshowTitle: true\r\n\t};\r\n\r\n\t// Since any widget can be specified as a StackContainer child, mix them\r\n\t// into the base widget class.  (This is a hack, but it's effective.)\r\n\t// This is for the benefit of the parser.   Remove for 2.0.  Also, hide from doc viewer.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ StackContainer.ChildWidgetProperties);\r\n\r\n\treturn StackContainer;\r\n});\r\n\n\ndefine('dijit/layout/AccordionContainer',[\r\n\t\"require\",\r\n\t\"dojo/_base/array\", // array.forEach array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/fx\", // fx.Animation\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-attr\", // domAttr.attr\r\n\t\"dojo/dom-class\", // domClass.remove\r\n\t\"dojo/dom-construct\", // domConstruct.place\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.getObject lang.hitch\r\n\t\"dojo/sniff\", // has(\"ie\") has(\"dijit-legacy-requires\")\r\n\t\"dojo/topic\", // publish\r\n\t\"../focus\", // focus.focus()\r\n\t\"../_base/manager\", // manager.defaultDuration\r\n\t\"dojo/ready\",\r\n\t\"../_Widget\",\r\n\t\"../_Container\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"../_CssStateMixin\",\r\n\t\"./StackContainer\",\r\n\t\"./ContentPane\",\r\n\t\"dojo/text!./templates/AccordionButton.html\",\r\n\t\"../a11yclick\" // AccordionButton template uses ondijitclick; not for keyboard, but for responsive touch.\r\n], function(require, array, declare, fx, dom, domAttr, domClass, domConstruct, domGeometry, keys, lang, has, topic,\r\n\t\t\tfocus, manager, ready, _Widget, _Container, _TemplatedMixin, _CssStateMixin, StackContainer, ContentPane, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/AccordionContainer\r\n\r\n\r\n\t// Design notes:\r\n\t//\r\n\t// An AccordionContainer is a StackContainer, but each child (typically ContentPane)\r\n\t// is wrapped in a _AccordionInnerContainer.   This is hidden from the caller.\r\n\t//\r\n\t// The resulting markup will look like:\r\n\t//\r\n\t//\t<div class=dijitAccordionContainer>\r\n\t//\t\t<div class=dijitAccordionInnerContainer>\t(one pane)\r\n\t//\t\t\t\t<div class=dijitAccordionTitle>\t\t(title bar) ... </div>\r\n\t//\t\t\t\t<div class=dijtAccordionChildWrapper>   (content pane) </div>\r\n\t//\t\t</div>\r\n\t//\t</div>\r\n\t//\r\n\t// Normally the dijtAccordionChildWrapper is hidden for all but one child (the shown\r\n\t// child), so the space for the content pane is all the title bars + the one dijtAccordionChildWrapper,\r\n\t// which on claro has a 1px border plus a 2px bottom margin.\r\n\t//\r\n\t// During animation there are two dijtAccordionChildWrapper's shown, so we need\r\n\t// to compensate for that.\r\n\r\n\tvar AccordionButton = declare(\"dijit.layout._AccordionButton\", [_Widget, _TemplatedMixin, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tThe title bar to click to open up an accordion pane.\r\n\t\t//\t\tInternal widget used by AccordionContainer.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// label: String\r\n\t\t//\t\tTitle of the pane\r\n\t\tlabel: \"\",\r\n\t\t_setLabelAttr: {node: \"titleTextNode\", type: \"innerHTML\" },\r\n\r\n\t\t// title: String\r\n\t\t//\t\tTooltip that appears on hover\r\n\t\ttitle: \"\",\r\n\t\t_setTitleAttr: {node: \"titleTextNode\", type: \"attribute\", attribute: \"title\"},\r\n\r\n\t\t// iconClassAttr: String\r\n\t\t//\t\tCSS class for icon to left of label\r\n\t\ticonClassAttr: \"\",\r\n\t\t_setIconClassAttr: { node: \"iconNode\", type: \"class\" },\r\n\r\n\t\tbaseClass: \"dijitAccordionTitle\",\r\n\r\n\t\tgetParent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the AccordionContainer parent.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\treturn this.parent;\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar titleTextNodeId = this.id.replace(' ', '_');\r\n\t\t\tdomAttr.set(this.titleTextNode, \"id\", titleTextNodeId + \"_title\");\r\n\t\t\tthis.focusNode.setAttribute(\"aria-labelledby\", domAttr.get(this.titleTextNode, \"id\"));\r\n\t\t\tdom.setSelectable(this.domNode, false);\r\n\t\t},\r\n\r\n\t\tgetTitleHeight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the height of the title dom node.\r\n\t\t\treturn domGeometry.getMarginSize(this.domNode).h;\t// Integer\r\n\t\t},\r\n\r\n\t\t// TODO: maybe the parent should set these methods directly rather than forcing the code\r\n\t\t// into the button widget?\r\n\t\t_onTitleClick: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when someone clicks my title.\r\n\t\t\tvar parent = this.getParent();\r\n\t\t\tparent.selectChild(this.contentWidget, true);\r\n\t\t\tfocus.focus(this.focusNode);\r\n\t\t},\r\n\r\n\t\t_onTitleKeyDown: function(/*Event*/ evt){\r\n\t\t\treturn this.getParent()._onKeyDown(evt, this.contentWidget);\r\n\t\t},\r\n\r\n\t\t_setSelectedAttr: function(/*Boolean*/ isSelected){\r\n\t\t\tthis._set(\"selected\", isSelected);\r\n\t\t\tthis.focusNode.setAttribute(\"aria-expanded\", isSelected ? \"true\" : \"false\");\r\n\t\t\tthis.focusNode.setAttribute(\"aria-selected\", isSelected ? \"true\" : \"false\");\r\n\t\t\tthis.focusNode.setAttribute(\"tabIndex\", isSelected ? \"0\" : \"-1\");\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tAccordionButton.extend({\r\n\t\t\t_setLabelAttr: function(label){\r\n\t\t\t\tthis._set(\"label\", label);\r\n\t\t\t\tdomAttr.set(this.titleTextNode, \"innerHTML\", label);\r\n\t\t\t\tthis.applyTextDir(this.titleTextNode);\r\n\t\t\t},\r\n\r\n\t\t\t_setTitleAttr: function(title){\r\n\t\t\t\tthis._set(\"title\", title);\r\n\t\t\t\tdomAttr.set(this.titleTextNode, \"title\", title);\r\n\t\t\t\tthis.applyTextDir(this.titleTextNode);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar AccordionInnerContainer = declare(\"dijit.layout._AccordionInnerContainer\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), [_Widget, _CssStateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tInternal widget placed as direct child of AccordionContainer.containerNode.\r\n\t\t//\t\tWhen other widgets are added as children to an AccordionContainer they are wrapped in\r\n\t\t//\t\tthis widget.\r\n\r\n\t\t/*=====\r\n\t\t // buttonWidget: Function|String\r\n\t\t //\t\tClass to use to instantiate title\r\n\t\t //\t\t(Wish we didn't have a separate widget for just the title but maintaining it\r\n\t\t //\t\tfor backwards compatibility, is it worth it?)\r\n\t\t buttonWidget: null,\r\n\t\t =====*/\r\n\r\n\t\t/*=====\r\n\t\t // contentWidget: dijit/_WidgetBase\r\n\t\t //\t\tPointer to the real child widget\r\n\t\t contentWidget: null,\r\n\t\t =====*/\r\n\r\n\t\tbaseClass: \"dijitAccordionInnerContainer\",\r\n\r\n\t\t// tell nested layout widget that we will take care of sizing\r\n\t\tisLayoutContainer: true,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// Builds a template like:\r\n\t\t\t//\t<div class=dijitAccordionInnerContainer>\r\n\t\t\t//\t\tButton\r\n\t\t\t//\t\t<div class=dijitAccordionChildWrapper>\r\n\t\t\t//\t\t\tContentPane\r\n\t\t\t//\t\t</div>\r\n\t\t\t//\t</div>\r\n\r\n\t\t\t// Create wrapper div, placed where the child is now\r\n\t\t\tthis.domNode = domConstruct.place(\"<div class='\" + this.baseClass +\r\n\t\t\t\t\"' role='presentation'>\", this.contentWidget.domNode, \"after\");\r\n\r\n\t\t\t// wrapper div's first child is the button widget (ie, the title bar)\r\n\t\t\tvar child = this.contentWidget,\r\n\t\t\t\tcls = lang.isString(this.buttonWidget) ? lang.getObject(this.buttonWidget) : this.buttonWidget;\r\n\t\t\tthis.button = child._buttonWidget = (new cls({\r\n\t\t\t\tcontentWidget: child,\r\n\t\t\t\tlabel: child.title,\r\n\t\t\t\ttitle: child.tooltip,\r\n\t\t\t\tdir: child.dir,\r\n\t\t\t\tlang: child.lang,\r\n\t\t\t\ttextDir: child.textDir || this.textDir,\r\n\t\t\t\ticonClass: child.iconClass,\r\n\t\t\t\tid: child.id + \"_button\",\r\n\t\t\t\tparent: this.parent\r\n\t\t\t})).placeAt(this.domNode);\r\n\r\n\t\t\t// and then the actual content widget (changing it from prior-sibling to last-child),\r\n\t\t\t// wrapped by a <div class=dijitAccordionChildWrapper>\r\n\t\t\tthis.containerNode = domConstruct.place(\"<div class='dijitAccordionChildWrapper' role='tabpanel' style='display:none'>\", this.domNode);\r\n\t\t\tthis.containerNode.setAttribute(\"aria-labelledby\", this.button.id);\r\n\r\n\t\t\tdomConstruct.place(this.contentWidget.domNode, this.containerNode);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Map changes in content widget's title etc. to changes in the button\r\n\t\t\tvar button = this.button,\r\n\t\t\t\tcw = this.contentWidget;\r\n\t\t\tthis._contentWidgetWatches = [\r\n\t\t\t\tcw.watch('title', lang.hitch(this, function(name, oldValue, newValue){\r\n\t\t\t\t\tbutton.set(\"label\", newValue);\r\n\t\t\t\t})),\r\n\t\t\t\tcw.watch('tooltip', lang.hitch(this, function(name, oldValue, newValue){\r\n\t\t\t\t\tbutton.set(\"title\", newValue);\r\n\t\t\t\t})),\r\n\t\t\t\tcw.watch('iconClass', lang.hitch(this, function(name, oldValue, newValue){\r\n\t\t\t\t\tbutton.set(\"iconClass\", newValue);\r\n\t\t\t\t}))\r\n\t\t\t];\r\n\t\t},\r\n\r\n\t\t_setSelectedAttr: function(/*Boolean*/ isSelected){\r\n\t\t\tthis._set(\"selected\", isSelected);\r\n\t\t\tthis.button.set(\"selected\", isSelected);\r\n\t\t\tif(isSelected){\r\n\t\t\t\tvar cw = this.contentWidget;\r\n\t\t\t\tif(cw.onSelected){\r\n\t\t\t\t\tcw.onSelected();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// Called by _Container.addChild()\r\n\t\t\tthis.contentWidget.startup();\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis.button.destroyRecursive();\r\n\r\n\t\t\tarray.forEach(this._contentWidgetWatches || [], function(w){\r\n\t\t\t\tw.unwatch();\r\n\t\t\t});\r\n\r\n\t\t\tdelete this.contentWidget._buttonWidget;\r\n\t\t\tdelete this.contentWidget._wrapperWidget;\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tdestroyDescendants: function(/*Boolean*/ preserveDom){\r\n\t\t\t// since getChildren isn't working for me, have to code this manually\r\n\t\t\tthis.contentWidget.destroyRecursive(preserveDom);\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tAccordionInnerContainer = declare(\"dijit.layout._AccordionInnerContainer\", AccordionInnerContainer, {\r\n\t\t\tpostCreate: function(){\r\n\t\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t\t// Map changes in content widget's textdir to changes in the button\r\n\t\t\t\tvar button = this.button;\r\n\t\t\t\tthis._contentWidgetWatches.push(\r\n\t\t\t\t\tthis.contentWidget.watch(\"textDir\", function(name, oldValue, newValue){\r\n\t\t\t\t\t\tbutton.set(\"textDir\", newValue);\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar AccordionContainer = declare(\"dijit.layout.AccordionContainer\", StackContainer, {\r\n\t\t// summary:\r\n\t\t//\t\tHolds a set of panes where every pane's title is visible, but only one pane's content is visible at a time,\r\n\t\t//\t\tand switching between panes is visualized by sliding the other panes up/down.\r\n\t\t// example:\r\n\t\t//\t|\t<div data-dojo-type=\"dijit/layout/AccordionContainer\">\r\n\t\t//\t|\t\t<div data-dojo-type=\"dijit/layout/ContentPane\" title=\"pane 1\">\r\n\t\t//\t|\t\t</div>\r\n\t\t//\t|\t\t<div data-dojo-type=\"dijit/layout/ContentPane\" title=\"pane 2\">\r\n\t\t//\t|\t\t\t<p>This is some text</p>\r\n\t\t//\t|\t\t</div>\r\n\t\t//\t|\t</div>\r\n\r\n\t\t// duration: Integer\r\n\t\t//\t\tAmount of time (in ms) it takes to slide panes\r\n\t\tduration: manager.defaultDuration,\r\n\r\n\t\t// buttonWidget: [const] String\r\n\t\t//\t\tThe name of the widget used to display the title of each pane\r\n\t\tbuttonWidget: AccordionButton,\r\n\r\n\t\t/*=====\r\n\t\t // _verticalSpace: Number\r\n\t\t //\t\tPixels of space available for the open pane\r\n\t\t //\t\t(my content box size minus the cumulative size of all the title bars)\r\n\t\t _verticalSpace: 0,\r\n\t\t =====*/\r\n\t\tbaseClass: \"dijitAccordionContainer\",\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.domNode.style.overflow = \"hidden\";\t\t// TODO: put this in dijit.css\r\n\t\t\tthis.domNode.setAttribute(\"role\", \"tablist\");\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.selectedChildWidget){\r\n\t\t\t\tthis.selectedChildWidget._wrapperWidget.set(\"selected\", true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// Implement _LayoutWidget.layout() virtual method.\r\n\t\t\t// Set the height of the open pane based on what room remains.\r\n\r\n\t\t\tvar openPane = this.selectedChildWidget;\r\n\r\n\t\t\tif(!openPane){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// space taken up by title, plus wrapper div (with border/margin) for open pane\r\n\t\t\tvar wrapperDomNode = openPane._wrapperWidget.domNode,\r\n\t\t\t\twrapperDomNodeMargin = domGeometry.getMarginExtents(wrapperDomNode),\r\n\t\t\t\twrapperDomNodePadBorder = domGeometry.getPadBorderExtents(wrapperDomNode),\r\n\t\t\t\twrapperContainerNode = openPane._wrapperWidget.containerNode,\r\n\t\t\t\twrapperContainerNodeMargin = domGeometry.getMarginExtents(wrapperContainerNode),\r\n\t\t\t\twrapperContainerNodePadBorder = domGeometry.getPadBorderExtents(wrapperContainerNode),\r\n\t\t\t\tmySize = this._contentBox;\r\n\r\n\t\t\t// get cumulative height of all the unselected title bars\r\n\t\t\tvar totalCollapsedHeight = 0;\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tif(child != openPane){\r\n\t\t\t\t\t// Using domGeometry.getMarginSize() rather than domGeometry.position() since claro has 1px bottom margin\r\n\t\t\t\t\t// to separate accordion panes.  Not sure that works perfectly, it's probably putting a 1px\r\n\t\t\t\t\t// margin below the bottom pane (even though we don't want one).\r\n\t\t\t\t\ttotalCollapsedHeight += domGeometry.getMarginSize(child._wrapperWidget.domNode).h;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._verticalSpace = mySize.h - totalCollapsedHeight - wrapperDomNodeMargin.h\r\n\t\t\t\t- wrapperDomNodePadBorder.h - wrapperContainerNodeMargin.h - wrapperContainerNodePadBorder.h\r\n\t\t\t\t- openPane._buttonWidget.getTitleHeight();\r\n\r\n\t\t\t// Memo size to make displayed child\r\n\t\t\tthis._containerContentBox = {\r\n\t\t\t\th: this._verticalSpace,\r\n\t\t\t\tw: this._contentBox.w - wrapperDomNodeMargin.w - wrapperDomNodePadBorder.w\r\n\t\t\t\t\t- wrapperContainerNodeMargin.w - wrapperContainerNodePadBorder.w\r\n\t\t\t};\r\n\r\n\t\t\tif(openPane){\r\n\t\t\t\topenPane.resize(this._containerContentBox);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setupChild: function(child){\r\n\t\t\t// Overrides _LayoutWidget._setupChild().\r\n\t\t\t// Put wrapper widget around the child widget, showing title\r\n\r\n\t\t\tchild._wrapperWidget = AccordionInnerContainer({\r\n\t\t\t\tcontentWidget: child,\r\n\t\t\t\tbuttonWidget: this.buttonWidget,\r\n\t\t\t\tid: child.id + \"_wrapper\",\r\n\t\t\t\tdir: child.dir,\r\n\t\t\t\tlang: child.lang,\r\n\t\t\t\ttextDir: child.textDir || this.textDir,\r\n\t\t\t\tparent: this\r\n\t\t\t});\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Since we are wrapping children in AccordionInnerContainer, replace the default\r\n\t\t\t// wrapper that we created in StackContainer.\r\n\t\t\tdomConstruct.place(child.domNode, child._wrapper, \"replace\");\r\n\t\t},\r\n\r\n\t\tremoveChild: function(child){\r\n\t\t\t// Overrides _LayoutWidget.removeChild().\r\n\r\n\t\t\t// Destroy wrapper widget first, before StackContainer.getChildren() call.\r\n\t\t\t// Replace wrapper widget with true child widget (ContentPane etc.).\r\n\t\t\t// This step only happens if the AccordionContainer has been started; otherwise there's no wrapper.\r\n\t\t\t// (TODO: since StackContainer destroys child._wrapper, maybe it can do this step too?)\r\n\t\t\tif(child._wrapperWidget){\r\n\t\t\t\tdomConstruct.place(child.domNode, child._wrapperWidget.domNode, \"after\");\r\n\t\t\t\tchild._wrapperWidget.destroy();\r\n\t\t\t\tdelete child._wrapperWidget;\r\n\t\t\t}\r\n\r\n\t\t\tdomClass.remove(child.domNode, \"dijitHidden\");\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tgetChildren: function(){\r\n\t\t\t// Overrides _Container.getChildren() to return content panes rather than internal AccordionInnerContainer panes\r\n\t\t\treturn array.map(this.inherited(arguments), function(child){\r\n\t\t\t\treturn child.declaredClass == \"dijit.layout._AccordionInnerContainer\" ? child.contentWidget : child;\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this._animation){\r\n\t\t\t\tthis._animation.stop();\r\n\t\t\t}\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\t// If AccordionContainer has been started, then each child has a wrapper widget which\r\n\t\t\t\t// also needs to be destroyed.\r\n\t\t\t\tif(child._wrapperWidget){\r\n\t\t\t\t\tchild._wrapperWidget.destroy();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tchild.destroyRecursive();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_showChild: function(child){\r\n\t\t\t// Override StackContainer._showChild() to set visibility of _wrapperWidget.containerNode\r\n\t\t\tchild._wrapperWidget.containerNode.style.display = \"block\";\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_hideChild: function(child){\r\n\t\t\t// Override StackContainer._showChild() to set visibility of _wrapperWidget.containerNode\r\n\t\t\tchild._wrapperWidget.containerNode.style.display = \"none\";\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_transition: function(/*dijit/_WidgetBase?*/ newWidget, /*dijit/_WidgetBase?*/ oldWidget, /*Boolean*/ animate){\r\n\t\t\t// Overrides StackContainer._transition() to provide sliding of title bars etc.\r\n\r\n\t\t\tif(has(\"ie\") < 8){\r\n\t\t\t\t// workaround animation bugs by not animating; not worth supporting animation for IE6 & 7\r\n\t\t\t\tanimate = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._animation){\r\n\t\t\t\t// there's an in-progress animation.  speedily end it so we can do the newly requested one\r\n\t\t\t\tthis._animation.stop(true);\r\n\t\t\t\tdelete this._animation;\r\n\t\t\t}\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tif(newWidget){\r\n\t\t\t\tnewWidget._wrapperWidget.set(\"selected\", true);\r\n\r\n\t\t\t\tvar d = this._showChild(newWidget);\t// prepare widget to be slid in\r\n\r\n\t\t\t\t// Size the new widget, in case this is the first time it's being shown,\r\n\t\t\t\t// or I have been resized since the last time it was shown.\r\n\t\t\t\t// Note that page must be visible for resizing to work.\r\n\t\t\t\tif(this.doLayout && newWidget.resize){\r\n\t\t\t\t\tnewWidget.resize(this._containerContentBox);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(oldWidget){\r\n\t\t\t\toldWidget._wrapperWidget.set(\"selected\", false);\r\n\t\t\t\tif(!animate){\r\n\t\t\t\t\tthis._hideChild(oldWidget);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(animate){\r\n\t\t\t\tvar newContents = newWidget._wrapperWidget.containerNode,\r\n\t\t\t\t\toldContents = oldWidget._wrapperWidget.containerNode;\r\n\r\n\t\t\t\t// During the animation we will be showing two dijitAccordionChildWrapper nodes at once,\r\n\t\t\t\t// which on claro takes up 4px extra space (compared to stable AccordionContainer).\r\n\t\t\t\t// Have to compensate for that by immediately shrinking the pane being closed.\r\n\t\t\t\tvar wrapperContainerNode = newWidget._wrapperWidget.containerNode,\r\n\t\t\t\t\twrapperContainerNodeMargin = domGeometry.getMarginExtents(wrapperContainerNode),\r\n\t\t\t\t\twrapperContainerNodePadBorder = domGeometry.getPadBorderExtents(wrapperContainerNode),\r\n\t\t\t\t\tanimationHeightOverhead = wrapperContainerNodeMargin.h + wrapperContainerNodePadBorder.h;\r\n\r\n\t\t\t\toldContents.style.height = (self._verticalSpace - animationHeightOverhead) + \"px\";\r\n\r\n\t\t\t\tthis._animation = new fx.Animation({\r\n\t\t\t\t\tnode: newContents,\r\n\t\t\t\t\tduration: this.duration,\r\n\t\t\t\t\tcurve: [1, this._verticalSpace - animationHeightOverhead - 1],\r\n\t\t\t\t\tonAnimate: function(value){\r\n\t\t\t\t\t\tvalue = Math.floor(value);\t// avoid fractional values\r\n\t\t\t\t\t\tnewContents.style.height = value + \"px\";\r\n\t\t\t\t\t\toldContents.style.height = (self._verticalSpace - animationHeightOverhead - value) + \"px\";\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonEnd: function(){\r\n\t\t\t\t\t\tdelete self._animation;\r\n\t\t\t\t\t\tnewContents.style.height = \"auto\";\r\n\t\t\t\t\t\toldWidget._wrapperWidget.containerNode.style.display = \"none\";\r\n\t\t\t\t\t\toldContents.style.height = \"auto\";\r\n\t\t\t\t\t\tself._hideChild(oldWidget);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis._animation.onStop = this._animation.onEnd;\r\n\t\t\t\tthis._animation.play();\r\n\t\t\t}\r\n\r\n\t\t\treturn d;\t// If child has an href, promise that fires when the widget has finished loading\r\n\t\t},\r\n\r\n\t\t// note: we are treating the container as controller here\r\n\t\t_onKeyDown: function(/*Event*/ e, /*dijit/_WidgetBase*/ fromTitle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandle keydown events\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis is called from a handler on AccordionContainer.domNode\r\n\t\t\t//\t\t(setup in StackContainer), and is also called directly from\r\n\t\t\t//\t\tthe click handler for accordion labels\r\n\t\t\tif(this.disabled || e.altKey || !(fromTitle || e.ctrlKey)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar c = e.keyCode;\r\n\t\t\tif((fromTitle && (c == keys.LEFT_ARROW || c == keys.UP_ARROW)) ||\r\n\t\t\t\t(e.ctrlKey && c == keys.PAGE_UP)){\r\n\t\t\t\tthis._adjacent(false)._buttonWidget._onTitleClick();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}else if((fromTitle && (c == keys.RIGHT_ARROW || c == keys.DOWN_ARROW)) ||\r\n\t\t\t\t(e.ctrlKey && (c == keys.PAGE_DOWN || c == keys.TAB))){\r\n\t\t\t\tthis._adjacent(true)._buttonWidget._onTitleClick();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Back compat w/1.6, remove for 2.0\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/layout/AccordionPane\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\t// For monkey patching\r\n\tAccordionContainer._InnerContainer = AccordionInnerContainer;\r\n\tAccordionContainer._Button = AccordionButton;\r\n\r\n\treturn AccordionContainer;\r\n});\r\n\ndefine('dijit/layout/LayoutContainer',[\r\n\t\"dojo/_base/array\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/_base/lang\",\r\n\t\"../_WidgetBase\",\r\n\t\"./_LayoutWidget\",\r\n\t\"./utils\" // layoutUtils.layoutChildren\r\n], function(array, declare, domClass, domStyle, lang, _WidgetBase, _LayoutWidget, layoutUtils){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/LayoutContainer\r\n\r\n\tvar LayoutContainer = declare(\"dijit.layout.LayoutContainer\", _LayoutWidget, {\r\n\t\t// summary:\r\n\t\t//\t\tA LayoutContainer is a box with a specified size, such as style=\"width: 500px; height: 500px;\",\r\n\t\t//\t\tthat contains a child widget marked region=\"center\" and optionally children widgets marked\r\n\t\t//\t\tregion equal to \"top\", \"bottom\", \"leading\", \"trailing\", \"left\" or \"right\".\r\n\t\t//\t\tChildren along the edges will be laid out according to width or height dimensions. The remaining\r\n\t\t//\t\tspace is designated for the center region.\r\n\t\t//\r\n\t\t//\t\tThe outer size must be specified on the LayoutContainer node.  Width must be specified for the sides\r\n\t\t//\t\tand height for the top and bottom, respectively.  No dimensions should be specified on the center;\r\n\t\t//\t\tit will fill the remaining space.  Regions named \"leading\" and \"trailing\" may be used just like\r\n\t\t//\t\t\"left\" and \"right\" except that they will be reversed in right-to-left environments.\r\n\t\t//\r\n\t\t//\t\tFor complex layouts, multiple children can be specified for a single region.   In this case, the\r\n\t\t//\t\tlayoutPriority flag on the children determines which child is closer to the edge (low layoutPriority)\r\n\t\t//\t\tand which child is closer to the center (high layoutPriority).   layoutPriority can also be used\r\n\t\t//\t\tinstead of the design attribute to control layout precedence of horizontal vs. vertical panes.\r\n\t\t//\r\n\t\t//\t\tSee `LayoutContainer.ChildWidgetProperties` for details on the properties that can be set on\r\n\t\t//\t\tchildren of a `LayoutContainer`.\r\n\t\t//\r\n\t\t//\t\tIf layoutPriority is not set, lays out each child in the natural order the children occur in.\r\n\t\t//\t\tBasically each child is laid out into the \"remaining space\", where \"remaining space\" is initially\r\n\t\t//\t\tthe content area of this widget, but is reduced to a smaller rectangle each time a child is added.\r\n\r\n\t\t// design: String\r\n\t\t//\t\tWhich design is used for the layout:\r\n\t\t//\r\n\t\t//\t\t- \"headline\" (default) where the top and bottom extend the full width of the container\r\n\t\t//\t\t- \"sidebar\" where the left and right sides extend from top to bottom.\r\n\t\t//\r\n\t\t//\t\tHowever, a `layoutPriority` setting on child panes overrides the `design` attribute on the parent.\r\n\t\t//\t\tIn other words, if the top and bottom sections have a lower `layoutPriority` than the left and right\r\n\t\t//\t\tpanes, the top and bottom panes will extend the entire width of the box.\r\n\t\tdesign: \"headline\",\r\n\r\n\t\tbaseClass: \"dijitLayoutContainer\",\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tarray.forEach(this.getChildren(), this._setupChild, this);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setupChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// Override _LayoutWidget._setupChild().\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar region = child.region;\r\n\t\t\tif(region){\r\n\t\t\t\tdomClass.add(child.domNode, this.baseClass + \"Pane\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getOrderedChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn list of my children in the order that I want layoutChildren()\r\n\t\t\t//\t\tto process them (i.e. from the outside to the inside)\r\n\r\n\t\t\tvar wrappers = array.map(this.getChildren(), function(child, idx){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpane: child,\r\n\t\t\t\t\tweight: [\r\n\t\t\t\t\t\tchild.region == \"center\" ? Infinity : 0,\r\n\t\t\t\t\t\tchild.layoutPriority,\r\n\t\t\t\t\t\t(this.design == \"sidebar\" ? 1 : -1) * (/top|bottom/.test(child.region) ? 1 : -1),\r\n\t\t\t\t\t\tidx\r\n\t\t\t\t\t]\r\n\t\t\t\t};\r\n\t\t\t}, this);\r\n\t\t\twrappers.sort(function(a, b){\r\n\t\t\t\tvar aw = a.weight, bw = b.weight;\r\n\t\t\t\tfor(var i = 0; i < aw.length; i++){\r\n\t\t\t\t\tif(aw[i] != bw[i]){\r\n\t\t\t\t\t\treturn aw[i] - bw[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\treturn array.map(wrappers, function(w){ return w.pane; });\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\tlayoutUtils.layoutChildren(this.domNode, this._contentBox, this._getOrderedChildren());\r\n\t\t},\r\n\r\n\t\taddChild: function(/*dijit/_WidgetBase*/ child, /*Integer?*/ insertIndex){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this._started){\r\n\t\t\t\tthis.layout();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this._started){\r\n\t\t\t\tthis.layout();\r\n\t\t\t}\r\n\r\n\t\t\t// Clean up whatever style changes we made to the child pane.\r\n\t\t\t// Unclear how height and width should be handled.\r\n\t\t\tdomClass.remove(child.domNode, this.baseClass + \"Pane\");\r\n\t\t\tdomStyle.set(child.domNode, {\r\n\t\t\t\ttop: \"auto\",\r\n\t\t\t\tbottom: \"auto\",\r\n\t\t\t\tleft: \"auto\",\r\n\t\t\t\tright: \"auto\",\r\n\t\t\t\tposition: \"static\"\r\n\t\t\t});\r\n\t\t\tdomStyle.set(child.domNode, /top|bottom/.test(child.region) ? \"width\" : \"height\", \"auto\");\r\n\t\t}\r\n\t});\r\n\r\n\tLayoutContainer.ChildWidgetProperties = {\r\n\t\t// summary:\r\n\t\t//\t\tThese properties can be specified for the children of a LayoutContainer.\r\n\r\n\t\t// region: [const] String\r\n\t\t//\t\tValues: \"top\", \"bottom\", \"leading\", \"trailing\", \"left\", \"right\", \"center\".\r\n\t\t//\t\tSee the `dijit/layout/LayoutContainer` description for details.\r\n\t\tregion: '',\r\n\r\n\t\t// layoutAlign: [const deprecated] String\r\n\t\t//\t\tSynonym for region, except using \"client\" instead of \"center\".  Deprecated; use region instead.\r\n\t\tlayoutAlign: '',\r\n\r\n\t\t// layoutPriority: [const] Number\r\n\t\t//\t\tChildren with a higher layoutPriority will be placed closer to the LayoutContainer center,\r\n\t\t//\t\tbetween children with a lower layoutPriority.\r\n\t\tlayoutPriority: 0\r\n\t};\r\n\r\n\t// Since any widget can be specified as a LayoutContainer child, mix it\r\n\t// into the base widget class.  (This is a hack, but it's effective.)\r\n\t// This is for the benefit of the parser.   Remove for 2.0.  Also, hide from doc viewer.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ LayoutContainer.ChildWidgetProperties);\r\n\r\n\treturn LayoutContainer;\r\n});\r\n\ndefine('dijit/layout/BorderContainer',[\r\n\t\"dojo/_base/array\", // array.filter array.forEach array.map\r\n\t\"dojo/cookie\", // cookie\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove domClass.toggle\r\n\t\"dojo/dom-construct\", // domConstruct.destroy domConstruct.place\r\n\t\"dojo/dom-geometry\", // domGeometry.marginBox\r\n\t\"dojo/dom-style\", // domStyle.style\r\n\t\"dojo/keys\",\r\n\t\"dojo/_base/lang\", // getObject() hitch() delegate()\r\n\t\"dojo/on\",\r\n\t\"dojo/touch\",\r\n\t\"../_WidgetBase\",\r\n\t\"../_Widget\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"./LayoutContainer\",\r\n\t\"./utils\"        // layoutUtils.layoutChildren\r\n], function(array, cookie, declare, domClass, domConstruct, domGeometry, domStyle, keys, lang, on, touch,\r\n\t\t\t_WidgetBase, _Widget, _TemplatedMixin, LayoutContainer, layoutUtils){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/BorderContainer\r\n\r\n\tvar _Splitter = declare(\"dijit.layout._Splitter\", [_Widget, _TemplatedMixin ], {\r\n\t\t// summary:\r\n\t\t//\t\tA draggable spacer between two items in a `dijit/layout/BorderContainer`.\r\n\t\t// description:\r\n\t\t//\t\tThis is instantiated by `dijit/layout/BorderContainer`.  Users should not\r\n\t\t//\t\tcreate it directly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t/*=====\r\n\t\t // container: [const] dijit/layout/BorderContainer\r\n\t\t //\t\tPointer to the parent BorderContainer\r\n\t\t container: null,\r\n\r\n\t\t // child: [const] dijit/layout/_LayoutWidget\r\n\t\t //\t\tPointer to the pane associated with this splitter\r\n\t\t child: null,\r\n\r\n\t\t // region: [const] String\r\n\t\t //\t\tRegion of pane associated with this splitter.\r\n\t\t //\t\t\"top\", \"bottom\", \"left\", \"right\".\r\n\t\t region: null,\r\n\t\t =====*/\r\n\r\n\t\t// live: [const] Boolean\r\n\t\t//\t\tIf true, the child's size changes and the child widget is redrawn as you drag the splitter;\r\n\t\t//\t\totherwise, the size doesn't change until you drop the splitter (by mouse-up)\r\n\t\tlive: true,\r\n\r\n\t\ttemplateString: '<div class=\"dijitSplitter\" data-dojo-attach-event=\"onkeydown:_onKeyDown,press:_startDrag,onmouseenter:_onMouse,onmouseleave:_onMouse\" tabIndex=\"0\" role=\"separator\"><div class=\"dijitSplitterThumb\"></div></div>',\r\n\r\n\t\tconstructor: function(){\r\n\t\t\tthis._handlers = [];\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tthis.horizontal = /top|bottom/.test(this.region);\r\n\t\t\tthis._factor = /top|left/.test(this.region) ? 1 : -1;\r\n\t\t\tthis._cookieName = this.container.id + \"_\" + this.region;\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tdomClass.add(this.domNode, \"dijitSplitter\" + (this.horizontal ? \"H\" : \"V\"));\r\n\r\n\t\t\tif(this.container.persist){\r\n\t\t\t\t// restore old size\r\n\t\t\t\tvar persistSize = cookie(this._cookieName);\r\n\t\t\t\tif(persistSize){\r\n\t\t\t\t\tthis.child.domNode.style[this.horizontal ? \"height\" : \"width\"] = persistSize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_computeMaxSize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the maximum size that my corresponding pane can be set to\r\n\r\n\t\t\tvar dim = this.horizontal ? 'h' : 'w',\r\n\t\t\t\tchildSize = domGeometry.getMarginBox(this.child.domNode)[dim],\r\n\t\t\t\tcenter = array.filter(this.container.getChildren(), function(child){\r\n\t\t\t\t\treturn child.region == \"center\";\r\n\t\t\t\t})[0];\r\n\r\n\t\t\t// Can expand until center is crushed.  But always leave room for center's padding + border,\r\n\t\t\t//  otherwise on the next call domGeometry methods start to lie about size.\r\n\t\t\tvar spaceAvailable = domGeometry.getContentBox(center.domNode)[dim] - 10;\r\n\r\n\t\t\treturn Math.min(this.child.maxSize, childSize + spaceAvailable);\r\n\t\t},\r\n\r\n\t\t_startDrag: function(e){\r\n\t\t\tif(!this.cover){\r\n\t\t\t\tthis.cover = domConstruct.place(\"<div class=dijitSplitterCover></div>\", this.child.domNode, \"after\");\r\n\t\t\t}\r\n\t\t\tdomClass.add(this.cover, \"dijitSplitterCoverActive\");\r\n\r\n\t\t\t// Safeguard in case the stop event was missed.  Shouldn't be necessary if we always get the mouse up.\r\n\t\t\tif(this.fake){\r\n\t\t\t\tdomConstruct.destroy(this.fake);\r\n\t\t\t}\r\n\t\t\tif(!(this._resize = this.live)){ //TODO: disable live for IE6?\r\n\t\t\t\t// create fake splitter to display at old position while we drag\r\n\t\t\t\t(this.fake = this.domNode.cloneNode(true)).removeAttribute(\"id\");\r\n\t\t\t\tdomClass.add(this.domNode, \"dijitSplitterShadow\");\r\n\t\t\t\tdomConstruct.place(this.fake, this.domNode, \"after\");\r\n\t\t\t}\r\n\t\t\tdomClass.add(this.domNode, \"dijitSplitterActive dijitSplitter\" + (this.horizontal ? \"H\" : \"V\") + \"Active\");\r\n\t\t\tif(this.fake){\r\n\t\t\t\tdomClass.remove(this.fake, \"dijitSplitterHover dijitSplitter\" + (this.horizontal ? \"H\" : \"V\") + \"Hover\");\r\n\t\t\t}\r\n\r\n\t\t\t//Performance: load data info local vars for onmousevent function closure\r\n\t\t\tvar factor = this._factor,\r\n\t\t\t\tisHorizontal = this.horizontal,\r\n\t\t\t\taxis = isHorizontal ? \"pageY\" : \"pageX\",\r\n\t\t\t\tpageStart = e[axis],\r\n\t\t\t\tsplitterStyle = this.domNode.style,\r\n\t\t\t\tdim = isHorizontal ? 'h' : 'w',\r\n\t\t\t\tchildCS = domStyle.getComputedStyle(this.child.domNode),\r\n\t\t\t\tchildStart = domGeometry.getMarginBox(this.child.domNode, childCS)[dim],\r\n\t\t\t\tmax = this._computeMaxSize(),\r\n\t\t\t\tmin = Math.max(this.child.minSize, domGeometry.getPadBorderExtents(this.child.domNode, childCS)[dim] + 10),\r\n\t\t\t\tregion = this.region,\r\n\t\t\t\tsplitterAttr = region == \"top\" || region == \"bottom\" ? \"top\" : \"left\", // style attribute of splitter to adjust\r\n\t\t\t\tsplitterStart = parseInt(splitterStyle[splitterAttr], 10),\r\n\t\t\t\tresize = this._resize,\r\n\t\t\t\tlayoutFunc = lang.hitch(this.container, \"_layoutChildren\", this.child.id),\r\n\t\t\t\tde = this.ownerDocument;\r\n\r\n\t\t\tthis._handlers = this._handlers.concat([\r\n\t\t\t\ton(de, touch.move, this._drag = function(e, forceResize){\r\n\t\t\t\t\tvar delta = e[axis] - pageStart,\r\n\t\t\t\t\t\tchildSize = factor * delta + childStart,\r\n\t\t\t\t\t\tboundChildSize = Math.max(Math.min(childSize, max), min);\r\n\r\n\t\t\t\t\tif(resize || forceResize){\r\n\t\t\t\t\t\tlayoutFunc(boundChildSize);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// TODO: setting style directly (usually) sets content box size, need to set margin box size\r\n\t\t\t\t\tsplitterStyle[splitterAttr] = delta + splitterStart + factor * (boundChildSize - childSize) + \"px\";\r\n\t\t\t\t}),\r\n\t\t\t\ton(de, \"dragstart\", function(e){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}),\r\n\t\t\t\ton(this.ownerDocumentBody, \"selectstart\", function(e){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}),\r\n\t\t\t\ton(de, touch.release, lang.hitch(this, \"_stopDrag\"))\r\n\t\t\t]);\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\r\n\t\t_onMouse: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandler for onmouseenter / onmouseleave events\r\n\t\t\tvar o = (e.type == \"mouseover\" || e.type == \"mouseenter\");\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitSplitterHover\", o);\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitSplitter\" + (this.horizontal ? \"H\" : \"V\") + \"Hover\", o);\r\n\t\t},\r\n\r\n\t\t_stopDrag: function(e){\r\n\t\t\ttry{\r\n\t\t\t\tif(this.cover){\r\n\t\t\t\t\tdomClass.remove(this.cover, \"dijitSplitterCoverActive\");\r\n\t\t\t\t}\r\n\t\t\t\tif(this.fake){\r\n\t\t\t\t\tdomConstruct.destroy(this.fake);\r\n\t\t\t\t}\r\n\t\t\t\tdomClass.remove(this.domNode, \"dijitSplitterActive dijitSplitter\"\r\n\t\t\t\t\t+ (this.horizontal ? \"H\" : \"V\") + \"Active dijitSplitterShadow\");\r\n\t\t\t\tthis._drag(e); //TODO: redundant with onmousemove?\r\n\t\t\t\tthis._drag(e, true);\r\n\t\t\t}finally{\r\n\t\t\t\tthis._cleanupHandlers();\r\n\t\t\t\tdelete this._drag;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.container.persist){\r\n\t\t\t\tcookie(this._cookieName, this.child.domNode.style[this.horizontal ? \"height\" : \"width\"], {expires: 365});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_cleanupHandlers: function(){\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this._handlers.pop()){\r\n\t\t\t\th.remove();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onKeyDown: function(/*Event*/ e){\r\n\t\t\t// should we apply typematic to this?\r\n\t\t\tthis._resize = true;\r\n\t\t\tvar horizontal = this.horizontal;\r\n\t\t\tvar tick = 1;\r\n\t\t\tswitch(e.keyCode){\r\n\t\t\t\tcase horizontal ? keys.UP_ARROW : keys.LEFT_ARROW:\r\n\t\t\t\t\ttick *= -1;\r\n//\t\t\t\tbreak;\r\n\t\t\t\tcase horizontal ? keys.DOWN_ARROW : keys.RIGHT_ARROW:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n//\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar childSize = domGeometry.getMarginSize(this.child.domNode)[ horizontal ? 'h' : 'w' ] + this._factor * tick;\r\n\t\t\tthis.container._layoutChildren(this.child.id, Math.max(Math.min(childSize, this._computeMaxSize()), this.child.minSize));\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis._cleanupHandlers();\r\n\t\t\tdelete this.child;\r\n\t\t\tdelete this.container;\r\n\t\t\tdelete this.cover;\r\n\t\t\tdelete this.fake;\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tvar _Gutter = declare(\"dijit.layout._Gutter\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tJust a spacer div to separate side pane from center pane.\r\n\t\t//\t\tBasically a trick to lookup the gutter/splitter width from the theme.\r\n\t\t// description:\r\n\t\t//\t\tInstantiated by `dijit/layout/BorderContainer`.  Users should not\r\n\t\t//\t\tcreate directly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\ttemplateString: '<div class=\"dijitGutter\" role=\"presentation\"></div>',\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.horizontal = /top|bottom/.test(this.region);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.add(this.domNode, \"dijitGutter\" + (this.horizontal ? \"H\" : \"V\"));\r\n\t\t}\r\n\t});\r\n\r\n\tvar BorderContainer = declare(\"dijit.layout.BorderContainer\", LayoutContainer, {\r\n\t\t// summary:\r\n\t\t//\t\tA BorderContainer is a `dijit/LayoutContainer` that can have draggable splitters between the children,\r\n\t\t//\t\tin order to adjust their sizes.\r\n\t\t//\r\n\t\t//\t\tIn addition, it automatically adds some space between the children even\r\n\t\t//\t\tif they don't have a draggable splitter between them, and space between the edge of the BorderContainer\r\n\t\t//\t\tand the children that are adjacent to the edge.  Note that the intended style is that all the children\r\n\t\t//\t\thave borders, but (despite the name) the BorderContainer itself does not.\r\n\t\t//\r\n\t\t//\t\tSee `BorderContainer.ChildWidgetProperties` for details on the properties that can be set on\r\n\t\t//\t\tchildren of a `BorderContainer`.\r\n\r\n\t\t// gutters: [const] Boolean\r\n\t\t//\t\tGive each pane a border and margin.\r\n\t\t//\t\tMargin determined by domNode.paddingLeft.\r\n\t\t//\t\tWhen false, only resizable panes have a gutter (i.e. draggable splitter) for resizing.\r\n\t\tgutters: true,\r\n\r\n\t\t// liveSplitters: [const] Boolean\r\n\t\t//\t\tSpecifies whether splitters resize as you drag (true) or only upon mouseup (false)\r\n\t\tliveSplitters: true,\r\n\r\n\t\t// persist: Boolean\r\n\t\t//\t\tSave splitter positions in a cookie.\r\n\t\tpersist: false,\r\n\r\n\t\tbaseClass: \"dijitBorderContainer\",\r\n\r\n\t\t// _splitterClass: Function||String\r\n\t\t//\t\tOptional hook to override the default Splitter widget used by BorderContainer\r\n\t\t_splitterClass: _Splitter,\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// change class name to indicate that BorderContainer is being used purely for\r\n\t\t\t// layout (like LayoutContainer) rather than for pretty formatting.\r\n\t\t\tif(!this.gutters){\r\n\t\t\t\tthis.baseClass += \"NoGutter\";\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_setupChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// Override LayoutContainer._setupChild().\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar region = child.region, ltr = child.isLeftToRight();\r\n\t\t\tif(region == \"leading\"){\r\n\t\t\t\tregion = ltr ? \"left\" : \"right\";\r\n\t\t\t}\r\n\t\t\tif(region == \"trailing\"){\r\n\t\t\t\tregion = ltr ? \"right\" : \"left\";\r\n\t\t\t}\r\n\r\n\t\t\tif(region){\r\n\t\t\t\t// Create draggable splitter for resizing pane,\r\n\t\t\t\t// or alternately if splitter=false but BorderContainer.gutters=true then\r\n\t\t\t\t// insert dummy div just for spacing\r\n\t\t\t\tif(region != \"center\" && (child.splitter || this.gutters) && !child._splitterWidget){\r\n\t\t\t\t\tvar _Splitter = child.splitter ? this._splitterClass : _Gutter;\r\n\t\t\t\t\tif(lang.isString(_Splitter)){\r\n\t\t\t\t\t\t_Splitter = lang.getObject(_Splitter);\t// for back-compat, remove in 2.0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar splitter = new _Splitter({\r\n\t\t\t\t\t\tid: child.id + \"_splitter\",\r\n\t\t\t\t\t\tcontainer: this,\r\n\t\t\t\t\t\tchild: child,\r\n\t\t\t\t\t\tregion: region,\r\n\t\t\t\t\t\tlive: this.liveSplitters\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsplitter.isSplitter = true;\r\n\t\t\t\t\tchild._splitterWidget = splitter;\r\n\r\n\t\t\t\t\t// Make the tab order match the visual layout by placing the splitter before or after the pane,\r\n\t\t\t\t\t// depending on where the splitter is visually compared to the pane.\r\n\t\t\t\t\tvar before = region == \"bottom\" || region == (this.isLeftToRight() ? \"right\" : \"left\");\r\n\t\t\t\t\tdomConstruct.place(splitter.domNode, child.domNode, before ? \"before\" : \"after\");\r\n\r\n\t\t\t\t\t// Splitters aren't added as Contained children, so we need to call startup explicitly\r\n\t\t\t\t\tsplitter.startup();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// Implement _LayoutWidget.layout() virtual method.\r\n\t\t\tthis._layoutChildren();\r\n\t\t},\r\n\r\n\t\tremoveChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\t\t// Override _LayoutWidget.removeChild().\r\n\r\n\t\t\tvar splitter = child._splitterWidget;\r\n\t\t\tif(splitter){\r\n\t\t\t\tsplitter.destroy();\r\n\t\t\t\tdelete child._splitterWidget;\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tgetChildren: function(){\r\n\t\t\t// Override _LayoutWidget.getChildren() to only return real children, not the splitters.\r\n\t\t\treturn array.filter(this.inherited(arguments), function(widget){\r\n\t\t\t\treturn !widget.isSplitter;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// TODO: remove in 2.0\r\n\t\tgetSplitter: function(/*String*/region){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the widget responsible for rendering the splitter associated with region\r\n\t\t\t// tags:\r\n\t\t\t//\t\tdeprecated\r\n\t\t\treturn array.filter(this.getChildren(), function(child){\r\n\t\t\t\treturn child.region == region;\r\n\t\t\t})[0]._splitterWidget;\r\n\t\t},\r\n\r\n\t\tresize: function(newSize, currentSize){\r\n\t\t\t// Overrides _LayoutWidget.resize().\r\n\r\n\t\t\t// resetting potential padding to 0px to provide support for 100% width/height + padding\r\n\t\t\t// TODO: this hack doesn't respect the box model and is a temporary fix\r\n\t\t\tif(!this.cs || !this.pe){\r\n\t\t\t\tvar node = this.domNode;\r\n\t\t\t\tthis.cs = domStyle.getComputedStyle(node);\r\n\t\t\t\tthis.pe = domGeometry.getPadExtents(node, this.cs);\r\n\t\t\t\tthis.pe.r = domStyle.toPixelValue(node, this.cs.paddingRight);\r\n\t\t\t\tthis.pe.b = domStyle.toPixelValue(node, this.cs.paddingBottom);\r\n\r\n\t\t\t\tdomStyle.set(node, \"padding\", \"0px\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_layoutChildren: function(/*String?*/ changedChildId, /*Number?*/ changedChildSize){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is the main routine for setting size/position of each child.\r\n\t\t\t// description:\r\n\t\t\t//\t\tWith no arguments, measures the height of top/bottom panes, the width\r\n\t\t\t//\t\tof left/right panes, and then sizes all panes accordingly.\r\n\t\t\t//\r\n\t\t\t//\t\tWith changedRegion specified (as \"left\", \"top\", \"bottom\", or \"right\"),\r\n\t\t\t//\t\tit changes that region's width/height to changedRegionSize and\r\n\t\t\t//\t\tthen resizes other regions that were affected.\r\n\t\t\t// changedChildId:\r\n\t\t\t//\t\tId of the child which should be resized because splitter was dragged.\r\n\t\t\t// changedChildSize:\r\n\t\t\t//\t\tThe new width/height (in pixels) to make specified child\r\n\r\n\t\t\tif(!this._borderBox || !this._borderBox.h){\r\n\t\t\t\t// We are currently hidden, or we haven't been sized by our parent yet.\r\n\t\t\t\t// Abort.   Someone will resize us later.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Combining the externally specified children with splitters and gutters\r\n\t\t\tvar childrenAndSplitters = [];\r\n\t\t\tarray.forEach(this._getOrderedChildren(), function(pane){\r\n\t\t\t\tchildrenAndSplitters.push(pane);\r\n\t\t\t\tif(pane._splitterWidget){\r\n\t\t\t\t\tchildrenAndSplitters.push(pane._splitterWidget);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Compute the box in which to lay out my children\r\n\t\t\tvar dim = {\r\n\t\t\t\tl: this.pe.l,\r\n\t\t\t\tt: this.pe.t,\r\n\t\t\t\tw: this._borderBox.w - this.pe.w,\r\n\t\t\t\th: this._borderBox.h - this.pe.h\r\n\t\t\t};\r\n\r\n\t\t\t// Layout the children, possibly changing size due to a splitter drag\r\n\t\t\tlayoutUtils.layoutChildren(this.domNode, dim, childrenAndSplitters,\r\n\t\t\t\tchangedChildId, changedChildSize);\r\n\t\t},\r\n\r\n\t\tdestroyRecursive: function(){\r\n\t\t\t// Destroy splitters first, while getChildren() still works\r\n\t\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\t\tvar splitter = child._splitterWidget;\r\n\t\t\t\tif(splitter){\r\n\t\t\t\t\tsplitter.destroy();\r\n\t\t\t\t}\r\n\t\t\t\tdelete child._splitterWidget;\r\n\t\t\t});\r\n\r\n\t\t\t// Then destroy the real children, and myself\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tBorderContainer.ChildWidgetProperties = {\r\n\t\t// summary:\r\n\t\t//\t\tThese properties can be specified for the children of a BorderContainer.\r\n\r\n\t\t// splitter: [const] Boolean\r\n\t\t//\t\tParameter for children where region != \"center\".\r\n\t\t//\t\tIf true, enables user to resize the widget by putting a draggable splitter between\r\n\t\t//\t\tthis widget and the region=center widget.\r\n\t\tsplitter: false,\r\n\r\n\t\t// minSize: [const] Number\r\n\t\t//\t\tSpecifies a minimum size (in pixels) for this widget when resized by a splitter.\r\n\t\tminSize: 0,\r\n\r\n\t\t// maxSize: [const] Number\r\n\t\t//\t\tSpecifies a maximum size (in pixels) for this widget when resized by a splitter.\r\n\t\tmaxSize: Infinity\r\n\t};\r\n\tlang.mixin(BorderContainer.ChildWidgetProperties, LayoutContainer.ChildWidgetProperties);\r\n\r\n\t// Since any widget can be specified as a BorderContainer child, mix it\r\n\t// into the base widget class.  (This is a hack, but it's effective.)\r\n\t// This is for the benefit of the parser.   Remove for 2.0.  Also, hide from doc viewer.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ BorderContainer.ChildWidgetProperties);\r\n\r\n\t// For monkey patching\r\n\tBorderContainer._Splitter = _Splitter;\r\n\tBorderContainer._Gutter = _Gutter;\r\n\r\n\treturn BorderContainer;\r\n});\r\n\ndefine('dijit/layout/LinkPane',[\r\n\t\"./ContentPane\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"dojo/_base/declare\" // declare\r\n], function(ContentPane, _TemplatedMixin, declare){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/LinkPane\r\n\r\n\r\n\treturn declare(\"dijit.layout.LinkPane\", [ContentPane, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tA ContentPane with an href where (when declared in markup)\r\n\t\t//\t\tthe title is specified as innerHTML rather than as a title attribute.\r\n\t\t// description:\r\n\t\t//\t\tLinkPane is just a ContentPane that is declared in markup similarly\r\n\t\t//\t\tto an anchor.  The anchor's body (the words between `<a>` and `</a>`)\r\n\t\t//\t\tbecome the title of the widget (used for TabContainer, AccordionContainer, etc.)\r\n\t\t// example:\r\n\t\t//\t| <a href=\"foo.html\">my title</a>\r\n\r\n\t\t// I'm using a template because the user may specify the input as\r\n\t\t// <a href=\"foo.html\">title</a>, in which case we need to get rid of the\r\n\t\t// <a> because we don't want a link.\r\n\t\ttemplateString: '<div class=\"dijitLinkPane\" data-dojo-attach-point=\"containerNode\"></div>',\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// If user has specified node contents, they become the title\r\n\t\t\t// (the link must be plain text)\r\n\t\t\tif(this.srcNodeRef){\r\n\t\t\t\tthis.title += this.srcNodeRef.innerHTML;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_fillContent: function(){\r\n\t\t\t// Overrides _Templated._fillContent().\r\n\r\n\t\t\t// _Templated._fillContent() relocates srcNodeRef innerHTML to templated container node,\r\n\t\t\t// but in our case the srcNodeRef innerHTML is the title, so shouldn't be\r\n\t\t\t// copied\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/layout/SplitContainer',[\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.some\r\n\t\"dojo/cookie\", // cookie\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-class\", // domClass.add\r\n\t\"dojo/dom-construct\", // domConstruct.create domConstruct.destroy\r\n\t\"dojo/dom-geometry\", // domGeometry.marginBox domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.style\r\n\t\"dojo/_base/event\", // event.stop\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"dojo/_base/lang\", // lang.extend lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/sniff\", // has(\"mozilla\")\r\n\t\"../registry\",\t// registry.getUniqueId()\r\n\t\"../_WidgetBase\",\r\n\t\"./_LayoutWidget\"\r\n], function(array, cookie, declare, dom, domClass, domConstruct, domGeometry, domStyle,\r\n\t\t\tevent, kernel, lang, on, has, registry, _WidgetBase, _LayoutWidget){\r\n\r\n// module:\r\n//\t\tdijit/layout/SplitContainer\r\n\r\n//\r\n// FIXME: make it prettier\r\n// FIXME: active dragging upwards doesn't always shift other bars (direction calculation is wrong in this case)\r\n// FIXME: sizeWidth should be a CSS attribute (at 7 because css wants it to be 7 until we fix to css)\r\n//\r\n\r\nvar SplitContainer = declare(\"dijit.layout.SplitContainer\", _LayoutWidget, {\r\n\t// summary:\r\n\t//\t\tDeprecated.  Use `dijit/layout/BorderContainer` instead.\r\n\t// description:\r\n\t//\t\tA Container widget with sizing handles in-between each child.\r\n\t//\t\tContains multiple children widgets, all of which are displayed side by side\r\n\t//\t\t(either horizontally or vertically); there's a bar between each of the children,\r\n\t//\t\tand you can adjust the relative size of each child by dragging the bars.\r\n\t//\r\n\t//\t\tYou must specify a size (width and height) for the SplitContainer.\r\n\t//\r\n\t//\t\tSee `SplitContainer.ChildWidgetProperties` for details on the properties that can be set on\r\n\t//\t\tchildren of a `SplitContainer`.\r\n\t// tags:\r\n\t//\t\tdeprecated\r\n\r\n\tconstructor: function(){\r\n\t\tkernel.deprecated(\"dijit.layout.SplitContainer is deprecated\", \"use BorderContainer with splitter instead\", 2.0);\r\n\t},\r\n\r\n\t// activeSizing: Boolean\r\n\t//\t\tIf true, the children's size changes as you drag the bar;\r\n\t//\t\totherwise, the sizes don't change until you drop the bar (by mouse-up)\r\n\tactiveSizing: false,\r\n\r\n\t// sizerWidth: Integer\r\n\t//\t\tSize in pixels of the bar between each child\r\n\tsizerWidth: 7,\r\n\r\n\t// orientation: String\r\n\t//\t\teither 'horizontal' or vertical; indicates whether the children are\r\n\t//\t\tarranged side-by-side or up/down.\r\n\torientation: 'horizontal',\r\n\r\n\t// persist: Boolean\r\n\t//\t\tSave splitter positions in a cookie\r\n\tpersist: true,\r\n\r\n\tbaseClass: \"dijitSplitContainer\",\r\n\r\n\tpostMixInProperties: function(){\r\n\t\tthis.inherited(\"postMixInProperties\",arguments);\r\n\t\tthis.isHorizontal = (this.orientation == 'horizontal');\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tthis.inherited(arguments);\r\n\t\tthis.sizers = [];\r\n\r\n\t\t// overflow has to be explicitly hidden for splitContainers using gekko (trac #1435)\r\n\t\t// to keep other combined css classes from inadvertantly making the overflow visible\r\n\t\tif(has(\"mozilla\")){\r\n\t\t\tthis.domNode.style.overflow = '-moz-scrollbars-none'; // hidden doesn't work\r\n\t\t}\r\n\r\n\t\t// create the fake dragger\r\n\t\tif(typeof this.sizerWidth == \"object\"){\r\n\t\t\ttry{ //FIXME: do this without a try/catch\r\n\t\t\t\tthis.sizerWidth = parseInt(this.sizerWidth.toString());\r\n\t\t\t}catch(e){ this.sizerWidth = 7; }\r\n\t\t}\r\n\t\tvar sizer = this.ownerDocument.createElement('div');\r\n\t\tthis.virtualSizer = sizer;\r\n\t\tsizer.style.position = 'relative';\r\n\r\n\t\t// #1681: work around the dreaded 'quirky percentages in IE' layout bug\r\n\t\t// If the splitcontainer's dimensions are specified in percentages, it\r\n\t\t// will be resized when the virtualsizer is displayed in _showSizingLine\r\n\t\t// (typically expanding its bounds unnecessarily). This happens because\r\n\t\t// we use position: relative for .dijitSplitContainer.\r\n\t\t// The workaround: instead of changing the display style attribute,\r\n\t\t// switch to changing the zIndex (bring to front/move to back)\r\n\r\n\t\tsizer.style.zIndex = 10;\r\n\t\tsizer.className = this.isHorizontal ? 'dijitSplitContainerVirtualSizerH' : 'dijitSplitContainerVirtualSizerV';\r\n\t\tthis.domNode.appendChild(sizer);\r\n\t\tdom.setSelectable(sizer, false);\r\n\t},\r\n\r\n\tdestroy: function(){\r\n\t\tdelete this.virtualSizer;\r\n\t\tif(this._ownconnects){\r\n\t\t\tvar h;\r\n\t\t\twhile(h = this._ownconnects.pop()){ h.remove(); }\r\n\t\t}\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\tstartup: function(){\r\n\t\tif(this._started){ return; }\r\n\r\n\t\tarray.forEach(this.getChildren(), function(child, i, children){\r\n\t\t\t// attach the children and create the draggers\r\n\t\t\tthis._setupChild(child);\r\n\r\n\t\t\tif(i < children.length-1){\r\n\t\t\t\tthis._addSizer();\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\tif(this.persist){\r\n\t\t\tthis._restoreState();\r\n\t\t}\r\n\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t_setupChild: function(/*dijit/_WidgetBase*/ child){\r\n\t\tthis.inherited(arguments);\r\n\t\tchild.domNode.style.position = \"absolute\";\r\n\t\tdomClass.add(child.domNode, \"dijitSplitPane\");\r\n\t},\r\n\r\n\t_onSizerMouseDown: function(e){\r\n\t\tif(e.target.id){\r\n\t\t\tfor(var i=0;i<this.sizers.length;i++){\r\n\t\t\t\tif(this.sizers[i].id == e.target.id){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(i<this.sizers.length){\r\n\t\t\t\tthis.beginSizing(e,i);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t_addSizer: function(index){\r\n\t\tindex = index === undefined ? this.sizers.length : index;\r\n\r\n\t\t// TODO: use a template for this!!!\r\n\t\tvar sizer = this.ownerDocument.createElement('div');\r\n\t\tsizer.id=registry.getUniqueId('dijit_layout_SplitterContainer_Splitter');\r\n\t\tthis.sizers.splice(index,0,sizer);\r\n\t\tthis.domNode.appendChild(sizer);\r\n\r\n\t\tsizer.className = this.isHorizontal ? 'dijitSplitContainerSizerH' : 'dijitSplitContainerSizerV';\r\n\r\n\t\t// add the thumb div\r\n\t\tvar thumb = this.ownerDocument.createElement('div');\r\n\t\tthumb.className = 'thumb';\r\n\t\tsizer.appendChild(thumb);\r\n\r\n\t\t// FIXME: are you serious? why aren't we using mover start/stop combo?\r\n\t\tthis.connect(sizer, \"onmousedown\", '_onSizerMouseDown');\r\n\r\n\t\tdom.setSelectable(sizer, false);\r\n\t},\r\n\r\n\tremoveChild: function(widget){\r\n\t\t// summary:\r\n\t\t//\t\tRemove sizer, but only if widget is really our child and\r\n\t\t//\t\twe have at least one sizer to throw away\r\n\t\tif(this.sizers.length){\r\n\t\t\tvar i = array.indexOf(this.getChildren(), widget);\r\n\t\t\tif(i != -1){\r\n\t\t\t\tif(i == this.sizers.length){\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t\tdomConstruct.destroy(this.sizers[i]);\r\n\t\t\t\tthis.sizers.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove widget and repaint\r\n\t\tthis.inherited(arguments);\r\n\t\tif(this._started){\r\n\t\t\tthis.layout();\r\n\t\t}\r\n\t},\r\n\r\n\taddChild: function(/*dijit/_WidgetBase*/ child, /*Integer?*/ insertIndex){\r\n\t\t// summary:\r\n\t\t//\t\tAdd a child widget to the container\r\n\t\t// child:\r\n\t\t//\t\ta widget to add\r\n\t\t// insertIndex:\r\n\t\t//\t\tposition in the \"stack\" to add the child widget\r\n\r\n\t\t// SplitContainer puts all the child widgets first, and all the splitters at the end.\r\n\t\t// (This is not ideal for accessibility but not going to fix because the widget is deprecated.)\r\n\t\t// So, just need to maintain that order so that _Container.addChild() puts the widgets where expected.\r\n\t\tif(typeof insertIndex == \"undefined\" || insertIndex == \"last\"){\r\n\t\t\tinsertIndex = this.getChildren().length;\r\n\t\t}\r\n\r\n\t\tthis.inherited(arguments, [child, insertIndex]);\r\n\r\n\t\tif(this._started){\r\n\t\t\t// Do the stuff that startup() does for each widget\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tif(children.length > 1){\r\n\t\t\t\tthis._addSizer(insertIndex);\r\n\t\t\t}\r\n\r\n\t\t\t// and then reposition (ie, shrink) every pane to make room for the new guy\r\n\t\t\tthis.layout();\r\n\t\t}\r\n\t},\r\n\r\n\tlayout: function(){\r\n\t\t// summary:\r\n\t\t//\t\tDo layout of panels\r\n\r\n\t\t// base class defines this._contentBox on initial creation and also\r\n\t\t// on resize\r\n\t\tthis.paneWidth = this._contentBox.w;\r\n\t\tthis.paneHeight = this._contentBox.h;\r\n\r\n\t\tvar children = this.getChildren();\r\n\t\tif(!children.length){ return; }\r\n\r\n\t\t//\r\n\t\t// calculate space\r\n\t\t//\r\n\r\n\t\tvar space = this.isHorizontal ? this.paneWidth : this.paneHeight;\r\n\t\tif(children.length > 1){\r\n\t\t\tspace -= this.sizerWidth * (children.length - 1);\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// calculate total of SizeShare values\r\n\t\t//\r\n\t\tvar outOf = 0;\r\n\t\tarray.forEach(children, function(child){\r\n\t\t\toutOf += child.sizeShare;\r\n\t\t});\r\n\r\n\t\t//\r\n\t\t// work out actual pixels per sizeshare unit\r\n\t\t//\r\n\t\tvar pixPerUnit = space / outOf;\r\n\r\n\t\t//\r\n\t\t// set the SizeActual member of each pane\r\n\t\t//\r\n\t\tvar totalSize = 0;\r\n\t\tarray.forEach(children.slice(0, children.length - 1), function(child){\r\n\t\t\tvar size = Math.round(pixPerUnit * child.sizeShare);\r\n\t\t\tchild.sizeActual = size;\r\n\t\t\ttotalSize += size;\r\n\t\t});\r\n\r\n\t\tchildren[children.length-1].sizeActual = space - totalSize;\r\n\r\n\t\t//\r\n\t\t// make sure the sizes are ok\r\n\t\t//\r\n\t\tthis._checkSizes();\r\n\r\n\t\t//\r\n\t\t// now loop, positioning each pane and letting children resize themselves\r\n\t\t//\r\n\r\n\t\tvar pos = 0;\r\n\t\tvar size = children[0].sizeActual;\r\n\t\tthis._movePanel(children[0], pos, size);\r\n\t\tchildren[0].position = pos;\r\n\t\tpos += size;\r\n\r\n\t\t// if we don't have any sizers, our layout method hasn't been called yet\r\n\t\t// so bail until we are called..TODO: REVISIT: need to change the startup\r\n\t\t// algorithm to guaranteed the ordering of calls to layout method\r\n\t\tif(!this.sizers){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarray.some(children.slice(1), function(child, i){\r\n\t\t\t// error-checking\r\n\t\t\tif(!this.sizers[i]){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t// first we position the sizing handle before this pane\r\n\t\t\tthis._moveSlider(this.sizers[i], pos, this.sizerWidth);\r\n\t\t\tthis.sizers[i].position = pos;\r\n\t\t\tpos += this.sizerWidth;\r\n\r\n\t\t\tsize = child.sizeActual;\r\n\t\t\tthis._movePanel(child, pos, size);\r\n\t\t\tchild.position = pos;\r\n\t\t\tpos += size;\r\n\t\t}, this);\r\n\t},\r\n\r\n\t_movePanel: function(panel, pos, size){\r\n\t\tvar box;\r\n\t\tif(this.isHorizontal){\r\n\t\t\tpanel.domNode.style.left = pos + 'px';\t// TODO: resize() takes l and t parameters too, don't need to set manually\r\n\t\t\tpanel.domNode.style.top = 0;\r\n\t\t\tbox = {w: size, h: this.paneHeight};\r\n\t\t\tif(panel.resize){\r\n\t\t\t\tpanel.resize(box);\r\n\t\t\t}else{\r\n\t\t\t\tdomGeometry.setMarginBox(panel.domNode, box);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tpanel.domNode.style.left = 0;\t// TODO: resize() takes l and t parameters too, don't need to set manually\r\n\t\t\tpanel.domNode.style.top = pos + 'px';\r\n\t\t\tbox = {w: this.paneWidth, h: size};\r\n\t\t\tif(panel.resize){\r\n\t\t\t\tpanel.resize(box);\r\n\t\t\t}else{\r\n\t\t\t\tdomGeometry.setMarginBox(panel.domNode, box);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_moveSlider: function(slider, pos, size){\r\n\t\tif(this.isHorizontal){\r\n\t\t\tslider.style.left = pos + 'px';\r\n\t\t\tslider.style.top = 0;\r\n\t\t\tdomGeometry.setMarginBox(slider, { w: size, h: this.paneHeight });\r\n\t\t}else{\r\n\t\t\tslider.style.left = 0;\r\n\t\t\tslider.style.top = pos + 'px';\r\n\t\t\tdomGeometry.setMarginBox(slider, { w: this.paneWidth, h: size });\r\n\t\t}\r\n\t},\r\n\r\n\t_growPane: function(growth, pane){\r\n\t\tif(growth > 0){\r\n\t\t\tif(pane.sizeActual > pane.sizeMin){\r\n\t\t\t\tif((pane.sizeActual - pane.sizeMin) > growth){\r\n\r\n\t\t\t\t\t// stick all the growth in this pane\r\n\t\t\t\t\tpane.sizeActual = pane.sizeActual - growth;\r\n\t\t\t\t\tgrowth = 0;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// put as much growth in here as we can\r\n\t\t\t\t\tgrowth -= pane.sizeActual - pane.sizeMin;\r\n\t\t\t\t\tpane.sizeActual = pane.sizeMin;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn growth;\r\n\t},\r\n\r\n\t_checkSizes: function(){\r\n\r\n\t\tvar totalMinSize = 0;\r\n\t\tvar totalSize = 0;\r\n\t\tvar children = this.getChildren();\r\n\r\n\t\tarray.forEach(children, function(child){\r\n\t\t\ttotalSize += child.sizeActual;\r\n\t\t\ttotalMinSize += child.sizeMin;\r\n\t\t});\r\n\r\n\t\t// only make adjustments if we have enough space for all the minimums\r\n\r\n\t\tif(totalMinSize <= totalSize){\r\n\r\n\t\t\tvar growth = 0;\r\n\r\n\t\t\tarray.forEach(children, function(child){\r\n\t\t\t\tif(child.sizeActual < child.sizeMin){\r\n\t\t\t\t\tgrowth += child.sizeMin - child.sizeActual;\r\n\t\t\t\t\tchild.sizeActual = child.sizeMin;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(growth > 0){\r\n\t\t\t\tvar list = this.isDraggingLeft ? children.reverse() : children;\r\n\t\t\t\tarray.forEach(list, function(child){\r\n\t\t\t\t\tgrowth = this._growPane(growth, child);\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tarray.forEach(children, function(child){\r\n\t\t\t\tchild.sizeActual = Math.round(totalSize * (child.sizeMin / totalMinSize));\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tbeginSizing: function(e, i){\r\n\t\t// summary:\r\n\t\t//\t\tBegin dragging the splitter between child[i] and child[i+1]\r\n\r\n\t\tvar children = this.getChildren();\r\n\r\n\t\tthis.paneBefore = children[i];\r\n\t\tthis.paneAfter = children[i+1];\r\n\r\n\t\tthis.paneBefore.sizeBeforeDrag = this.paneBefore.sizeActual;\r\n\t\tthis.paneAfter.sizeBeforeDrag = this.paneAfter.sizeActual;\r\n\t\tthis.paneAfter.positionBeforeDrag = this.paneAfter.position;\r\n\r\n\t\tthis.isSizing = true;\r\n\t\tthis.sizingSplitter = this.sizers[i];\r\n\t\tthis.sizingSplitter.positionBeforeDrag = domStyle.get(this.sizingSplitter,(this.isHorizontal ? \"left\" : \"top\"));\r\n\r\n\t\tif(!this.cover){\r\n\t\t\tthis.cover = domConstruct.create('div', {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tposition:'absolute',\r\n\t\t\t\t\tzIndex:5,\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\theight: \"100%\"\r\n\t\t\t\t}\r\n\t\t\t}, this.domNode);\r\n\t\t}else{\r\n\t\t\tthis.cover.style.zIndex = 5;\r\n\t\t}\r\n\t\tthis.sizingSplitter.style.zIndex = 6;\r\n\r\n\t\t// startPoint is the e.pageX or e.pageY at start of drag\r\n\t\tthis.startPoint = this.lastPoint = (this.isHorizontal ? e.pageX : e.pageY);\r\n\r\n\t\t// Calculate maximum to the left or right that splitter is allowed to be dragged\r\n\t\t// minDelta is negative to indicate left/upward drag where end.pageX < start.pageX.\r\n\t\tthis.maxDelta = this.paneAfter.sizeActual - this.paneAfter.sizeMin;\r\n\t\tthis.minDelta = -1 * (this.paneBefore.sizeActual - this.paneBefore.sizeMin);\r\n\r\n\t\tif(!this.activeSizing){\r\n\t\t\tthis._showSizingLine();\r\n\t\t}\r\n\r\n\t\t// attach mouse events\r\n\t\tthis._ownconnects = [\r\n\t\t\ton(this.ownerDocument.documentElement, \"mousemove\", lang.hitch(this, \"changeSizing\")),\r\n\t\t\ton(this.ownerDocument.documentElement, \"mouseup\", lang.hitch(this, \"endSizing\"))\r\n\t\t];\r\n\r\n\t\tevent.stop(e);\r\n\t},\r\n\r\n\tchangeSizing: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tCalled on mousemove while dragging the splitter\r\n\r\n\t\tif(!this.isSizing){ return; }\r\n\r\n\t\t// lastPoint is the most recent e.pageX or e.pageY during the drag\r\n\t\tthis.lastPoint = this.isHorizontal ? e.pageX : e.pageY;\r\n\t\tvar delta = Math.max(Math.min(this.lastPoint - this.startPoint, this.maxDelta), this.minDelta);\r\n\r\n\t\tif(this.activeSizing){\r\n\t\t\tthis._updateSize(delta);\r\n\t\t}else{\r\n\t\t\tthis._moveSizingLine(delta);\r\n\t\t}\r\n\t\tevent.stop(e);\r\n\t},\r\n\r\n\tendSizing: function(){\r\n\t\tif(!this.isSizing){ return; }\r\n\t\tif(this.cover){\r\n\t\t\tthis.cover.style.zIndex = -1;\r\n\t\t}\r\n\t\tif(!this.activeSizing){\r\n\t\t\tthis._hideSizingLine();\r\n\t\t}\r\n\r\n\t\tvar delta = Math.max(Math.min(this.lastPoint - this.startPoint, this.maxDelta), this.minDelta);\r\n\t\tthis._updateSize(delta);\r\n\r\n\t\tthis.isSizing = false;\r\n\r\n\t\tif(this.persist){\r\n\t\t\tthis._saveState(this);\r\n\t\t}\r\n\r\n\t\tvar h;\r\n\t\twhile(h = this._ownconnects.pop()){ h.remove(); }\r\n\t},\r\n\r\n\t_updateSize: function(/*Number*/ delta){\r\n\t\t// summary:\r\n\t\t//\t\tResets sizes of panes before and after splitter being dragged.\r\n\t\t//\t\tCalled during a drag, for active sizing, or at the end of a drag otherwise.\r\n\t\t// delta: Number\r\n\t\t//\t\tChange in slider position compared to start of drag.   But note that\r\n\t\t//\t\tthis function may be called multiple times during drag.\r\n\r\n\t\tthis.paneBefore.sizeActual = this.paneBefore.sizeBeforeDrag + delta;\r\n\t\tthis.paneAfter.position\t= this.paneAfter.positionBeforeDrag + delta;\r\n\t\tthis.paneAfter.sizeActual = this.paneAfter.sizeBeforeDrag - delta;\r\n\r\n\t\tarray.forEach(this.getChildren(), function(child){\r\n\t\t\tchild.sizeShare = child.sizeActual;\r\n\t\t});\r\n\r\n\t\tif(this._started){\r\n\t\t\tthis.layout();\r\n\t\t}\r\n\t},\r\n\r\n\t_showSizingLine: function(){\r\n\t\t// summary:\r\n\t\t//\t\tShow virtual splitter, for non-active resizing\r\n\r\n\t\tthis._moveSizingLine(0);\r\n\r\n\t\tdomGeometry.setMarginBox(this.virtualSizer,\r\n\t\t\tthis.isHorizontal ? { w: this.sizerWidth, h: this.paneHeight } : { w: this.paneWidth, h: this.sizerWidth });\r\n\r\n\t\tthis.virtualSizer.style.display = 'block';\r\n\t},\r\n\r\n\t_hideSizingLine: function(){\r\n\t\tthis.virtualSizer.style.display = 'none';\r\n\t},\r\n\r\n\t_moveSizingLine: function(/*Number*/ delta){\r\n\t\t// summary:\r\n\t\t//\t\tCalled for non-active resizing, to move the virtual splitter without adjusting the size of the panes\r\n\t\tvar pos = delta + this.sizingSplitter.positionBeforeDrag;\r\n\t\tdomStyle.set(this.virtualSizer,(this.isHorizontal ? \"left\" : \"top\"),pos+\"px\");\r\n\t},\r\n\r\n\t_getCookieName: function(i){\r\n\t\treturn this.id + \"_\" + i;\r\n\t},\r\n\r\n\t_restoreState: function(){\r\n\t\tarray.forEach(this.getChildren(), function(child, i){\r\n\t\t\tvar cookieName = this._getCookieName(i);\r\n\t\t\tvar cookieValue = cookie(cookieName);\r\n\t\t\tif(cookieValue){\r\n\t\t\t\tvar pos = parseInt(cookieValue);\r\n\t\t\t\tif(typeof pos == \"number\"){\r\n\t\t\t\t\tchild.sizeShare = pos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this);\r\n\t},\r\n\r\n\t_saveState: function(){\r\n\t\tif(!this.persist){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tarray.forEach(this.getChildren(), function(child, i){\r\n\t\t\tcookie(this._getCookieName(i), child.sizeShare, {expires:365});\r\n\t\t}, this);\r\n\t}\r\n});\r\n\r\nSplitContainer.ChildWidgetProperties = {\r\n\t// summary:\r\n\t//\t\tThese properties can be specified for the children of a SplitContainer.\r\n\r\n\t// sizeMin: [deprecated] Integer\r\n\t//\t\tMinimum size (width or height) of a child of a SplitContainer.\r\n\t//\t\tThe value is relative to other children's sizeShare properties.\r\n\tsizeMin: 10,\r\n\r\n\t// sizeShare: [deprecated] Integer\r\n\t//\t\tSize (width or height) of a child of a SplitContainer.\r\n\t//\t\tThe value is relative to other children's sizeShare properties.\r\n\t//\t\tFor example, if there are two children and each has sizeShare=10, then\r\n\t//\t\teach takes up 50% of the available space.\r\n\tsizeShare: 10\r\n};\r\n\r\n// Since any widget can be specified as a SplitContainer child, mix them\r\n// into the base widget class.  (This is a hack, but it's effective.)\r\n// This is for the benefit of the parser.   Remove for 2.0.  Also, hide from doc viewer.\r\nlang.extend(_WidgetBase, /*===== {} || =====*/ SplitContainer.ChildWidgetProperties);\r\n\r\nreturn SplitContainer;\r\n\r\n});\r\n\n\ndefine('dijit/layout/_TabContainerBase',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add\r\n\t\"dojo/dom-geometry\", // domGeometry.contentBox\r\n\t\"dojo/dom-style\", // domStyle.style\r\n\t\"./StackContainer\",\r\n\t\"./utils\", // marginBox2contextBox, layoutChildren\r\n\t\"../registry\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"dojo/text!./templates/TabContainer.html\"\r\n], function(declare, domClass, domGeometry, domStyle, StackContainer, layoutUtils, registry, _TemplatedMixin, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/_TabContainerBase\r\n\r\n\treturn declare(\"dijit.layout._TabContainerBase\", [StackContainer, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tAbstract base class for TabContainer.   Must define _makeController() to instantiate\r\n\t\t//\t\tand return the widget that displays the tab labels\r\n\t\t// description:\r\n\t\t//\t\tA TabContainer is a container that has multiple panes, but shows only\r\n\t\t//\t\tone pane at a time.  There are a set of tabs corresponding to each pane,\r\n\t\t//\t\twhere each tab has the name (aka title) of the pane, and optionally a close button.\r\n\r\n\t\t// tabPosition: String\r\n\t\t//\t\tDefines where tabs go relative to tab content.\r\n\t\t//\t\t\"top\", \"bottom\", \"left-h\", \"right-h\"\r\n\t\ttabPosition: \"top\",\r\n\r\n\t\tbaseClass: \"dijitTabContainer\",\r\n\r\n\t\t// tabStrip: [const] Boolean\r\n\t\t//\t\tDefines whether the tablist gets an extra class for layouting, putting a border/shading\r\n\t\t//\t\taround the set of tabs.   Not supported by claro theme.\r\n\t\ttabStrip: false,\r\n\r\n\t\t// nested: [const] Boolean\r\n\t\t//\t\tIf true, use styling for a TabContainer nested inside another TabContainer.\r\n\t\t//\t\tFor tundra etc., makes tabs look like links, and hides the outer\r\n\t\t//\t\tborder since the outer TabContainer already has a border.\r\n\t\tnested: false,\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// set class name according to tab position, ex: dijitTabContainerTop\r\n\t\t\tthis.baseClass += this.tabPosition.charAt(0).toUpperCase() + this.tabPosition.substr(1).replace(/-.*/, \"\");\r\n\r\n\t\t\tthis.srcNodeRef && domStyle.set(this.srcNodeRef, \"visibility\", \"hidden\");\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Create the tab list that will have a tab (a.k.a. tab button) for each tab panel\r\n\t\t\tthis.tablist = this._makeController(this.tablistNode);\r\n\r\n\t\t\tif(!this.doLayout){\r\n\t\t\t\tdomClass.add(this.domNode, \"dijitTabContainerNoLayout\");\r\n\t\t\t}\r\n\r\n\t\t\tif(this.nested){\r\n\t\t\t\t/* workaround IE's lack of support for \"a > b\" selectors by\r\n\t\t\t\t * tagging each node in the template.\r\n\t\t\t\t */\r\n\t\t\t\tdomClass.add(this.domNode, \"dijitTabContainerNested\");\r\n\t\t\t\tdomClass.add(this.tablist.containerNode, \"dijitTabContainerTabListNested\");\r\n\t\t\t\tdomClass.add(this.tablistSpacer, \"dijitTabContainerSpacerNested\");\r\n\t\t\t\tdomClass.add(this.containerNode, \"dijitTabPaneWrapperNested\");\r\n\t\t\t}else{\r\n\t\t\t\tdomClass.add(this.domNode, \"tabStrip-\" + (this.tabStrip ? \"enabled\" : \"disabled\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setupChild: function(/*dijit/_WidgetBase*/ tab){\r\n\t\t\t// Overrides StackContainer._setupChild().\r\n\t\t\tdomClass.add(tab.domNode, \"dijitTabPane\");\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// wire up the tablist and its tabs\r\n\t\t\tthis.tablist.startup();\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tlayout: function(){\r\n\t\t\t// Overrides StackContainer.layout().\r\n\t\t\t// Configure the content pane to take up all the space except for where the tabs are\r\n\r\n\t\t\tif(!this._contentBox || typeof(this._contentBox.l) == \"undefined\"){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sc = this.selectedChildWidget;\r\n\r\n\t\t\tif(this.doLayout){\r\n\t\t\t\t// position and size the titles and the container node\r\n\t\t\t\tvar titleAlign = this.tabPosition.replace(/-h/, \"\");\r\n\t\t\t\tthis.tablist.region = titleAlign;\r\n\t\t\t\tvar children = [this.tablist, {\r\n\t\t\t\t\tdomNode: this.tablistSpacer,\r\n\t\t\t\t\tregion: titleAlign\r\n\t\t\t\t}, {\r\n\t\t\t\t\tdomNode: this.containerNode,\r\n\t\t\t\t\tregion: \"center\"\r\n\t\t\t\t}];\r\n\t\t\t\tlayoutUtils.layoutChildren(this.domNode, this._contentBox, children);\r\n\r\n\t\t\t\t// Compute size to make each of my children.\r\n\t\t\t\t// children[2] is the margin-box size of this.containerNode, set by layoutChildren() call above\r\n\t\t\t\tthis._containerContentBox = layoutUtils.marginBox2contentBox(this.containerNode, children[2]);\r\n\r\n\t\t\t\tif(sc && sc.resize){\r\n\t\t\t\t\tsc.resize(this._containerContentBox);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// just layout the tab controller, so it can position left/right buttons etc.\r\n\t\t\t\tif(this.tablist.resize){\r\n\t\t\t\t\t//make the tabs zero width so that they don't interfere with width calc, then reset\r\n\t\t\t\t\tvar s = this.tablist.domNode.style;\r\n\t\t\t\t\ts.width = \"0\";\r\n\t\t\t\t\tvar width = domGeometry.getContentBox(this.domNode).w;\r\n\t\t\t\t\ts.width = \"\";\r\n\t\t\t\t\tthis.tablist.resize({w: width});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// and call resize() on the selected pane just to tell it that it's been made visible\r\n\t\t\t\tif(sc && sc.resize){\r\n\t\t\t\t\tsc.resize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(preserveDom){\r\n\t\t\tif(this.tablist){\r\n\t\t\t\tthis.tablist.destroy(preserveDom);\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tselectChild: function(/*dijit/_WidgetBase|String*/ page, /*Boolean*/ animate){\r\n\t\t\t// Override _StackContainer.selectChild() so the page's focus isn't left in a strange state.\r\n\r\n\t\t\tif(this._focused){\r\n\t\t\t\t// Focus must be inside the currently selected tab,\r\n\t\t\t\t// or on the currently selected tab label.\r\n\t\t\t\tpage = registry.byId(page);\r\n\t\t\t\tthis.tablist.pane2button(page.id).focus();\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/layout/StackController',[\r\n\t\"dojo/_base/array\", // array.forEach array.indexOf array.map\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\",\r\n\t\"dojo/dom-construct\",\r\n\t\"dojo/keys\", // keys\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/on\",\r\n\t\"dojo/topic\",\r\n\t\"../focus\", // focus.focus()\r\n\t\"../registry\", // registry.byId\r\n\t\"../_Widget\",\r\n\t\"../_TemplatedMixin\",\r\n\t\"../_Container\",\r\n\t\"../form/ToggleButton\",\r\n\t\"dojo/touch\"\t// for normalized click handling, see dojoClick property setting in postCreate()\r\n], function(array, declare, domClass, domConstruct, keys, lang, on, topic,\r\n\t\t\tfocus, registry, _Widget, _TemplatedMixin,_Container, ToggleButton){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/StackController\r\n\r\n\tvar StackButton = declare(\"dijit.layout._StackButton\", ToggleButton, {\r\n\t\t// summary:\r\n\t\t//\t\tInternal widget used by StackContainer.\r\n\t\t// description:\r\n\t\t//\t\tThe button-like or tab-like object you click to select or delete a page\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// Override _FormWidget.tabIndex.\r\n\t\t// StackContainer buttons are not in the tab order by default.\r\n\t\t// Probably we should be calling this.startupKeyNavChildren() instead.\r\n\t\ttabIndex: \"-1\",\r\n\r\n\t\t// closeButton: Boolean\r\n\t\t//\t\tWhen true, display close button for this tab\r\n\t\tcloseButton: false,\r\n\r\n\t\t_aria_attr: \"aria-selected\",\r\n\r\n\t\tbuildRendering: function(/*Event*/ evt){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t(this.focusNode || this.domNode).setAttribute(\"role\", \"tab\");\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tvar StackController = declare(\"dijit.layout.StackController\", [_Widget, _TemplatedMixin, _Container], {\r\n\t\t// summary:\r\n\t\t//\t\tSet of buttons to select a page in a `dijit/layout/StackContainer`\r\n\t\t// description:\r\n\t\t//\t\tMonitors the specified StackContainer, and whenever a page is\r\n\t\t//\t\tadded, deleted, or selected, updates itself accordingly.\r\n\r\n\t\tbaseClass: \"dijitStackController\",\r\n\r\n\t\ttemplateString: \"<span role='tablist' data-dojo-attach-event='onkeydown'></span>\",\r\n\r\n\t\t// containerId: [const] String\r\n\t\t//\t\tThe id of the page container that I point to\r\n\t\tcontainerId: \"\",\r\n\r\n\t\t// buttonWidget: [const] Constructor\r\n\t\t//\t\tThe button widget to create to correspond to each page\r\n\t\tbuttonWidget: StackButton,\r\n\r\n\t\t// buttonWidgetCloseClass: String\r\n\t\t//\t\tCSS class of [x] close icon, used by event delegation code to tell when close button was clicked\r\n\t\tbuttonWidgetCloseClass: \"dijitStackCloseButton\",\r\n\r\n\t\tpane2button: function(/*String*/ id){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the button corresponding to the pane w/the given id.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn registry.byId(this.id + \"_\" + id);\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Listen to notifications from StackContainer.  This is tricky because the StackContainer may not have\r\n\t\t\t// been created yet, so abstracting it through topics.\r\n\t\t\t// Note: for TabContainer we can do this through bubbled events instead of topics; maybe that's\r\n\t\t\t// all we support for 2.0?\r\n\t\t\tthis.own(\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-startup\", lang.hitch(this, \"onStartup\")),\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-addChild\", lang.hitch(this, \"onAddChild\")),\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-removeChild\", lang.hitch(this, \"onRemoveChild\")),\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-selectChild\", lang.hitch(this, \"onSelectChild\")),\r\n\t\t\t\ttopic.subscribe(this.containerId + \"-containerKeyDown\", lang.hitch(this, \"onContainerKeyDown\"))\r\n\t\t\t);\r\n\r\n\t\t\t// Listen for click events to select or close tabs.\r\n\t\t\t// No need to worry about ENTER/SPACE key handling: tabs are selected via left/right arrow keys,\r\n\t\t\t// and closed via shift-F10 (to show the close menu).\r\n\t\t\t// Also, add flag to use normalized click handling from dojo/touch\r\n\t\t\tthis.containerNode.dojoClick = true;\r\n\t\t\tthis.own(on(this.containerNode, 'click', lang.hitch(this, function(evt){\r\n\t\t\t\tvar button = registry.getEnclosingWidget(evt.target);\r\n\t\t\t\tif(button != this.containerNode && !button.disabled && button.page){\r\n\t\t\t\t\tfor(var target = evt.target; target !== this.containerNode; target = target.parentNode){\r\n\t\t\t\t\t\tif(domClass.contains(target, this.buttonWidgetCloseClass)){\r\n\t\t\t\t\t\t\tthis.onCloseButtonClick(button.page);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}else if(target == button.domNode){\r\n\t\t\t\t\t\t\tthis.onButtonClick(button.page);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})));\r\n\t\t},\r\n\r\n\t\tonStartup: function(/*Object*/ info){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after StackContainer has finished initializing\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tthis.textDir = info.textDir;\r\n\t\t\tarray.forEach(info.children, this.onAddChild, this);\r\n\t\t\tif(info.selected){\r\n\t\t\t\t// Show button corresponding to selected pane (unless selected\r\n\t\t\t\t// is null because there are no panes)\r\n\t\t\t\tthis.onSelectChild(info.selected);\r\n\t\t\t}\r\n\r\n\t\t\t// Reflect events like page title changes to tab buttons\r\n\t\t\tvar containerNode = registry.byId(this.containerId).containerNode,\r\n\t\t\t\tpane2button = lang.hitch(this, \"pane2button\"),\r\n\t\t\t\tpaneToButtonAttr = {\r\n\t\t\t\t\t\"title\": \"label\",\r\n\t\t\t\t\t\"showtitle\": \"showLabel\",\r\n\t\t\t\t\t\"iconclass\": \"iconClass\",\r\n\t\t\t\t\t\"closable\": \"closeButton\",\r\n\t\t\t\t\t\"tooltip\": \"title\",\r\n\t\t\t\t\t\"disabled\": \"disabled\",\r\n\t\t\t\t\t\"textdir\": \"textdir\"\r\n\t\t\t\t},\r\n\t\t\t\tconnectFunc = function(attr, buttonAttr){\r\n\t\t\t\t\treturn on(containerNode, \"attrmodified-\" + attr, function(evt){\r\n\t\t\t\t\t\tvar button = pane2button(evt.detail && evt.detail.widget && evt.detail.widget.id);\r\n\t\t\t\t\t\tif(button){\r\n\t\t\t\t\t\t\tbutton.set(buttonAttr, evt.detail.newValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\tfor(var attr in paneToButtonAttr){\r\n\t\t\t\tthis.own(connectFunc(attr, paneToButtonAttr[attr]));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(preserveDom){\r\n\t\t\t// Since the buttons are internal to the StackController widget, destroy() should remove them.\r\n\t\t\t// When #5796 is fixed for 2.0 can get rid of this function completely.\r\n\t\t\tthis.destroyDescendants(preserveDom);\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\tonAddChild: function(/*dijit/_WidgetBase*/ page, /*Integer?*/ insertIndex){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled whenever a page is added to the container.\r\n\t\t\t//\t\tCreate button corresponding to the page.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// create an instance of the button widget\r\n\t\t\t// (remove typeof buttonWidget == string support in 2.0)\r\n\t\t\tvar Cls = lang.isString(this.buttonWidget) ? lang.getObject(this.buttonWidget) : this.buttonWidget;\r\n\t\t\tvar button = new Cls({\r\n\t\t\t\tid: this.id + \"_\" + page.id,\r\n\t\t\t\tname: this.id + \"_\" + page.id, // note: must match id used in pane2button()\r\n\t\t\t\tlabel: page.title,\r\n\t\t\t\tdisabled: page.disabled,\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: page.dir,\r\n\t\t\t\tlang: page.lang,\r\n\t\t\t\ttextDir: page.textDir || this.textDir,\r\n\t\t\t\tshowLabel: page.showTitle,\r\n\t\t\t\ticonClass: page.iconClass,\r\n\t\t\t\tcloseButton: page.closable,\r\n\t\t\t\ttitle: page.tooltip,\r\n\t\t\t\tpage: page\r\n\t\t\t});\r\n\r\n\t\t\tthis.addChild(button, insertIndex);\r\n\t\t\tpage.controlButton = button;\t// this value might be overwritten if two tabs point to same container\r\n\t\t\tif(!this._currentChild){\r\n\t\t\t\t// If this is the first child then StackContainer will soon publish that it's selected,\r\n\t\t\t\t// but before that StackContainer calls layout(), and before layout() is called the\r\n\t\t\t\t// StackController needs to have the proper height... which means that the button needs\r\n\t\t\t\t// to be marked as selected now.   See test_TabContainer_CSS.html for test.\r\n\t\t\t\tthis.onSelectChild(page);\r\n\t\t\t}\r\n\r\n\t\t\t// Add this StackController button to the list of things that labels that StackContainer pane.\r\n\t\t\t// Also, if there's an aria-labelledby parameter for the pane, then the aria-label parameter is unneeded.\r\n\t\t\tvar labelledby = page._wrapper.getAttribute(\"aria-labelledby\") ?\r\n\t\t\t\tpage._wrapper.getAttribute(\"aria-labelledby\") + \" \" + button.id : button.id;\r\n\t\t\tpage._wrapper.removeAttribute(\"aria-label\");\r\n\t\t\tpage._wrapper.setAttribute(\"aria-labelledby\", labelledby);\r\n\t\t},\r\n\r\n\t\tonRemoveChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled whenever a page is removed from the container.\r\n\t\t\t//\t\tRemove the button corresponding to the page.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this._currentChild === page){\r\n\t\t\t\tthis._currentChild = null;\r\n\t\t\t}\r\n\r\n\t\t\tvar button = this.pane2button(page.id);\r\n\t\t\tif(button){\r\n\t\t\t\tthis.removeChild(button);\r\n\t\t\t\tbutton.destroy();\r\n\t\t\t}\r\n\t\t\tdelete page.controlButton;\r\n\t\t},\r\n\r\n\t\tonSelectChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when a page has been selected in the StackContainer, either by me or by another StackController\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!page){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._currentChild){\r\n\t\t\t\tvar oldButton = this.pane2button(this._currentChild.id);\r\n\t\t\t\toldButton.set('checked', false);\r\n\t\t\t\toldButton.focusNode.setAttribute(\"tabIndex\", \"-1\");\r\n\t\t\t}\r\n\r\n\t\t\tvar newButton = this.pane2button(page.id);\r\n\t\t\tnewButton.set('checked', true);\r\n\t\t\tthis._currentChild = page;\r\n\t\t\tnewButton.focusNode.setAttribute(\"tabIndex\", \"0\");\r\n\t\t\tvar container = registry.byId(this.containerId);\r\n\t\t},\r\n\r\n\t\tonButtonClick: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled whenever one of my child buttons is pressed in an attempt to select a page\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar button = this.pane2button(page.id);\r\n\r\n\t\t\t// For TabContainer where the tabs are <span>, need to set focus explicitly when left/right arrow\r\n\t\t\tfocus.focus(button.focusNode);\r\n\r\n\t\t\tif(this._currentChild && this._currentChild.id === page.id){\r\n\t\t\t\t//In case the user clicked the checked button, keep it in the checked state because it remains to be the selected stack page.\r\n\t\t\t\tbutton.set('checked', true);\r\n\t\t\t}\r\n\t\t\tvar container = registry.byId(this.containerId);\r\n\t\t\tcontainer.selectChild(page);\r\n\t\t},\r\n\r\n\t\tonCloseButtonClick: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled whenever one of my child buttons [X] is pressed in an attempt to close a page\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar container = registry.byId(this.containerId);\r\n\t\t\tcontainer.closeChild(page);\r\n\t\t\tif(this._currentChild){\r\n\t\t\t\tvar b = this.pane2button(this._currentChild.id);\r\n\t\t\t\tif(b){\r\n\t\t\t\t\tfocus.focus(b.focusNode || b.domNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// TODO: this is a bit redundant with forward, back api in StackContainer\r\n\t\tadjacent: function(/*Boolean*/ forward){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper for onkeydown to find next/previous button\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!this.isLeftToRight() && (!this.tabPosition || /top|bottom/.test(this.tabPosition))){\r\n\t\t\t\tforward = !forward;\r\n\t\t\t}\r\n\t\t\t// find currently focused button in children array\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tvar idx = array.indexOf(children, this.pane2button(this._currentChild.id)),\r\n\t\t\t\tcurrent = children[idx];\r\n\r\n\t\t\t// Pick next/previous non-disabled button to focus on.   If we get back to the original button it means\r\n\t\t\t// that all buttons must be disabled, so return current child to avoid an infinite loop.\r\n\t\t\tvar child;\r\n\t\t\tdo{\r\n\t\t\t\tidx = (idx + (forward ? 1 : children.length - 1)) % children.length;\r\n\t\t\t\tchild = children[idx];\r\n\t\t\t}while(child.disabled && child != current);\r\n\r\n\t\t\treturn child; // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tonkeydown: function(/*Event*/ e, /*Boolean?*/ fromContainer){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandle keystrokes on the page list, for advancing to next/previous button\r\n\t\t\t//\t\tand closing the current page if the page is closable.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this.disabled || e.altKey){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar forward = null;\r\n\t\t\tif(e.ctrlKey || !e._djpage){\r\n\t\t\t\tswitch(e.keyCode){\r\n\t\t\t\t\tcase keys.LEFT_ARROW:\r\n\t\t\t\t\tcase keys.UP_ARROW:\r\n\t\t\t\t\t\tif(!e._djpage){\r\n\t\t\t\t\t\t\tforward = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.PAGE_UP:\r\n\t\t\t\t\t\tif(e.ctrlKey){\r\n\t\t\t\t\t\t\tforward = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.RIGHT_ARROW:\r\n\t\t\t\t\tcase keys.DOWN_ARROW:\r\n\t\t\t\t\t\tif(!e._djpage){\r\n\t\t\t\t\t\t\tforward = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.PAGE_DOWN:\r\n\t\t\t\t\t\tif(e.ctrlKey){\r\n\t\t\t\t\t\t\tforward = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.HOME:\r\n\t\t\t\t\t\t// Navigate to first non-disabled child\r\n\t\t\t\t\t\tvar children = this.getChildren();\r\n\t\t\t\t\t\tfor(var idx = 0; idx < children.length; idx++){\r\n\t\t\t\t\t\t\tvar child = children[idx];\r\n\t\t\t\t\t\t\tif(!child.disabled){\r\n\t\t\t\t\t\t\t\tthis.onButtonClick(child.page);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.END:\r\n\t\t\t\t\t\t// Navigate to last non-disabled child\r\n\t\t\t\t\t\tvar children = this.getChildren();\r\n\t\t\t\t\t\tfor(var idx = children.length - 1; idx >= 0; idx--){\r\n\t\t\t\t\t\t\tvar child = children[idx];\r\n\t\t\t\t\t\t\tif(!child.disabled){\r\n\t\t\t\t\t\t\t\tthis.onButtonClick(child.page);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.DELETE:\r\n\t\t\t\t\tcase \"W\".charCodeAt(0):    // ctrl-W\r\n\t\t\t\t\t\tif(this._currentChild.closable &&\r\n\t\t\t\t\t\t\t(e.keyCode == keys.DELETE || e.ctrlKey)){\r\n\t\t\t\t\t\t\tthis.onCloseButtonClick(this._currentChild);\r\n\r\n\t\t\t\t\t\t\t// avoid browser tab closing\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase keys.TAB:\r\n\t\t\t\t\t\tif(e.ctrlKey){\r\n\t\t\t\t\t\t\tthis.onButtonClick(this.adjacent(!e.shiftKey).page);\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t// handle next/previous page navigation (left/right arrow, etc.)\r\n\t\t\t\tif(forward !== null){\r\n\t\t\t\t\tthis.onButtonClick(this.adjacent(forward).page);\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonContainerKeyDown: function(/*Object*/ info){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when there was a keydown on the container\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tinfo.e._djpage = info.page;\r\n\t\t\tthis.onkeydown(info.e);\r\n\t\t}\r\n\t});\r\n\r\n\tStackController.StackButton = StackButton;\t// for monkey patching\r\n\r\n\treturn StackController;\r\n});\r\n\n\ndefine('dijit/layout/TabController',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom\", // dom.setSelectable\r\n\t\"dojo/dom-attr\", // domAttr.attr\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/has\",\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/_base/lang\", // lang.hitch lang.trim\r\n\t\"./StackController\",\r\n\t\"../registry\",\r\n\t\"../Menu\",\r\n\t\"../MenuItem\",\r\n\t\"dojo/text!./templates/_TabButton.html\",\r\n\t\"dojo/i18n!../nls/common\"\r\n], function(declare, dom, domAttr, domClass, has, i18n, lang, StackController, registry, Menu, MenuItem, template){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/TabController\r\n\r\n\tvar TabButton = declare(\"dijit.layout._TabButton\" + (has(\"dojo-bidi\") ? \"_NoBidi\" : \"\"), StackController.StackButton, {\r\n\t\t// summary:\r\n\t\t//\t\tA tab (the thing you click to select a pane).\r\n\t\t// description:\r\n\t\t//\t\tContains the title of the pane, and optionally a close-button to destroy the pane.\r\n\t\t//\t\tThis is an internal widget and should not be instantiated directly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\t// baseClass: String\r\n\t\t//\t\tThe CSS class applied to the domNode.\r\n\t\tbaseClass: \"dijitTab\",\r\n\r\n\t\t// Apply dijitTabCloseButtonHover when close button is hovered\r\n\t\tcssStateNodes: {\r\n\t\t\tcloseNode: \"dijitTabCloseButton\"\r\n\t\t},\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\t// Button superclass maps name to a this.valueNode, but we don't have a this.valueNode attach point\r\n\t\t_setNameAttr: \"focusNode\",\r\n\r\n\t\t// Override _FormWidget.scrollOnFocus.\r\n\t\t// Don't scroll the whole tab container into view when the button is focused.\r\n\t\tscrollOnFocus: false,\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tdom.setSelectable(this.containerNode, false);\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar n = this.domNode;\r\n\r\n\t\t\t// Required to give IE6 a kick, as it initially hides the\r\n\t\t\t// tabs until they are focused on.\r\n\t\t\tthis.defer(function(){\r\n\t\t\t\tn.className = n.className;\r\n\t\t\t}, 1);\r\n\t\t},\r\n\r\n\t\t_setCloseButtonAttr: function(/*Boolean*/ disp){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide/show close button\r\n\t\t\tthis._set(\"closeButton\", disp);\r\n\t\t\tdomClass.toggle(this.domNode, \"dijitClosable\", disp);\r\n\t\t\tthis.closeNode.style.display = disp ? \"\" : \"none\";\r\n\t\t\tif(disp){\r\n\t\t\t\tvar _nlsResources = i18n.getLocalization(\"dijit\", \"common\");\r\n\t\t\t\tif(this.closeNode){\r\n\t\t\t\t\tdomAttr.set(this.closeNode, \"title\", _nlsResources.itemClose);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setDisabledAttr: function(/*Boolean*/ disabled){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMake tab selected/unselectable\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Don't show tooltip for close button when tab is disabled\r\n\t\t\tif(this.closeNode){\r\n\t\t\t\tif(disabled){\r\n\t\t\t\t\tdomAttr.remove(this.closeNode, \"title\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar _nlsResources = i18n.getLocalization(\"dijit\", \"common\");\r\n\t\t\t\t\tdomAttr.set(this.closeNode, \"title\", _nlsResources.itemClose);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setLabelAttr: function(/*String*/ content){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHook for set('label', ...) to work.\r\n\t\t\t// description:\r\n\t\t\t//\t\ttakes an HTML string.\r\n\t\t\t//\t\tInherited ToggleButton implementation will Set the label (text) of the button;\r\n\t\t\t//\t\tNeed to set the alt attribute of icon on tab buttons if no label displayed\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this.showLabel && !this.params.title){\r\n\t\t\t\tthis.iconNode.alt = lang.trim(this.containerNode.innerText || this.containerNode.textContent || '');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tTabButton = declare(\"dijit.layout._TabButton\", TabButton, {\r\n\t\t\t_setLabelAttr: function(/*String*/ content){\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t\tthis.applyTextDir(this.iconNode, this.iconNode.alt);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar TabController = declare(\"dijit.layout.TabController\", StackController, {\r\n\t\t// summary:\r\n\t\t//\t\tSet of tabs (the things with titles and a close button, that you click to show a tab panel).\r\n\t\t//\t\tUsed internally by `dijit/layout/TabContainer`.\r\n\t\t// description:\r\n\t\t//\t\tLets the user select the currently shown pane in a TabContainer or StackContainer.\r\n\t\t//\t\tTabController also monitors the TabContainer, and whenever a pane is\r\n\t\t//\t\tadded or deleted updates itself accordingly.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tbaseClass: \"dijitTabController\",\r\n\r\n\t\ttemplateString: \"<div role='tablist' data-dojo-attach-event='onkeydown:onkeydown'></div>\",\r\n\r\n\t\t// tabPosition: String\r\n\t\t//\t\tDefines where tabs go relative to the content.\r\n\t\t//\t\t\"top\", \"bottom\", \"left-h\", \"right-h\"\r\n\t\ttabPosition: \"top\",\r\n\r\n\t\t// buttonWidget: Constructor\r\n\t\t//\t\tThe tab widget to create to correspond to each page\r\n\t\tbuttonWidget: TabButton,\r\n\r\n\t\t// buttonWidgetCloseClass: String\r\n\t\t//\t\tClass of [x] close icon, used by event delegation code to tell when close button was clicked\r\n\t\tbuttonWidgetCloseClass: \"dijitTabCloseButton\",\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Setup a close menu to be shared between all the closable tabs (excluding disabled tabs)\r\n\t\t\tvar closeMenu = new Menu({\r\n\t\t\t\tid: this.id + \"_Menu\",\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\ttargetNodeIds: [this.domNode],\r\n\t\t\t\tselector: function(node){\r\n\t\t\t\t\treturn domClass.contains(node, \"dijitClosable\") && !domClass.contains(node, \"dijitTabDisabled\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.own(closeMenu);\r\n\r\n\t\t\tvar _nlsResources = i18n.getLocalization(\"dijit\", \"common\"),\r\n\t\t\t\tcontroller = this;\r\n\t\t\tcloseMenu.addChild(new MenuItem({\r\n\t\t\t\tlabel: _nlsResources.itemClose,\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\tonClick: function(evt){\r\n\t\t\t\t\tvar button = registry.byNode(this.getParent().currentTarget);\r\n\t\t\t\t\tcontroller.onCloseButtonClick(button.page);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t});\r\n\r\n\tTabController.TabButton = TabButton;\t// for monkey patching\r\n\r\n\treturn TabController;\r\n});\r\n\n\n\ndefine('dijit/layout/ScrollingTabController',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.contains\r\n\t\"dojo/dom-geometry\", // domGeometry.contentBox\r\n\t\"dojo/dom-style\", // domStyle.style\r\n\t\"dojo/_base/fx\", // Animation\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\",\r\n\t\"dojo/query\", // query\r\n\t\"dojo/sniff\", // has(\"ie\"), has(\"webkit\"), has(\"quirks\")\r\n\t\"../registry\", // registry.byId()\r\n\t\"dojo/text!./templates/ScrollingTabController.html\",\r\n\t\"dojo/text!./templates/_ScrollingTabControllerButton.html\",\r\n\t\"./TabController\",\r\n\t\"./utils\", // marginBox2contextBox, layoutChildren\r\n\t\"../_WidgetsInTemplateMixin\",\r\n\t\"../Menu\",\r\n\t\"../MenuItem\",\r\n\t\"../form/Button\",\r\n\t\"../_HasDropDown\",\r\n\t\"dojo/NodeList-dom\", // NodeList.style\r\n\t\"../a11yclick\"\t// template uses ondijitclick (not for keyboard support, but for responsive touch support)\r\n], function(array, declare, domClass, domGeometry, domStyle, fx, lang, on, query, has,\r\n\tregistry, tabControllerTemplate, buttonTemplate, TabController, layoutUtils, _WidgetsInTemplateMixin,\r\n\tMenu, MenuItem, Button, _HasDropDown){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/ScrollingTabController\r\n\r\n\tvar ScrollingTabController = declare(\"dijit.layout.ScrollingTabController\", [TabController, _WidgetsInTemplateMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tSet of tabs with left/right arrow keys and a menu to switch between tabs not\r\n\t\t//\t\tall fitting on a single row.\r\n\t\t//\t\tWorks only for horizontal tabs (either above or below the content, not to the left\r\n\t\t//\t\tor right).\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tbaseClass: \"dijitTabController dijitScrollingTabController\",\r\n\r\n\t\ttemplateString: tabControllerTemplate,\r\n\r\n\t\t// useMenu: [const] Boolean\r\n\t\t//\t\tTrue if a menu should be used to select tabs when they are too\r\n\t\t//\t\twide to fit the TabContainer, false otherwise.\r\n\t\tuseMenu: true,\r\n\r\n\t\t// useSlider: [const] Boolean\r\n\t\t//\t\tTrue if a slider should be used to select tabs when they are too\r\n\t\t//\t\twide to fit the TabContainer, false otherwise.\r\n\t\tuseSlider: true,\r\n\r\n\t\t// tabStripClass: [const] String\r\n\t\t//\t\tThe css class to apply to the tab strip, if it is visible.\r\n\t\ttabStripClass: \"\",\r\n\r\n\t\t// _minScroll: Number\r\n\t\t//\t\tThe distance in pixels from the edge of the tab strip which,\r\n\t\t//\t\tif a scroll animation is less than, forces the scroll to\r\n\t\t//\t\tgo all the way to the left/right.\r\n\t\t_minScroll: 5,\r\n\r\n\t\t// Override default behavior mapping class to DOMNode\r\n\t\t_setClassAttr: { node: \"containerNode\", type: \"class\" },\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar n = this.domNode;\r\n\r\n\t\t\tthis.scrollNode = this.tablistWrapper;\r\n\t\t\tthis._initButtons();\r\n\r\n\t\t\tif(!this.tabStripClass){\r\n\t\t\t\tthis.tabStripClass = \"dijitTabContainer\" +\r\n\t\t\t\t\tthis.tabPosition.charAt(0).toUpperCase() +\r\n\t\t\t\t\tthis.tabPosition.substr(1).replace(/-.*/, \"\") +\r\n\t\t\t\t\t\"None\";\r\n\t\t\t\tdomClass.add(n, \"tabStrip-disabled\")\r\n\t\t\t}\r\n\r\n\t\t\tdomClass.add(this.tablistWrapper, this.tabStripClass);\r\n\t\t},\r\n\r\n\t\tonStartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// TabController is hidden until it finishes drawing, to give\r\n\t\t\t// a less visually jumpy instantiation.   When it's finished, set visibility to \"\"\r\n\t\t\t// to that the tabs are hidden/shown depending on the container's visibility setting.\r\n\t\t\tdomStyle.set(this.domNode, \"visibility\", \"\");\r\n\t\t\tthis._postStartup = true;\r\n\r\n\t\t\t// changes to the tab button label or iconClass will have changed the width of the\r\n\t\t\t// buttons, so do a resize\r\n\t\t\tthis.own(on(this.containerNode, \"attrmodified-label, attrmodified-iconclass\", lang.hitch(this, function(evt){\r\n\t\t\t\tif(this._dim){\r\n\t\t\t\t\tthis.resize(this._dim);\r\n\t\t\t\t}\r\n\t\t\t})));\r\n\t\t},\r\n\r\n\t\tonAddChild: function(page, insertIndex){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Increment the width of the wrapper when a tab is added\r\n\t\t\t// This makes sure that the buttons never wrap.\r\n\t\t\t// The value 200 is chosen as it should be bigger than most\r\n\t\t\t// Tab button widths.\r\n\t\t\tdomStyle.set(this.containerNode, \"width\",\r\n\t\t\t\t(domStyle.get(this.containerNode, \"width\") + 200) + \"px\");\r\n\t\t},\r\n\r\n\t\tonRemoveChild: function(page, insertIndex){\r\n\t\t\t// null out _selectedTab because we are about to delete that dom node\r\n\t\t\tvar button = this.pane2button(page.id);\r\n\t\t\tif(this._selectedTab === button.domNode){\r\n\t\t\t\tthis._selectedTab = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_initButtons: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates the buttons used to scroll to view tabs that\r\n\t\t\t//\t\tmay not be visible if the TabContainer is too narrow.\r\n\r\n\t\t\t// Make a list of the buttons to display when the tab labels become\r\n\t\t\t// wider than the TabContainer, and hide the other buttons.\r\n\t\t\t// Also gets the total width of the displayed buttons.\r\n\t\t\tthis._btnWidth = 0;\r\n\t\t\tthis._buttons = query(\"> .tabStripButton\", this.domNode).filter(function(btn){\r\n\t\t\t\tif((this.useMenu && btn == this._menuBtn.domNode) ||\r\n\t\t\t\t\t(this.useSlider && (btn == this._rightBtn.domNode || btn == this._leftBtn.domNode))){\r\n\t\t\t\t\tthis._btnWidth += domGeometry.getMarginSize(btn).w;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomStyle.set(btn, \"display\", \"none\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_getTabsWidth: function(){\r\n\t\t\tvar children = this.getChildren();\r\n\t\t\tif(children.length){\r\n\t\t\t\tvar leftTab = children[this.isLeftToRight() ? 0 : children.length - 1].domNode,\r\n\t\t\t\t\trightTab = children[this.isLeftToRight() ? children.length - 1 : 0].domNode;\r\n\t\t\t\treturn rightTab.offsetLeft + rightTab.offsetWidth - leftTab.offsetLeft;\r\n\t\t\t}else{\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_enableBtn: function(width){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetermines if the tabs are wider than the width of the TabContainer, and\r\n\t\t\t//\t\tthus that we need to display left/right/menu navigation buttons.\r\n\t\t\tvar tabsWidth = this._getTabsWidth();\r\n\t\t\twidth = width || domStyle.get(this.scrollNode, \"width\");\r\n\t\t\treturn tabsWidth > 0 && width < tabsWidth;\r\n\t\t},\r\n\r\n\t\tresize: function(dim){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHides or displays the buttons used to scroll the tab list and launch the menu\r\n\t\t\t//\t\tthat selects tabs.\r\n\r\n\t\t\t// Save the dimensions to be used when a child is renamed.\r\n\t\t\tthis._dim = dim;\r\n\r\n\t\t\t// Set my height to be my natural height (tall enough for one row of tab labels),\r\n\t\t\t// and my content-box width based on margin-box width specified in dim parameter.\r\n\t\t\t// But first reset scrollNode.height in case it was set by layoutChildren() call\r\n\t\t\t// in a previous run of this method.\r\n\t\t\tthis.scrollNode.style.height = \"auto\";\r\n\t\t\tvar cb = this._contentBox = layoutUtils.marginBox2contentBox(this.domNode, {h: 0, w: dim.w});\r\n\t\t\tcb.h = this.scrollNode.offsetHeight;\r\n\t\t\tdomGeometry.setContentSize(this.domNode, cb);\r\n\r\n\t\t\t// Show/hide the left/right/menu navigation buttons depending on whether or not they\r\n\t\t\t// are needed.\r\n\t\t\tvar enable = this._enableBtn(this._contentBox.w);\r\n\t\t\tthis._buttons.style(\"display\", enable ? \"\" : \"none\");\r\n\r\n\t\t\t// Position and size the navigation buttons and the tablist\r\n\t\t\tthis._leftBtn.region = \"left\";\r\n\t\t\tthis._rightBtn.region = \"right\";\r\n\t\t\tthis._menuBtn.region = this.isLeftToRight() ? \"right\" : \"left\";\r\n\t\t\tlayoutUtils.layoutChildren(this.domNode, this._contentBox,\r\n\t\t\t\t[this._menuBtn, this._leftBtn, this._rightBtn, {domNode: this.scrollNode, region: \"center\"}]);\r\n\r\n\t\t\t// set proper scroll so that selected tab is visible\r\n\t\t\tif(this._selectedTab){\r\n\t\t\t\tif(this._anim && this._anim.status() == \"playing\"){\r\n\t\t\t\t\tthis._anim.stop();\r\n\t\t\t\t}\r\n\t\t\t\tthis.scrollNode.scrollLeft = this._convertToScrollLeft(this._getScrollForSelectedTab());\r\n\t\t\t}\r\n\r\n\t\t\t// Enable/disabled left right buttons depending on whether or not user can scroll to left or right\r\n\t\t\tthis._setButtonClass(this._getScroll());\r\n\r\n\t\t\tthis._postResize = true;\r\n\r\n\t\t\t// Return my size so layoutChildren() can use it.\r\n\t\t\t// Also avoids IE9 layout glitch on browser resize when scroll buttons present\r\n\t\t\treturn {h: this._contentBox.h, w: dim.w};\r\n\t\t},\r\n\r\n\t\t_getScroll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the current scroll of the tabs where 0 means\r\n\t\t\t//\t\t\"scrolled all the way to the left\" and some positive number, based on #\r\n\t\t\t//\t\tof pixels of possible scroll (ex: 1000) means \"scrolled all the way to the right\"\r\n\t\t\treturn (this.isLeftToRight() || has(\"ie\") < 8 || (has(\"ie\") && has(\"quirks\")) || has(\"webkit\")) ? this.scrollNode.scrollLeft :\r\n\t\t\t\tdomStyle.get(this.containerNode, \"width\") - domStyle.get(this.scrollNode, \"width\")\r\n\t\t\t\t\t+ (has(\"ie\") >= 8 ? -1 : 1) * this.scrollNode.scrollLeft;\r\n\t\t},\r\n\r\n\t\t_convertToScrollLeft: function(val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGiven a scroll value where 0 means \"scrolled all the way to the left\"\r\n\t\t\t//\t\tand some positive number, based on # of pixels of possible scroll (ex: 1000)\r\n\t\t\t//\t\tmeans \"scrolled all the way to the right\", return value to set this.scrollNode.scrollLeft\r\n\t\t\t//\t\tto achieve that scroll.\r\n\t\t\t//\r\n\t\t\t//\t\tThis method is to adjust for RTL funniness in various browsers and versions.\r\n\t\t\tif(this.isLeftToRight() || has(\"ie\") < 8 || (has(\"ie\") && has(\"quirks\")) || has(\"webkit\")){\r\n\t\t\t\treturn val;\r\n\t\t\t}else{\r\n\t\t\t\tvar maxScroll = domStyle.get(this.containerNode, \"width\") - domStyle.get(this.scrollNode, \"width\");\r\n\t\t\t\treturn (has(\"ie\") >= 8 ? -1 : 1) * (val - maxScroll);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonSelectChild: function(/*dijit/_WidgetBase*/ page){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSmoothly scrolls to a tab when it is selected.\r\n\r\n\t\t\tvar tab = this.pane2button(page.id);\r\n\t\t\tif(!tab){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar node = tab.domNode;\r\n\r\n\t\t\t// Save the selection\r\n\t\t\tif(node != this._selectedTab){\r\n\t\t\t\tthis._selectedTab = node;\r\n\r\n\t\t\t\t// Scroll to the selected tab, except on startup, when scrolling is handled in resize()\r\n\t\t\t\tif(this._postResize){\r\n\t\t\t\t\tvar sl = this._getScroll();\r\n\r\n\t\t\t\t\tif(sl > node.offsetLeft ||\r\n\t\t\t\t\t\tsl + domStyle.get(this.scrollNode, \"width\") <\r\n\t\t\t\t\t\t\tnode.offsetLeft + domStyle.get(node, \"width\")){\r\n\t\t\t\t\t\tthis.createSmoothScroll().play();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_getScrollBounds: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the minimum and maximum scroll setting to show the leftmost and rightmost\r\n\t\t\t//\t\ttabs (respectively)\r\n\t\t\tvar children = this.getChildren(),\r\n\t\t\t\tscrollNodeWidth = domStyle.get(this.scrollNode, \"width\"), // about 500px\r\n\t\t\t\tcontainerWidth = domStyle.get(this.containerNode, \"width\"), // 50,000px\r\n\t\t\t\tmaxPossibleScroll = containerWidth - scrollNodeWidth, // scrolling until right edge of containerNode visible\r\n\t\t\t\ttabsWidth = this._getTabsWidth();\r\n\r\n\t\t\tif(children.length && tabsWidth > scrollNodeWidth){\r\n\t\t\t\t// Scrolling should happen\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmin: this.isLeftToRight() ? 0 : children[children.length - 1].domNode.offsetLeft,\r\n\t\t\t\t\tmax: this.isLeftToRight() ?\r\n\t\t\t\t\t\t(children[children.length - 1].domNode.offsetLeft + children[children.length - 1].domNode.offsetWidth) - scrollNodeWidth :\r\n\t\t\t\t\t\tmaxPossibleScroll\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\t// No scrolling needed, all tabs visible, we stay either scrolled to far left or far right (depending on dir)\r\n\t\t\t\tvar onlyScrollPosition = this.isLeftToRight() ? 0 : maxPossibleScroll;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmin: onlyScrollPosition,\r\n\t\t\t\t\tmax: onlyScrollPosition\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getScrollForSelectedTab: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the scroll value setting so that the selected tab\r\n\t\t\t//\t\twill appear in the center\r\n\t\t\tvar w = this.scrollNode,\r\n\t\t\t\tn = this._selectedTab,\r\n\t\t\t\tscrollNodeWidth = domStyle.get(this.scrollNode, \"width\"),\r\n\t\t\t\tscrollBounds = this._getScrollBounds();\r\n\r\n\t\t\t// TODO: scroll minimal amount (to either right or left) so that\r\n\t\t\t// selected tab is fully visible, and just return if it's already visible?\r\n\t\t\tvar pos = (n.offsetLeft + domStyle.get(n, \"width\") / 2) - scrollNodeWidth / 2;\r\n\t\t\tpos = Math.min(Math.max(pos, scrollBounds.min), scrollBounds.max);\r\n\r\n\t\t\t// TODO:\r\n\t\t\t// If scrolling close to the left side or right side, scroll\r\n\t\t\t// all the way to the left or right.  See this._minScroll.\r\n\t\t\t// (But need to make sure that doesn't scroll the tab out of view...)\r\n\t\t\treturn pos;\r\n\t\t},\r\n\r\n\t\tcreateSmoothScroll: function(x){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a dojo._Animation object that smoothly scrolls the tab list\r\n\t\t\t//\t\teither to a fixed horizontal pixel value, or to the selected tab.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf an number argument is passed to the function, that horizontal\r\n\t\t\t//\t\tpixel position is scrolled to.  Otherwise the currently selected\r\n\t\t\t//\t\ttab is scrolled to.\r\n\t\t\t// x: Integer?\r\n\t\t\t//\t\tAn optional pixel value to scroll to, indicating distance from left.\r\n\r\n\t\t\t// Calculate position to scroll to\r\n\t\t\tif(arguments.length > 0){\r\n\t\t\t\t// position specified by caller, just make sure it's within bounds\r\n\t\t\t\tvar scrollBounds = this._getScrollBounds();\r\n\t\t\t\tx = Math.min(Math.max(x, scrollBounds.min), scrollBounds.max);\r\n\t\t\t}else{\r\n\t\t\t\t// scroll to center the current tab\r\n\t\t\t\tx = this._getScrollForSelectedTab();\r\n\t\t\t}\r\n\r\n\t\t\tif(this._anim && this._anim.status() == \"playing\"){\r\n\t\t\t\tthis._anim.stop();\r\n\t\t\t}\r\n\r\n\t\t\tvar self = this,\r\n\t\t\t\tw = this.scrollNode,\r\n\t\t\t\tanim = new fx.Animation({\r\n\t\t\t\t\tbeforeBegin: function(){\r\n\t\t\t\t\t\tif(this.curve){\r\n\t\t\t\t\t\t\tdelete this.curve;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar oldS = w.scrollLeft,\r\n\t\t\t\t\t\t\tnewS = self._convertToScrollLeft(x);\r\n\t\t\t\t\t\tanim.curve = new fx._Line(oldS, newS);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonAnimate: function(val){\r\n\t\t\t\t\t\tw.scrollLeft = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\tthis._anim = anim;\r\n\r\n\t\t\t// Disable/enable left/right buttons according to new scroll position\r\n\t\t\tthis._setButtonClass(x);\r\n\r\n\t\t\treturn anim; // dojo/_base/fx/Animation\r\n\t\t},\r\n\r\n\t\t_getBtnNode: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets a button DOM node from a mouse click event.\r\n\t\t\t// e:\r\n\t\t\t//\t\tThe mouse click event.\r\n\t\t\tvar n = e.target;\r\n\t\t\twhile(n && !domClass.contains(n, \"tabStripButton\")){\r\n\t\t\t\tn = n.parentNode;\r\n\t\t\t}\r\n\t\t\treturn n;\r\n\t\t},\r\n\r\n\t\tdoSlideRight: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScrolls the menu to the right.\r\n\t\t\t// e:\r\n\t\t\t//\t\tThe mouse click event.\r\n\t\t\tthis.doSlide(1, this._getBtnNode(e));\r\n\t\t},\r\n\r\n\t\tdoSlideLeft: function(/*Event*/ e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScrolls the menu to the left.\r\n\t\t\t// e:\r\n\t\t\t//\t\tThe mouse click event.\r\n\t\t\tthis.doSlide(-1, this._getBtnNode(e));\r\n\t\t},\r\n\r\n\t\tdoSlide: function(/*Number*/ direction, /*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScrolls the tab list to the left or right by 75% of the widget width.\r\n\t\t\t// direction:\r\n\t\t\t//\t\tIf the direction is 1, the widget scrolls to the right, if it is -1,\r\n\t\t\t//\t\tit scrolls to the left.\r\n\r\n\t\t\tif(node && domClass.contains(node, \"dijitTabDisabled\")){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sWidth = domStyle.get(this.scrollNode, \"width\");\r\n\t\t\tvar d = (sWidth * 0.75) * direction;\r\n\r\n\t\t\tvar to = this._getScroll() + d;\r\n\r\n\t\t\tthis._setButtonClass(to);\r\n\r\n\t\t\tthis.createSmoothScroll(to).play();\r\n\t\t},\r\n\r\n\t\t_setButtonClass: function(/*Number*/ scroll){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisables the left scroll button if the tabs are scrolled all the way to the left,\r\n\t\t\t//\t\tor the right scroll button in the opposite case.\r\n\t\t\t// scroll: Integer\r\n\t\t\t//\t\tamount of horizontal scroll\r\n\r\n\t\t\tvar scrollBounds = this._getScrollBounds();\r\n\t\t\tthis._leftBtn.set(\"disabled\", scroll <= scrollBounds.min);\r\n\t\t\tthis._rightBtn.set(\"disabled\", scroll >= scrollBounds.max);\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tvar ScrollingTabControllerButtonMixin = declare(\"dijit.layout._ScrollingTabControllerButtonMixin\", null, {\r\n\t\tbaseClass: \"dijitTab tabStripButton\",\r\n\r\n\t\ttemplateString: buttonTemplate,\r\n\r\n\t\t// Override inherited tabIndex: 0 from dijit/form/Button, because user shouldn't be\r\n\t\t// able to tab to the left/right/menu buttons\r\n\t\ttabIndex: \"\",\r\n\r\n\t\t// Similarly, override FormWidget.isFocusable() because clicking a button shouldn't focus it\r\n\t\t// either (this override avoids focus() call in FormWidget.js)\r\n\t\tisFocusable: function(){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n\r\n\t// Class used in template\r\n\tdeclare(\"dijit.layout._ScrollingTabControllerButton\", [Button, ScrollingTabControllerButtonMixin]);\r\n\r\n\t// Class used in template\r\n\tdeclare(\"dijit.layout._ScrollingTabControllerMenuButton\", [Button, _HasDropDown, ScrollingTabControllerButtonMixin], {\r\n\t\t// id of the TabContainer itself\r\n\t\tcontainerId: \"\",\r\n\r\n\t\t// -1 so user can't tab into the button, but so that button can still be focused programatically.\r\n\t\t// Because need to move focus to the button (or somewhere) before the menu is hidden or IE6 will crash.\r\n\t\ttabIndex: \"-1\",\r\n\r\n\t\tisLoaded: function(){\r\n\t\t\t// recreate menu every time, in case the TabContainer's list of children (or their icons/labels) have changed\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tloadDropDown: function(callback){\r\n\t\t\tthis.dropDown = new Menu({\r\n\t\t\t\tid: this.containerId + \"_menu\",\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir\r\n\t\t\t});\r\n\t\t\tvar container = registry.byId(this.containerId);\r\n\t\t\tarray.forEach(container.getChildren(), function(page){\r\n\t\t\t\tvar menuItem = new MenuItem({\r\n\t\t\t\t\tid: page.id + \"_stcMi\",\r\n\t\t\t\t\tlabel: page.title,\r\n\t\t\t\t\ticonClass: page.iconClass,\r\n\t\t\t\t\tdisabled: page.disabled,\r\n\t\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\t\tdir: page.dir,\r\n\t\t\t\t\tlang: page.lang,\r\n\t\t\t\t\ttextDir: page.textDir || container.textDir,\r\n\t\t\t\t\tonClick: function(){\r\n\t\t\t\t\t\tcontainer.selectChild(page);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.dropDown.addChild(menuItem);\r\n\t\t\t}, this);\r\n\t\t\tcallback();\r\n\t\t},\r\n\r\n\t\tcloseDropDown: function(/*Boolean*/ focus){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.dropDown){\r\n\t\t\t\tthis._popupStateNode.removeAttribute(\"aria-owns\");\t// remove ref to node that we are about to delete\r\n\t\t\t\tthis.dropDown.destroyRecursive();\r\n\t\t\t\tdelete this.dropDown;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn ScrollingTabController;\r\n});\r\n\ndefine('dijit/layout/TabContainer',[\r\n\t\"dojo/_base/lang\", // lang.getObject\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"./_TabContainerBase\",\r\n\t\"./TabController\",\r\n\t\"./ScrollingTabController\"\r\n], function(lang, declare, _TabContainerBase, TabController, ScrollingTabController){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/TabContainer\r\n\r\n\r\n\treturn declare(\"dijit.layout.TabContainer\", _TabContainerBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA Container with tabs to select each child (only one of which is displayed at a time).\r\n\t\t// description:\r\n\t\t//\t\tA TabContainer is a container that has multiple panes, but shows only\r\n\t\t//\t\tone pane at a time.  There are a set of tabs corresponding to each pane,\r\n\t\t//\t\twhere each tab has the name (aka title) of the pane, and optionally a close button.\r\n\t\t//\r\n\t\t//\t\tSee `StackContainer.ChildWidgetProperties` for details on the properties that can be set on\r\n\t\t//\t\tchildren of a `TabContainer`.\r\n\r\n\t\t// useMenu: [const] Boolean\r\n\t\t//\t\tTrue if a menu should be used to select tabs when they are too\r\n\t\t//\t\twide to fit the TabContainer, false otherwise.\r\n\t\tuseMenu: true,\r\n\r\n\t\t// useSlider: [const] Boolean\r\n\t\t//\t\tTrue if a slider should be used to select tabs when they are too\r\n\t\t//\t\twide to fit the TabContainer, false otherwise.\r\n\t\tuseSlider: true,\r\n\r\n\t\t// controllerWidget: Class\r\n\t\t//\t\tAn optional parameter to override the widget used to display the tab labels\r\n\t\tcontrollerWidget: \"\",\r\n\r\n\t\t_makeController: function(/*DomNode*/ srcNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInstantiate tablist controller widget and return reference to it.\r\n\t\t\t//\t\tCallback from _TabContainerBase.postCreate().\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected extension\r\n\r\n\t\t\t// \"string\" branch for back-compat, remove for 2.0\r\n\t\t\tvar cls = this.baseClass + \"-tabs\" + (this.doLayout ? \"\" : \" dijitTabNoLayout\"),\r\n\t\t\t\tTabController = typeof this.controllerWidget == \"string\" ? lang.getObject(this.controllerWidget) :\r\n\t\t\t\t\t\tthis.controllerWidget;\r\n\r\n\t\t\treturn new TabController({\r\n\t\t\t\tid: this.id + \"_tablist\",\r\n\t\t\t\townerDocument: this.ownerDocument,\r\n\t\t\t\tdir: this.dir,\r\n\t\t\t\tlang: this.lang,\r\n\t\t\t\ttextDir: this.textDir,\r\n\t\t\t\ttabPosition: this.tabPosition,\r\n\t\t\t\tdoLayout: this.doLayout,\r\n\t\t\t\tcontainerId: this.id,\r\n\t\t\t\t\"class\": cls,\r\n\t\t\t\tnested: this.nested,\r\n\t\t\t\tuseMenu: this.useMenu,\r\n\t\t\t\tuseSlider: this.useSlider,\r\n\t\t\t\ttabStripClass: this.tabStrip ? this.baseClass + (this.tabStrip ? \"\":\"No\") + \"Strip\": null\r\n\t\t\t}, srcNode);\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Scrolling controller only works for horizontal non-nested tabs\r\n\t\t\tif(!this.controllerWidget){\r\n\t\t\t\tthis.controllerWidget = (this.tabPosition == \"top\" || this.tabPosition == \"bottom\") && !this.nested ?\r\n\t\t\t\t\t\t\tScrollingTabController : TabController;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/dijit-all',[\r\n\t\"./main\",\r\n\t\"./dijit\",\r\n\t\"./ColorPalette\",\r\n\t\"./Declaration\",\r\n\t\"./Dialog\",\r\n\t\"./DialogUnderlay\",\r\n\t\"./TooltipDialog\",\r\n\t\"./Editor\",\r\n\t\"./_editor/plugins/FontChoice\",\r\n\t\"./_editor/plugins/LinkDialog\",\r\n\t\"./Menu\",\r\n\t\"./MenuItem\",\r\n\t\"./PopupMenuItem\",\r\n\t\"./CheckedMenuItem\",\r\n\t\"./MenuBar\",\r\n\t\"./MenuBarItem\",\r\n\t\"./PopupMenuBarItem\",\r\n\t\"./MenuSeparator\",\r\n\t\"./ProgressBar\",\r\n\t\"./TitlePane\",\r\n\t\"./Toolbar\",\r\n\t\"./Tooltip\",\r\n\t\"./Tree\",\r\n\t\"./InlineEditBox\",\r\n\t\"./form/Form\",\r\n\t\"./form/Button\",\r\n\t\"./form/DropDownButton\",\r\n\t\"./form/ComboButton\",\r\n\t\"./form/ToggleButton\",\r\n\t\"./form/CheckBox\",\r\n\t\"./form/RadioButton\",\r\n\t\"./form/TextBox\",\r\n\t\"./form/ValidationTextBox\",\r\n\t\"./form/CurrencyTextBox\",\r\n\t\"./form/DateTextBox\",\r\n\t\"./form/TimeTextBox\",\r\n\t\"./form/NumberSpinner\",\r\n\t\"./form/NumberTextBox\",\r\n\t\"./form/ComboBox\",\r\n\t\"./form/FilteringSelect\",\r\n\t\"./form/MultiSelect\",\r\n\t\"./form/Select\",\r\n\t\"./form/HorizontalSlider\",\r\n\t\"./form/VerticalSlider\",\r\n\t\"./form/HorizontalRule\",\r\n\t\"./form/VerticalRule\",\r\n\t\"./form/HorizontalRuleLabels\",\r\n\t\"./form/VerticalRuleLabels\",\r\n\t\"./form/SimpleTextarea\",\r\n\t\"./form/Textarea\",\r\n\t\"./layout/AccordionContainer\",\r\n\t\"./layout/ContentPane\",\r\n\t\"./layout/BorderContainer\",\r\n\t\"./layout/LayoutContainer\",\r\n\t\"./layout/LinkPane\",\r\n\t\"./layout/SplitContainer\",\r\n\t\"./layout/StackContainer\",\r\n\t\"./layout/TabContainer\"\r\n], function(dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/dijit-all\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tA rollup that includes every dijit. You probably don't need this.\r\n\t};\r\n\t=====*/\r\n\r\n\tconsole.warn(\"dijit-all may include much more code than your application actually requires. We strongly recommend that you investigate a custom build or the web build tool\");\r\n\r\n\treturn dijit;\r\n});\r\n\ndefine('dijit/RadioMenuItem',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.toggle\r\n\t\"dojo/query!css2\", // query\r\n\t\"./CheckedMenuItem\",\r\n\t\"./registry\"    // registry.getEnclosingWidget\r\n], function(array, declare, domClass, query, CheckedMenuItem, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/RadioButtonMenuItem\r\n\r\n\treturn declare(\"dijit.RadioButtonMenuItem\", CheckedMenuItem, {\r\n\t\t// summary:\r\n\t\t//\t\tA radio-button-like menu item for toggling on and off\r\n\r\n\t\t// Use both base classes so we get styles like dijitMenuItemDisabled\r\n\t\tbaseClass: \"dijitMenuItem dijitRadioMenuItem\",\r\n\r\n\t\trole: \"menuitemradio\",\r\n\r\n\t\t// checkedChar: String\r\n\t\t//\t\tCharacter (or string) used in place of radio button icon when display in high contrast mode\r\n\t\tcheckedChar: \"*\",\r\n\r\n\t\t// group: String\r\n\t\t//\t\tToggling on a RadioMenuItem in a given group toggles off the other RadioMenuItems in that group.\r\n\t\tgroup: \"\",\r\n\t\t_setGroupAttr: \"domNode\",\t// needs to be set as an attribute so dojo/query can find it\r\n\r\n\t\t_setCheckedAttr: function(/*Boolean*/ checked){\r\n\t\t\t// If I am being checked then have to deselect currently checked items\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!this._created){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(checked && this.group){\r\n\t\t\t\tarray.forEach(this._getRelatedWidgets(), function(widget){\r\n\t\t\t\t\tif(widget != this && widget.checked){\r\n\t\t\t\t\t\twidget.set('checked', false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onClick: function(evt){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClicking this item toggles it on.   If it's already on, then clicking does nothing.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(!this.disabled && !this.checked){\r\n\t\t\t\tthis.set(\"checked\", true);\r\n\t\t\t\tthis.onChange(true);\r\n\t\t\t}\r\n\t\t\tthis.onClick(evt);\r\n\t\t},\r\n\r\n\t\t_getRelatedWidgets: function(){\r\n\t\t\t// Private function needed to help iterate over all radio menu items in a group.\r\n\t\t\tvar ary = [];\r\n\t\t\tquery(\"[group=\" + this.group + \"][role=\" + this.role + \"]\").forEach(\r\n\t\t\t\tfunction(menuItemNode){\r\n\t\t\t\t\tvar widget = registry.getEnclosingWidget(menuItemNode);\r\n\t\t\t\t\tif(widget){\r\n\t\t\t\t\t\tary.push(widget);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn ary;\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/_editor/plugins/FullScreen',[\r\n\t\"dojo/aspect\",\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-class\", // domClass.add domClass.remove\r\n\t\"dojo/dom-geometry\",\r\n\t\"dojo/dom-style\",\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/keys\", // keys.F11 keys.TAB\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\", // on()\r\n\t\"dojo/sniff\", // has(\"ie\"), has(\"quirks\")\r\n\t\"dojo/_base/window\", // win.body\r\n\t\"dojo/window\", // winUtils.getBox winUtils.scrollIntoView\r\n\t\"../../focus\", // focus.focus(), focus.curNode\r\n\t\"../_Plugin\",\r\n\t\"../../form/ToggleButton\",\r\n\t\"../../registry\", // registry.getEnclosingWidget()\r\n\t\"dojo/i18n!../nls/commands\"\r\n], function(aspect, declare, domClass, domGeometry, domStyle, i18n, keys, lang, on, has, win, winUtils,\r\n\t\t\tfocus, _Plugin, ToggleButton, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/FullScreen\r\n\r\n\tvar FullScreen = declare(\"dijit._editor.plugins.FullScreen\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin provides FullScreen capability to the editor.  When\r\n\t\t//\t\ttoggled on, it will render the editor into the full window and\r\n\t\t//\t\toverlay everything.  It also binds to the hotkey: CTRL-SHIFT-F11\r\n\t\t//\t\tfor toggling fullscreen mode.\r\n\r\n\t\t// zIndex: [public] Number\r\n\t\t//\t\tzIndex value used for overlaying the full page.\r\n\t\t//\t\tdefault is 500.\r\n\t\tzIndex: 500,\r\n\r\n\t\t// _origState: [private] Object\r\n\t\t//\t\tThe original view state of the editor.\r\n\t\t_origState: null,\r\n\r\n\t\t// _origiFrameState: [private] Object\r\n\t\t//\t\tThe original view state of the iframe of the editor.\r\n\t\t_origiFrameState: null,\r\n\r\n\t\t// _resizeHandle: [private] Object\r\n\t\t//\t\tConnection point used for handling resize when window resizes.\r\n\t\t_resizeHandle: null,\r\n\r\n\t\t// isFullscreen: [const] boolean\r\n\t\t//\t\tRead-Only variable used to denote of the editor is in fullscreen mode or not.\r\n\t\tisFullscreen: false,\r\n\r\n\t\ttoggle: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to allow programmatic toggling of the view.\r\n\t\t\tthis.button.set(\"checked\", !this.button.get(\"checked\"));\r\n\t\t},\r\n\r\n\t\t_initButton: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for creation of the resize button.\r\n\t\t\tvar strings = i18n.getLocalization(\"dijit._editor\", \"commands\"),\r\n\t\t\t\teditor = this.editor;\r\n\t\t\tthis.button = new ToggleButton({\r\n\t\t\t\tlabel: strings[\"fullScreen\"],\r\n\t\t\t\townerDocument: editor.ownerDocument,\r\n\t\t\t\tdir: editor.dir,\r\n\t\t\t\tlang: editor.lang,\r\n\t\t\t\tshowLabel: false,\r\n\t\t\t\ticonClass: this.iconClassPrefix + \" \" + this.iconClassPrefix + \"FullScreen\",\r\n\t\t\t\ttabIndex: \"-1\",\r\n\t\t\t\tonChange: lang.hitch(this, \"_setFullScreen\")\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetEditor: function(editor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for the setting of the editor.\r\n\t\t\t// editor: Object\r\n\t\t\t//\t\tThe editor to configure for this plugin to use.\r\n\t\t\tthis.editor = editor;\r\n\t\t\tthis._initButton();\r\n\r\n\t\t\tthis.editor.addKeyHandler(keys.F11, true, true, lang.hitch(this, function(e){\r\n\t\t\t\t// Enable the CTRL-SHIFT-F11 hotkey for fullscreen mode.\r\n\t\t\t\tthis.toggle();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.editor.defer(\"focus\", 250);\r\n\t\t\t\treturn true;\r\n\t\t\t}));\r\n\t\t\tthis.own(on(this.editor.domNode, \"keydown\", lang.hitch(this, \"_containFocus\")));\r\n\t\t},\r\n\r\n\t\t_containFocus: function(e){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWhen in Full Screen mode, it's good to try and retain focus in the editor\r\n\t\t\t//\t\tso this function is intended to try and constrain the TAB key.\r\n\t\t\t// e: Event\r\n\t\t\t//\t\tThe key event.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(this.isFullscreen){\r\n\t\t\t\tvar ed = this.editor;\r\n\t\t\t\tif(!ed.isTabIndent &&\r\n\t\t\t\t\ted._fullscreen_oldOnKeyDown &&\r\n\t\t\t\t\te.keyCode === keys.TAB){\r\n\t\t\t\t\t// If we're in fullscreen mode, we want to take over how tab moves focus a bit.\r\n\t\t\t\t\t// to keep it within the editor since it's hiding the rest of the page.\r\n\t\t\t\t\t// IE hates changing focus IN the event handler, so need to put calls\r\n\t\t\t\t\t// in a timeout.  Gotta love IE.\r\n\t\t\t\t\t// Also need to check for alternate view nodes if present and active.\r\n\t\t\t\t\tvar f = focus.curNode;\r\n\t\t\t\t\tvar avn = this._getAltViewNode();\r\n\t\t\t\t\tif(f == ed.iframe ||\r\n\t\t\t\t\t\t(avn && f === avn)){\r\n\t\t\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\t\ted.toolbar.focus();\r\n\t\t\t\t\t\t}), 10);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(avn && domStyle.get(ed.iframe, \"display\") === \"none\"){\r\n\t\t\t\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\t\t\tfocus.focus(avn);\r\n\t\t\t\t\t\t\t}), 10);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\t\t\ted.focus();\r\n\t\t\t\t\t\t\t}), 10);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}else if(ed._fullscreen_oldOnKeyDown){\r\n\t\t\t\t\t// Only call up when it's a different function.  Traps corner case event issue\r\n\t\t\t\t\t// on IE which caused stack overflow on handler cleanup.\r\n\t\t\t\t\ted._fullscreen_oldOnKeyDown(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_resizeEditor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to handle resizing the editor as the viewport\r\n\t\t\t//\t\tresizes (window scaled)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar vp = winUtils.getBox(this.editor.ownerDocument);\r\n\t\t\tdomGeometry.setMarginBox(this.editor.domNode, {\r\n\t\t\t\tw: vp.w,\r\n\t\t\t\th: vp.h\r\n\t\t\t});\r\n\r\n\t\t\t//Adjust the internal heights too, as they can be a bit off.\r\n\t\t\tvar hHeight = this.editor.getHeaderHeight();\r\n\t\t\tvar fHeight = this.editor.getFooterHeight();\r\n\t\t\tvar extents = domGeometry.getPadBorderExtents(this.editor.domNode);\r\n\t\t\tvar fcpExtents = domGeometry.getPadBorderExtents(this.editor.iframe.parentNode);\r\n\t\t\tvar fcmExtents = domGeometry.getMarginExtents(this.editor.iframe.parentNode);\r\n\r\n\t\t\tvar cHeight = vp.h - (hHeight + extents.h + fHeight);\r\n\t\t\tdomGeometry.setMarginBox(this.editor.iframe.parentNode, {\r\n\t\t\t\th: cHeight,\r\n\t\t\t\tw: vp.w\r\n\t\t\t});\r\n\t\t\tdomGeometry.setMarginBox(this.editor.iframe, {\r\n\t\t\t\th: cHeight - (fcpExtents.h + fcmExtents.h)\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_getAltViewNode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis function is intended as a hook point for setting an\r\n\t\t\t//\t\talternate view node for when in full screen mode and the\r\n\t\t\t//\t\teditable iframe is hidden.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected.\r\n\t\t},\r\n\r\n\t\t_setFullScreen: function(full){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to handle toggling between full screen and\r\n\t\t\t//\t\tregular view.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t//Alias this for shorter code.\r\n\t\t\tvar ed = this.editor;\r\n\t\t\tvar body = ed.ownerDocumentBody;\r\n\t\t\tvar editorParent = ed.domNode.parentNode;\r\n\r\n\t\t\tvar vp = winUtils.getBox(ed.ownerDocument);\r\n\r\n\t\t\tthis.isFullscreen = full;\r\n\r\n\t\t\tif(full){\r\n\t\t\t\t//Parent classes can royally screw up this plugin, so we\r\n\t\t\t\t//have to set everything to position static.\r\n\t\t\t\twhile(editorParent && editorParent !== body){\r\n\t\t\t\t\tdomClass.add(editorParent, \"dijitForceStatic\");\r\n\t\t\t\t\teditorParent = editorParent.parentNode;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Save off the resize function.  We want to kill its behavior.\r\n\t\t\t\tthis._editorResizeHolder = this.editor.resize;\r\n\t\t\t\ted.resize = function(){\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Try to constrain focus control.\r\n\t\t\t\ted._fullscreen_oldOnKeyDown = ed.onKeyDown;\r\n\t\t\t\ted.onKeyDown = lang.hitch(this, this._containFocus);\r\n\r\n\t\t\t\tthis._origState = {};\r\n\t\t\t\tthis._origiFrameState = {};\r\n\r\n\t\t\t\t// Store the basic editor state we have to restore later.\r\n\t\t\t\t// Not using domStyle.get here, had problems, didn't\r\n\t\t\t\t// give me stuff like 100%, gave me pixel calculated values.\r\n\t\t\t\t// Need the exact original values.\r\n\t\t\t\tvar domNode = ed.domNode,\r\n\t\t\t\t\trawStyle = domNode && domNode.style || {};\r\n\t\t\t\tthis._origState = {\r\n\t\t\t\t\twidth: rawStyle.width || \"\",\r\n\t\t\t\t\theight: rawStyle.height || \"\",\r\n\t\t\t\t\ttop: domStyle.get(domNode, \"top\") || \"\",\r\n\t\t\t\t\tleft: domStyle.get(domNode, \"left\") || \"\",\r\n\t\t\t\t\tposition: domStyle.get(domNode, \"position\") || \"static\",\r\n\t\t\t\t\tmarginBox: domGeometry.getMarginBox(ed.domNode)\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Store the iframe state we have to restore later.\r\n\t\t\t\t// Not using domStyle.get here, had problems, didn't\r\n\t\t\t\t// give me stuff like 100%, gave me pixel calculated values.\r\n\t\t\t\t// Need the exact original values.\r\n\t\t\t\tvar iframe = ed.iframe,\r\n\t\t\t\t\tiframeStyle = iframe && iframe.style || {};\r\n\r\n\t\t\t\tvar bc = domStyle.get(ed.iframe, \"backgroundColor\");\r\n\t\t\t\tthis._origiFrameState = {\r\n\t\t\t\t\tbackgroundColor: bc || \"transparent\",\r\n\t\t\t\t\twidth: iframeStyle.width || \"auto\",\r\n\t\t\t\t\theight: iframeStyle.height || \"auto\",\r\n\t\t\t\t\tzIndex: iframeStyle.zIndex || \"\"\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Okay, size everything.\r\n\t\t\t\tdomStyle.set(ed.domNode, {\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"0px\",\r\n\t\t\t\t\tleft: \"0px\",\r\n\t\t\t\t\tzIndex: this.zIndex,\r\n\t\t\t\t\twidth: vp.w + \"px\",\r\n\t\t\t\t\theight: vp.h + \"px\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdomStyle.set(ed.iframe, {\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tzIndex: this.zIndex,\r\n\t\t\t\t\tbackgroundColor: bc !== \"transparent\" &&\r\n\t\t\t\t\t\tbc !== \"rgba(0, 0, 0, 0)\" ? bc : \"white\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdomStyle.set(ed.iframe.parentNode, {\r\n\t\t\t\t\theight: \"95%\",\r\n\t\t\t\t\twidth: \"100%\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Store the overflow state we have to restore later.\r\n\t\t\t\t// IE had issues, so have to check that it's defined.  Ugh.\r\n\t\t\t\tif(body.style && body.style.overflow){\r\n\t\t\t\t\tthis._oldOverflow = domStyle.get(body, \"overflow\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._oldOverflow = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(has(\"ie\") && !has(\"quirks\")){\r\n\t\t\t\t\t// IE will put scrollbars in anyway, html (parent of body)\r\n\t\t\t\t\t// also controls them in standards mode, so we have to\r\n\t\t\t\t\t// remove them, argh.\r\n\t\t\t\t\tif(body.parentNode &&\r\n\t\t\t\t\t\tbody.parentNode.style &&\r\n\t\t\t\t\t\tbody.parentNode.style.overflow){\r\n\t\t\t\t\t\tthis._oldBodyParentOverflow = body.parentNode.style.overflow;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tthis._oldBodyParentOverflow = domStyle.get(body.parentNode, \"overflow\");\r\n\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t\tthis._oldBodyParentOverflow = \"scroll\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomStyle.set(body.parentNode, \"overflow\", \"hidden\");\r\n\t\t\t\t}\r\n\t\t\t\tdomStyle.set(body, \"overflow\", \"hidden\");\r\n\r\n\t\t\t\tvar resizer = function(){\r\n\t\t\t\t\t// function to handle resize events.\r\n\t\t\t\t\t// Will check current VP and only resize if\r\n\t\t\t\t\t// different.\r\n\t\t\t\t\tvar vp = winUtils.getBox(ed.ownerDocument);\r\n\t\t\t\t\tif(\"_prevW\" in this && \"_prevH\" in this){\r\n\t\t\t\t\t\t// No actual size change, ignore.\r\n\t\t\t\t\t\tif(vp.w === this._prevW && vp.h === this._prevH){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._prevW = vp.w;\r\n\t\t\t\t\t\tthis._prevH = vp.h;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this._resizer){\r\n\t\t\t\t\t\tclearTimeout(this._resizer);\r\n\t\t\t\t\t\tdelete this._resizer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Timeout it to help avoid spamming resize on IE.\r\n\t\t\t\t\t// Works for all browsers.\r\n\t\t\t\t\tthis._resizer = setTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\tdelete this._resizer;\r\n\t\t\t\t\t\tthis._resizeEditor();\r\n\t\t\t\t\t}), 10);\r\n\t\t\t\t};\r\n\t\t\t\tthis._resizeHandle = on(window, \"resize\", lang.hitch(this, resizer));\r\n\r\n\t\t\t\t// Also monitor for direct calls to resize and adapt editor.\r\n\t\t\t\tthis._resizeHandle2 = aspect.after(ed, \"onResize\", lang.hitch(this, function(){\r\n\t\t\t\t\tif(this._resizer){\r\n\t\t\t\t\t\tclearTimeout(this._resizer);\r\n\t\t\t\t\t\tdelete this._resizer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._resizer = setTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\tdelete this._resizer;\r\n\t\t\t\t\t\tthis._resizeEditor();\r\n\t\t\t\t\t}), 10);\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// Call it once to work around IE glitchiness.  Safe for other browsers too.\r\n\t\t\t\tthis._resizeEditor();\r\n\t\t\t\tvar dn = this.editor.toolbar.domNode;\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\twinUtils.scrollIntoView(dn);\r\n\t\t\t\t}, 250);\r\n\t\t\t}else{\r\n\t\t\t\tif(this._resizeHandle){\r\n\t\t\t\t\t// Cleanup resizing listeners\r\n\t\t\t\t\tthis._resizeHandle.remove();\r\n\t\t\t\t\tthis._resizeHandle = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(this._resizeHandle2){\r\n\t\t\t\t\t// Cleanup resizing listeners\r\n\t\t\t\t\tthis._resizeHandle2.remove();\r\n\t\t\t\t\tthis._resizeHandle2 = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(this._rst){\r\n\t\t\t\t\tclearTimeout(this._rst);\r\n\t\t\t\t\tthis._rst = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Remove all position static class assigns.\r\n\t\t\t\twhile(editorParent && editorParent !== body){\r\n\t\t\t\t\tdomClass.remove(editorParent, \"dijitForceStatic\");\r\n\t\t\t\t\teditorParent = editorParent.parentNode;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Restore resize function\r\n\t\t\t\tif(this._editorResizeHolder){\r\n\t\t\t\t\tthis.editor.resize = this._editorResizeHolder;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!this._origState && !this._origiFrameState){\r\n\t\t\t\t\t// If we actually didn't toggle, then don't do anything.\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(ed._fullscreen_oldOnKeyDown){\r\n\t\t\t\t\ted.onKeyDown = ed._fullscreen_oldOnKeyDown;\r\n\t\t\t\t\tdelete ed._fullscreen_oldOnKeyDown;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add a timeout to make sure we don't have a resize firing in the\r\n\t\t\t\t// background at the time of minimize.\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t// Restore all the editor state.\r\n\t\t\t\t\tvar mb = self._origState.marginBox;\r\n\t\t\t\t\tvar oh = self._origState.height;\r\n\t\t\t\t\tif(has(\"ie\") && !has(\"quirks\")){\r\n\t\t\t\t\t\tbody.parentNode.style.overflow = self._oldBodyParentOverflow;\r\n\t\t\t\t\t\tdelete self._oldBodyParentOverflow;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomStyle.set(body, \"overflow\", self._oldOverflow);\r\n\t\t\t\t\tdelete self._oldOverflow;\r\n\r\n\t\t\t\t\tdomStyle.set(ed.domNode, self._origState);\r\n\t\t\t\t\tdomStyle.set(ed.iframe.parentNode, {\r\n\t\t\t\t\t\theight: \"\",\r\n\t\t\t\t\t\twidth: \"\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdomStyle.set(ed.iframe, self._origiFrameState);\r\n\t\t\t\t\tdelete self._origState;\r\n\t\t\t\t\tdelete self._origiFrameState;\r\n\t\t\t\t\t// In case it is contained in a layout and the layout changed size,\r\n\t\t\t\t\t// go ahead and call resize.\r\n\t\t\t\t\tvar pWidget = registry.getEnclosingWidget(ed.domNode.parentNode);\r\n\t\t\t\t\tif(pWidget && pWidget.resize){\r\n\t\t\t\t\t\tpWidget.resize();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(!oh || oh.indexOf(\"%\") < 0){\r\n\t\t\t\t\t\t\t// Resize if the original size wasn't set\r\n\t\t\t\t\t\t\t// or wasn't in percent.  Timeout is to avoid\r\n\t\t\t\t\t\t\t// an IE crash in unit testing.\r\n\t\t\t\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\t\t\ted.resize({h: mb.h});\r\n\t\t\t\t\t\t\t}), 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\twinUtils.scrollIntoView(self.editor.toolbar.domNode);\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for button state control for disabled to work.\r\n\t\t\tthis.button.set(\"disabled\", this.get(\"disabled\"));\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride to ensure the resize handle gets cleaned up.\r\n\t\t\tif(this._resizeHandle){\r\n\t\t\t\t// Cleanup resizing listeners\r\n\t\t\t\tthis._resizeHandle.remove();\r\n\t\t\t\tthis._resizeHandle = null;\r\n\t\t\t}\r\n\t\t\tif(this._resizeHandle2){\r\n\t\t\t\t// Cleanup resizing listeners\r\n\t\t\t\tthis._resizeHandle2.remove();\r\n\t\t\t\tthis._resizeHandle2 = null;\r\n\t\t\t}\r\n\t\t\tif(this._resizer){\r\n\t\t\t\tclearTimeout(this._resizer);\r\n\t\t\t\tthis._resizer = null;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\t// Register this plugin.\r\n\t// For back-compat accept \"fullscreen\" (all lowercase) too, remove in 2.0\r\n\t_Plugin.registry[\"fullScreen\"] = _Plugin.registry[\"fullscreen\"] = function(args){\r\n\t\treturn new FullScreen({\r\n\t\t\tzIndex: (\"zIndex\" in args) ? args.zIndex : 500\r\n\t\t});\r\n\t};\r\n\r\n\treturn FullScreen;\r\n});\r\n\ndefine('dijit/_editor/plugins/TabIndent',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/kernel\", // kernel.experimental\r\n\t\"../_Plugin\",\r\n\t\"../../form/ToggleButton\"\r\n], function(declare, kernel, _Plugin, ToggleButton){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/TabIndent\r\n\r\n\tkernel.experimental(\"dijit._editor.plugins.TabIndent\");\r\n\r\n\r\n\tvar TabIndent = declare(\"dijit._editor.plugins.TabIndent\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin is used to allow the use of the tab and shift-tab keys\r\n\t\t//\t\tto indent/outdent list items.  This overrides the default behavior\r\n\t\t//\t\tof moving focus from/to the toolbar\r\n\r\n\t\t// Override _Plugin.useDefaultCommand... processing is handled by this plugin, not by dijit/Editor.\r\n\t\tuseDefaultCommand: false,\r\n\r\n\t\t// Override _Plugin.buttonClass to use a ToggleButton for this plugin rather than a vanilla Button\r\n\t\tbuttonClass: ToggleButton,\r\n\r\n\t\tcommand: \"tabIndent\",\r\n\r\n\t\t_initButton: function(){\r\n\t\t\t// Override _Plugin._initButton() to setup listener on button click\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tvar e = this.editor;\r\n\t\t\tthis.own(this.button.on(\"change\", function(val){\r\n\t\t\t\te.set(\"isTabIndent\", val);\r\n\t\t\t}));\r\n\r\n\t\t\t// Set initial checked state of button based on Editor.isTabIndent\r\n\t\t\tthis.updateState();\r\n\t\t},\r\n\r\n\t\tupdateState: function(){\r\n\t\t\t// Overrides _Plugin.updateState().\r\n\t\t\t// Ctrl-m in the editor will switch tabIndent mode on/off, so we need to react to that.\r\n\t\t\tvar disabled = this.get(\"disabled\");\r\n\t\t\tthis.button.set(\"disabled\", disabled);\r\n\t\t\tif(disabled){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.button.set('checked', this.editor.isTabIndent, false);\r\n\t\t}\r\n\t});\r\n\r\n\t// Register this plugin.\r\n\t_Plugin.registry[\"tabIndent\"] = function(){\r\n\t\treturn new TabIndent({command: \"tabIndent\"});\r\n\t};\r\n\r\n\r\n\treturn TabIndent;\r\n});\r\n\ndefine('dijit/_editor/plugins/TextColor',[\r\n\t\"require\",\r\n\t\"dojo/colors\", // colors.fromRgb\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/lang\",\r\n\t\"../_Plugin\",\r\n\t\"../../form/DropDownButton\"\r\n], function(require, colors, declare, lang, _Plugin, DropDownButton){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/TextColor\r\n\r\n\tvar TextColor = declare(\"dijit._editor.plugins.TextColor\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin provides dropdown color pickers for setting text color and background color\r\n\t\t// description:\r\n\t\t//\t\tThe commands provided by this plugin are:\r\n\t\t//\r\n\t\t//\t\t- foreColor - sets the text color\r\n\t\t//\t\t- hiliteColor - sets the background color\r\n\r\n\t\t// Override _Plugin.buttonClass to use DropDownButton (with ColorPalette) to control this plugin\r\n\t\tbuttonClass: DropDownButton,\r\n\t\t\t\t\r\n\t\t// colorPicker: String|Constructor\r\n\t\t//\t\tThe color picker dijit to use, defaults to dijit/ColorPalette\r\n\t\tcolorPicker: \"dijit/ColorPalette\",\r\n\r\n\t\t// useDefaultCommand: Boolean\r\n\t\t//\t\tFalse as we do not use the default editor command/click behavior.\r\n\t\tuseDefaultCommand: false,\r\n\r\n\t\t_initButton: function(){\r\n\t\t\tthis.command = this.name;\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// Setup to lazy load ColorPalette first time the button is clicked\r\n\t\t\tvar self = this;\r\n\t\t\tthis.button.loadDropDown = function(callback){\r\n\t\t\t\tfunction onColorPaletteLoad(ColorPalette){\r\n\t\t\t\t\tself.button.dropDown = new ColorPalette({\r\n\t\t\t\t\t\tdir: self.editor.dir,\r\n\t\t\t\t\t\townerDocument: self.editor.ownerDocument,\r\n\t\t\t\t\t\tvalue: self.value,\r\n\t\t\t\t\t\tonChange: function(color){\r\n\t\t\t\t\t\t\tself.editor.execCommand(self.command, color);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonExecute: function(){\r\n\t\t\t\t\t\t\tself.editor.execCommand(self.command, this.get(\"value\"));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof self.colorPicker == \"string\"){\r\n\t\t\t\t\trequire([self.colorPicker], onColorPaletteLoad);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tonColorPaletteLoad(self.colorPicker);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tupdateState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOverrides _Plugin.updateState().  This updates the ColorPalette\r\n\t\t\t//\t\tto show the color of the currently selected text.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar _e = this.editor;\r\n\t\t\tvar _c = this.command;\r\n\t\t\tif(!_e || !_e.isLoaded || !_c.length){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.button){\r\n\t\t\t\tvar disabled = this.get(\"disabled\");\r\n\t\t\t\tthis.button.set(\"disabled\", disabled);\r\n\t\t\t\tif(disabled){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar value;\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvalue = _e.queryCommandValue(_c) || \"\";\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t//Firefox may throw error above if the editor is just loaded, ignore it\r\n\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(value == \"\"){\r\n\t\t\t\tvalue = \"#000000\";\r\n\t\t\t}\r\n\t\t\tif(value == \"transparent\"){\r\n\t\t\t\tvalue = \"#ffffff\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof value == \"string\"){\r\n\t\t\t\t//if RGB value, convert to hex value\r\n\t\t\t\tif(value.indexOf(\"rgb\") > -1){\r\n\t\t\t\t\tvalue = colors.fromRgb(value).toHex();\r\n\t\t\t\t}\r\n\t\t\t}else{    //it's an integer(IE returns an MS access #)\r\n\t\t\t\tvalue = ((value & 0x0000ff) << 16) | (value & 0x00ff00) | ((value & 0xff0000) >>> 16);\r\n\t\t\t\tvalue = value.toString(16);\r\n\t\t\t\tvalue = \"#000000\".slice(0, 7 - value.length) + value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.value = value;\r\n\r\n\t\t\tvar dropDown = this.button.dropDown;\r\n\t\t\tif(dropDown && dropDown.get && value !== dropDown.get('value')){\r\n\t\t\t\tdropDown.set('value', value, false);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Register this plugin.\r\n\t_Plugin.registry[\"foreColor\"] = function(args){\r\n\t\treturn new TextColor(args);\r\n\t};\r\n\t_Plugin.registry[\"hiliteColor\"] = function(args){\r\n\t\treturn new TextColor(args);\r\n\t};\r\n\r\n\treturn TextColor;\r\n});\r\n\ndefine('dijit/_editor/plugins/ViewSource',[\r\n\t\"dojo/_base/array\", // array.forEach\r\n\t\"dojo/aspect\", // Aspect commands for advice\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/dom-attr\", // domAttr.set\r\n\t\"dojo/dom-construct\", // domConstruct.create domConstruct.place\r\n\t\"dojo/dom-geometry\", // domGeometry.setMarginBox domGeometry.position\r\n\t\"dojo/dom-style\", // domStyle.set\r\n\t\"dojo/i18n\", // i18n.getLocalization\r\n\t\"dojo/keys\", // keys.F12\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/on\", // on()\r\n\t\"dojo/sniff\", // has(\"ie\")\r\n\t\"dojo/window\", // winUtils.getBox\r\n\t\"../../focus\", // focus.focus()\r\n\t\"../_Plugin\",\r\n\t\"../../form/ToggleButton\",\r\n\t\"../..\", // dijit._scopeName\r\n\t\"../../registry\", // registry.getEnclosingWidget()\r\n\t\"dojo/i18n!../nls/commands\"\r\n], function(array, aspect, declare, domAttr, domConstruct, domGeometry, domStyle, i18n, keys, lang, on, has, winUtils,\r\n\t\t\tfocus, _Plugin, ToggleButton, dijit, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_editor/plugins/ViewSource\r\n\r\n\tvar ViewSource = declare(\"dijit._editor.plugins.ViewSource\", _Plugin, {\r\n\t\t// summary:\r\n\t\t//\t\tThis plugin provides a simple view source capability.  When view\r\n\t\t//\t\tsource mode is enabled, it disables all other buttons/plugins on the RTE.\r\n\t\t//\t\tIt also binds to the hotkey: CTRL-SHIFT-F11 for toggling ViewSource mode.\r\n\r\n\t\t// stripScripts: [public] Boolean\r\n\t\t//\t\tBoolean flag used to indicate if script tags should be stripped from the document.\r\n\t\t//\t\tDefaults to true.\r\n\t\tstripScripts: true,\r\n\r\n\t\t// stripComments: [public] Boolean\r\n\t\t//\t\tBoolean flag used to indicate if comment tags should be stripped from the document.\r\n\t\t//\t\tDefaults to true.\r\n\t\tstripComments: true,\r\n\r\n\t\t// stripComments: [public] Boolean\r\n\t\t//\t\tBoolean flag used to indicate if iframe tags should be stripped from the document.\r\n\t\t//\t\tDefaults to true.\r\n\t\tstripIFrames: true,\r\n\r\n\t\t// readOnly: [const] Boolean\r\n\t\t//\t\tBoolean flag used to indicate if the source view should be readonly or not.\r\n\t\t//\t\tCannot be changed after initialization of the plugin.\r\n\t\t//\t\tDefaults to false.\r\n\t\treadOnly: false,\r\n\r\n\t\t// _fsPlugin: [private] Object\r\n\t\t//\t\tReference to a registered fullscreen plugin so that viewSource knows\r\n\t\t//\t\thow to scale.\r\n\t\t_fsPlugin: null,\r\n\r\n\t\ttoggle: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to allow programmatic toggling of the view.\r\n\r\n\t\t\t// For Webkit, we have to focus a very particular way.\r\n\t\t\t// when swapping views, otherwise focus doesn't shift right\r\n\t\t\t// but can't focus this way all the time, only for VS changes.\r\n\t\t\t// If we did it all the time, buttons like bold, italic, etc\r\n\t\t\t// break.\r\n\t\t\tif(has(\"webkit\")){\r\n\t\t\t\tthis._vsFocused = true;\r\n\t\t\t}\r\n\t\t\tthis.button.set(\"checked\", !this.button.get(\"checked\"));\r\n\r\n\t\t},\r\n\r\n\t\t_initButton: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for creation of the resize button.\r\n\t\t\tvar strings = i18n.getLocalization(\"dijit._editor\", \"commands\"),\r\n\t\t\t\teditor = this.editor;\r\n\t\t\tthis.button = new ToggleButton({\r\n\t\t\t\tlabel: strings[\"viewSource\"],\r\n\t\t\t\townerDocument: editor.ownerDocument,\r\n\t\t\t\tdir: editor.dir,\r\n\t\t\t\tlang: editor.lang,\r\n\t\t\t\tshowLabel: false,\r\n\t\t\t\ticonClass: this.iconClassPrefix + \" \" + this.iconClassPrefix + \"ViewSource\",\r\n\t\t\t\ttabIndex: \"-1\",\r\n\t\t\t\tonChange: lang.hitch(this, \"_showSource\")\r\n\t\t\t});\r\n\r\n\t\t\t// IE 7 has a horrible bug with zoom, so we have to create this node\r\n\t\t\t// to cross-check later.  Sigh.\r\n\t\t\tif(has(\"ie\") == 7){\r\n\t\t\t\tthis._ieFixNode = domConstruct.create(\"div\", {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\topacity: \"0\",\r\n\t\t\t\t\t\tzIndex: \"-1000\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\ttop: \"-1000px\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}, editor.ownerDocumentBody);\r\n\t\t\t}\r\n\t\t\t// Make sure readonly mode doesn't make the wrong cursor appear over the button.\r\n\t\t\tthis.button.set(\"readOnly\", false);\r\n\t\t},\r\n\r\n\r\n\t\tsetEditor: function(/*dijit/Editor*/ editor){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTell the plugin which Editor it is associated with.\r\n\t\t\t// editor: Object\r\n\t\t\t//\t\tThe editor object to attach the print capability to.\r\n\t\t\tthis.editor = editor;\r\n\t\t\tthis._initButton();\r\n\r\n\t\t\tthis.editor.addKeyHandler(keys.F12, true, true, lang.hitch(this, function(e){\r\n\t\t\t\t// Move the focus before switching\r\n\t\t\t\t// It'll focus back.  Hiding a focused\r\n\t\t\t\t// node causes issues.\r\n\t\t\t\tthis.button.focus();\r\n\t\t\t\tthis.toggle();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// Call the focus shift outside of the handler.\r\n\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t// Focus the textarea... unless focus has moved outside of the editor completely during the timeout.\r\n\t\t\t\t\t// Since we override focus, so we just need to call it.\r\n\t\t\t\t\tif(this.editor.focused){\r\n\t\t\t\t\t\tthis.editor.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}), 100);\r\n\t\t\t}));\r\n\t\t},\r\n\r\n\t\t_showSource: function(source){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to toggle between the source and RTE views.\r\n\t\t\t// source: boolean\r\n\t\t\t//\t\tBoolean value indicating if it should be in source mode or not.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ed = this.editor;\r\n\t\t\tvar edPlugins = ed._plugins;\r\n\t\t\tvar html;\r\n\t\t\tthis._sourceShown = source;\r\n\t\t\tvar self = this;\r\n\t\t\ttry{\r\n\t\t\t\tif(!this.sourceArea){\r\n\t\t\t\t\tthis._createSourceView();\r\n\t\t\t\t}\r\n\t\t\t\tif(source){\r\n\t\t\t\t\t// Update the QueryCommandEnabled function to disable everything but\r\n\t\t\t\t\t// the source view mode.  Have to over-ride a function, then kick all\r\n\t\t\t\t\t// plugins to check their state.\r\n\t\t\t\t\ted._sourceQueryCommandEnabled = ed.queryCommandEnabled;\r\n\t\t\t\t\ted.queryCommandEnabled = function(cmd){\r\n\t\t\t\t\t\treturn cmd.toLowerCase() === \"viewsource\";\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.editor.onDisplayChanged();\r\n\t\t\t\t\thtml = ed.get(\"value\");\r\n\t\t\t\t\thtml = this._filter(html);\r\n\t\t\t\t\ted.set(\"value\", html);\r\n\t\t\t\t\tarray.forEach(edPlugins, function(p){\r\n\t\t\t\t\t\t// Turn off any plugins not controlled by queryCommandenabled.\r\n\t\t\t\t\t\tif(p && !(p instanceof ViewSource) && p.isInstanceOf(_Plugin)){\r\n\t\t\t\t\t\t\tp.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// We actually do need to trap this plugin and adjust how we\r\n\t\t\t\t\t// display the textarea.\r\n\t\t\t\t\tif(this._fsPlugin){\r\n\t\t\t\t\t\tthis._fsPlugin._getAltViewNode = function(){\r\n\t\t\t\t\t\t\treturn self.sourceArea;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.sourceArea.value = html;\r\n\r\n\t\t\t\t\t// Since neither iframe nor textarea have margin, border, or padding,\r\n\t\t\t\t\t// just set sizes equal\r\n\t\t\t\t\tthis.sourceArea.style.height = ed.iframe.style.height;\r\n\t\t\t\t\tthis.sourceArea.style.width = ed.iframe.style.width;\r\n\t\t\t\t\tdomStyle.set(ed.iframe, \"display\", \"none\");\r\n\t\t\t\t\tdomStyle.set(this.sourceArea, {\r\n\t\t\t\t\t\tdisplay: \"block\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tvar resizer = function(){\r\n\t\t\t\t\t\t// function to handle resize events.\r\n\t\t\t\t\t\t// Will check current VP and only resize if\r\n\t\t\t\t\t\t// different.\r\n\t\t\t\t\t\tvar vp = winUtils.getBox(ed.ownerDocument);\r\n\r\n\t\t\t\t\t\tif(\"_prevW\" in this && \"_prevH\" in this){\r\n\t\t\t\t\t\t\t// No actual size change, ignore.\r\n\t\t\t\t\t\t\tif(vp.w === this._prevW && vp.h === this._prevH){\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tthis._prevW = vp.w;\r\n\t\t\t\t\t\t\t\tthis._prevH = vp.h;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis._prevW = vp.w;\r\n\t\t\t\t\t\t\tthis._prevH = vp.h;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._resizer){\r\n\t\t\t\t\t\t\tclearTimeout(this._resizer);\r\n\t\t\t\t\t\t\tdelete this._resizer;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Timeout it to help avoid spamming resize on IE.\r\n\t\t\t\t\t\t// Works for all browsers.\r\n\t\t\t\t\t\tthis._resizer = setTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\t\tdelete this._resizer;\r\n\t\t\t\t\t\t\tthis._resize();\r\n\t\t\t\t\t\t}), 10);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis._resizeHandle = on(window, \"resize\", lang.hitch(this, resizer));\r\n\r\n\t\t\t\t\t//Call this on a delay once to deal with IE glitchiness on initial size.\r\n\t\t\t\t\tsetTimeout(lang.hitch(this, this._resize), 100);\r\n\r\n\t\t\t\t\t//Trigger a check for command enablement/disablement.\r\n\t\t\t\t\tthis.editor.onNormalizedDisplayChanged();\r\n\r\n\t\t\t\t\tthis.editor.__oldGetValue = this.editor.getValue;\r\n\t\t\t\t\tthis.editor.getValue = lang.hitch(this, function(){\r\n\t\t\t\t\t\tvar txt = this.sourceArea.value;\r\n\t\t\t\t\t\ttxt = this._filter(txt);\r\n\t\t\t\t\t\treturn txt;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis._setListener = aspect.after(this.editor, \"setValue\", lang.hitch(this, function(htmlTxt){\r\n\t\t\t\t\t\thtmlTxt = htmlTxt || \"\";\r\n\t\t\t\t\t\thtmlTxt = this._filter(htmlTxt);\r\n\t\t\t\t\t\tthis.sourceArea.value = htmlTxt;\r\n\t\t\t\t\t}), true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// First check that we were in source view before doing anything.\r\n\t\t\t\t\t// corner case for being called with a value of false and we hadn't\r\n\t\t\t\t\t// actually been in source display mode.\r\n\t\t\t\t\tif(!ed._sourceQueryCommandEnabled){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove the set listener.\r\n\t\t\t\t\tthis._setListener.remove();\r\n\t\t\t\t\tdelete this._setListener;\r\n\r\n\t\t\t\t\tthis._resizeHandle.remove();\r\n\t\t\t\t\tdelete this._resizeHandle;\r\n\r\n\t\t\t\t\tif(this.editor.__oldGetValue){\r\n\t\t\t\t\t\tthis.editor.getValue = this.editor.__oldGetValue;\r\n\t\t\t\t\t\tdelete this.editor.__oldGetValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Restore all the plugin buttons state.\r\n\t\t\t\t\ted.queryCommandEnabled = ed._sourceQueryCommandEnabled;\r\n\t\t\t\t\tif(!this._readOnly){\r\n\t\t\t\t\t\thtml = this.sourceArea.value;\r\n\t\t\t\t\t\thtml = this._filter(html);\r\n\t\t\t\t\t\ted.beginEditing();\r\n\t\t\t\t\t\ted.set(\"value\", html);\r\n\t\t\t\t\t\ted.endEditing();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tarray.forEach(edPlugins, function(p){\r\n\t\t\t\t\t\t// Turn back on any plugins we turned off.\r\n\t\t\t\t\t\tif(p && p.isInstanceOf(_Plugin)){\r\n\t\t\t\t\t\t\tp.set(\"disabled\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tdomStyle.set(this.sourceArea, \"display\", \"none\");\r\n\t\t\t\t\tdomStyle.set(ed.iframe, \"display\", \"block\");\r\n\t\t\t\t\tdelete ed._sourceQueryCommandEnabled;\r\n\r\n\t\t\t\t\t//Trigger a check for command enablement/disablement.\r\n\t\t\t\t\tthis.editor.onDisplayChanged();\r\n\t\t\t\t}\r\n\t\t\t\t// Call a delayed resize to wait for some things to display in header/footer.\r\n\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t// Make resize calls.\r\n\t\t\t\t\tvar parent = ed.domNode.parentNode;\r\n\t\t\t\t\tif(parent){\r\n\t\t\t\t\t\tvar container = registry.getEnclosingWidget(parent);\r\n\t\t\t\t\t\tif(container && container.resize){\r\n\t\t\t\t\t\t\tcontainer.resize();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ted.resize();\r\n\t\t\t\t}), 300);\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateState: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride for button state control for disabled to work.\r\n\t\t\tthis.button.set(\"disabled\", this.get(\"disabled\"));\r\n\t\t},\r\n\r\n\t\t_resize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to resize the source view\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ed = this.editor;\r\n\t\t\tvar tbH = ed.getHeaderHeight();\r\n\t\t\tvar fH = ed.getFooterHeight();\r\n\t\t\tvar eb = domGeometry.position(ed.domNode);\r\n\r\n\t\t\t// Styles are now applied to the internal source container, so we have\r\n\t\t\t// to subtract them off.\r\n\t\t\tvar containerPadding = domGeometry.getPadBorderExtents(ed.iframe.parentNode);\r\n\t\t\tvar containerMargin = domGeometry.getMarginExtents(ed.iframe.parentNode);\r\n\r\n\t\t\tvar extents = domGeometry.getPadBorderExtents(ed.domNode);\r\n\t\t\tvar edb = {\r\n\t\t\t\tw: eb.w - extents.w,\r\n\t\t\t\th: eb.h - (tbH + extents.h + fH)\r\n\t\t\t};\r\n\r\n\t\t\t// Fullscreen gets odd, so we need to check for the FS plugin and\r\n\t\t\t// adapt.\r\n\t\t\tif(this._fsPlugin && this._fsPlugin.isFullscreen){\r\n\t\t\t\t//Okay, probably in FS, adjust.\r\n\t\t\t\tvar vp = winUtils.getBox(ed.ownerDocument);\r\n\t\t\t\tedb.w = (vp.w - extents.w);\r\n\t\t\t\tedb.h = (vp.h - (tbH + extents.h + fH));\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// IE is always off by 2px, so we have to adjust here\r\n\t\t\t\t// Note that IE ZOOM is broken here.  I can't get\r\n\t\t\t\t//it to scale right.\r\n\t\t\t\tedb.h -= 2;\r\n\t\t\t}\r\n\r\n\t\t\t// IE has a horrible zoom bug.  So, we have to try and account for\r\n\t\t\t// it and fix up the scaling.\r\n\t\t\tif(this._ieFixNode){\r\n\t\t\t\tvar _ie7zoom = -this._ieFixNode.offsetTop / 1000;\r\n\t\t\t\tedb.w = Math.floor((edb.w + 0.9) / _ie7zoom);\r\n\t\t\t\tedb.h = Math.floor((edb.h + 0.9) / _ie7zoom);\r\n\t\t\t}\r\n\r\n\t\t\tdomGeometry.setMarginBox(this.sourceArea, {\r\n\t\t\t\tw: edb.w - (containerPadding.w + containerMargin.w),\r\n\t\t\t\th: edb.h - (containerPadding.h + containerMargin.h)\r\n\t\t\t});\r\n\r\n\t\t\t// Scale the parent container too in this case.\r\n\t\t\tdomGeometry.setMarginBox(ed.iframe.parentNode, {\r\n\t\t\t\th: edb.h\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_createSourceView: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function for creating the source view area.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar ed = this.editor;\r\n\t\t\tvar edPlugins = ed._plugins;\r\n\t\t\tthis.sourceArea = domConstruct.create(\"textarea\");\r\n\t\t\tif(this.readOnly){\r\n\t\t\t\tdomAttr.set(this.sourceArea, \"readOnly\", true);\r\n\t\t\t\tthis._readOnly = true;\r\n\t\t\t}\r\n\t\t\tdomStyle.set(this.sourceArea, {\r\n\t\t\t\tpadding: \"0px\",\r\n\t\t\t\tmargin: \"0px\",\r\n\t\t\t\tborderWidth: \"0px\",\r\n\t\t\t\tborderStyle: \"none\"\r\n\t\t\t});\r\n\t\t\tdomAttr.set(this.sourceArea, \"aria-label\", this.editor.id);\r\n\r\n\t\t\tdomConstruct.place(this.sourceArea, ed.iframe, \"before\");\r\n\r\n\t\t\tif(has(\"ie\") && ed.iframe.parentNode.lastChild !== ed.iframe){\r\n\t\t\t\t// There's some weirdo div in IE used for focus control\r\n\t\t\t\t// But is messed up scaling the textarea if we don't config\r\n\t\t\t\t// it some so it doesn't have a varying height.\r\n\t\t\t\tdomStyle.set(ed.iframe.parentNode.lastChild, {\r\n\t\t\t\t\twidth: \"0px\",\r\n\t\t\t\t\theight: \"0px\",\r\n\t\t\t\t\tpadding: \"0px\",\r\n\t\t\t\t\tmargin: \"0px\",\r\n\t\t\t\t\tborderWidth: \"0px\",\r\n\t\t\t\t\tborderStyle: \"none\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// We also need to take over editor focus a bit here, so that focus calls to\r\n\t\t\t// focus the editor will focus to the right node when VS is active.\r\n\t\t\ted._viewsource_oldFocus = ed.focus;\r\n\t\t\tvar self = this;\r\n\t\t\ted.focus = function(){\r\n\t\t\t\tif(self._sourceShown){\r\n\t\t\t\t\tself.setSourceAreaCaret();\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tif(this._vsFocused){\r\n\t\t\t\t\t\t\tdelete this._vsFocused;\r\n\t\t\t\t\t\t\t// Must focus edit node in this case (webkit only) or\r\n\t\t\t\t\t\t\t// focus doesn't shift right, but in normal\r\n\t\t\t\t\t\t\t// cases we focus with the regular function.\r\n\t\t\t\t\t\t\tfocus.focus(ed.editNode);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ted._viewsource_oldFocus();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar i, p;\r\n\t\t\tfor(i = 0; i < edPlugins.length; i++){\r\n\t\t\t\t// We actually do need to trap this plugin and adjust how we\r\n\t\t\t\t// display the textarea.\r\n\t\t\t\tp = edPlugins[i];\r\n\t\t\t\tif(p && (p.declaredClass === \"dijit._editor.plugins.FullScreen\" ||\r\n\t\t\t\t\tp.declaredClass === (dijit._scopeName +\r\n\t\t\t\t\t\t\"._editor.plugins.FullScreen\"))){\r\n\t\t\t\t\tthis._fsPlugin = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._fsPlugin){\r\n\t\t\t\t// Found, we need to over-ride the alt-view node function\r\n\t\t\t\t// on FullScreen with our own, chain up to parent call when appropriate.\r\n\t\t\t\tthis._fsPlugin._viewsource_getAltViewNode = this._fsPlugin._getAltViewNode;\r\n\t\t\t\tthis._fsPlugin._getAltViewNode = function(){\r\n\t\t\t\t\treturn self._sourceShown ? self.sourceArea : this._viewsource_getAltViewNode();\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Listen to the source area for key events as well, as we need to be able to hotkey toggle\r\n\t\t\t// it from there too.\r\n\t\t\tthis.own(on(this.sourceArea, \"keydown\", lang.hitch(this, function(e){\r\n\t\t\t\tif(this._sourceShown && e.keyCode == keys.F12 && e.ctrlKey && e.shiftKey){\r\n\t\t\t\t\tthis.button.focus();\r\n\t\t\t\t\tthis.button.set(\"checked\", false);\r\n\t\t\t\t\tsetTimeout(lang.hitch(this, function(){\r\n\t\t\t\t\t\ted.focus();\r\n\t\t\t\t\t}), 100);\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t})));\r\n\t\t},\r\n\r\n\t\t_stripScripts: function(html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStrips out script tags from the HTML used in editor.\r\n\t\t\t// html: String\r\n\t\t\t//\t\tThe HTML to filter\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(html){\r\n\t\t\t\t// Look for closed and unclosed (malformed) script attacks.\r\n\t\t\t\thtml = html.replace(/<\\s*script[^>]*>((.|\\s)*?)<\\\\?\\/\\s*script\\s*>/ig, \"\");\r\n\t\t\t\thtml = html.replace(/<\\s*script\\b([^<>]|\\s)*>?/ig, \"\");\r\n\t\t\t\thtml = html.replace(/<[^>]*=(\\s|)*[(\"|')]javascript:[^$1][(\\s|.)]*[$1][^>]*>/ig, \"\");\r\n\t\t\t}\r\n\t\t\treturn html;\r\n\t\t},\r\n\r\n\t\t_stripComments: function(html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStrips out comments from the HTML used in editor.\r\n\t\t\t// html: String\r\n\t\t\t//\t\tThe HTML to filter\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(html){\r\n\t\t\t\thtml = html.replace(/<!--(.|\\s){1,}?-->/g, \"\");\r\n\t\t\t}\r\n\t\t\treturn html;\r\n\t\t},\r\n\r\n\t\t_stripIFrames: function(html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStrips out iframe tags from the content, to avoid iframe script\r\n\t\t\t//\t\tstyle injection attacks.\r\n\t\t\t// html: String\r\n\t\t\t//\t\tThe HTML to filter\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(html){\r\n\t\t\t\thtml = html.replace(/<\\s*iframe[^>]*>((.|\\s)*?)<\\\\?\\/\\s*iframe\\s*>/ig, \"\");\r\n\t\t\t}\r\n\t\t\treturn html;\r\n\t\t},\r\n\r\n\t\t_filter: function(html){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to perform some filtering on the HTML.\r\n\t\t\t// html: String\r\n\t\t\t//\t\tThe HTML to filter\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(html){\r\n\t\t\t\tif(this.stripScripts){\r\n\t\t\t\t\thtml = this._stripScripts(html);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.stripComments){\r\n\t\t\t\t\thtml = this._stripComments(html);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.stripIFrames){\r\n\t\t\t\t\thtml = this._stripIFrames(html);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn html;\r\n\t\t},\r\n\r\n\t\tsetSourceAreaCaret: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to set the caret in the sourceArea\r\n\t\t\t//\t\tto 0x0\r\n\t\t\tvar elem = this.sourceArea;\r\n\t\t\tfocus.focus(elem);\r\n\t\t\tif(this._sourceShown && !this.readOnly){\r\n\t\t\t\tif(elem.setSelectionRange){\r\n\t\t\t\t\telem.setSelectionRange(0, 0);\r\n\t\t\t\t}else if(this.sourceArea.createTextRange){\r\n\t\t\t\t\t// IE\r\n\t\t\t\t\tvar range = elem.createTextRange();\r\n\t\t\t\t\trange.collapse(true);\r\n\t\t\t\t\trange.moveStart(\"character\", -99999); // move to 0\r\n\t\t\t\t\trange.moveStart(\"character\", 0); // delta from 0 is the correct position\r\n\t\t\t\t\trange.moveEnd(\"character\", 0);\r\n\t\t\t\t\trange.select();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOver-ride to remove the node used to correct for IE's\r\n\t\t\t//\t\tzoom bug.\r\n\t\t\tif(this._ieFixNode){\r\n\t\t\t\tdomConstruct.destroy(this._ieFixNode);\r\n\t\t\t}\r\n\t\t\tif(this._resizer){\r\n\t\t\t\tclearTimeout(this._resizer);\r\n\t\t\t\tdelete this._resizer;\r\n\t\t\t}\r\n\t\t\tif(this._resizeHandle){\r\n\t\t\t\tthis._resizeHandle.remove();\r\n\t\t\t\tdelete this._resizeHandle;\r\n\t\t\t}\r\n\t\t\tif(this._setListener){\r\n\t\t\t\tthis._setListener.remove();\r\n\t\t\t\tdelete this._setListener;\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\t// Register this plugin.\r\n\t// For back-compat accept \"viewsource\" (all lowercase) too, remove in 2.0\r\n\t_Plugin.registry[\"viewSource\"] = _Plugin.registry[\"viewsource\"] = function(args){\r\n\t\treturn new ViewSource({\r\n\t\t\treadOnly: (\"readOnly\" in args) ? args.readOnly : false,\r\n\t\t\tstripComments: (\"stripComments\" in args) ? args.stripComments : true,\r\n\t\t\tstripScripts: (\"stripScripts\" in args) ? args.stripScripts : true,\r\n\t\t\tstripIFrames: (\"stripIFrames\" in args) ? args.stripIFrames : true\r\n\t\t});\r\n\t};\r\n\r\n\treturn ViewSource;\r\n});\r\n\ndefine('dijit/layout/AccordionPane',[\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/_base/kernel\", // kernel.deprecated\r\n\t\"./ContentPane\"\r\n], function(declare, kernel, ContentPane){\r\n\r\n\t// module:\r\n\t//\t\tdijit/layout/AccordionPane\r\n\r\n\treturn declare(\"dijit.layout.AccordionPane\", ContentPane, {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated widget.   Use `dijit/layout/ContentPane` instead.\r\n\t\t// tags:\r\n\t\t//\t\tdeprecated\r\n\r\n\t\tconstructor: function(){\r\n\t\t\tkernel.deprecated(\"dijit.layout.AccordionPane deprecated, use ContentPane instead\", \"\", \"2.0\");\r\n\t\t},\r\n\r\n\t\tonSelected: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcalled when this pane is selected\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/tree/ObjectStoreModel',[\r\n\t\"dojo/_base/array\", // array.filter array.forEach array.indexOf array.some\r\n\t\"dojo/aspect\", // aspect.before, aspect.after\r\n\t\"dojo/_base/declare\", // declare\r\n\t\"dojo/Deferred\",\r\n\t\"dojo/_base/lang\", // lang.hitch\r\n\t\"dojo/when\",\r\n\t\"../Destroyable\"\r\n], function(array, aspect, declare, Deferred, lang, when, Destroyable){\r\n\r\n\t// module:\r\n\t//\t\tdijit/tree/ObjectStoreModel\r\n\r\n\treturn declare(\"dijit.tree.ObjectStoreModel\", Destroyable, {\r\n\t\t// summary:\r\n\t\t//\t\tImplements dijit/tree/model connecting dijit/Tree to a dojo/store/api/Store that implements\r\n\t\t//\t\tgetChildren().\r\n\t\t//\r\n\t\t//\t\tIf getChildren() returns an array with an observe() method, then it will be leveraged to reflect\r\n\t\t//\t\tstore updates to the tree.   So, this class will work best when:\r\n\t\t//\r\n\t\t//\t\t\t1. the store implements dojo/store/Observable\r\n\t\t//\t\t\t2. getChildren() is implemented as a query to the server (i.e. it calls store.query())\r\n\t\t//\r\n\t\t//\t\tDrag and Drop: To support drag and drop, besides implementing getChildren()\r\n\t\t//\t\tand dojo/store/Observable, the store must support the parent option to put().\r\n\t\t//\t\tAnd in order to have child elements ordered according to how the user dropped them,\r\n\t\t//\t\tput() must support the before option.\r\n\r\n\t\t// store: dojo/store/api/Store\r\n\t\t//\t\tUnderlying store\r\n\t\tstore: null,\r\n\r\n\t\t// labelAttr: String\r\n\t\t//\t\tGet label for tree node from this attribute\r\n\t\tlabelAttr: \"name\",\r\n\r\n\t\t// labelType: [const] String\r\n\t\t//\t\tSpecifies how to interpret the labelAttr in the data store items.\r\n\t\t//\t\tCan be \"html\" or \"text\".\r\n\t\tlabelType: \"text\",\r\n\r\n\t\t// root: [readonly] Object\r\n\t\t//\t\tPointer to the root item from the dojo/store/api/Store (read only, not a parameter)\r\n\t\troot: null,\r\n\r\n\t\t// query: anything\r\n\t\t//\t\tSpecifies datastore query to return the root item for the tree.\r\n\t\t//\t\tMust only return a single item.   Alternately can just pass in pointer\r\n\t\t//\t\tto root item.\r\n\t\t// example:\r\n\t\t//\t|\t{id:'ROOT'}\r\n\t\tquery: null,\r\n\r\n\t\tconstructor: function(/* Object */ args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPassed the arguments listed above (store, etc)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tlang.mixin(this, args);\r\n\r\n\t\t\t// Map from id of each parent node to array of its children, or to Promise for that array of children.\r\n\t\t\tthis.childrenCache = {};\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Methods for traversing hierarchy\r\n\r\n\t\tgetRoot: function(onItem, onError){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalls onItem with the root item for the tree, possibly a fabricated item.\r\n\t\t\t//\t\tCalls onError on error.\r\n\t\t\tif(this.root){\r\n\t\t\t\tonItem(this.root);\r\n\t\t\t}else{\r\n\t\t\t\tvar res = this.store.query(this.query);\r\n\t\t\t\tif(res.then){\r\n\t\t\t\t\tthis.own(res);\t// in case app calls destroy() before query completes\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhen(res,\r\n\t\t\t\t\tlang.hitch(this, function(items){\r\n\t\t\t\t\t\t//console.log(\"queried root: \", res);\r\n\t\t\t\t\t\tif(items.length != 1){\r\n\t\t\t\t\t\t\tthrow new Error(\"dijit.tree.ObjectStoreModel: root query returned \" + items.length +\r\n\t\t\t\t\t\t\t\t\" items, but must return exactly one\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.root = items[0];\r\n\t\t\t\t\t\tonItem(this.root);\r\n\r\n\t\t\t\t\t\t// Setup listener to detect if root item changes\r\n\t\t\t\t\t\tif(res.observe){\r\n\t\t\t\t\t\t\tres.observe(lang.hitch(this, function(obj){\r\n\t\t\t\t\t\t\t\t// Presumably removedFrom == insertedInto == 1, and this call indicates item has changed.\r\n\t\t\t\t\t\t\t\t//console.log(\"root changed: \", obj);\r\n\t\t\t\t\t\t\t\tthis.onChange(obj);\r\n\t\t\t\t\t\t\t}), true);\t// true to listen for updates to obj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tonError\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmayHaveChildren: function(/*===== item =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTells if an item has or might have children.  Implementing logic here\r\n\t\t\t//\t\tavoids showing +/- expando icon for nodes that we know won't have children.\r\n\t\t\t//\t\t(For efficiency reasons we may not want to check if an element actually\r\n\t\t\t//\t\thas children until user clicks the expando node).\r\n\t\t\t//\r\n\t\t\t//\t\tApplication code should override this method based on the data, for example\r\n\t\t\t//\t\tit could be `return item.leaf == true;`.\r\n\t\t\t//\r\n\t\t\t//\t\tNote that mayHaveChildren() must return true for an item if it could possibly\r\n\t\t\t//\t\thave children in the future, due to drag-an-drop or some other data store update.\r\n\t\t\t//\t\tAlso note that it may return true if it's just too expensive to check during tree\r\n\t\t\t//\t\tcreation whether or not the item has children.\r\n\t\t\t// item: Object\r\n\t\t\t//\t\tItem from the dojo/store\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tgetChildren: function(/*Object*/ parentItem, /*function(items)*/ onComplete, /*function*/ onError){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalls onComplete() with array of child items of given parent item.\r\n\t\t\t// parentItem:\r\n\t\t\t//\t\tItem from the dojo/store\r\n\r\n\t\t\t// TODO:\r\n\t\t\t// For 2.0, change getChildren(), getRoot(), etc. to return a cancelable promise, rather than taking\r\n\t\t\t// onComplete() and onError() callbacks.   Also, probably get rid of the caching.\r\n\t\t\t//\r\n\t\t\t// But be careful if we continue to maintain ObjectStoreModel as a separate class\r\n\t\t\t// from Tree, because in that case ObjectStoreModel can be shared by two trees, and destroying one tree\r\n\t\t\t// should not interfere with an in-progress getChildren() call from another tree.  Also, need to make\r\n\t\t\t// sure that multiple calls to getChildren() for the same parentItem don't trigger duplicate calls\r\n\t\t\t// to onChildrenChange() and onChange().\r\n\t\t\t//\r\n\t\t\t// I think for 2.0 though that ObjectStoreModel should be rolled into Tree itself.\r\n\r\n\t\t\tvar id = this.store.getIdentity(parentItem);\r\n\r\n\t\t\tif(this.childrenCache[id]){\r\n\t\t\t\t// If this.childrenCache[id] is defined, then it always has the latest list of children\r\n\t\t\t\t// (like a live collection), so just return it.\r\n\t\t\t\twhen(this.childrenCache[id], onComplete, onError);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Query the store.\r\n\t\t\t// Cache result so that we can close the query on destroy(), and to avoid setting up multiple observers\r\n\t\t\t// when getChildren() is called multiple times for the same parent.\r\n\t\t\t// The only problem is that getChildren() on non-Observable stores may return a stale value.\r\n\t\t\tvar res = this.childrenCache[id] = this.store.getChildren(parentItem);\r\n\t\t\tif(res.then){\r\n\t\t\t\tthis.own(res);\t// in case app calls destroy() before query completes\r\n\t\t\t}\r\n\r\n\t\t\t// Setup observer in case children list changes, or the item(s) in the children list are updated.\r\n\t\t\tif(res.observe){\r\n\t\t\t\tthis.own(res.observe(lang.hitch(this, function(obj, removedFrom, insertedInto){\r\n\t\t\t\t\t//console.log(\"observe on children of \", id, \": \", obj, removedFrom, insertedInto);\r\n\r\n\t\t\t\t\t// If removedFrom == insertedInto, this call indicates that the item has changed.\r\n\t\t\t\t\t// Even if removedFrom != insertedInto, the item may have changed.\r\n\t\t\t\t\tthis.onChange(obj);\r\n\r\n\t\t\t\t\tif(removedFrom != insertedInto){\r\n\t\t\t\t\t\t// Indicates an item was added, removed, or re-parented.  The children[] array (returned from\r\n\t\t\t\t\t\t// res.then(...)) has already been updated (like a live collection), so just use it.\r\n\t\t\t\t\t\twhen(res, lang.hitch(this, \"onChildrenChange\", parentItem));\r\n\t\t\t\t\t}\r\n\t\t\t\t}), true));\t// true means to notify on item changes\r\n\t\t\t}\r\n\r\n\t\t\t// User callback\r\n\t\t\twhen(res, onComplete, onError);\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Inspecting items\r\n\r\n\t\tisItem: function(/*===== something =====*/){\r\n\t\t\treturn true;\t// Boolean\r\n\t\t},\r\n\r\n\t\tgetIdentity: function(/* item */ item){\r\n\t\t\treturn this.store.getIdentity(item);\t// Object\r\n\t\t},\r\n\r\n\t\tgetLabel: function(/*dojo/data/Item*/ item){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the label for an item\r\n\t\t\treturn item[this.labelAttr];\t// String\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Write interface, for DnD\r\n\r\n\t\tnewItem: function(/* dijit/tree/dndSource.__Item */ args, /*Item*/ parent, /*int?*/ insertIndex, /*Item*/ before){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new item.   See `dojo/data/api/Write` for details on args.\r\n\t\t\t//\t\tUsed in drag & drop when item from external source dropped onto tree.\r\n\r\n\t\t\treturn this.store.put(args, {\r\n\t\t\t\tparent: parent,\r\n\t\t\t\tbefore: before\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpasteItem: function(/*Item*/ childItem, /*Item*/ oldParentItem, /*Item*/ newParentItem,\r\n\t\t\t\t\t/*Boolean*/ bCopy, /*int?*/ insertIndex, /*Item*/ before){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMove or copy an item from one parent item to another.\r\n\t\t\t//\t\tUsed in drag & drop.\r\n\r\n\t\t\tvar d = new Deferred();\r\n\r\n\t\t\tif(oldParentItem === newParentItem && !bCopy && !before){\r\n\t\t\t\t// Avoid problem when items visually disappear when dropped onto their parent.\r\n\t\t\t\t// Happens because the (no-op) store.put() call doesn't generate any notification\r\n\t\t\t\t// that the childItem was added/moved.\r\n\t\t\t\td.resolve(true);\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tif(oldParentItem && !bCopy){\r\n\t\t\t\t// In order for DnD moves to work correctly, childItem needs to be orphaned from oldParentItem\r\n\t\t\t\t// before being adopted by newParentItem.   That way, the TreeNode is moved rather than\r\n\t\t\t\t// an additional TreeNode being created, and the old TreeNode subsequently being deleted.\r\n\t\t\t\t// The latter loses information such as selection and opened/closed children TreeNodes.\r\n\t\t\t\t// Unfortunately simply calling this.store.put() will send notifications in a random order, based\r\n\t\t\t\t// on when the TreeNodes in question originally appeared, and not based on the drag-from\r\n\t\t\t\t// TreeNode vs. the drop-onto TreeNode.\r\n\r\n\t\t\t\tthis.getChildren(oldParentItem, lang.hitch(this, function(oldParentChildren){\r\n\t\t\t\t\toldParentChildren = [].concat(oldParentChildren); // concat to make copy\r\n\t\t\t\t\tvar index = array.indexOf(oldParentChildren, childItem);\r\n\t\t\t\t\toldParentChildren.splice(index, 1);\r\n\t\t\t\t\tthis.onChildrenChange(oldParentItem, oldParentChildren);\r\n\r\n\t\t\t\t\td.resolve(this.store.put(childItem, {\r\n\t\t\t\t\t\toverwrite: true,\r\n\t\t\t\t\t\tparent: newParentItem,\r\n\t\t\t\t\t\toldParent: oldParentItem,\r\n\t\t\t\t\t\tbefore: before\r\n\t\t\t\t\t}));\r\n\t\t\t\t}));\r\n\t\t\t}else{\r\n\t\t\t\td.resolve(this.store.put(childItem, {\r\n\t\t\t\t\toverwrite: true,\r\n\t\t\t\t\tparent: newParentItem,\r\n\t\t\t\t\toldParent: oldParentItem,\r\n\t\t\t\t\tbefore: before\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\treturn d;\r\n\t\t},\r\n\r\n\t\t// =======================================================================\r\n\t\t// Callbacks\r\n\r\n\t\tonChange: function(/*dojo/data/Item*/ /*===== item =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback whenever an item has changed, so that Tree\r\n\t\t\t//\t\tcan update the label, icon, etc.   Note that changes\r\n\t\t\t//\t\tto an item's children or parent(s) will trigger an\r\n\t\t\t//\t\tonChildrenChange() so you can ignore those changes here.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonChildrenChange: function(/*===== parent, newChildrenList =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback to do notifications about new, updated, or deleted items.\r\n\t\t\t// parent: dojo/data/Item\r\n\t\t\t// newChildrenList: Object[]\r\n\t\t\t//\t\tItems from the store\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonDelete: function(/*dojo/data/Item*/ /*===== item =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when an item has been deleted.\r\n\t\t\t//\t\tActually we have no way of knowing this with the new dojo.store API,\r\n\t\t\t//\t\tso this method is never called (but it's left here since Tree connects\r\n\t\t\t//\t\tto it).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t}\r\n\t});\r\n});\r\n\ndefine('dijit/main',[\r\n\t\"dojo/_base/kernel\",\r\n\t\"dijit/dijit-all\",\r\n\t\"dijit/RadioMenuItem\",\r\n\t\"dijit/_editor/plugins/FullScreen\",\r\n\t\"dijit/_editor/plugins/TabIndent\",\r\n\t\"dijit/_editor/plugins/TextColor\",\r\n\t\"dijit/_editor/plugins/ViewSource\",\r\n\t\"dijit/layout/AccordionPane\",\r\n\t\"dijit/tree/ObjectStoreModel\"\t\r\n], function(dojo){\r\n\t// module:\r\n\t//\t\tdijit/main\r\n\r\n/*=====\r\nreturn {\r\n\t// summary:\r\n\t//\t\tThe dijit package main module.\r\n\t//\t\tDeprecated.   Users should access individual modules (ex: dijit/registry) directly.\r\n};\r\n=====*/\r\n\r\n\treturn dojo.dijit;\r\n});\r\n\ndefine('dijit', ['dijit/main'], function (main) { return main; });\n\n"]}